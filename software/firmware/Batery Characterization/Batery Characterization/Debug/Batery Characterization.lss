
Batery Characterization.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008aec  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00408aec  00408aec  00018aec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a58  20000000  00408af4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000002f8  20000a58  0040954c  00020a58  2**2
                  ALLOC
  4 .stack        00003000  20000d50  00409844  00020a58  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020a58  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020a82  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001c629  00000000  00000000  00020adb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003995  00000000  00000000  0003d104  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000ca0  00000000  00000000  00040a99  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  00014b22  00000000  00000000  00041739  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000e6b5  00000000  00000000  0005625b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00053e24  00000000  00000000  00064910  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000077ca  00000000  00000000  000b8734  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000cb0  00000000  00000000  000bfefe  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002b88  00000000  00000000  000c0bb0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	50 3d 00 20 69 2c 40 00 65 2c 40 00 65 2c 40 00     P=. i,@.e,@.e,@.
  400010:	65 2c 40 00 65 2c 40 00 65 2c 40 00 00 00 00 00     e,@.e,@.e,@.....
	...
  40002c:	65 2c 40 00 65 2c 40 00 00 00 00 00 65 2c 40 00     e,@.e,@.....e,@.
  40003c:	65 2c 40 00 65 2c 40 00 65 2c 40 00 65 2c 40 00     e,@.e,@.e,@.e,@.
  40004c:	65 2c 40 00 65 2c 40 00 65 2c 40 00 65 2c 40 00     e,@.e,@.e,@.e,@.
  40005c:	00 00 00 00 65 2c 40 00 65 2c 40 00 00 00 00 00     ....e,@.e,@.....
  40006c:	2d 0f 40 00 41 0f 40 00 00 00 00 00 65 2c 40 00     -.@.A.@.....e,@.
	...
  40008c:	65 2c 40 00 65 2c 40 00 65 2c 40 00 65 2c 40 00     e,@.e,@.e,@.e,@.
  40009c:	65 2c 40 00 8d 30 40 00 65 2c 40 00 00 00 00 00     e,@..0@.e,@.....
	...
  4000b4:	65 2c 40 00 00 00 00 00 65 2c 40 00 65 2c 40 00     e,@.....e,@.e,@.
  4000c4:	65 2c 40 00 11 15 40 00                             e,@...@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	20000a58 	.word	0x20000a58
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00408af4 	.word	0x00408af4

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00408af4 	.word	0x00408af4
  40012c:	20000a5c 	.word	0x20000a5c
  400130:	00408af4 	.word	0x00408af4
  400134:	00000000 	.word	0x00000000

00400138 <udi_cdc_comm_enable>:
	uint8_t port;
	uint8_t iface_comm_num;

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
	udi_cdc_nb_comm_enabled = 0;
  400138:	490e      	ldr	r1, [pc, #56]	; (400174 <udi_cdc_comm_enable+0x3c>)
  40013a:	2300      	movs	r3, #0
  40013c:	700b      	strb	r3, [r1, #0]
	}
	port = udi_cdc_nb_comm_enabled;
#endif

	// Initialize control signal management
	udi_cdc_state[port] = CPU_TO_LE16(0);
  40013e:	4a0e      	ldr	r2, [pc, #56]	; (400178 <udi_cdc_comm_enable+0x40>)
  400140:	8013      	strh	r3, [r2, #0]

	uid_cdc_state_msg[port].header.bmRequestType =
  400142:	4a0e      	ldr	r2, [pc, #56]	; (40017c <udi_cdc_comm_enable+0x44>)
  400144:	20a1      	movs	r0, #161	; 0xa1
  400146:	7010      	strb	r0, [r2, #0]
			USB_REQ_DIR_IN | USB_REQ_TYPE_CLASS |
			USB_REQ_RECIP_INTERFACE;
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
  400148:	2020      	movs	r0, #32
  40014a:	7050      	strb	r0, [r2, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
  40014c:	8053      	strh	r3, [r2, #2]
	default:
		iface_comm_num = UDI_CDC_COMM_IFACE_NUMBER_0;
		break;
	}

	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
  40014e:	8093      	strh	r3, [r2, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
  400150:	2002      	movs	r0, #2
  400152:	80d0      	strh	r0, [r2, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
  400154:	8113      	strh	r3, [r2, #8]

	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
  400156:	4a0a      	ldr	r2, [pc, #40]	; (400180 <udi_cdc_comm_enable+0x48>)
  400158:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
  40015c:	6010      	str	r0, [r2, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
  40015e:	7113      	strb	r3, [r2, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
  400160:	7153      	strb	r3, [r2, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
  400162:	2308      	movs	r3, #8
  400164:	7193      	strb	r3, [r2, #6]
	// to initialize memories or indicate that interface is enabled
	UDI_CDC_SET_CODING_EXT(port,(&udi_cdc_line_coding[port]));
	if (!UDI_CDC_ENABLE_EXT(port)) {
		return false;
	}
	udi_cdc_nb_comm_enabled++;
  400166:	780b      	ldrb	r3, [r1, #0]
  400168:	3301      	adds	r3, #1
  40016a:	b2db      	uxtb	r3, r3
  40016c:	700b      	strb	r3, [r1, #0]
	return true;
}
  40016e:	2001      	movs	r0, #1
  400170:	4770      	bx	lr
  400172:	bf00      	nop
  400174:	20000a7f 	.word	0x20000a7f
  400178:	20000b14 	.word	0x20000b14
  40017c:	20000bac 	.word	0x20000bac
  400180:	20000a78 	.word	0x20000a78

00400184 <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
  400184:	4a02      	ldr	r2, [pc, #8]	; (400190 <udi_cdc_comm_disable+0xc>)
  400186:	7813      	ldrb	r3, [r2, #0]
  400188:	3b01      	subs	r3, #1
  40018a:	b2db      	uxtb	r3, r3
  40018c:	7013      	strb	r3, [r2, #0]
  40018e:	4770      	bx	lr
  400190:	20000a7f 	.word	0x20000a7f

00400194 <udi_cdc_data_disable>:
void udi_cdc_data_disable(void)
{
	uint8_t port;

	Assert(udi_cdc_nb_data_enabled != 0);
	udi_cdc_nb_data_enabled--;
  400194:	4a04      	ldr	r2, [pc, #16]	; (4001a8 <udi_cdc_data_disable+0x14>)
  400196:	7813      	ldrb	r3, [r2, #0]
  400198:	3b01      	subs	r3, #1
  40019a:	b2db      	uxtb	r3, r3
  40019c:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
  40019e:	7813      	ldrb	r3, [r2, #0]
	UDI_CDC_DISABLE_EXT(port);
	udi_cdc_data_running = false;
  4001a0:	2200      	movs	r2, #0
  4001a2:	4b02      	ldr	r3, [pc, #8]	; (4001ac <udi_cdc_data_disable+0x18>)
  4001a4:	701a      	strb	r2, [r3, #0]
  4001a6:	4770      	bx	lr
  4001a8:	20000a80 	.word	0x20000a80
  4001ac:	20000a76 	.word	0x20000a76

004001b0 <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
  4001b0:	2000      	movs	r0, #0
  4001b2:	4770      	bx	lr

004001b4 <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
  4001b4:	2000      	movs	r0, #0
  4001b6:	4770      	bx	lr

004001b8 <udi_cdc_comm_setup>:
	if (Udd_setup_is_in()) {
  4001b8:	4b1d      	ldr	r3, [pc, #116]	; (400230 <udi_cdc_comm_setup+0x78>)
  4001ba:	781b      	ldrb	r3, [r3, #0]
  4001bc:	f013 0f80 	tst.w	r3, #128	; 0x80
  4001c0:	d105      	bne.n	4001ce <udi_cdc_comm_setup+0x16>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  4001c2:	f003 0360 	and.w	r3, r3, #96	; 0x60
  4001c6:	2b20      	cmp	r3, #32
  4001c8:	d018      	beq.n	4001fc <udi_cdc_comm_setup+0x44>
	return false;  // request Not supported
  4001ca:	2000      	movs	r0, #0
  4001cc:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  4001ce:	f003 0360 	and.w	r3, r3, #96	; 0x60
  4001d2:	2b20      	cmp	r3, #32
  4001d4:	d001      	beq.n	4001da <udi_cdc_comm_setup+0x22>
	return false;  // request Not supported
  4001d6:	2000      	movs	r0, #0
  4001d8:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
  4001da:	4b15      	ldr	r3, [pc, #84]	; (400230 <udi_cdc_comm_setup+0x78>)
  4001dc:	785b      	ldrb	r3, [r3, #1]
  4001de:	2b21      	cmp	r3, #33	; 0x21
  4001e0:	d124      	bne.n	40022c <udi_cdc_comm_setup+0x74>
						udd_g_ctrlreq.req.wLength)
  4001e2:	4b13      	ldr	r3, [pc, #76]	; (400230 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
  4001e4:	88db      	ldrh	r3, [r3, #6]
  4001e6:	2b07      	cmp	r3, #7
  4001e8:	d001      	beq.n	4001ee <udi_cdc_comm_setup+0x36>
					return false; // Error for USB host
  4001ea:	2000      	movs	r0, #0
  4001ec:	4770      	bx	lr
				udd_g_ctrlreq.payload =
  4001ee:	4b10      	ldr	r3, [pc, #64]	; (400230 <udi_cdc_comm_setup+0x78>)
  4001f0:	4a10      	ldr	r2, [pc, #64]	; (400234 <udi_cdc_comm_setup+0x7c>)
  4001f2:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
  4001f4:	2207      	movs	r2, #7
  4001f6:	819a      	strh	r2, [r3, #12]
				return true;
  4001f8:	2001      	movs	r0, #1
  4001fa:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
  4001fc:	4b0c      	ldr	r3, [pc, #48]	; (400230 <udi_cdc_comm_setup+0x78>)
  4001fe:	7858      	ldrb	r0, [r3, #1]
  400200:	2820      	cmp	r0, #32
  400202:	d004      	beq.n	40020e <udi_cdc_comm_setup+0x56>
	return false;  // request Not supported
  400204:	2822      	cmp	r0, #34	; 0x22
  400206:	bf14      	ite	ne
  400208:	2000      	movne	r0, #0
  40020a:	2001      	moveq	r0, #1
  40020c:	4770      	bx	lr
						udd_g_ctrlreq.req.wLength)
  40020e:	4b08      	ldr	r3, [pc, #32]	; (400230 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
  400210:	88db      	ldrh	r3, [r3, #6]
  400212:	2b07      	cmp	r3, #7
  400214:	d001      	beq.n	40021a <udi_cdc_comm_setup+0x62>
					return false; // Error for USB host
  400216:	2000      	movs	r0, #0
}
  400218:	4770      	bx	lr
				udd_g_ctrlreq.callback =
  40021a:	4b05      	ldr	r3, [pc, #20]	; (400230 <udi_cdc_comm_setup+0x78>)
  40021c:	4a06      	ldr	r2, [pc, #24]	; (400238 <udi_cdc_comm_setup+0x80>)
  40021e:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
  400220:	4a04      	ldr	r2, [pc, #16]	; (400234 <udi_cdc_comm_setup+0x7c>)
  400222:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
  400224:	2207      	movs	r2, #7
  400226:	819a      	strh	r2, [r3, #12]
				return true;
  400228:	2001      	movs	r0, #1
  40022a:	4770      	bx	lr
	return false;  // request Not supported
  40022c:	2000      	movs	r0, #0
  40022e:	4770      	bx	lr
  400230:	20000cd4 	.word	0x20000cd4
  400234:	20000a78 	.word	0x20000a78
  400238:	0040023d 	.word	0x0040023d

0040023c <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
  40023c:	4770      	bx	lr
	...

00400240 <udi_cdc_tx_send>:

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
  400240:	4b44      	ldr	r3, [pc, #272]	; (400354 <udi_cdc_tx_send+0x114>)
  400242:	781b      	ldrb	r3, [r3, #0]
  400244:	b103      	cbz	r3, 400248 <udi_cdc_tx_send+0x8>
  400246:	4770      	bx	lr
{
  400248:	b570      	push	{r4, r5, r6, lr}
  40024a:	b084      	sub	sp, #16
		return; // Already on going or wait next SOF to send next data
	}
	if (udd_is_high_speed()) {
  40024c:	4b42      	ldr	r3, [pc, #264]	; (400358 <udi_cdc_tx_send+0x118>)
  40024e:	4798      	blx	r3
  400250:	2800      	cmp	r0, #0
  400252:	d041      	beq.n	4002d8 <udi_cdc_tx_send+0x98>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
  400254:	4b41      	ldr	r3, [pc, #260]	; (40035c <udi_cdc_tx_send+0x11c>)
  400256:	881c      	ldrh	r4, [r3, #0]
  400258:	4b41      	ldr	r3, [pc, #260]	; (400360 <udi_cdc_tx_send+0x120>)
  40025a:	4798      	blx	r3
  40025c:	4284      	cmp	r4, r0
  40025e:	d076      	beq.n	40034e <udi_cdc_tx_send+0x10e>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400260:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400264:	fab3 f383 	clz	r3, r3
  400268:	095b      	lsrs	r3, r3, #5
  40026a:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  40026c:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  40026e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400272:	2200      	movs	r2, #0
  400274:	4b3b      	ldr	r3, [pc, #236]	; (400364 <udi_cdc_tx_send+0x124>)
  400276:	701a      	strb	r2, [r3, #0]
	return flags;
  400278:	9d03      	ldr	r5, [sp, #12]
			return; // Wait next SOF to send next data
		}
	}

	flags = cpu_irq_save(); // to protect udi_cdc_tx_buf_sel
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
  40027a:	4b3b      	ldr	r3, [pc, #236]	; (400368 <udi_cdc_tx_send+0x128>)
  40027c:	781c      	ldrb	r4, [r3, #0]
  40027e:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
  400280:	4b3a      	ldr	r3, [pc, #232]	; (40036c <udi_cdc_tx_send+0x12c>)
  400282:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
  400286:	2b00      	cmp	r3, #0
  400288:	d02d      	beq.n	4002e6 <udi_cdc_tx_send+0xa6>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
			cpu_irq_restore(flags);
			return;
		}
	}
	sof_zlp_counter = 0;
  40028a:	2200      	movs	r2, #0
  40028c:	4b38      	ldr	r3, [pc, #224]	; (400370 <udi_cdc_tx_send+0x130>)
  40028e:	801a      	strh	r2, [r3, #0]

	if (!udi_cdc_tx_both_buf_to_send[port]) {
  400290:	4b38      	ldr	r3, [pc, #224]	; (400374 <udi_cdc_tx_send+0x134>)
  400292:	781b      	ldrb	r3, [r3, #0]
  400294:	2b00      	cmp	r3, #0
  400296:	d142      	bne.n	40031e <udi_cdc_tx_send+0xde>
		// Send current Buffer
		// and switch the current buffer
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
  400298:	fab4 f384 	clz	r3, r4
  40029c:	095b      	lsrs	r3, r3, #5
  40029e:	4a32      	ldr	r2, [pc, #200]	; (400368 <udi_cdc_tx_send+0x128>)
  4002a0:	7013      	strb	r3, [r2, #0]
	}else{
		// Send the other Buffer
		// and no switch the current buffer
		buf_sel_trans = (buf_sel_trans==0)?1:0;
	}
	udi_cdc_tx_trans_ongoing[port] = true;
  4002a2:	2201      	movs	r2, #1
  4002a4:	4b2b      	ldr	r3, [pc, #172]	; (400354 <udi_cdc_tx_send+0x114>)
  4002a6:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4002a8:	b125      	cbz	r5, 4002b4 <udi_cdc_tx_send+0x74>
		cpu_irq_enable();
  4002aa:	4b2e      	ldr	r3, [pc, #184]	; (400364 <udi_cdc_tx_send+0x124>)
  4002ac:	701a      	strb	r2, [r3, #0]
  4002ae:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4002b2:	b662      	cpsie	i
	cpu_irq_restore(flags);

	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
  4002b4:	4626      	mov	r6, r4
  4002b6:	4b2d      	ldr	r3, [pc, #180]	; (40036c <udi_cdc_tx_send+0x12c>)
  4002b8:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
  4002bc:	2b40      	cmp	r3, #64	; 0x40
  4002be:	bf14      	ite	ne
  4002c0:	2501      	movne	r5, #1
  4002c2:	2500      	moveq	r5, #0
	if (b_short_packet) {
  4002c4:	d034      	beq.n	400330 <udi_cdc_tx_send+0xf0>
		if (udd_is_high_speed()) {
  4002c6:	4b24      	ldr	r3, [pc, #144]	; (400358 <udi_cdc_tx_send+0x118>)
  4002c8:	4798      	blx	r3
  4002ca:	2800      	cmp	r0, #0
  4002cc:	d02b      	beq.n	400326 <udi_cdc_tx_send+0xe6>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
  4002ce:	4b24      	ldr	r3, [pc, #144]	; (400360 <udi_cdc_tx_send+0x120>)
  4002d0:	4798      	blx	r3
  4002d2:	4b22      	ldr	r3, [pc, #136]	; (40035c <udi_cdc_tx_send+0x11c>)
  4002d4:	8018      	strh	r0, [r3, #0]
  4002d6:	e02e      	b.n	400336 <udi_cdc_tx_send+0xf6>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
  4002d8:	4b20      	ldr	r3, [pc, #128]	; (40035c <udi_cdc_tx_send+0x11c>)
  4002da:	881c      	ldrh	r4, [r3, #0]
  4002dc:	4b26      	ldr	r3, [pc, #152]	; (400378 <udi_cdc_tx_send+0x138>)
  4002de:	4798      	blx	r3
  4002e0:	4284      	cmp	r4, r0
  4002e2:	d1bd      	bne.n	400260 <udi_cdc_tx_send+0x20>
  4002e4:	e033      	b.n	40034e <udi_cdc_tx_send+0x10e>
		sof_zlp_counter++;
  4002e6:	4a22      	ldr	r2, [pc, #136]	; (400370 <udi_cdc_tx_send+0x130>)
  4002e8:	8813      	ldrh	r3, [r2, #0]
  4002ea:	3301      	adds	r3, #1
  4002ec:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
  4002ee:	4b1a      	ldr	r3, [pc, #104]	; (400358 <udi_cdc_tx_send+0x118>)
  4002f0:	4798      	blx	r3
  4002f2:	b918      	cbnz	r0, 4002fc <udi_cdc_tx_send+0xbc>
  4002f4:	4b1e      	ldr	r3, [pc, #120]	; (400370 <udi_cdc_tx_send+0x130>)
  4002f6:	881b      	ldrh	r3, [r3, #0]
  4002f8:	2b63      	cmp	r3, #99	; 0x63
  4002fa:	d908      	bls.n	40030e <udi_cdc_tx_send+0xce>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
  4002fc:	4b16      	ldr	r3, [pc, #88]	; (400358 <udi_cdc_tx_send+0x118>)
  4002fe:	4798      	blx	r3
  400300:	2800      	cmp	r0, #0
  400302:	d0c2      	beq.n	40028a <udi_cdc_tx_send+0x4a>
  400304:	4b1a      	ldr	r3, [pc, #104]	; (400370 <udi_cdc_tx_send+0x130>)
  400306:	881b      	ldrh	r3, [r3, #0]
  400308:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
  40030c:	d2bd      	bcs.n	40028a <udi_cdc_tx_send+0x4a>
	if (cpu_irq_is_enabled_flags(flags))
  40030e:	b1f5      	cbz	r5, 40034e <udi_cdc_tx_send+0x10e>
		cpu_irq_enable();
  400310:	2201      	movs	r2, #1
  400312:	4b14      	ldr	r3, [pc, #80]	; (400364 <udi_cdc_tx_send+0x124>)
  400314:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  400316:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40031a:	b662      	cpsie	i
  40031c:	e017      	b.n	40034e <udi_cdc_tx_send+0x10e>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
  40031e:	fab4 f484 	clz	r4, r4
  400322:	0964      	lsrs	r4, r4, #5
  400324:	e7bd      	b.n	4002a2 <udi_cdc_tx_send+0x62>
		}else{
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
  400326:	4b14      	ldr	r3, [pc, #80]	; (400378 <udi_cdc_tx_send+0x138>)
  400328:	4798      	blx	r3
  40032a:	4b0c      	ldr	r3, [pc, #48]	; (40035c <udi_cdc_tx_send+0x11c>)
  40032c:	8018      	strh	r0, [r3, #0]
  40032e:	e002      	b.n	400336 <udi_cdc_tx_send+0xf6>
		}
	}else{
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
  400330:	2200      	movs	r2, #0
  400332:	4b0a      	ldr	r3, [pc, #40]	; (40035c <udi_cdc_tx_send+0x11c>)
  400334:	801a      	strh	r2, [r3, #0]
		break;
	}
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
  400336:	4b0d      	ldr	r3, [pc, #52]	; (40036c <udi_cdc_tx_send+0x12c>)
	udd_ep_run( ep,
  400338:	f833 3016 	ldrh.w	r3, [r3, r6, lsl #1]
  40033c:	4a0f      	ldr	r2, [pc, #60]	; (40037c <udi_cdc_tx_send+0x13c>)
  40033e:	9200      	str	r2, [sp, #0]
  400340:	4a0f      	ldr	r2, [pc, #60]	; (400380 <udi_cdc_tx_send+0x140>)
  400342:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  400346:	4629      	mov	r1, r5
  400348:	2081      	movs	r0, #129	; 0x81
  40034a:	4c0e      	ldr	r4, [pc, #56]	; (400384 <udi_cdc_tx_send+0x144>)
  40034c:	47a0      	blx	r4
			udi_cdc_data_sent);
}
  40034e:	b004      	add	sp, #16
  400350:	bd70      	pop	{r4, r5, r6, pc}
  400352:	bf00      	nop
  400354:	20000ba8 	.word	0x20000ba8
  400358:	00401f71 	.word	0x00401f71
  40035c:	20000ba4 	.word	0x20000ba4
  400360:	00401fdd 	.word	0x00401fdd
  400364:	200000a0 	.word	0x200000a0
  400368:	20000ba0 	.word	0x20000ba0
  40036c:	20000b9c 	.word	0x20000b9c
  400370:	20000a74 	.word	0x20000a74
  400374:	20000b18 	.word	0x20000b18
  400378:	00401fcd 	.word	0x00401fcd
  40037c:	00400389 	.word	0x00400389
  400380:	20000b1c 	.word	0x20000b1c
  400384:	00402335 	.word	0x00402335

00400388 <udi_cdc_data_sent>:
	if (UDD_EP_TRANSFER_OK != status) {
  400388:	b100      	cbz	r0, 40038c <udi_cdc_data_sent+0x4>
  40038a:	4770      	bx	lr
{
  40038c:	b508      	push	{r3, lr}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
  40038e:	4b07      	ldr	r3, [pc, #28]	; (4003ac <udi_cdc_data_sent+0x24>)
  400390:	781b      	ldrb	r3, [r3, #0]
  400392:	fab3 f383 	clz	r3, r3
  400396:	095b      	lsrs	r3, r3, #5
  400398:	4a05      	ldr	r2, [pc, #20]	; (4003b0 <udi_cdc_data_sent+0x28>)
  40039a:	f822 0013 	strh.w	r0, [r2, r3, lsl #1]
	udi_cdc_tx_both_buf_to_send[port] = false;
  40039e:	4b05      	ldr	r3, [pc, #20]	; (4003b4 <udi_cdc_data_sent+0x2c>)
  4003a0:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
  4003a2:	4b05      	ldr	r3, [pc, #20]	; (4003b8 <udi_cdc_data_sent+0x30>)
  4003a4:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_send(port);
  4003a6:	4b05      	ldr	r3, [pc, #20]	; (4003bc <udi_cdc_data_sent+0x34>)
  4003a8:	4798      	blx	r3
  4003aa:	bd08      	pop	{r3, pc}
  4003ac:	20000ba0 	.word	0x20000ba0
  4003b0:	20000b9c 	.word	0x20000b9c
  4003b4:	20000b18 	.word	0x20000b18
  4003b8:	20000ba8 	.word	0x20000ba8
  4003bc:	00400241 	.word	0x00400241

004003c0 <udi_cdc_data_sof_notify>:
{
  4003c0:	b508      	push	{r3, lr}
	udi_cdc_tx_send(port_notify);
  4003c2:	2000      	movs	r0, #0
  4003c4:	4b01      	ldr	r3, [pc, #4]	; (4003cc <udi_cdc_data_sof_notify+0xc>)
  4003c6:	4798      	blx	r3
  4003c8:	bd08      	pop	{r3, pc}
  4003ca:	bf00      	nop
  4003cc:	00400241 	.word	0x00400241

004003d0 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
  4003d0:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4003d2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4003d6:	fab3 f383 	clz	r3, r3
  4003da:	095b      	lsrs	r3, r3, #5
  4003dc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4003de:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4003e0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4003e4:	2200      	movs	r2, #0
  4003e6:	4b0b      	ldr	r3, [pc, #44]	; (400414 <udi_cdc_multi_get_nb_received_data+0x44>)
  4003e8:	701a      	strb	r2, [r3, #0]
	return flags;
  4003ea:	9901      	ldr	r1, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
  4003ec:	4b0a      	ldr	r3, [pc, #40]	; (400418 <udi_cdc_multi_get_nb_received_data+0x48>)
  4003ee:	8818      	ldrh	r0, [r3, #0]
  4003f0:	b283      	uxth	r3, r0
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
  4003f2:	4a0a      	ldr	r2, [pc, #40]	; (40041c <udi_cdc_multi_get_nb_received_data+0x4c>)
  4003f4:	7812      	ldrb	r2, [r2, #0]
  4003f6:	b2d2      	uxtb	r2, r2
  4003f8:	4809      	ldr	r0, [pc, #36]	; (400420 <udi_cdc_multi_get_nb_received_data+0x50>)
  4003fa:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
  4003fe:	b280      	uxth	r0, r0
  400400:	1ac0      	subs	r0, r0, r3
	if (cpu_irq_is_enabled_flags(flags))
  400402:	b129      	cbz	r1, 400410 <udi_cdc_multi_get_nb_received_data+0x40>
		cpu_irq_enable();
  400404:	2201      	movs	r2, #1
  400406:	4b03      	ldr	r3, [pc, #12]	; (400414 <udi_cdc_multi_get_nb_received_data+0x44>)
  400408:	701a      	strb	r2, [r3, #0]
  40040a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40040e:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
  400410:	b002      	add	sp, #8
  400412:	4770      	bx	lr
  400414:	200000a0 	.word	0x200000a0
  400418:	20000b0c 	.word	0x20000b0c
  40041c:	20000b08 	.word	0x20000b08
  400420:	20000b04 	.word	0x20000b04

00400424 <udi_cdc_multi_is_rx_ready>:
{
	return udi_cdc_multi_get_nb_received_data(0);
}

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
  400424:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
  400426:	4b03      	ldr	r3, [pc, #12]	; (400434 <udi_cdc_multi_is_rx_ready+0x10>)
  400428:	4798      	blx	r3
}
  40042a:	3000      	adds	r0, #0
  40042c:	bf18      	it	ne
  40042e:	2001      	movne	r0, #1
  400430:	bd08      	pop	{r3, pc}
  400432:	bf00      	nop
  400434:	004003d1 	.word	0x004003d1

00400438 <udi_cdc_rx_start>:
{
  400438:	b510      	push	{r4, lr}
  40043a:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40043c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400440:	fab3 f383 	clz	r3, r3
  400444:	095b      	lsrs	r3, r3, #5
  400446:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  400448:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  40044a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40044e:	2200      	movs	r2, #0
  400450:	4b1e      	ldr	r3, [pc, #120]	; (4004cc <udi_cdc_rx_start+0x94>)
  400452:	701a      	strb	r2, [r3, #0]
	return flags;
  400454:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
  400456:	4a1e      	ldr	r2, [pc, #120]	; (4004d0 <udi_cdc_rx_start+0x98>)
  400458:	7814      	ldrb	r4, [r2, #0]
	if (udi_cdc_rx_trans_ongoing[port] ||
  40045a:	4a1e      	ldr	r2, [pc, #120]	; (4004d4 <udi_cdc_rx_start+0x9c>)
  40045c:	7812      	ldrb	r2, [r2, #0]
  40045e:	b94a      	cbnz	r2, 400474 <udi_cdc_rx_start+0x3c>
  400460:	b2e4      	uxtb	r4, r4
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
  400462:	4a1d      	ldr	r2, [pc, #116]	; (4004d8 <udi_cdc_rx_start+0xa0>)
  400464:	8811      	ldrh	r1, [r2, #0]
  400466:	b289      	uxth	r1, r1
  400468:	4a1c      	ldr	r2, [pc, #112]	; (4004dc <udi_cdc_rx_start+0xa4>)
  40046a:	f832 2014 	ldrh.w	r2, [r2, r4, lsl #1]
  40046e:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
  400470:	4291      	cmp	r1, r2
  400472:	d209      	bcs.n	400488 <udi_cdc_rx_start+0x50>
	if (cpu_irq_is_enabled_flags(flags))
  400474:	b33b      	cbz	r3, 4004c6 <udi_cdc_rx_start+0x8e>
		cpu_irq_enable();
  400476:	2201      	movs	r2, #1
  400478:	4b14      	ldr	r3, [pc, #80]	; (4004cc <udi_cdc_rx_start+0x94>)
  40047a:	701a      	strb	r2, [r3, #0]
  40047c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400480:	b662      	cpsie	i
		return false;
  400482:	2000      	movs	r0, #0
}
  400484:	b004      	add	sp, #16
  400486:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
  400488:	2100      	movs	r1, #0
  40048a:	4a13      	ldr	r2, [pc, #76]	; (4004d8 <udi_cdc_rx_start+0xa0>)
  40048c:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
  40048e:	fab4 f284 	clz	r2, r4
  400492:	0952      	lsrs	r2, r2, #5
  400494:	490e      	ldr	r1, [pc, #56]	; (4004d0 <udi_cdc_rx_start+0x98>)
  400496:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
  400498:	2101      	movs	r1, #1
  40049a:	4a0e      	ldr	r2, [pc, #56]	; (4004d4 <udi_cdc_rx_start+0x9c>)
  40049c:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  40049e:	b123      	cbz	r3, 4004aa <udi_cdc_rx_start+0x72>
		cpu_irq_enable();
  4004a0:	4b0a      	ldr	r3, [pc, #40]	; (4004cc <udi_cdc_rx_start+0x94>)
  4004a2:	7019      	strb	r1, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  4004a4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4004a8:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
  4004aa:	2000      	movs	r0, #0
  4004ac:	4b0c      	ldr	r3, [pc, #48]	; (4004e0 <udi_cdc_rx_start+0xa8>)
  4004ae:	4798      	blx	r3
	return udd_ep_run(ep,
  4004b0:	4b0c      	ldr	r3, [pc, #48]	; (4004e4 <udi_cdc_rx_start+0xac>)
  4004b2:	9300      	str	r3, [sp, #0]
  4004b4:	2340      	movs	r3, #64	; 0x40
  4004b6:	4a0c      	ldr	r2, [pc, #48]	; (4004e8 <udi_cdc_rx_start+0xb0>)
  4004b8:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  4004bc:	2101      	movs	r1, #1
  4004be:	2002      	movs	r0, #2
  4004c0:	4c0a      	ldr	r4, [pc, #40]	; (4004ec <udi_cdc_rx_start+0xb4>)
  4004c2:	47a0      	blx	r4
  4004c4:	e7de      	b.n	400484 <udi_cdc_rx_start+0x4c>
		return false;
  4004c6:	2000      	movs	r0, #0
  4004c8:	e7dc      	b.n	400484 <udi_cdc_rx_start+0x4c>
  4004ca:	bf00      	nop
  4004cc:	200000a0 	.word	0x200000a0
  4004d0:	20000b08 	.word	0x20000b08
  4004d4:	20000b10 	.word	0x20000b10
  4004d8:	20000b0c 	.word	0x20000b0c
  4004dc:	20000b04 	.word	0x20000b04
  4004e0:	00400425 	.word	0x00400425
  4004e4:	00400585 	.word	0x00400585
  4004e8:	20000a84 	.word	0x20000a84
  4004ec:	00402335 	.word	0x00402335

004004f0 <udi_cdc_data_enable>:
{
  4004f0:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled = 0;
  4004f2:	2400      	movs	r4, #0
  4004f4:	4b16      	ldr	r3, [pc, #88]	; (400550 <udi_cdc_data_enable+0x60>)
  4004f6:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
  4004f8:	4b16      	ldr	r3, [pc, #88]	; (400554 <udi_cdc_data_enable+0x64>)
  4004fa:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
  4004fc:	4b16      	ldr	r3, [pc, #88]	; (400558 <udi_cdc_data_enable+0x68>)
  4004fe:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
  400500:	4b16      	ldr	r3, [pc, #88]	; (40055c <udi_cdc_data_enable+0x6c>)
  400502:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
  400504:	4b16      	ldr	r3, [pc, #88]	; (400560 <udi_cdc_data_enable+0x70>)
  400506:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
  400508:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
  40050a:	4b16      	ldr	r3, [pc, #88]	; (400564 <udi_cdc_data_enable+0x74>)
  40050c:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
  40050e:	4620      	mov	r0, r4
  400510:	4b15      	ldr	r3, [pc, #84]	; (400568 <udi_cdc_data_enable+0x78>)
  400512:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
  400514:	4b15      	ldr	r3, [pc, #84]	; (40056c <udi_cdc_data_enable+0x7c>)
  400516:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
  400518:	4b15      	ldr	r3, [pc, #84]	; (400570 <udi_cdc_data_enable+0x80>)
  40051a:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
  40051c:	4b15      	ldr	r3, [pc, #84]	; (400574 <udi_cdc_data_enable+0x84>)
  40051e:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
  400520:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
  400522:	4b15      	ldr	r3, [pc, #84]	; (400578 <udi_cdc_data_enable+0x88>)
  400524:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
  400526:	4620      	mov	r0, r4
  400528:	4b14      	ldr	r3, [pc, #80]	; (40057c <udi_cdc_data_enable+0x8c>)
  40052a:	4798      	blx	r3
  40052c:	4601      	mov	r1, r0
  40052e:	b140      	cbz	r0, 400542 <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
  400530:	4a07      	ldr	r2, [pc, #28]	; (400550 <udi_cdc_data_enable+0x60>)
  400532:	7813      	ldrb	r3, [r2, #0]
  400534:	3301      	adds	r3, #1
  400536:	b2db      	uxtb	r3, r3
  400538:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
  40053a:	7813      	ldrb	r3, [r2, #0]
  40053c:	b2db      	uxtb	r3, r3
  40053e:	2b01      	cmp	r3, #1
  400540:	d001      	beq.n	400546 <udi_cdc_data_enable+0x56>
}
  400542:	4608      	mov	r0, r1
  400544:	bd10      	pop	{r4, pc}
		udi_cdc_data_running = true;
  400546:	2201      	movs	r2, #1
  400548:	4b0d      	ldr	r3, [pc, #52]	; (400580 <udi_cdc_data_enable+0x90>)
  40054a:	701a      	strb	r2, [r3, #0]
  40054c:	e7f9      	b.n	400542 <udi_cdc_data_enable+0x52>
  40054e:	bf00      	nop
  400550:	20000a80 	.word	0x20000a80
  400554:	20000ba8 	.word	0x20000ba8
  400558:	20000b18 	.word	0x20000b18
  40055c:	20000ba0 	.word	0x20000ba0
  400560:	20000b9c 	.word	0x20000b9c
  400564:	20000ba4 	.word	0x20000ba4
  400568:	00400241 	.word	0x00400241
  40056c:	20000b10 	.word	0x20000b10
  400570:	20000b08 	.word	0x20000b08
  400574:	20000b04 	.word	0x20000b04
  400578:	20000b0c 	.word	0x20000b0c
  40057c:	00400439 	.word	0x00400439
  400580:	20000a76 	.word	0x20000a76

00400584 <udi_cdc_data_received>:
	if (UDD_EP_TRANSFER_OK != status) {
  400584:	b9e8      	cbnz	r0, 4005c2 <udi_cdc_data_received+0x3e>
{
  400586:	b510      	push	{r4, lr}
  400588:	b082      	sub	sp, #8
  40058a:	4610      	mov	r0, r2
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
  40058c:	4b0d      	ldr	r3, [pc, #52]	; (4005c4 <udi_cdc_data_received+0x40>)
  40058e:	781c      	ldrb	r4, [r3, #0]
  400590:	fab4 f484 	clz	r4, r4
  400594:	0964      	lsrs	r4, r4, #5
	if (!n) {
  400596:	b151      	cbz	r1, 4005ae <udi_cdc_data_received+0x2a>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
  400598:	b289      	uxth	r1, r1
  40059a:	4b0b      	ldr	r3, [pc, #44]	; (4005c8 <udi_cdc_data_received+0x44>)
  40059c:	f823 1014 	strh.w	r1, [r3, r4, lsl #1]
	udi_cdc_rx_trans_ongoing[port] = false;
  4005a0:	2000      	movs	r0, #0
  4005a2:	4b0a      	ldr	r3, [pc, #40]	; (4005cc <udi_cdc_data_received+0x48>)
  4005a4:	7018      	strb	r0, [r3, #0]
	udi_cdc_rx_start(port);
  4005a6:	4b0a      	ldr	r3, [pc, #40]	; (4005d0 <udi_cdc_data_received+0x4c>)
  4005a8:	4798      	blx	r3
}
  4005aa:	b002      	add	sp, #8
  4005ac:	bd10      	pop	{r4, pc}
		udd_ep_run( ep,
  4005ae:	4b09      	ldr	r3, [pc, #36]	; (4005d4 <udi_cdc_data_received+0x50>)
  4005b0:	9300      	str	r3, [sp, #0]
  4005b2:	2340      	movs	r3, #64	; 0x40
  4005b4:	4a08      	ldr	r2, [pc, #32]	; (4005d8 <udi_cdc_data_received+0x54>)
  4005b6:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  4005ba:	2101      	movs	r1, #1
  4005bc:	4c07      	ldr	r4, [pc, #28]	; (4005dc <udi_cdc_data_received+0x58>)
  4005be:	47a0      	blx	r4
		return;
  4005c0:	e7f3      	b.n	4005aa <udi_cdc_data_received+0x26>
  4005c2:	4770      	bx	lr
  4005c4:	20000b08 	.word	0x20000b08
  4005c8:	20000b04 	.word	0x20000b04
  4005cc:	20000b10 	.word	0x20000b10
  4005d0:	00400439 	.word	0x00400439
  4005d4:	00400585 	.word	0x00400585
  4005d8:	20000a84 	.word	0x20000a84
  4005dc:	00402335 	.word	0x00402335

004005e0 <udi_cdc_is_rx_ready>:

bool udi_cdc_is_rx_ready(void)
{
  4005e0:	b508      	push	{r3, lr}
	return udi_cdc_multi_is_rx_ready(0);
  4005e2:	2000      	movs	r0, #0
  4005e4:	4b01      	ldr	r3, [pc, #4]	; (4005ec <udi_cdc_is_rx_ready+0xc>)
  4005e6:	4798      	blx	r3
}
  4005e8:	bd08      	pop	{r3, pc}
  4005ea:	bf00      	nop
  4005ec:	00400425 	.word	0x00400425

004005f0 <udi_cdc_multi_getc>:

int udi_cdc_multi_getc(uint8_t port)
{
  4005f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4005f4:	b082      	sub	sp, #8

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
  4005f6:	4b25      	ldr	r3, [pc, #148]	; (40068c <udi_cdc_multi_getc+0x9c>)
  4005f8:	f893 8006 	ldrb.w	r8, [r3, #6]
  4005fc:	f1b8 0f09 	cmp.w	r8, #9
  400600:	bf14      	ite	ne
  400602:	f04f 0800 	movne.w	r8, #0
  400606:	f04f 0801 	moveq.w	r8, #1
	int rx_data = 0;
  40060a:	f04f 0a00 	mov.w	sl, #0
	cpu_irq_disable();
  40060e:	4c20      	ldr	r4, [pc, #128]	; (400690 <udi_cdc_multi_getc+0xa0>)
  400610:	46d1      	mov	r9, sl
  400612:	4657      	mov	r7, sl

udi_cdc_getc_process_one_byte:
	// Check available data
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
  400614:	4d1f      	ldr	r5, [pc, #124]	; (400694 <udi_cdc_multi_getc+0xa4>)
	buf_sel = udi_cdc_rx_buf_sel[port];
  400616:	4e20      	ldr	r6, [pc, #128]	; (400698 <udi_cdc_multi_getc+0xa8>)
  400618:	e004      	b.n	400624 <udi_cdc_multi_getc+0x34>
	again = pos >= udi_cdc_rx_buf_nb[port][buf_sel];
	cpu_irq_restore(flags);
	while (again) {
  40061a:	428b      	cmp	r3, r1
  40061c:	d323      	bcc.n	400666 <udi_cdc_multi_getc+0x76>
		if (!udi_cdc_data_running) {
  40061e:	4b1f      	ldr	r3, [pc, #124]	; (40069c <udi_cdc_multi_getc+0xac>)
  400620:	781b      	ldrb	r3, [r3, #0]
  400622:	b1d3      	cbz	r3, 40065a <udi_cdc_multi_getc+0x6a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400624:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400628:	fab3 f383 	clz	r3, r3
  40062c:	095b      	lsrs	r3, r3, #5
  40062e:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400630:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  400632:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400636:	7027      	strb	r7, [r4, #0]
	return flags;
  400638:	9801      	ldr	r0, [sp, #4]
	pos = udi_cdc_rx_pos[port];
  40063a:	882b      	ldrh	r3, [r5, #0]
  40063c:	b29b      	uxth	r3, r3
	buf_sel = udi_cdc_rx_buf_sel[port];
  40063e:	7832      	ldrb	r2, [r6, #0]
  400640:	b2d2      	uxtb	r2, r2
	again = pos >= udi_cdc_rx_buf_nb[port][buf_sel];
  400642:	4917      	ldr	r1, [pc, #92]	; (4006a0 <udi_cdc_multi_getc+0xb0>)
  400644:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
  400648:	b289      	uxth	r1, r1
	if (cpu_irq_is_enabled_flags(flags))
  40064a:	2800      	cmp	r0, #0
  40064c:	d0e5      	beq.n	40061a <udi_cdc_multi_getc+0x2a>
		cpu_irq_enable();
  40064e:	2001      	movs	r0, #1
  400650:	7020      	strb	r0, [r4, #0]
  400652:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400656:	b662      	cpsie	i
  400658:	e7df      	b.n	40061a <udi_cdc_multi_getc+0x2a>
			return 0;
  40065a:	f04f 0a00 	mov.w	sl, #0
		b_databit_9 = false;
		rx_data = rx_data << 8;
		goto udi_cdc_getc_process_one_byte;
	}
	return rx_data;
}
  40065e:	4650      	mov	r0, sl
  400660:	b002      	add	sp, #8
  400662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	rx_data |= udi_cdc_rx_buf[port][buf_sel][pos];
  400666:	490f      	ldr	r1, [pc, #60]	; (4006a4 <udi_cdc_multi_getc+0xb4>)
  400668:	eb01 1282 	add.w	r2, r1, r2, lsl #6
  40066c:	5cd2      	ldrb	r2, [r2, r3]
  40066e:	ea42 0a0a 	orr.w	sl, r2, sl
	udi_cdc_rx_pos[port] = pos+1;
  400672:	3301      	adds	r3, #1
  400674:	b29b      	uxth	r3, r3
  400676:	802b      	strh	r3, [r5, #0]
	udi_cdc_rx_start(port);
  400678:	4648      	mov	r0, r9
  40067a:	4b0b      	ldr	r3, [pc, #44]	; (4006a8 <udi_cdc_multi_getc+0xb8>)
  40067c:	4798      	blx	r3
	if (b_databit_9) {
  40067e:	f1b8 0f00 	cmp.w	r8, #0
  400682:	d0ec      	beq.n	40065e <udi_cdc_multi_getc+0x6e>
		rx_data = rx_data << 8;
  400684:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
		b_databit_9 = false;
  400688:	46c8      	mov	r8, r9
		goto udi_cdc_getc_process_one_byte;
  40068a:	e7cb      	b.n	400624 <udi_cdc_multi_getc+0x34>
  40068c:	20000a78 	.word	0x20000a78
  400690:	200000a0 	.word	0x200000a0
  400694:	20000b0c 	.word	0x20000b0c
  400698:	20000b08 	.word	0x20000b08
  40069c:	20000a76 	.word	0x20000a76
  4006a0:	20000b04 	.word	0x20000b04
  4006a4:	20000a84 	.word	0x20000a84
  4006a8:	00400439 	.word	0x00400439

004006ac <udi_cdc_getc>:

int udi_cdc_getc(void)
{
  4006ac:	b508      	push	{r3, lr}
	return udi_cdc_multi_getc(0);
  4006ae:	2000      	movs	r0, #0
  4006b0:	4b01      	ldr	r3, [pc, #4]	; (4006b8 <udi_cdc_getc+0xc>)
  4006b2:	4798      	blx	r3
}
  4006b4:	bd08      	pop	{r3, pc}
  4006b6:	bf00      	nop
  4006b8:	004005f1 	.word	0x004005f1

004006bc <udi_cdc_multi_get_free_tx_buffer>:
{
	return udi_cdc_multi_read_buf(0, buf, size);
}

iram_size_t udi_cdc_multi_get_free_tx_buffer(uint8_t port)
{
  4006bc:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4006be:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4006c2:	fab3 f383 	clz	r3, r3
  4006c6:	095b      	lsrs	r3, r3, #5
  4006c8:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4006ca:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4006cc:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4006d0:	2200      	movs	r2, #0
  4006d2:	4b14      	ldr	r3, [pc, #80]	; (400724 <udi_cdc_multi_get_free_tx_buffer+0x68>)
  4006d4:	701a      	strb	r2, [r3, #0]
	return flags;
  4006d6:	9a01      	ldr	r2, [sp, #4]
#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
  4006d8:	4b13      	ldr	r3, [pc, #76]	; (400728 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
  4006da:	781b      	ldrb	r3, [r3, #0]
  4006dc:	b2db      	uxtb	r3, r3
	buf_sel_nb = udi_cdc_tx_buf_nb[port][buf_sel];
  4006de:	4913      	ldr	r1, [pc, #76]	; (40072c <udi_cdc_multi_get_free_tx_buffer+0x70>)
  4006e0:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
	if (buf_sel_nb == UDI_CDC_TX_BUFFERS) {
  4006e4:	2840      	cmp	r0, #64	; 0x40
  4006e6:	d00a      	beq.n	4006fe <udi_cdc_multi_get_free_tx_buffer+0x42>
			udi_cdc_tx_both_buf_to_send[port] = true;
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
			buf_sel_nb = 0;
		}
	}
	retval = UDI_CDC_TX_BUFFERS - buf_sel_nb;  
  4006e8:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
	if (cpu_irq_is_enabled_flags(flags))
  4006ec:	b12a      	cbz	r2, 4006fa <udi_cdc_multi_get_free_tx_buffer+0x3e>
		cpu_irq_enable();
  4006ee:	2201      	movs	r2, #1
  4006f0:	4b0c      	ldr	r3, [pc, #48]	; (400724 <udi_cdc_multi_get_free_tx_buffer+0x68>)
  4006f2:	701a      	strb	r2, [r3, #0]
  4006f4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4006f8:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return retval;
}
  4006fa:	b002      	add	sp, #8
  4006fc:	4770      	bx	lr
		if ((!udi_cdc_tx_trans_ongoing[port])
  4006fe:	490c      	ldr	r1, [pc, #48]	; (400730 <udi_cdc_multi_get_free_tx_buffer+0x74>)
  400700:	7809      	ldrb	r1, [r1, #0]
  400702:	2900      	cmp	r1, #0
  400704:	d1f0      	bne.n	4006e8 <udi_cdc_multi_get_free_tx_buffer+0x2c>
			&& (!udi_cdc_tx_both_buf_to_send[port])) {
  400706:	490b      	ldr	r1, [pc, #44]	; (400734 <udi_cdc_multi_get_free_tx_buffer+0x78>)
  400708:	7809      	ldrb	r1, [r1, #0]
  40070a:	2900      	cmp	r1, #0
  40070c:	d1ec      	bne.n	4006e8 <udi_cdc_multi_get_free_tx_buffer+0x2c>
			udi_cdc_tx_both_buf_to_send[port] = true;
  40070e:	2001      	movs	r0, #1
  400710:	4908      	ldr	r1, [pc, #32]	; (400734 <udi_cdc_multi_get_free_tx_buffer+0x78>)
  400712:	7008      	strb	r0, [r1, #0]
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
  400714:	fab3 f383 	clz	r3, r3
  400718:	095b      	lsrs	r3, r3, #5
  40071a:	4903      	ldr	r1, [pc, #12]	; (400728 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
  40071c:	700b      	strb	r3, [r1, #0]
			buf_sel_nb = 0;
  40071e:	2000      	movs	r0, #0
  400720:	e7e2      	b.n	4006e8 <udi_cdc_multi_get_free_tx_buffer+0x2c>
  400722:	bf00      	nop
  400724:	200000a0 	.word	0x200000a0
  400728:	20000ba0 	.word	0x20000ba0
  40072c:	20000b9c 	.word	0x20000b9c
  400730:	20000ba8 	.word	0x20000ba8
  400734:	20000b18 	.word	0x20000b18

00400738 <udi_cdc_get_free_tx_buffer>:

iram_size_t udi_cdc_get_free_tx_buffer(void)
{
  400738:	b508      	push	{r3, lr}
	return udi_cdc_multi_get_free_tx_buffer(0);
  40073a:	2000      	movs	r0, #0
  40073c:	4b01      	ldr	r3, [pc, #4]	; (400744 <udi_cdc_get_free_tx_buffer+0xc>)
  40073e:	4798      	blx	r3
}
  400740:	bd08      	pop	{r3, pc}
  400742:	bf00      	nop
  400744:	004006bd 	.word	0x004006bd

00400748 <udi_cdc_multi_is_tx_ready>:

bool udi_cdc_multi_is_tx_ready(uint8_t port)
{
  400748:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_free_tx_buffer(port) != 0);
  40074a:	4b03      	ldr	r3, [pc, #12]	; (400758 <udi_cdc_multi_is_tx_ready+0x10>)
  40074c:	4798      	blx	r3
}
  40074e:	3000      	adds	r0, #0
  400750:	bf18      	it	ne
  400752:	2001      	movne	r0, #1
  400754:	bd08      	pop	{r3, pc}
  400756:	bf00      	nop
  400758:	004006bd 	.word	0x004006bd

0040075c <udi_cdc_is_tx_ready>:

bool udi_cdc_is_tx_ready(void)
{
  40075c:	b508      	push	{r3, lr}
	return udi_cdc_multi_is_tx_ready(0);
  40075e:	2000      	movs	r0, #0
  400760:	4b01      	ldr	r3, [pc, #4]	; (400768 <udi_cdc_is_tx_ready+0xc>)
  400762:	4798      	blx	r3
}
  400764:	bd08      	pop	{r3, pc}
  400766:	bf00      	nop
  400768:	00400749 	.word	0x00400749

0040076c <udi_cdc_multi_putc>:

int udi_cdc_multi_putc(uint8_t port, int value)
{
  40076c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400770:	b082      	sub	sp, #8
  400772:	460c      	mov	r4, r1

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
  400774:	4b1d      	ldr	r3, [pc, #116]	; (4007ec <udi_cdc_multi_putc+0x80>)
  400776:	799d      	ldrb	r5, [r3, #6]
  400778:	2d09      	cmp	r5, #9
  40077a:	bf14      	ite	ne
  40077c:	2500      	movne	r5, #0
  40077e:	2501      	moveq	r5, #1

udi_cdc_putc_process_one_byte:
	// Check available space
	if (!udi_cdc_multi_is_tx_ready(port)) {
  400780:	4e1b      	ldr	r6, [pc, #108]	; (4007f0 <udi_cdc_multi_putc+0x84>)
	cpu_irq_disable();
  400782:	4f1c      	ldr	r7, [pc, #112]	; (4007f4 <udi_cdc_multi_putc+0x88>)
		goto udi_cdc_putc_process_one_byte;
	}

	// Write value
	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
  400784:	f8df 807c 	ldr.w	r8, [pc, #124]	; 400804 <udi_cdc_multi_putc+0x98>
  400788:	e022      	b.n	4007d0 <udi_cdc_multi_putc+0x64>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40078a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40078e:	fab3 f383 	clz	r3, r3
  400792:	095b      	lsrs	r3, r3, #5
  400794:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400796:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  400798:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40079c:	2300      	movs	r3, #0
  40079e:	703b      	strb	r3, [r7, #0]
	return flags;
  4007a0:	9801      	ldr	r0, [sp, #4]
  4007a2:	f898 3000 	ldrb.w	r3, [r8]
  4007a6:	b2db      	uxtb	r3, r3
	udi_cdc_tx_buf[port][buf_sel][udi_cdc_tx_buf_nb[port][buf_sel]++] = value;
  4007a8:	4a13      	ldr	r2, [pc, #76]	; (4007f8 <udi_cdc_multi_putc+0x8c>)
  4007aa:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
  4007ae:	f101 0e01 	add.w	lr, r1, #1
  4007b2:	f822 e013 	strh.w	lr, [r2, r3, lsl #1]
  4007b6:	4a11      	ldr	r2, [pc, #68]	; (4007fc <udi_cdc_multi_putc+0x90>)
  4007b8:	eb02 1383 	add.w	r3, r2, r3, lsl #6
  4007bc:	545c      	strb	r4, [r3, r1]
	if (cpu_irq_is_enabled_flags(flags))
  4007be:	b120      	cbz	r0, 4007ca <udi_cdc_multi_putc+0x5e>
		cpu_irq_enable();
  4007c0:	2301      	movs	r3, #1
  4007c2:	703b      	strb	r3, [r7, #0]
  4007c4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4007c8:	b662      	cpsie	i
	cpu_irq_restore(flags);

	if (b_databit_9) {
  4007ca:	b165      	cbz	r5, 4007e6 <udi_cdc_multi_putc+0x7a>
		// Send MSB
		b_databit_9 = false;
		value = value >> 8;
  4007cc:	1224      	asrs	r4, r4, #8
		b_databit_9 = false;
  4007ce:	2500      	movs	r5, #0
	if (!udi_cdc_multi_is_tx_ready(port)) {
  4007d0:	2000      	movs	r0, #0
  4007d2:	47b0      	blx	r6
  4007d4:	2800      	cmp	r0, #0
  4007d6:	d1d8      	bne.n	40078a <udi_cdc_multi_putc+0x1e>
		if (!udi_cdc_data_running) {
  4007d8:	4b09      	ldr	r3, [pc, #36]	; (400800 <udi_cdc_multi_putc+0x94>)
  4007da:	781b      	ldrb	r3, [r3, #0]
  4007dc:	2b00      	cmp	r3, #0
  4007de:	d1f7      	bne.n	4007d0 <udi_cdc_multi_putc+0x64>
		goto udi_cdc_putc_process_one_byte;
	}
	return true;
}
  4007e0:	b002      	add	sp, #8
  4007e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	return true;
  4007e6:	2001      	movs	r0, #1
  4007e8:	e7fa      	b.n	4007e0 <udi_cdc_multi_putc+0x74>
  4007ea:	bf00      	nop
  4007ec:	20000a78 	.word	0x20000a78
  4007f0:	00400749 	.word	0x00400749
  4007f4:	200000a0 	.word	0x200000a0
  4007f8:	20000b9c 	.word	0x20000b9c
  4007fc:	20000b1c 	.word	0x20000b1c
  400800:	20000a76 	.word	0x20000a76
  400804:	20000ba0 	.word	0x20000ba0

00400808 <udi_cdc_putc>:

int udi_cdc_putc(int value)
{
  400808:	b508      	push	{r3, lr}
	return udi_cdc_multi_putc(0, value);
  40080a:	4601      	mov	r1, r0
  40080c:	2000      	movs	r0, #0
  40080e:	4b01      	ldr	r3, [pc, #4]	; (400814 <udi_cdc_putc+0xc>)
  400810:	4798      	blx	r3
}
  400812:	bd08      	pop	{r3, pc}
  400814:	0040076d 	.word	0x0040076d

00400818 <udc_next_desc_in_iface>:
 * \return address after the last byte of USB Configuration descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_get_eof_conf(void)
{
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
			udc_ptr_conf->desc +
  400818:	4b10      	ldr	r3, [pc, #64]	; (40085c <udc_next_desc_in_iface+0x44>)
  40081a:	681b      	ldr	r3, [r3, #0]
  40081c:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
  40081e:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
  400820:	441a      	add	r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
  400822:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
  400824:	4418      	add	r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
  400826:	4290      	cmp	r0, r2
  400828:	d211      	bcs.n	40084e <udc_next_desc_in_iface+0x36>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
  40082a:	7843      	ldrb	r3, [r0, #1]
  40082c:	2b04      	cmp	r3, #4
  40082e:	d010      	beq.n	400852 <udc_next_desc_in_iface+0x3a>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
  400830:	428b      	cmp	r3, r1
  400832:	d009      	beq.n	400848 <udc_next_desc_in_iface+0x30>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
  400834:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
  400836:	4418      	add	r0, r3
	while (ptr_eof_desc > desc) {
  400838:	4290      	cmp	r0, r2
  40083a:	d206      	bcs.n	40084a <udc_next_desc_in_iface+0x32>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
  40083c:	7843      	ldrb	r3, [r0, #1]
  40083e:	2b04      	cmp	r3, #4
  400840:	d009      	beq.n	400856 <udc_next_desc_in_iface+0x3e>
		if (desc_id == desc->bDescriptorType) {
  400842:	428b      	cmp	r3, r1
  400844:	d1f6      	bne.n	400834 <udc_next_desc_in_iface+0x1c>
  400846:	e007      	b.n	400858 <udc_next_desc_in_iface+0x40>
  400848:	4770      	bx	lr
	}
	return NULL; // No specific descriptor found
  40084a:	2000      	movs	r0, #0
  40084c:	4770      	bx	lr
  40084e:	2000      	movs	r0, #0
  400850:	4770      	bx	lr
  400852:	2000      	movs	r0, #0
  400854:	4770      	bx	lr
  400856:	2000      	movs	r0, #0
}
  400858:	4770      	bx	lr
  40085a:	bf00      	nop
  40085c:	20000bc4 	.word	0x20000bc4

00400860 <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
  400860:	b508      	push	{r3, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
  400862:	4b03      	ldr	r3, [pc, #12]	; (400870 <udc_valid_address+0x10>)
  400864:	7898      	ldrb	r0, [r3, #2]
  400866:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  40086a:	4b02      	ldr	r3, [pc, #8]	; (400874 <udc_valid_address+0x14>)
  40086c:	4798      	blx	r3
  40086e:	bd08      	pop	{r3, pc}
  400870:	20000cd4 	.word	0x20000cd4
  400874:	00401f75 	.word	0x00401f75

00400878 <udc_update_iface_desc>:
	if (0 == udc_num_configuration) {
  400878:	4b19      	ldr	r3, [pc, #100]	; (4008e0 <udc_update_iface_desc+0x68>)
  40087a:	781b      	ldrb	r3, [r3, #0]
  40087c:	b34b      	cbz	r3, 4008d2 <udc_update_iface_desc+0x5a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  40087e:	4b19      	ldr	r3, [pc, #100]	; (4008e4 <udc_update_iface_desc+0x6c>)
  400880:	681b      	ldr	r3, [r3, #0]
  400882:	681b      	ldr	r3, [r3, #0]
  400884:	791a      	ldrb	r2, [r3, #4]
  400886:	4282      	cmp	r2, r0
  400888:	d925      	bls.n	4008d6 <udc_update_iface_desc+0x5e>
{
  40088a:	b470      	push	{r4, r5, r6}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
  40088c:	4a16      	ldr	r2, [pc, #88]	; (4008e8 <udc_update_iface_desc+0x70>)
  40088e:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
  400890:	885c      	ldrh	r4, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
  400892:	441c      	add	r4, r3
	while (ptr_end_desc >
  400894:	42a3      	cmp	r3, r4
  400896:	d220      	bcs.n	4008da <udc_update_iface_desc+0x62>
  400898:	2500      	movs	r5, #0
  40089a:	2601      	movs	r6, #1
  40089c:	e007      	b.n	4008ae <udc_update_iface_desc+0x36>
  40089e:	4a12      	ldr	r2, [pc, #72]	; (4008e8 <udc_update_iface_desc+0x70>)
  4008a0:	6013      	str	r3, [r2, #0]
  4008a2:	e00f      	b.n	4008c4 <udc_update_iface_desc+0x4c>
				udc_ptr_iface->bLength);
  4008a4:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
  4008a6:	4413      	add	r3, r2
  4008a8:	4635      	mov	r5, r6
	while (ptr_end_desc >
  4008aa:	42a3      	cmp	r3, r4
  4008ac:	d20c      	bcs.n	4008c8 <udc_update_iface_desc+0x50>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
  4008ae:	785a      	ldrb	r2, [r3, #1]
  4008b0:	2a04      	cmp	r2, #4
  4008b2:	d1f7      	bne.n	4008a4 <udc_update_iface_desc+0x2c>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
  4008b4:	789a      	ldrb	r2, [r3, #2]
  4008b6:	4282      	cmp	r2, r0
  4008b8:	d1f4      	bne.n	4008a4 <udc_update_iface_desc+0x2c>
  4008ba:	78da      	ldrb	r2, [r3, #3]
  4008bc:	428a      	cmp	r2, r1
  4008be:	d1f1      	bne.n	4008a4 <udc_update_iface_desc+0x2c>
  4008c0:	2d00      	cmp	r5, #0
  4008c2:	d1ec      	bne.n	40089e <udc_update_iface_desc+0x26>
				return true; // Interface found
  4008c4:	2001      	movs	r0, #1
  4008c6:	e002      	b.n	4008ce <udc_update_iface_desc+0x56>
  4008c8:	4a07      	ldr	r2, [pc, #28]	; (4008e8 <udc_update_iface_desc+0x70>)
  4008ca:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
  4008cc:	2000      	movs	r0, #0
}
  4008ce:	bc70      	pop	{r4, r5, r6}
  4008d0:	4770      	bx	lr
		return false;
  4008d2:	2000      	movs	r0, #0
  4008d4:	4770      	bx	lr
		return false;
  4008d6:	2000      	movs	r0, #0
  4008d8:	4770      	bx	lr
	return false; // Interface not found
  4008da:	2000      	movs	r0, #0
  4008dc:	e7f7      	b.n	4008ce <udc_update_iface_desc+0x56>
  4008de:	bf00      	nop
  4008e0:	20000bc0 	.word	0x20000bc0
  4008e4:	20000bc4 	.word	0x20000bc4
  4008e8:	20000bc8 	.word	0x20000bc8

004008ec <udc_iface_disable>:
{
  4008ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4008f0:	4604      	mov	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
  4008f2:	2100      	movs	r1, #0
  4008f4:	4b13      	ldr	r3, [pc, #76]	; (400944 <udc_iface_disable+0x58>)
  4008f6:	4798      	blx	r3
  4008f8:	4680      	mov	r8, r0
  4008fa:	b910      	cbnz	r0, 400902 <udc_iface_disable+0x16>
}
  4008fc:	4640      	mov	r0, r8
  4008fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400902:	4b11      	ldr	r3, [pc, #68]	; (400948 <udc_iface_disable+0x5c>)
  400904:	681b      	ldr	r3, [r3, #0]
  400906:	685b      	ldr	r3, [r3, #4]
  400908:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  40090c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  400910:	4798      	blx	r3
  400912:	4601      	mov	r1, r0
  400914:	4620      	mov	r0, r4
  400916:	4b0b      	ldr	r3, [pc, #44]	; (400944 <udc_iface_disable+0x58>)
  400918:	4798      	blx	r3
  40091a:	4680      	mov	r8, r0
  40091c:	2800      	cmp	r0, #0
  40091e:	d0ed      	beq.n	4008fc <udc_iface_disable+0x10>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
  400920:	4b0a      	ldr	r3, [pc, #40]	; (40094c <udc_iface_disable+0x60>)
  400922:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  400924:	2605      	movs	r6, #5
  400926:	4d0a      	ldr	r5, [pc, #40]	; (400950 <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
  400928:	4f0a      	ldr	r7, [pc, #40]	; (400954 <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  40092a:	4631      	mov	r1, r6
  40092c:	4620      	mov	r0, r4
  40092e:	47a8      	blx	r5
			if (NULL == ep_desc) {
  400930:	4604      	mov	r4, r0
  400932:	b110      	cbz	r0, 40093a <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
  400934:	7880      	ldrb	r0, [r0, #2]
  400936:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  400938:	e7f7      	b.n	40092a <udc_iface_disable+0x3e>
	udi_api->disable();
  40093a:	f8d9 3004 	ldr.w	r3, [r9, #4]
  40093e:	4798      	blx	r3
	return true;
  400940:	e7dc      	b.n	4008fc <udc_iface_disable+0x10>
  400942:	bf00      	nop
  400944:	00400879 	.word	0x00400879
  400948:	20000bc4 	.word	0x20000bc4
  40094c:	20000bc8 	.word	0x20000bc8
  400950:	00400819 	.word	0x00400819
  400954:	004020e5 	.word	0x004020e5

00400958 <udc_iface_enable>:
{
  400958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40095c:	4680      	mov	r8, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
  40095e:	4b10      	ldr	r3, [pc, #64]	; (4009a0 <udc_iface_enable+0x48>)
  400960:	4798      	blx	r3
  400962:	4603      	mov	r3, r0
  400964:	b1c8      	cbz	r0, 40099a <udc_iface_enable+0x42>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
  400966:	4b0f      	ldr	r3, [pc, #60]	; (4009a4 <udc_iface_enable+0x4c>)
  400968:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  40096a:	2605      	movs	r6, #5
  40096c:	4d0e      	ldr	r5, [pc, #56]	; (4009a8 <udc_iface_enable+0x50>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
  40096e:	4f0f      	ldr	r7, [pc, #60]	; (4009ac <udc_iface_enable+0x54>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  400970:	4631      	mov	r1, r6
  400972:	4620      	mov	r0, r4
  400974:	47a8      	blx	r5
		if (NULL == ep_desc)
  400976:	4604      	mov	r4, r0
  400978:	b138      	cbz	r0, 40098a <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
  40097a:	8882      	ldrh	r2, [r0, #4]
  40097c:	78c1      	ldrb	r1, [r0, #3]
  40097e:	7880      	ldrb	r0, [r0, #2]
  400980:	47b8      	blx	r7
  400982:	4603      	mov	r3, r0
  400984:	2800      	cmp	r0, #0
  400986:	d1f3      	bne.n	400970 <udc_iface_enable+0x18>
  400988:	e007      	b.n	40099a <udc_iface_enable+0x42>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
  40098a:	4b09      	ldr	r3, [pc, #36]	; (4009b0 <udc_iface_enable+0x58>)
  40098c:	681b      	ldr	r3, [r3, #0]
  40098e:	685b      	ldr	r3, [r3, #4]
  400990:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
  400994:	681b      	ldr	r3, [r3, #0]
  400996:	4798      	blx	r3
  400998:	4603      	mov	r3, r0
}
  40099a:	4618      	mov	r0, r3
  40099c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4009a0:	00400879 	.word	0x00400879
  4009a4:	20000bc8 	.word	0x20000bc8
  4009a8:	00400819 	.word	0x00400819
  4009ac:	00401fed 	.word	0x00401fed
  4009b0:	20000bc4 	.word	0x20000bc4

004009b4 <udc_start>:
{
  4009b4:	b508      	push	{r3, lr}
	udd_enable();
  4009b6:	4b01      	ldr	r3, [pc, #4]	; (4009bc <udc_start+0x8>)
  4009b8:	4798      	blx	r3
  4009ba:	bd08      	pop	{r3, pc}
  4009bc:	00401e95 	.word	0x00401e95

004009c0 <udc_reset>:
{
  4009c0:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
  4009c2:	4b0d      	ldr	r3, [pc, #52]	; (4009f8 <udc_reset+0x38>)
  4009c4:	781b      	ldrb	r3, [r3, #0]
  4009c6:	b183      	cbz	r3, 4009ea <udc_reset+0x2a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  4009c8:	4b0c      	ldr	r3, [pc, #48]	; (4009fc <udc_reset+0x3c>)
  4009ca:	681b      	ldr	r3, [r3, #0]
  4009cc:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
  4009ce:	791b      	ldrb	r3, [r3, #4]
  4009d0:	b15b      	cbz	r3, 4009ea <udc_reset+0x2a>
  4009d2:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
  4009d4:	4e0a      	ldr	r6, [pc, #40]	; (400a00 <udc_reset+0x40>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  4009d6:	4d09      	ldr	r5, [pc, #36]	; (4009fc <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
  4009d8:	4620      	mov	r0, r4
  4009da:	47b0      	blx	r6
				iface_num++) {
  4009dc:	3401      	adds	r4, #1
  4009de:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  4009e0:	682b      	ldr	r3, [r5, #0]
  4009e2:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
  4009e4:	791b      	ldrb	r3, [r3, #4]
  4009e6:	42a3      	cmp	r3, r4
  4009e8:	d8f6      	bhi.n	4009d8 <udc_reset+0x18>
	udc_num_configuration = 0;
  4009ea:	2200      	movs	r2, #0
  4009ec:	4b02      	ldr	r3, [pc, #8]	; (4009f8 <udc_reset+0x38>)
  4009ee:	701a      	strb	r2, [r3, #0]
	udc_device_status =
  4009f0:	2201      	movs	r2, #1
  4009f2:	4b04      	ldr	r3, [pc, #16]	; (400a04 <udc_reset+0x44>)
  4009f4:	801a      	strh	r2, [r3, #0]
  4009f6:	bd70      	pop	{r4, r5, r6, pc}
  4009f8:	20000bc0 	.word	0x20000bc0
  4009fc:	20000bc4 	.word	0x20000bc4
  400a00:	004008ed 	.word	0x004008ed
  400a04:	20000bb6 	.word	0x20000bb6

00400a08 <udc_sof_notify>:
{
  400a08:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
  400a0a:	4b0d      	ldr	r3, [pc, #52]	; (400a40 <udc_sof_notify+0x38>)
  400a0c:	781b      	ldrb	r3, [r3, #0]
  400a0e:	b1b3      	cbz	r3, 400a3e <udc_sof_notify+0x36>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400a10:	4b0c      	ldr	r3, [pc, #48]	; (400a44 <udc_sof_notify+0x3c>)
  400a12:	681b      	ldr	r3, [r3, #0]
  400a14:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
  400a16:	7912      	ldrb	r2, [r2, #4]
  400a18:	b18a      	cbz	r2, 400a3e <udc_sof_notify+0x36>
  400a1a:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400a1c:	4d09      	ldr	r5, [pc, #36]	; (400a44 <udc_sof_notify+0x3c>)
  400a1e:	e006      	b.n	400a2e <udc_sof_notify+0x26>
				iface_num++) {
  400a20:	3401      	adds	r4, #1
  400a22:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400a24:	682b      	ldr	r3, [r5, #0]
  400a26:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
  400a28:	7912      	ldrb	r2, [r2, #4]
  400a2a:	42a2      	cmp	r2, r4
  400a2c:	d907      	bls.n	400a3e <udc_sof_notify+0x36>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
  400a2e:	685b      	ldr	r3, [r3, #4]
  400a30:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
  400a34:	691b      	ldr	r3, [r3, #16]
  400a36:	2b00      	cmp	r3, #0
  400a38:	d0f2      	beq.n	400a20 <udc_sof_notify+0x18>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
  400a3a:	4798      	blx	r3
  400a3c:	e7f0      	b.n	400a20 <udc_sof_notify+0x18>
  400a3e:	bd38      	pop	{r3, r4, r5, pc}
  400a40:	20000bc0 	.word	0x20000bc0
  400a44:	20000bc4 	.word	0x20000bc4

00400a48 <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
  400a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
  400a4a:	4b96      	ldr	r3, [pc, #600]	; (400ca4 <udc_process_setup+0x25c>)
  400a4c:	2200      	movs	r2, #0
  400a4e:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
  400a50:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
  400a52:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
  400a54:	781b      	ldrb	r3, [r3, #0]
  400a56:	f013 0f80 	tst.w	r3, #128	; 0x80
  400a5a:	d114      	bne.n	400a86 <udc_process_setup+0x3e>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
  400a5c:	f013 0f60 	tst.w	r3, #96	; 0x60
  400a60:	f000 80b8 	beq.w	400bd4 <udc_process_setup+0x18c>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
  400a64:	4b8f      	ldr	r3, [pc, #572]	; (400ca4 <udc_process_setup+0x25c>)
  400a66:	781b      	ldrb	r3, [r3, #0]
  400a68:	f003 031f 	and.w	r3, r3, #31
  400a6c:	2b01      	cmp	r3, #1
  400a6e:	f000 818b 	beq.w	400d88 <udc_process_setup+0x340>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
  400a72:	4b8c      	ldr	r3, [pc, #560]	; (400ca4 <udc_process_setup+0x25c>)
  400a74:	781b      	ldrb	r3, [r3, #0]
  400a76:	f003 031f 	and.w	r3, r3, #31
  400a7a:	2b02      	cmp	r3, #2
  400a7c:	f000 81ac 	beq.w	400dd8 <udc_process_setup+0x390>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
  400a80:	2300      	movs	r3, #0
#endif
}
  400a82:	4618      	mov	r0, r3
  400a84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
  400a86:	4a87      	ldr	r2, [pc, #540]	; (400ca4 <udc_process_setup+0x25c>)
  400a88:	88d2      	ldrh	r2, [r2, #6]
  400a8a:	2a00      	cmp	r2, #0
  400a8c:	f000 81cd 	beq.w	400e2a <udc_process_setup+0x3e2>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
  400a90:	f013 0f60 	tst.w	r3, #96	; 0x60
  400a94:	d1e6      	bne.n	400a64 <udc_process_setup+0x1c>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
  400a96:	f013 031f 	ands.w	r3, r3, #31
  400a9a:	d106      	bne.n	400aaa <udc_process_setup+0x62>
			switch (udd_g_ctrlreq.req.bRequest) {
  400a9c:	4981      	ldr	r1, [pc, #516]	; (400ca4 <udc_process_setup+0x25c>)
  400a9e:	7849      	ldrb	r1, [r1, #1]
  400aa0:	2906      	cmp	r1, #6
  400aa2:	d013      	beq.n	400acc <udc_process_setup+0x84>
  400aa4:	2908      	cmp	r1, #8
  400aa6:	d058      	beq.n	400b5a <udc_process_setup+0x112>
  400aa8:	b149      	cbz	r1, 400abe <udc_process_setup+0x76>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
  400aaa:	2b01      	cmp	r3, #1
  400aac:	d05c      	beq.n	400b68 <udc_process_setup+0x120>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
  400aae:	2b02      	cmp	r3, #2
  400ab0:	d1d8      	bne.n	400a64 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
  400ab2:	4b7c      	ldr	r3, [pc, #496]	; (400ca4 <udc_process_setup+0x25c>)
  400ab4:	785b      	ldrb	r3, [r3, #1]
  400ab6:	2b00      	cmp	r3, #0
  400ab8:	d07e      	beq.n	400bb8 <udc_process_setup+0x170>
	return false;
  400aba:	2300      	movs	r3, #0
  400abc:	e160      	b.n	400d80 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
  400abe:	2a02      	cmp	r2, #2
  400ac0:	d1d0      	bne.n	400a64 <udc_process_setup+0x1c>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
  400ac2:	2102      	movs	r1, #2
  400ac4:	4878      	ldr	r0, [pc, #480]	; (400ca8 <udc_process_setup+0x260>)
  400ac6:	4b79      	ldr	r3, [pc, #484]	; (400cac <udc_process_setup+0x264>)
  400ac8:	4798      	blx	r3
  400aca:	e09f      	b.n	400c0c <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
  400acc:	4b75      	ldr	r3, [pc, #468]	; (400ca4 <udc_process_setup+0x25c>)
  400ace:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
  400ad0:	0a13      	lsrs	r3, r2, #8
  400ad2:	3b01      	subs	r3, #1
  400ad4:	2b0e      	cmp	r3, #14
  400ad6:	f200 8150 	bhi.w	400d7a <udc_process_setup+0x332>
  400ada:	e8df f013 	tbh	[pc, r3, lsl #1]
  400ade:	000f      	.short	0x000f
  400ae0:	0036001c 	.word	0x0036001c
  400ae4:	014e014e 	.word	0x014e014e
  400ae8:	014e014e 	.word	0x014e014e
  400aec:	014e014e 	.word	0x014e014e
  400af0:	014e014e 	.word	0x014e014e
  400af4:	014e014e 	.word	0x014e014e
  400af8:	002e014e 	.word	0x002e014e
				(uint8_t *) udc_config.confdev_lsfs,
  400afc:	4b6c      	ldr	r3, [pc, #432]	; (400cb0 <udc_process_setup+0x268>)
  400afe:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
  400b00:	7801      	ldrb	r1, [r0, #0]
  400b02:	4b6a      	ldr	r3, [pc, #424]	; (400cac <udc_process_setup+0x264>)
  400b04:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
  400b06:	4b67      	ldr	r3, [pc, #412]	; (400ca4 <udc_process_setup+0x25c>)
  400b08:	88da      	ldrh	r2, [r3, #6]
  400b0a:	899b      	ldrh	r3, [r3, #12]
  400b0c:	4293      	cmp	r3, r2
  400b0e:	d97d      	bls.n	400c0c <udc_process_setup+0x1c4>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
  400b10:	4b64      	ldr	r3, [pc, #400]	; (400ca4 <udc_process_setup+0x25c>)
  400b12:	819a      	strh	r2, [r3, #12]
  400b14:	e07a      	b.n	400c0c <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
  400b16:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
  400b18:	4b65      	ldr	r3, [pc, #404]	; (400cb0 <udc_process_setup+0x268>)
  400b1a:	681b      	ldr	r3, [r3, #0]
  400b1c:	7c5b      	ldrb	r3, [r3, #17]
  400b1e:	4293      	cmp	r3, r2
  400b20:	d9a0      	bls.n	400a64 <udc_process_setup+0x1c>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
  400b22:	4b63      	ldr	r3, [pc, #396]	; (400cb0 <udc_process_setup+0x268>)
  400b24:	685b      	ldr	r3, [r3, #4]
  400b26:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]
			udd_set_setup_payload(
  400b2a:	8841      	ldrh	r1, [r0, #2]
  400b2c:	4b5f      	ldr	r3, [pc, #380]	; (400cac <udc_process_setup+0x264>)
  400b2e:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
  400b30:	4b5c      	ldr	r3, [pc, #368]	; (400ca4 <udc_process_setup+0x25c>)
  400b32:	689b      	ldr	r3, [r3, #8]
  400b34:	2202      	movs	r2, #2
  400b36:	705a      	strb	r2, [r3, #1]
  400b38:	e7e5      	b.n	400b06 <udc_process_setup+0xbe>
		if (udc_config.conf_bos == NULL) {
  400b3a:	4b5d      	ldr	r3, [pc, #372]	; (400cb0 <udc_process_setup+0x268>)
  400b3c:	6898      	ldr	r0, [r3, #8]
  400b3e:	2800      	cmp	r0, #0
  400b40:	d090      	beq.n	400a64 <udc_process_setup+0x1c>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
  400b42:	8841      	ldrh	r1, [r0, #2]
  400b44:	4b59      	ldr	r3, [pc, #356]	; (400cac <udc_process_setup+0x264>)
  400b46:	4798      	blx	r3
  400b48:	e7dd      	b.n	400b06 <udc_process_setup+0xbe>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
  400b4a:	f012 0fff 	tst.w	r2, #255	; 0xff
  400b4e:	d189      	bne.n	400a64 <udc_process_setup+0x1c>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
  400b50:	2104      	movs	r1, #4
  400b52:	4858      	ldr	r0, [pc, #352]	; (400cb4 <udc_process_setup+0x26c>)
  400b54:	4b55      	ldr	r3, [pc, #340]	; (400cac <udc_process_setup+0x264>)
  400b56:	4798      	blx	r3
  400b58:	e7d5      	b.n	400b06 <udc_process_setup+0xbe>
	if (udd_g_ctrlreq.req.wLength != 1) {
  400b5a:	2a01      	cmp	r2, #1
  400b5c:	d182      	bne.n	400a64 <udc_process_setup+0x1c>
	udd_set_setup_payload(&udc_num_configuration,1);
  400b5e:	2101      	movs	r1, #1
  400b60:	4855      	ldr	r0, [pc, #340]	; (400cb8 <udc_process_setup+0x270>)
  400b62:	4b52      	ldr	r3, [pc, #328]	; (400cac <udc_process_setup+0x264>)
  400b64:	4798      	blx	r3
  400b66:	e051      	b.n	400c0c <udc_process_setup+0x1c4>
			switch (udd_g_ctrlreq.req.bRequest) {
  400b68:	494e      	ldr	r1, [pc, #312]	; (400ca4 <udc_process_setup+0x25c>)
  400b6a:	7849      	ldrb	r1, [r1, #1]
  400b6c:	290a      	cmp	r1, #10
  400b6e:	d19e      	bne.n	400aae <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wLength != 1) {
  400b70:	2a01      	cmp	r2, #1
  400b72:	f47f af77 	bne.w	400a64 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
  400b76:	4b50      	ldr	r3, [pc, #320]	; (400cb8 <udc_process_setup+0x270>)
  400b78:	781b      	ldrb	r3, [r3, #0]
  400b7a:	2b00      	cmp	r3, #0
  400b7c:	f43f af72 	beq.w	400a64 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400b80:	4b48      	ldr	r3, [pc, #288]	; (400ca4 <udc_process_setup+0x25c>)
  400b82:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  400b84:	4b4d      	ldr	r3, [pc, #308]	; (400cbc <udc_process_setup+0x274>)
  400b86:	681d      	ldr	r5, [r3, #0]
  400b88:	682b      	ldr	r3, [r5, #0]
  400b8a:	791b      	ldrb	r3, [r3, #4]
  400b8c:	42a3      	cmp	r3, r4
  400b8e:	f67f af69 	bls.w	400a64 <udc_process_setup+0x1c>
	if (!udc_update_iface_desc(iface_num, 0)) {
  400b92:	2100      	movs	r1, #0
  400b94:	4620      	mov	r0, r4
  400b96:	4b4a      	ldr	r3, [pc, #296]	; (400cc0 <udc_process_setup+0x278>)
  400b98:	4798      	blx	r3
  400b9a:	2800      	cmp	r0, #0
  400b9c:	f43f af62 	beq.w	400a64 <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400ba0:	686b      	ldr	r3, [r5, #4]
	udc_iface_setting = udi_api->getsetting();
  400ba2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
  400ba6:	68db      	ldr	r3, [r3, #12]
  400ba8:	4798      	blx	r3
  400baa:	4b46      	ldr	r3, [pc, #280]	; (400cc4 <udc_process_setup+0x27c>)
  400bac:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
  400bae:	2101      	movs	r1, #1
  400bb0:	4618      	mov	r0, r3
  400bb2:	4b3e      	ldr	r3, [pc, #248]	; (400cac <udc_process_setup+0x264>)
  400bb4:	4798      	blx	r3
  400bb6:	e029      	b.n	400c0c <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
  400bb8:	2a02      	cmp	r2, #2
  400bba:	f47f af53 	bne.w	400a64 <udc_process_setup+0x1c>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
  400bbe:	4b39      	ldr	r3, [pc, #228]	; (400ca4 <udc_process_setup+0x25c>)
  400bc0:	7918      	ldrb	r0, [r3, #4]
  400bc2:	4b41      	ldr	r3, [pc, #260]	; (400cc8 <udc_process_setup+0x280>)
  400bc4:	4798      	blx	r3
  400bc6:	4b41      	ldr	r3, [pc, #260]	; (400ccc <udc_process_setup+0x284>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
  400bc8:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
  400bca:	2102      	movs	r1, #2
  400bcc:	4618      	mov	r0, r3
  400bce:	4b37      	ldr	r3, [pc, #220]	; (400cac <udc_process_setup+0x264>)
  400bd0:	4798      	blx	r3
  400bd2:	e01b      	b.n	400c0c <udc_process_setup+0x1c4>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
  400bd4:	f013 031f 	ands.w	r3, r3, #31
  400bd8:	f040 8082 	bne.w	400ce0 <udc_process_setup+0x298>
			switch (udd_g_ctrlreq.req.bRequest) {
  400bdc:	4a31      	ldr	r2, [pc, #196]	; (400ca4 <udc_process_setup+0x25c>)
  400bde:	7852      	ldrb	r2, [r2, #1]
  400be0:	3a01      	subs	r2, #1
  400be2:	2a08      	cmp	r2, #8
  400be4:	d87c      	bhi.n	400ce0 <udc_process_setup+0x298>
  400be6:	e8df f012 	tbh	[pc, r2, lsl #1]
  400bea:	0013      	.short	0x0013
  400bec:	00ca007b 	.word	0x00ca007b
  400bf0:	0009007b 	.word	0x0009007b
  400bf4:	007b007b 	.word	0x007b007b
  400bf8:	0023007b 	.word	0x0023007b
	if (udd_g_ctrlreq.req.wLength) {
  400bfc:	4b29      	ldr	r3, [pc, #164]	; (400ca4 <udc_process_setup+0x25c>)
  400bfe:	88db      	ldrh	r3, [r3, #6]
  400c00:	2b00      	cmp	r3, #0
  400c02:	f47f af2f 	bne.w	400a64 <udc_process_setup+0x1c>
	udd_g_ctrlreq.callback = udc_valid_address;
  400c06:	4a32      	ldr	r2, [pc, #200]	; (400cd0 <udc_process_setup+0x288>)
  400c08:	4b26      	ldr	r3, [pc, #152]	; (400ca4 <udc_process_setup+0x25c>)
  400c0a:	611a      	str	r2, [r3, #16]
			return true;
  400c0c:	2301      	movs	r3, #1
  400c0e:	e738      	b.n	400a82 <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
  400c10:	4b24      	ldr	r3, [pc, #144]	; (400ca4 <udc_process_setup+0x25c>)
  400c12:	88db      	ldrh	r3, [r3, #6]
  400c14:	2b00      	cmp	r3, #0
  400c16:	f47f af25 	bne.w	400a64 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
  400c1a:	4b22      	ldr	r3, [pc, #136]	; (400ca4 <udc_process_setup+0x25c>)
  400c1c:	885b      	ldrh	r3, [r3, #2]
  400c1e:	2b01      	cmp	r3, #1
  400c20:	f47f af20 	bne.w	400a64 <udc_process_setup+0x1c>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
  400c24:	4a20      	ldr	r2, [pc, #128]	; (400ca8 <udc_process_setup+0x260>)
  400c26:	8813      	ldrh	r3, [r2, #0]
  400c28:	f023 0302 	bic.w	r3, r3, #2
  400c2c:	8013      	strh	r3, [r2, #0]
  400c2e:	e7ed      	b.n	400c0c <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength) {
  400c30:	4b1c      	ldr	r3, [pc, #112]	; (400ca4 <udc_process_setup+0x25c>)
  400c32:	88db      	ldrh	r3, [r3, #6]
  400c34:	2b00      	cmp	r3, #0
  400c36:	f47f af15 	bne.w	400a64 <udc_process_setup+0x1c>
	if (!udd_getaddress()) {
  400c3a:	4b26      	ldr	r3, [pc, #152]	; (400cd4 <udc_process_setup+0x28c>)
  400c3c:	4798      	blx	r3
  400c3e:	2800      	cmp	r0, #0
  400c40:	f43f af10 	beq.w	400a64 <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
  400c44:	4b17      	ldr	r3, [pc, #92]	; (400ca4 <udc_process_setup+0x25c>)
  400c46:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
  400c48:	4b19      	ldr	r3, [pc, #100]	; (400cb0 <udc_process_setup+0x268>)
  400c4a:	681b      	ldr	r3, [r3, #0]
  400c4c:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
  400c4e:	429a      	cmp	r2, r3
  400c50:	f73f af08 	bgt.w	400a64 <udc_process_setup+0x1c>
	udc_reset();
  400c54:	4b20      	ldr	r3, [pc, #128]	; (400cd8 <udc_process_setup+0x290>)
  400c56:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
  400c58:	4b12      	ldr	r3, [pc, #72]	; (400ca4 <udc_process_setup+0x25c>)
  400c5a:	789b      	ldrb	r3, [r3, #2]
  400c5c:	4a16      	ldr	r2, [pc, #88]	; (400cb8 <udc_process_setup+0x270>)
  400c5e:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
  400c60:	2b00      	cmp	r3, #0
  400c62:	d0d3      	beq.n	400c0c <udc_process_setup+0x1c4>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
  400c64:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
  400c68:	3b01      	subs	r3, #1
  400c6a:	4a11      	ldr	r2, [pc, #68]	; (400cb0 <udc_process_setup+0x268>)
  400c6c:	6852      	ldr	r2, [r2, #4]
  400c6e:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
  400c72:	4912      	ldr	r1, [pc, #72]	; (400cbc <udc_process_setup+0x274>)
  400c74:	6008      	str	r0, [r1, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400c76:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
  400c7a:	791b      	ldrb	r3, [r3, #4]
  400c7c:	2b00      	cmp	r3, #0
  400c7e:	d0c5      	beq.n	400c0c <udc_process_setup+0x1c4>
  400c80:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
  400c82:	4626      	mov	r6, r4
  400c84:	4d15      	ldr	r5, [pc, #84]	; (400cdc <udc_process_setup+0x294>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400c86:	460f      	mov	r7, r1
		if (!udc_iface_enable(iface_num, 0)) {
  400c88:	4631      	mov	r1, r6
  400c8a:	4620      	mov	r0, r4
  400c8c:	47a8      	blx	r5
  400c8e:	2800      	cmp	r0, #0
  400c90:	f43f aee8 	beq.w	400a64 <udc_process_setup+0x1c>
			iface_num++) {
  400c94:	3401      	adds	r4, #1
  400c96:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400c98:	683b      	ldr	r3, [r7, #0]
  400c9a:	681b      	ldr	r3, [r3, #0]
  400c9c:	791b      	ldrb	r3, [r3, #4]
  400c9e:	42a3      	cmp	r3, r4
  400ca0:	d8f2      	bhi.n	400c88 <udc_process_setup+0x240>
  400ca2:	e7b3      	b.n	400c0c <udc_process_setup+0x1c4>
  400ca4:	20000cd4 	.word	0x20000cd4
  400ca8:	20000bb6 	.word	0x20000bb6
  400cac:	00401fe1 	.word	0x00401fe1
  400cb0:	20000028 	.word	0x20000028
  400cb4:	2000009c 	.word	0x2000009c
  400cb8:	20000bc0 	.word	0x20000bc0
  400cbc:	20000bc4 	.word	0x20000bc4
  400cc0:	00400879 	.word	0x00400879
  400cc4:	20000bbc 	.word	0x20000bbc
  400cc8:	0040213d 	.word	0x0040213d
  400ccc:	20000bb8 	.word	0x20000bb8
  400cd0:	00400861 	.word	0x00400861
  400cd4:	00401fb1 	.word	0x00401fb1
  400cd8:	004009c1 	.word	0x004009c1
  400cdc:	00400959 	.word	0x00400959
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
  400ce0:	2b01      	cmp	r3, #1
  400ce2:	d00a      	beq.n	400cfa <udc_process_setup+0x2b2>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
  400ce4:	2b02      	cmp	r3, #2
  400ce6:	f47f aebd 	bne.w	400a64 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
  400cea:	4b52      	ldr	r3, [pc, #328]	; (400e34 <udc_process_setup+0x3ec>)
  400cec:	785b      	ldrb	r3, [r3, #1]
  400cee:	2b01      	cmp	r3, #1
  400cf0:	d020      	beq.n	400d34 <udc_process_setup+0x2ec>
  400cf2:	2b03      	cmp	r3, #3
  400cf4:	d02e      	beq.n	400d54 <udc_process_setup+0x30c>
	return false;
  400cf6:	2300      	movs	r3, #0
  400cf8:	e042      	b.n	400d80 <udc_process_setup+0x338>
			switch (udd_g_ctrlreq.req.bRequest) {
  400cfa:	4a4e      	ldr	r2, [pc, #312]	; (400e34 <udc_process_setup+0x3ec>)
  400cfc:	7852      	ldrb	r2, [r2, #1]
  400cfe:	2a0b      	cmp	r2, #11
  400d00:	d1f0      	bne.n	400ce4 <udc_process_setup+0x29c>
	if (udd_g_ctrlreq.req.wLength) {
  400d02:	4b4c      	ldr	r3, [pc, #304]	; (400e34 <udc_process_setup+0x3ec>)
  400d04:	88db      	ldrh	r3, [r3, #6]
  400d06:	2b00      	cmp	r3, #0
  400d08:	f47f aeac 	bne.w	400a64 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
  400d0c:	4b4a      	ldr	r3, [pc, #296]	; (400e38 <udc_process_setup+0x3f0>)
  400d0e:	781b      	ldrb	r3, [r3, #0]
  400d10:	2b00      	cmp	r3, #0
  400d12:	f43f aea7 	beq.w	400a64 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400d16:	4b47      	ldr	r3, [pc, #284]	; (400e34 <udc_process_setup+0x3ec>)
  400d18:	791c      	ldrb	r4, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
  400d1a:	885d      	ldrh	r5, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
  400d1c:	4620      	mov	r0, r4
  400d1e:	4b47      	ldr	r3, [pc, #284]	; (400e3c <udc_process_setup+0x3f4>)
  400d20:	4798      	blx	r3
  400d22:	2800      	cmp	r0, #0
  400d24:	f43f ae9e 	beq.w	400a64 <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
  400d28:	b2e9      	uxtb	r1, r5
  400d2a:	4620      	mov	r0, r4
  400d2c:	4b44      	ldr	r3, [pc, #272]	; (400e40 <udc_process_setup+0x3f8>)
  400d2e:	4798      	blx	r3
  400d30:	4603      	mov	r3, r0
  400d32:	e025      	b.n	400d80 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
  400d34:	4b3f      	ldr	r3, [pc, #252]	; (400e34 <udc_process_setup+0x3ec>)
  400d36:	88db      	ldrh	r3, [r3, #6]
  400d38:	2b00      	cmp	r3, #0
  400d3a:	f47f ae93 	bne.w	400a64 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
  400d3e:	4b3d      	ldr	r3, [pc, #244]	; (400e34 <udc_process_setup+0x3ec>)
  400d40:	885b      	ldrh	r3, [r3, #2]
  400d42:	2b00      	cmp	r3, #0
  400d44:	f47f ae8e 	bne.w	400a64 <udc_process_setup+0x1c>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
  400d48:	4b3a      	ldr	r3, [pc, #232]	; (400e34 <udc_process_setup+0x3ec>)
  400d4a:	7918      	ldrb	r0, [r3, #4]
  400d4c:	4b3d      	ldr	r3, [pc, #244]	; (400e44 <udc_process_setup+0x3fc>)
  400d4e:	4798      	blx	r3
  400d50:	4603      	mov	r3, r0
  400d52:	e015      	b.n	400d80 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
  400d54:	4b37      	ldr	r3, [pc, #220]	; (400e34 <udc_process_setup+0x3ec>)
  400d56:	88db      	ldrh	r3, [r3, #6]
  400d58:	2b00      	cmp	r3, #0
  400d5a:	f47f ae83 	bne.w	400a64 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
  400d5e:	4b35      	ldr	r3, [pc, #212]	; (400e34 <udc_process_setup+0x3ec>)
  400d60:	885b      	ldrh	r3, [r3, #2]
  400d62:	2b00      	cmp	r3, #0
  400d64:	f47f ae7e 	bne.w	400a64 <udc_process_setup+0x1c>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
  400d68:	4c32      	ldr	r4, [pc, #200]	; (400e34 <udc_process_setup+0x3ec>)
  400d6a:	7920      	ldrb	r0, [r4, #4]
  400d6c:	4b36      	ldr	r3, [pc, #216]	; (400e48 <udc_process_setup+0x400>)
  400d6e:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
  400d70:	7920      	ldrb	r0, [r4, #4]
  400d72:	4b36      	ldr	r3, [pc, #216]	; (400e4c <udc_process_setup+0x404>)
  400d74:	4798      	blx	r3
  400d76:	4603      	mov	r3, r0
  400d78:	e002      	b.n	400d80 <udc_process_setup+0x338>
		return false;
  400d7a:	2300      	movs	r3, #0
  400d7c:	e000      	b.n	400d80 <udc_process_setup+0x338>
				return udc_req_std_dev_set_feature();
  400d7e:	2300      	movs	r3, #0
		if (udc_reqstd()) {
  400d80:	2b00      	cmp	r3, #0
  400d82:	f47f ae7e 	bne.w	400a82 <udc_process_setup+0x3a>
  400d86:	e66d      	b.n	400a64 <udc_process_setup+0x1c>
	if (0 == udc_num_configuration) {
  400d88:	4b2b      	ldr	r3, [pc, #172]	; (400e38 <udc_process_setup+0x3f0>)
  400d8a:	781b      	ldrb	r3, [r3, #0]
  400d8c:	2b00      	cmp	r3, #0
  400d8e:	d04e      	beq.n	400e2e <udc_process_setup+0x3e6>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400d90:	4b28      	ldr	r3, [pc, #160]	; (400e34 <udc_process_setup+0x3ec>)
  400d92:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  400d94:	4b2e      	ldr	r3, [pc, #184]	; (400e50 <udc_process_setup+0x408>)
  400d96:	681d      	ldr	r5, [r3, #0]
  400d98:	682b      	ldr	r3, [r5, #0]
  400d9a:	791b      	ldrb	r3, [r3, #4]
  400d9c:	42a3      	cmp	r3, r4
  400d9e:	d801      	bhi.n	400da4 <udc_process_setup+0x35c>
	return false;
  400da0:	2300      	movs	r3, #0
  400da2:	e66e      	b.n	400a82 <udc_process_setup+0x3a>
	if (!udc_update_iface_desc(iface_num, 0)) {
  400da4:	2100      	movs	r1, #0
  400da6:	4620      	mov	r0, r4
  400da8:	4b2a      	ldr	r3, [pc, #168]	; (400e54 <udc_process_setup+0x40c>)
  400daa:	4798      	blx	r3
  400dac:	2800      	cmp	r0, #0
  400dae:	f43f ae60 	beq.w	400a72 <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400db2:	686b      	ldr	r3, [r5, #4]
  400db4:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400db8:	68eb      	ldr	r3, [r5, #12]
  400dba:	4798      	blx	r3
  400dbc:	4601      	mov	r1, r0
  400dbe:	4620      	mov	r0, r4
  400dc0:	4b24      	ldr	r3, [pc, #144]	; (400e54 <udc_process_setup+0x40c>)
  400dc2:	4798      	blx	r3
  400dc4:	2800      	cmp	r0, #0
  400dc6:	f43f ae54 	beq.w	400a72 <udc_process_setup+0x2a>
	return udi_api->setup();
  400dca:	68ab      	ldr	r3, [r5, #8]
  400dcc:	4798      	blx	r3
		if (udc_req_iface()) {
  400dce:	4603      	mov	r3, r0
  400dd0:	2800      	cmp	r0, #0
  400dd2:	f47f ae56 	bne.w	400a82 <udc_process_setup+0x3a>
  400dd6:	e64c      	b.n	400a72 <udc_process_setup+0x2a>
	if (0 == udc_num_configuration) {
  400dd8:	4b17      	ldr	r3, [pc, #92]	; (400e38 <udc_process_setup+0x3f0>)
  400dda:	781b      	ldrb	r3, [r3, #0]
  400ddc:	b30b      	cbz	r3, 400e22 <udc_process_setup+0x3da>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400dde:	4b1c      	ldr	r3, [pc, #112]	; (400e50 <udc_process_setup+0x408>)
  400de0:	681a      	ldr	r2, [r3, #0]
  400de2:	6813      	ldr	r3, [r2, #0]
  400de4:	791b      	ldrb	r3, [r3, #4]
  400de6:	b1f3      	cbz	r3, 400e26 <udc_process_setup+0x3de>
  400de8:	2400      	movs	r4, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400dea:	4e1a      	ldr	r6, [pc, #104]	; (400e54 <udc_process_setup+0x40c>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400dec:	4f18      	ldr	r7, [pc, #96]	; (400e50 <udc_process_setup+0x408>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
  400dee:	6853      	ldr	r3, [r2, #4]
  400df0:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400df4:	68eb      	ldr	r3, [r5, #12]
  400df6:	4798      	blx	r3
  400df8:	4601      	mov	r1, r0
  400dfa:	4620      	mov	r0, r4
  400dfc:	47b0      	blx	r6
  400dfe:	4603      	mov	r3, r0
  400e00:	2800      	cmp	r0, #0
  400e02:	f43f ae3e 	beq.w	400a82 <udc_process_setup+0x3a>
		if (udi_api->setup()) {
  400e06:	68ab      	ldr	r3, [r5, #8]
  400e08:	4798      	blx	r3
  400e0a:	4603      	mov	r3, r0
  400e0c:	2800      	cmp	r0, #0
  400e0e:	f47f ae38 	bne.w	400a82 <udc_process_setup+0x3a>
			iface_num++) {
  400e12:	3401      	adds	r4, #1
  400e14:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400e16:	683a      	ldr	r2, [r7, #0]
  400e18:	6811      	ldr	r1, [r2, #0]
  400e1a:	7909      	ldrb	r1, [r1, #4]
  400e1c:	42a1      	cmp	r1, r4
  400e1e:	d8e6      	bhi.n	400dee <udc_process_setup+0x3a6>
  400e20:	e62f      	b.n	400a82 <udc_process_setup+0x3a>
		return false; // The device is not is configured state yet
  400e22:	2300      	movs	r3, #0
  400e24:	e62d      	b.n	400a82 <udc_process_setup+0x3a>
	return false;
  400e26:	2300      	movs	r3, #0
  400e28:	e62b      	b.n	400a82 <udc_process_setup+0x3a>
			return false; // Error from USB host
  400e2a:	2300      	movs	r3, #0
  400e2c:	e629      	b.n	400a82 <udc_process_setup+0x3a>
	return false;
  400e2e:	2300      	movs	r3, #0
  400e30:	e627      	b.n	400a82 <udc_process_setup+0x3a>
  400e32:	bf00      	nop
  400e34:	20000cd4 	.word	0x20000cd4
  400e38:	20000bc0 	.word	0x20000bc0
  400e3c:	004008ed 	.word	0x004008ed
  400e40:	00400959 	.word	0x00400959
  400e44:	0040225d 	.word	0x0040225d
  400e48:	004024b1 	.word	0x004024b1
  400e4c:	0040217d 	.word	0x0040217d
  400e50:	20000bc4 	.word	0x20000bc4
  400e54:	00400879 	.word	0x00400879

00400e58 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
  400e58:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
  400e5a:	2401      	movs	r4, #1
  400e5c:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
  400e5e:	2400      	movs	r4, #0
  400e60:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
  400e62:	f240 2502 	movw	r5, #514	; 0x202
  400e66:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
  400e6a:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
  400e6e:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
  400e72:	6845      	ldr	r5, [r0, #4]
	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
  400e74:	0052      	lsls	r2, r2, #1
  400e76:	fbb1 f2f2 	udiv	r2, r1, r2
  400e7a:	3a01      	subs	r2, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
  400e7c:	0212      	lsls	r2, r2, #8
  400e7e:	b292      	uxth	r2, r2
  400e80:	432b      	orrs	r3, r5
  400e82:	431a      	orrs	r2, r3
  400e84:	6042      	str	r2, [r0, #4]
	return 0;
}
  400e86:	4620      	mov	r0, r4
  400e88:	bc30      	pop	{r4, r5}
  400e8a:	4770      	bx	lr

00400e8c <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
  400e8c:	6843      	ldr	r3, [r0, #4]
  400e8e:	01d2      	lsls	r2, r2, #7
  400e90:	b2d2      	uxtb	r2, r2
  400e92:	4319      	orrs	r1, r3
  400e94:	430a      	orrs	r2, r1
  400e96:	6042      	str	r2, [r0, #4]
  400e98:	4770      	bx	lr

00400e9a <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
  400e9a:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
  400e9c:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
  400e9e:	0609      	lsls	r1, r1, #24
  400ea0:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
  400ea4:	4321      	orrs	r1, r4
  400ea6:	430a      	orrs	r2, r1
  400ea8:	0719      	lsls	r1, r3, #28
  400eaa:	f001 5140 	and.w	r1, r1, #805306368	; 0x30000000
  400eae:	4311      	orrs	r1, r2
  400eb0:	6041      	str	r1, [r0, #4]
}
  400eb2:	bc10      	pop	{r4}
  400eb4:	4770      	bx	lr

00400eb6 <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
  400eb6:	2301      	movs	r3, #1
  400eb8:	fa03 f101 	lsl.w	r1, r3, r1
  400ebc:	6101      	str	r1, [r0, #16]
  400ebe:	4770      	bx	lr

00400ec0 <adc_get_status>:
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
	return p_adc->ADC_ISR;
  400ec0:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
  400ec2:	4770      	bx	lr

00400ec4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400ec4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400ec8:	4681      	mov	r9, r0
  400eca:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400ecc:	4b12      	ldr	r3, [pc, #72]	; (400f18 <pio_handler_process+0x54>)
  400ece:	4798      	blx	r3
  400ed0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400ed2:	4648      	mov	r0, r9
  400ed4:	4b11      	ldr	r3, [pc, #68]	; (400f1c <pio_handler_process+0x58>)
  400ed6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400ed8:	4005      	ands	r5, r0
  400eda:	d013      	beq.n	400f04 <pio_handler_process+0x40>
  400edc:	4c10      	ldr	r4, [pc, #64]	; (400f20 <pio_handler_process+0x5c>)
  400ede:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400ee2:	e003      	b.n	400eec <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400ee4:	42b4      	cmp	r4, r6
  400ee6:	d00d      	beq.n	400f04 <pio_handler_process+0x40>
  400ee8:	3410      	adds	r4, #16
		while (status != 0) {
  400eea:	b15d      	cbz	r5, 400f04 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400eec:	6820      	ldr	r0, [r4, #0]
  400eee:	42b8      	cmp	r0, r7
  400ef0:	d1f8      	bne.n	400ee4 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400ef2:	6861      	ldr	r1, [r4, #4]
  400ef4:	4229      	tst	r1, r5
  400ef6:	d0f5      	beq.n	400ee4 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400ef8:	68e3      	ldr	r3, [r4, #12]
  400efa:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400efc:	6863      	ldr	r3, [r4, #4]
  400efe:	ea25 0503 	bic.w	r5, r5, r3
  400f02:	e7ef      	b.n	400ee4 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400f04:	4b07      	ldr	r3, [pc, #28]	; (400f24 <pio_handler_process+0x60>)
  400f06:	681b      	ldr	r3, [r3, #0]
  400f08:	b123      	cbz	r3, 400f14 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400f0a:	4b07      	ldr	r3, [pc, #28]	; (400f28 <pio_handler_process+0x64>)
  400f0c:	681b      	ldr	r3, [r3, #0]
  400f0e:	b10b      	cbz	r3, 400f14 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400f10:	4648      	mov	r0, r9
  400f12:	4798      	blx	r3
  400f14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400f18:	0040277f 	.word	0x0040277f
  400f1c:	00402783 	.word	0x00402783
  400f20:	20000bcc 	.word	0x20000bcc
  400f24:	20000cec 	.word	0x20000cec
  400f28:	20000c3c 	.word	0x20000c3c

00400f2c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400f2c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400f2e:	210b      	movs	r1, #11
  400f30:	4801      	ldr	r0, [pc, #4]	; (400f38 <PIOA_Handler+0xc>)
  400f32:	4b02      	ldr	r3, [pc, #8]	; (400f3c <PIOA_Handler+0x10>)
  400f34:	4798      	blx	r3
  400f36:	bd08      	pop	{r3, pc}
  400f38:	400e0e00 	.word	0x400e0e00
  400f3c:	00400ec5 	.word	0x00400ec5

00400f40 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400f40:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400f42:	210c      	movs	r1, #12
  400f44:	4801      	ldr	r0, [pc, #4]	; (400f4c <PIOB_Handler+0xc>)
  400f46:	4b02      	ldr	r3, [pc, #8]	; (400f50 <PIOB_Handler+0x10>)
  400f48:	4798      	blx	r3
  400f4a:	bd08      	pop	{r3, pc}
  400f4c:	400e1000 	.word	0x400e1000
  400f50:	00400ec5 	.word	0x00400ec5

00400f54 <udd_sleep_mode>:
/*! \brief Authorize or not the CPU powerdown mode
 *
 * \param b_enable   true to authorize idle mode
 */
static void udd_sleep_mode(bool b_idle)
{
  400f54:	b082      	sub	sp, #8
	if (!b_idle && udd_b_idle) {
  400f56:	4601      	mov	r1, r0
  400f58:	bb28      	cbnz	r0, 400fa6 <udd_sleep_mode+0x52>
  400f5a:	4b24      	ldr	r3, [pc, #144]	; (400fec <udd_sleep_mode+0x98>)
  400f5c:	781b      	ldrb	r3, [r3, #0]
  400f5e:	b91b      	cbnz	r3, 400f68 <udd_sleep_mode+0x14>
		sleepmgr_unlock_mode(UDP_SLEEP_MODE_USB_IDLE);
	}
	if (b_idle && !udd_b_idle) {
		sleepmgr_lock_mode(UDP_SLEEP_MODE_USB_IDLE);
	}
	udd_b_idle = b_idle;
  400f60:	4b22      	ldr	r3, [pc, #136]	; (400fec <udd_sleep_mode+0x98>)
  400f62:	7019      	strb	r1, [r3, #0]
}
  400f64:	b002      	add	sp, #8
  400f66:	4770      	bx	lr
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
  400f68:	4b21      	ldr	r3, [pc, #132]	; (400ff0 <udd_sleep_mode+0x9c>)
  400f6a:	789b      	ldrb	r3, [r3, #2]
  400f6c:	b903      	cbnz	r3, 400f70 <udd_sleep_mode+0x1c>
  400f6e:	e7fe      	b.n	400f6e <udd_sleep_mode+0x1a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400f70:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400f74:	fab3 f383 	clz	r3, r3
  400f78:	095b      	lsrs	r3, r3, #5
  400f7a:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  400f7c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  400f7e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400f82:	2200      	movs	r2, #0
  400f84:	4b1b      	ldr	r3, [pc, #108]	; (400ff4 <udd_sleep_mode+0xa0>)
  400f86:	701a      	strb	r2, [r3, #0]
	return flags;
  400f88:	9800      	ldr	r0, [sp, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
  400f8a:	4a19      	ldr	r2, [pc, #100]	; (400ff0 <udd_sleep_mode+0x9c>)
  400f8c:	7893      	ldrb	r3, [r2, #2]
  400f8e:	3b01      	subs	r3, #1
  400f90:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
  400f92:	2800      	cmp	r0, #0
  400f94:	d0e4      	beq.n	400f60 <udd_sleep_mode+0xc>
		cpu_irq_enable();
  400f96:	2201      	movs	r2, #1
  400f98:	4b16      	ldr	r3, [pc, #88]	; (400ff4 <udd_sleep_mode+0xa0>)
  400f9a:	701a      	strb	r2, [r3, #0]
  400f9c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400fa0:	b662      	cpsie	i
  400fa2:	e7dd      	b.n	400f60 <udd_sleep_mode+0xc>
  400fa4:	e7fe      	b.n	400fa4 <udd_sleep_mode+0x50>
	if (b_idle && !udd_b_idle) {
  400fa6:	4b11      	ldr	r3, [pc, #68]	; (400fec <udd_sleep_mode+0x98>)
  400fa8:	781b      	ldrb	r3, [r3, #0]
  400faa:	2b00      	cmp	r3, #0
  400fac:	d1d8      	bne.n	400f60 <udd_sleep_mode+0xc>
	if(sleepmgr_locks[mode] >= 0xff) {
  400fae:	4b10      	ldr	r3, [pc, #64]	; (400ff0 <udd_sleep_mode+0x9c>)
  400fb0:	789b      	ldrb	r3, [r3, #2]
  400fb2:	2bff      	cmp	r3, #255	; 0xff
  400fb4:	d0f6      	beq.n	400fa4 <udd_sleep_mode+0x50>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400fb6:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400fba:	fab3 f383 	clz	r3, r3
  400fbe:	095b      	lsrs	r3, r3, #5
  400fc0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400fc2:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  400fc4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400fc8:	2200      	movs	r2, #0
  400fca:	4b0a      	ldr	r3, [pc, #40]	; (400ff4 <udd_sleep_mode+0xa0>)
  400fcc:	701a      	strb	r2, [r3, #0]
	return flags;
  400fce:	9801      	ldr	r0, [sp, #4]
	++sleepmgr_locks[mode];
  400fd0:	4a07      	ldr	r2, [pc, #28]	; (400ff0 <udd_sleep_mode+0x9c>)
  400fd2:	7893      	ldrb	r3, [r2, #2]
  400fd4:	3301      	adds	r3, #1
  400fd6:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
  400fd8:	2800      	cmp	r0, #0
  400fda:	d0c1      	beq.n	400f60 <udd_sleep_mode+0xc>
		cpu_irq_enable();
  400fdc:	2201      	movs	r2, #1
  400fde:	4b05      	ldr	r3, [pc, #20]	; (400ff4 <udd_sleep_mode+0xa0>)
  400fe0:	701a      	strb	r2, [r3, #0]
  400fe2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400fe6:	b662      	cpsie	i
  400fe8:	e7ba      	b.n	400f60 <udd_sleep_mode+0xc>
  400fea:	bf00      	nop
  400fec:	20000c41 	.word	0x20000c41
  400ff0:	20000ccc 	.word	0x20000ccc
  400ff4:	200000a0 	.word	0x200000a0

00400ff8 <udd_ctrl_init>:
	cpu_irq_restore(flags);
}

static void udd_ctrl_init(void)
{
	udd_g_ctrlreq.callback = NULL;
  400ff8:	4a03      	ldr	r2, [pc, #12]	; (401008 <udd_ctrl_init+0x10>)
  400ffa:	2300      	movs	r3, #0
  400ffc:	6113      	str	r3, [r2, #16]
	udd_g_ctrlreq.over_under_run = NULL;
  400ffe:	6153      	str	r3, [r2, #20]
	udd_g_ctrlreq.payload_size = 0;
  401000:	8193      	strh	r3, [r2, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
  401002:	4a02      	ldr	r2, [pc, #8]	; (40100c <udd_ctrl_init+0x14>)
  401004:	7013      	strb	r3, [r2, #0]
  401006:	4770      	bx	lr
  401008:	20000cd4 	.word	0x20000cd4
  40100c:	20000c46 	.word	0x20000c46

00401010 <udd_ctrl_stall_data>:
	udd_ack_bank0_received(0);
}


static void udd_ctrl_stall_data(void)
{
  401010:	b082      	sub	sp, #8
	// Stall all packets on IN & OUT control endpoint
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
  401012:	2205      	movs	r2, #5
  401014:	4b0a      	ldr	r3, [pc, #40]	; (401040 <udd_ctrl_stall_data+0x30>)
  401016:	701a      	strb	r2, [r3, #0]
	udd_enable_stall_handshake(0);
  401018:	4a0a      	ldr	r2, [pc, #40]	; (401044 <udd_ctrl_stall_data+0x34>)
  40101a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40101c:	9301      	str	r3, [sp, #4]
  40101e:	9b01      	ldr	r3, [sp, #4]
  401020:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401024:	9301      	str	r3, [sp, #4]
  401026:	9b01      	ldr	r3, [sp, #4]
  401028:	f043 0320 	orr.w	r3, r3, #32
  40102c:	9301      	str	r3, [sp, #4]
  40102e:	9b01      	ldr	r3, [sp, #4]
  401030:	6313      	str	r3, [r2, #48]	; 0x30
  401032:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401034:	f013 0f20 	tst.w	r3, #32
  401038:	d0fb      	beq.n	401032 <udd_ctrl_stall_data+0x22>
}
  40103a:	b002      	add	sp, #8
  40103c:	4770      	bx	lr
  40103e:	bf00      	nop
  401040:	20000c46 	.word	0x20000c46
  401044:	40034000 	.word	0x40034000

00401048 <udd_ctrl_send_zlp_in>:


static void udd_ctrl_send_zlp_in(void)
{
  401048:	b082      	sub	sp, #8
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
  40104a:	2203      	movs	r2, #3
  40104c:	4b0a      	ldr	r3, [pc, #40]	; (401078 <udd_ctrl_send_zlp_in+0x30>)
  40104e:	701a      	strb	r2, [r3, #0]
	// Validate and send empty IN packet on control endpoint
	// Send ZLP on IN endpoint
	udd_set_transmit_ready(0);
  401050:	4a0a      	ldr	r2, [pc, #40]	; (40107c <udd_ctrl_send_zlp_in+0x34>)
  401052:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401054:	9301      	str	r3, [sp, #4]
  401056:	9b01      	ldr	r3, [sp, #4]
  401058:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40105c:	9301      	str	r3, [sp, #4]
  40105e:	9b01      	ldr	r3, [sp, #4]
  401060:	f043 0310 	orr.w	r3, r3, #16
  401064:	9301      	str	r3, [sp, #4]
  401066:	9b01      	ldr	r3, [sp, #4]
  401068:	6313      	str	r3, [r2, #48]	; 0x30
  40106a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40106c:	f013 0f10 	tst.w	r3, #16
  401070:	d0fb      	beq.n	40106a <udd_ctrl_send_zlp_in+0x22>
}
  401072:	b002      	add	sp, #8
  401074:	4770      	bx	lr
  401076:	bf00      	nop
  401078:	20000c46 	.word	0x20000c46
  40107c:	40034000 	.word	0x40034000

00401080 <udd_ctrl_endofrequest>:
	// because the buffer of control endpoint is already free
}


static void udd_ctrl_endofrequest(void)
{
  401080:	b508      	push	{r3, lr}
	// If a callback is registered then call it
	if (udd_g_ctrlreq.callback) {
  401082:	4b02      	ldr	r3, [pc, #8]	; (40108c <udd_ctrl_endofrequest+0xc>)
  401084:	691b      	ldr	r3, [r3, #16]
  401086:	b103      	cbz	r3, 40108a <udd_ctrl_endofrequest+0xa>
		udd_g_ctrlreq.callback();
  401088:	4798      	blx	r3
  40108a:	bd08      	pop	{r3, pc}
  40108c:	20000cd4 	.word	0x20000cd4

00401090 <udd_ctrl_in_sent>:
{
  401090:	b530      	push	{r4, r5, lr}
  401092:	b087      	sub	sp, #28
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
  401094:	4b63      	ldr	r3, [pc, #396]	; (401224 <udd_ctrl_in_sent+0x194>)
  401096:	781b      	ldrb	r3, [r3, #0]
  401098:	2b03      	cmp	r3, #3
  40109a:	d029      	beq.n	4010f0 <udd_ctrl_in_sent+0x60>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
  40109c:	4b62      	ldr	r3, [pc, #392]	; (401228 <udd_ctrl_in_sent+0x198>)
  40109e:	881b      	ldrh	r3, [r3, #0]
  4010a0:	4a62      	ldr	r2, [pc, #392]	; (40122c <udd_ctrl_in_sent+0x19c>)
  4010a2:	8994      	ldrh	r4, [r2, #12]
  4010a4:	1ae4      	subs	r4, r4, r3
  4010a6:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
  4010a8:	2c00      	cmp	r4, #0
  4010aa:	d144      	bne.n	401136 <udd_ctrl_in_sent+0xa6>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
  4010ac:	4a60      	ldr	r2, [pc, #384]	; (401230 <udd_ctrl_in_sent+0x1a0>)
  4010ae:	8811      	ldrh	r1, [r2, #0]
  4010b0:	440b      	add	r3, r1
  4010b2:	b29b      	uxth	r3, r3
  4010b4:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_nb_trans)
  4010b6:	4a5d      	ldr	r2, [pc, #372]	; (40122c <udd_ctrl_in_sent+0x19c>)
  4010b8:	88d2      	ldrh	r2, [r2, #6]
  4010ba:	429a      	cmp	r2, r3
  4010bc:	d003      	beq.n	4010c6 <udd_ctrl_in_sent+0x36>
				|| b_shortpacket) {
  4010be:	4b5d      	ldr	r3, [pc, #372]	; (401234 <udd_ctrl_in_sent+0x1a4>)
  4010c0:	781b      	ldrb	r3, [r3, #0]
  4010c2:	2b00      	cmp	r3, #0
  4010c4:	d02b      	beq.n	40111e <udd_ctrl_in_sent+0x8e>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
  4010c6:	2204      	movs	r2, #4
  4010c8:	4b56      	ldr	r3, [pc, #344]	; (401224 <udd_ctrl_in_sent+0x194>)
  4010ca:	701a      	strb	r2, [r3, #0]
			udd_ack_in_sent(0);
  4010cc:	4a5a      	ldr	r2, [pc, #360]	; (401238 <udd_ctrl_in_sent+0x1a8>)
  4010ce:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010d0:	9301      	str	r3, [sp, #4]
  4010d2:	9b01      	ldr	r3, [sp, #4]
  4010d4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4010d8:	9301      	str	r3, [sp, #4]
  4010da:	9b01      	ldr	r3, [sp, #4]
  4010dc:	f023 0301 	bic.w	r3, r3, #1
  4010e0:	9301      	str	r3, [sp, #4]
  4010e2:	9b01      	ldr	r3, [sp, #4]
  4010e4:	6313      	str	r3, [r2, #48]	; 0x30
  4010e6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010e8:	f013 0f01 	tst.w	r3, #1
  4010ec:	d1fb      	bne.n	4010e6 <udd_ctrl_in_sent+0x56>
  4010ee:	e014      	b.n	40111a <udd_ctrl_in_sent+0x8a>
		udd_ack_in_sent(0);
  4010f0:	4a51      	ldr	r2, [pc, #324]	; (401238 <udd_ctrl_in_sent+0x1a8>)
  4010f2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010f4:	9300      	str	r3, [sp, #0]
  4010f6:	9b00      	ldr	r3, [sp, #0]
  4010f8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4010fc:	9300      	str	r3, [sp, #0]
  4010fe:	9b00      	ldr	r3, [sp, #0]
  401100:	f023 0301 	bic.w	r3, r3, #1
  401104:	9300      	str	r3, [sp, #0]
  401106:	9b00      	ldr	r3, [sp, #0]
  401108:	6313      	str	r3, [r2, #48]	; 0x30
  40110a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40110c:	f013 0f01 	tst.w	r3, #1
  401110:	d1fb      	bne.n	40110a <udd_ctrl_in_sent+0x7a>
		udd_ctrl_endofrequest();
  401112:	4b4a      	ldr	r3, [pc, #296]	; (40123c <udd_ctrl_in_sent+0x1ac>)
  401114:	4798      	blx	r3
		udd_ctrl_init();
  401116:	4b4a      	ldr	r3, [pc, #296]	; (401240 <udd_ctrl_in_sent+0x1b0>)
  401118:	4798      	blx	r3
}
  40111a:	b007      	add	sp, #28
  40111c:	bd30      	pop	{r4, r5, pc}
		if ((!udd_g_ctrlreq.over_under_run)
  40111e:	4b43      	ldr	r3, [pc, #268]	; (40122c <udd_ctrl_in_sent+0x19c>)
  401120:	695b      	ldr	r3, [r3, #20]
  401122:	2b00      	cmp	r3, #0
  401124:	d05d      	beq.n	4011e2 <udd_ctrl_in_sent+0x152>
				|| (!udd_g_ctrlreq.over_under_run())) {
  401126:	4798      	blx	r3
  401128:	2800      	cmp	r0, #0
  40112a:	d05a      	beq.n	4011e2 <udd_ctrl_in_sent+0x152>
			udd_ctrl_payload_nb_trans = 0;
  40112c:	2200      	movs	r2, #0
  40112e:	4b3e      	ldr	r3, [pc, #248]	; (401228 <udd_ctrl_in_sent+0x198>)
  401130:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
  401132:	4b3e      	ldr	r3, [pc, #248]	; (40122c <udd_ctrl_in_sent+0x19c>)
  401134:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
  401136:	2c3f      	cmp	r4, #63	; 0x3f
  401138:	d953      	bls.n	4011e2 <udd_ctrl_in_sent+0x152>
		b_shortpacket = false;
  40113a:	2200      	movs	r2, #0
  40113c:	4b3d      	ldr	r3, [pc, #244]	; (401234 <udd_ctrl_in_sent+0x1a4>)
  40113e:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
  401140:	2440      	movs	r4, #64	; 0x40
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  401142:	4b3a      	ldr	r3, [pc, #232]	; (40122c <udd_ctrl_in_sent+0x19c>)
  401144:	6899      	ldr	r1, [r3, #8]
  401146:	4b38      	ldr	r3, [pc, #224]	; (401228 <udd_ctrl_in_sent+0x198>)
  401148:	8818      	ldrh	r0, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40114a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40114e:	fab3 f383 	clz	r3, r3
  401152:	095b      	lsrs	r3, r3, #5
  401154:	9305      	str	r3, [sp, #20]
  __ASM volatile ("cpsid i" : : : "memory");
  401156:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401158:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40115c:	2200      	movs	r2, #0
  40115e:	4b39      	ldr	r3, [pc, #228]	; (401244 <udd_ctrl_in_sent+0x1b4>)
  401160:	701a      	strb	r2, [r3, #0]
	return flags;
  401162:	9d05      	ldr	r5, [sp, #20]
	if (Is_udd_bank0_received(0)) {
  401164:	4b34      	ldr	r3, [pc, #208]	; (401238 <udd_ctrl_in_sent+0x1a8>)
  401166:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401168:	f013 0f02 	tst.w	r3, #2
  40116c:	d13d      	bne.n	4011ea <udd_ctrl_in_sent+0x15a>
	for (i = 0; i < nb_remain; i++) {
  40116e:	b14c      	cbz	r4, 401184 <udd_ctrl_in_sent+0xf4>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  401170:	4401      	add	r1, r0
  401172:	460a      	mov	r2, r1
		udd_endpoint_fifo_write(0, *ptr_src++);
  401174:	4830      	ldr	r0, [pc, #192]	; (401238 <udd_ctrl_in_sent+0x1a8>)
  401176:	f812 3b01 	ldrb.w	r3, [r2], #1
  40117a:	6503      	str	r3, [r0, #80]	; 0x50
	for (i = 0; i < nb_remain; i++) {
  40117c:	1a53      	subs	r3, r2, r1
  40117e:	b2db      	uxtb	r3, r3
  401180:	42a3      	cmp	r3, r4
  401182:	d3f8      	bcc.n	401176 <udd_ctrl_in_sent+0xe6>
	udd_ctrl_payload_nb_trans += nb_remain;
  401184:	4b28      	ldr	r3, [pc, #160]	; (401228 <udd_ctrl_in_sent+0x198>)
  401186:	881a      	ldrh	r2, [r3, #0]
  401188:	4414      	add	r4, r2
  40118a:	801c      	strh	r4, [r3, #0]
	udd_set_transmit_ready(0);
  40118c:	4a2a      	ldr	r2, [pc, #168]	; (401238 <udd_ctrl_in_sent+0x1a8>)
  40118e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401190:	9303      	str	r3, [sp, #12]
  401192:	9b03      	ldr	r3, [sp, #12]
  401194:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401198:	9303      	str	r3, [sp, #12]
  40119a:	9b03      	ldr	r3, [sp, #12]
  40119c:	f043 0310 	orr.w	r3, r3, #16
  4011a0:	9303      	str	r3, [sp, #12]
  4011a2:	9b03      	ldr	r3, [sp, #12]
  4011a4:	6313      	str	r3, [r2, #48]	; 0x30
  4011a6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011a8:	f013 0f10 	tst.w	r3, #16
  4011ac:	d0fb      	beq.n	4011a6 <udd_ctrl_in_sent+0x116>
	udd_ack_in_sent(0);
  4011ae:	4a22      	ldr	r2, [pc, #136]	; (401238 <udd_ctrl_in_sent+0x1a8>)
  4011b0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011b2:	9304      	str	r3, [sp, #16]
  4011b4:	9b04      	ldr	r3, [sp, #16]
  4011b6:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4011ba:	9304      	str	r3, [sp, #16]
  4011bc:	9b04      	ldr	r3, [sp, #16]
  4011be:	f023 0301 	bic.w	r3, r3, #1
  4011c2:	9304      	str	r3, [sp, #16]
  4011c4:	9b04      	ldr	r3, [sp, #16]
  4011c6:	6313      	str	r3, [r2, #48]	; 0x30
  4011c8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4011ca:	f013 0f01 	tst.w	r3, #1
  4011ce:	d1fb      	bne.n	4011c8 <udd_ctrl_in_sent+0x138>
	if (cpu_irq_is_enabled_flags(flags))
  4011d0:	2d00      	cmp	r5, #0
  4011d2:	d0a2      	beq.n	40111a <udd_ctrl_in_sent+0x8a>
		cpu_irq_enable();
  4011d4:	2201      	movs	r2, #1
  4011d6:	4b1b      	ldr	r3, [pc, #108]	; (401244 <udd_ctrl_in_sent+0x1b4>)
  4011d8:	701a      	strb	r2, [r3, #0]
  4011da:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4011de:	b662      	cpsie	i
  4011e0:	e79b      	b.n	40111a <udd_ctrl_in_sent+0x8a>
		b_shortpacket = true;
  4011e2:	2201      	movs	r2, #1
  4011e4:	4b13      	ldr	r3, [pc, #76]	; (401234 <udd_ctrl_in_sent+0x1a4>)
  4011e6:	701a      	strb	r2, [r3, #0]
  4011e8:	e7ab      	b.n	401142 <udd_ctrl_in_sent+0xb2>
	if (cpu_irq_is_enabled_flags(flags))
  4011ea:	b12d      	cbz	r5, 4011f8 <udd_ctrl_in_sent+0x168>
		cpu_irq_enable();
  4011ec:	2201      	movs	r2, #1
  4011ee:	4b15      	ldr	r3, [pc, #84]	; (401244 <udd_ctrl_in_sent+0x1b4>)
  4011f0:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  4011f2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4011f6:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
  4011f8:	2204      	movs	r2, #4
  4011fa:	4b0a      	ldr	r3, [pc, #40]	; (401224 <udd_ctrl_in_sent+0x194>)
  4011fc:	701a      	strb	r2, [r3, #0]
		udd_ack_in_sent(0);
  4011fe:	4a0e      	ldr	r2, [pc, #56]	; (401238 <udd_ctrl_in_sent+0x1a8>)
  401200:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401202:	9302      	str	r3, [sp, #8]
  401204:	9b02      	ldr	r3, [sp, #8]
  401206:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40120a:	9302      	str	r3, [sp, #8]
  40120c:	9b02      	ldr	r3, [sp, #8]
  40120e:	f023 0301 	bic.w	r3, r3, #1
  401212:	9302      	str	r3, [sp, #8]
  401214:	9b02      	ldr	r3, [sp, #8]
  401216:	6313      	str	r3, [r2, #48]	; 0x30
  401218:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40121a:	f013 0f01 	tst.w	r3, #1
  40121e:	d1fb      	bne.n	401218 <udd_ctrl_in_sent+0x188>
  401220:	e77b      	b.n	40111a <udd_ctrl_in_sent+0x8a>
  401222:	bf00      	nop
  401224:	20000c46 	.word	0x20000c46
  401228:	20000c42 	.word	0x20000c42
  40122c:	20000cd4 	.word	0x20000cd4
  401230:	20000c44 	.word	0x20000c44
  401234:	20000c40 	.word	0x20000c40
  401238:	40034000 	.word	0x40034000
  40123c:	00401081 	.word	0x00401081
  401240:	00400ff9 	.word	0x00400ff9
  401244:	200000a0 	.word	0x200000a0

00401248 <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, int status,
		uint8_t ep_num)
{
  401248:	b538      	push	{r3, r4, r5, lr}
	if (ptr_job->busy == false) {
  40124a:	7c43      	ldrb	r3, [r0, #17]
  40124c:	f013 0f10 	tst.w	r3, #16
  401250:	d016      	beq.n	401280 <udd_ep_finish_job+0x38>
  401252:	460d      	mov	r5, r1
		return; // No on-going job
	}
	ptr_job->busy = false;
  401254:	7c43      	ldrb	r3, [r0, #17]
  401256:	f36f 1304 	bfc	r3, #4, #1
  40125a:	7443      	strb	r3, [r0, #17]
	if (NULL == ptr_job->call_trans) {
  40125c:	6804      	ldr	r4, [r0, #0]
  40125e:	b17c      	cbz	r4, 401280 <udd_ep_finish_job+0x38>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_type_in(ep_num)) {
  401260:	f102 030c 	add.w	r3, r2, #12
  401264:	4907      	ldr	r1, [pc, #28]	; (401284 <udd_ep_finish_job+0x3c>)
  401266:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
  40126a:	f413 6f80 	tst.w	r3, #1024	; 0x400
		ep_num |= USB_EP_DIR_IN;
  40126e:	bf18      	it	ne
  401270:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
	}
	ptr_job->call_trans((status == UDD_EP_TRANSFER_ABORT) ?
  401274:	6881      	ldr	r1, [r0, #8]
  401276:	2d01      	cmp	r5, #1
  401278:	bf14      	ite	ne
  40127a:	2000      	movne	r0, #0
  40127c:	2001      	moveq	r0, #1
  40127e:	47a0      	blx	r4
  401280:	bd38      	pop	{r3, r4, r5, pc}
  401282:	bf00      	nop
  401284:	40034000 	.word	0x40034000

00401288 <udd_ep_ack_out_received>:
		UDD_EP_TRANSFER_ABORT : UDD_EP_TRANSFER_OK, ptr_job->buf_size, ep_num);
}


static void udd_ep_ack_out_received(udd_ep_id_t ep)
{
  401288:	b430      	push	{r4, r5}
  40128a:	b082      	sub	sp, #8
	bool bank0_received, bank1_received;
	udd_ep_job_t *ptr_job = &udd_ep_job[ep - 1];
  40128c:	1e41      	subs	r1, r0, #1
  40128e:	0083      	lsls	r3, r0, #2
  401290:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  401294:	f503 3340 	add.w	r3, r3, #196608	; 0x30000

	bank0_received = Is_udd_bank0_received(ep);
  401298:	6b1a      	ldr	r2, [r3, #48]	; 0x30
	bank1_received = Is_udd_bank1_received(ep);
  40129a:	6b1c      	ldr	r4, [r3, #48]	; 0x30

	if (bank0_received && bank1_received) {
  40129c:	f012 0f02 	tst.w	r2, #2
  4012a0:	d032      	beq.n	401308 <udd_ep_ack_out_received+0x80>
  4012a2:	f014 0f40 	tst.w	r4, #64	; 0x40
  4012a6:	d108      	bne.n	4012ba <udd_ep_ack_out_received+0x32>
		// The only way is to use ptr_job->bank
	} else if (bank0_received) {
		// Must be bank0
		ptr_job->bank = 0;
  4012a8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4012ac:	4c2a      	ldr	r4, [pc, #168]	; (401358 <udd_ep_ack_out_received+0xd0>)
  4012ae:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  4012b2:	7c54      	ldrb	r4, [r2, #17]
  4012b4:	f36f 0483 	bfc	r4, #2, #2
  4012b8:	7454      	strb	r4, [r2, #17]
	} else {
		// Must be bank1
		ptr_job->bank = 1;
	}
	if (ptr_job->bank == 0) {
  4012ba:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4012be:	4c26      	ldr	r4, [pc, #152]	; (401358 <udd_ep_ack_out_received+0xd0>)
  4012c0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  4012c4:	7c52      	ldrb	r2, [r2, #17]
  4012c6:	f012 0f0c 	tst.w	r2, #12
  4012ca:	d128      	bne.n	40131e <udd_ep_ack_out_received+0x96>
		udd_ack_bank0_received(ep);
  4012cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4012ce:	9200      	str	r2, [sp, #0]
  4012d0:	9a00      	ldr	r2, [sp, #0]
  4012d2:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4012d6:	9200      	str	r2, [sp, #0]
  4012d8:	9a00      	ldr	r2, [sp, #0]
  4012da:	f022 0202 	bic.w	r2, r2, #2
  4012de:	9200      	str	r2, [sp, #0]
  4012e0:	9a00      	ldr	r2, [sp, #0]
  4012e2:	631a      	str	r2, [r3, #48]	; 0x30
  4012e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4012e6:	f012 0f02 	tst.w	r2, #2
  4012ea:	d1fb      	bne.n	4012e4 <udd_ep_ack_out_received+0x5c>
		if (udd_get_endpoint_bank_max_nbr(ep) > 1) {
  4012ec:	b380      	cbz	r0, 401350 <udd_ep_ack_out_received+0xc8>
  4012ee:	2803      	cmp	r0, #3
  4012f0:	d02e      	beq.n	401350 <udd_ep_ack_out_received+0xc8>
			ptr_job->bank = 1;
  4012f2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4012f6:	4b18      	ldr	r3, [pc, #96]	; (401358 <udd_ep_ack_out_received+0xd0>)
  4012f8:	eb03 0381 	add.w	r3, r3, r1, lsl #2
  4012fc:	7c5a      	ldrb	r2, [r3, #17]
  4012fe:	2101      	movs	r1, #1
  401300:	f361 0283 	bfi	r2, r1, #2, #2
  401304:	745a      	strb	r2, [r3, #17]
  401306:	e023      	b.n	401350 <udd_ep_ack_out_received+0xc8>
		ptr_job->bank = 1;
  401308:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  40130c:	4c12      	ldr	r4, [pc, #72]	; (401358 <udd_ep_ack_out_received+0xd0>)
  40130e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  401312:	7c54      	ldrb	r4, [r2, #17]
  401314:	2501      	movs	r5, #1
  401316:	f365 0483 	bfi	r4, r5, #2, #2
  40131a:	7454      	strb	r4, [r2, #17]
  40131c:	e7cd      	b.n	4012ba <udd_ep_ack_out_received+0x32>
		}
	} else {
		udd_ack_bank1_received(ep);
  40131e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401320:	9201      	str	r2, [sp, #4]
  401322:	9a01      	ldr	r2, [sp, #4]
  401324:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  401328:	9201      	str	r2, [sp, #4]
  40132a:	9a01      	ldr	r2, [sp, #4]
  40132c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
  401330:	9201      	str	r2, [sp, #4]
  401332:	9a01      	ldr	r2, [sp, #4]
  401334:	631a      	str	r2, [r3, #48]	; 0x30
  401336:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401338:	f012 0f40 	tst.w	r2, #64	; 0x40
  40133c:	d1fb      	bne.n	401336 <udd_ep_ack_out_received+0xae>
		ptr_job->bank = 0;
  40133e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  401342:	4b05      	ldr	r3, [pc, #20]	; (401358 <udd_ep_ack_out_received+0xd0>)
  401344:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  401348:	7c4b      	ldrb	r3, [r1, #17]
  40134a:	f36f 0383 	bfc	r3, #2, #2
  40134e:	744b      	strb	r3, [r1, #17]
	}
}
  401350:	b002      	add	sp, #8
  401352:	bc30      	pop	{r4, r5}
  401354:	4770      	bx	lr
  401356:	bf00      	nop
  401358:	20000c48 	.word	0x20000c48

0040135c <udd_ep_in_sent>:
	return is_short_pkt;
}


static bool udd_ep_in_sent(udd_ep_id_t ep, bool b_tx)
{
  40135c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401360:	b083      	sub	sp, #12
  401362:	4688      	mov	r8, r1
	bool b_shortpacket;
	udd_ep_job_t *ptr_job = &udd_ep_job[ep - 1];
  401364:	4681      	mov	r9, r0
  401366:	1e46      	subs	r6, r0, #1

	// All banks are full
	if (ptr_job->bank >= udd_get_endpoint_bank_max_nbr(ep)) {
  401368:	eb06 0286 	add.w	r2, r6, r6, lsl #2
  40136c:	4b66      	ldr	r3, [pc, #408]	; (401508 <udd_ep_in_sent+0x1ac>)
  40136e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401372:	f893 c011 	ldrb.w	ip, [r3, #17]
  401376:	f3cc 0c81 	ubfx	ip, ip, #2, #2
  40137a:	2800      	cmp	r0, #0
  40137c:	f000 80b7 	beq.w	4014ee <udd_ep_in_sent+0x192>
  401380:	2803      	cmp	r0, #3
  401382:	bf0c      	ite	eq
  401384:	2301      	moveq	r3, #1
  401386:	2302      	movne	r3, #2
  401388:	4563      	cmp	r3, ip
  40138a:	f340 80b2 	ble.w	4014f2 <udd_ep_in_sent+0x196>
		return true; // Data pending
	}

	// No more data in buffer
	if (ptr_job->buf_cnt >= ptr_job->buf_size && !ptr_job->b_shortpacket) {
  40138e:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  401392:	4a5d      	ldr	r2, [pc, #372]	; (401508 <udd_ep_in_sent+0x1ac>)
  401394:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  401398:	68da      	ldr	r2, [r3, #12]
  40139a:	689b      	ldr	r3, [r3, #8]
  40139c:	429a      	cmp	r2, r3
  40139e:	d309      	bcc.n	4013b4 <udd_ep_in_sent+0x58>
  4013a0:	eb06 0186 	add.w	r1, r6, r6, lsl #2
  4013a4:	4c58      	ldr	r4, [pc, #352]	; (401508 <udd_ep_in_sent+0x1ac>)
  4013a6:	eb04 0181 	add.w	r1, r4, r1, lsl #2
  4013aa:	7c49      	ldrb	r1, [r1, #17]
  4013ac:	f011 0f40 	tst.w	r1, #64	; 0x40
  4013b0:	f000 80a3 	beq.w	4014fa <udd_ep_in_sent+0x19e>
	uint8_t *ptr_src = &ptr_job->buf[ptr_job->buf_cnt];
  4013b4:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  4013b8:	4953      	ldr	r1, [pc, #332]	; (401508 <udd_ep_in_sent+0x1ac>)
  4013ba:	eb01 0585 	add.w	r5, r1, r5, lsl #2
  4013be:	686c      	ldr	r4, [r5, #4]
  4013c0:	4414      	add	r4, r2
	uint32_t nb_remain = ptr_job->buf_size - ptr_job->buf_cnt;
  4013c2:	1a99      	subs	r1, r3, r2
	uint32_t pkt_size = ptr_job->size;
  4013c4:	8a2b      	ldrh	r3, [r5, #16]
  4013c6:	f3c3 0709 	ubfx	r7, r3, #0, #10
	if (nb_remain < pkt_size) {
  4013ca:	42b9      	cmp	r1, r7
		pkt_size = nb_remain;
  4013cc:	bf3a      	itte	cc
  4013ce:	460f      	movcc	r7, r1
		is_short_pkt = true;
  4013d0:	f04f 0e01 	movcc.w	lr, #1
	bool is_short_pkt = false;
  4013d4:	f04f 0e00 	movcs.w	lr, #0
	ptr_job->buf_cnt += pkt_size;
  4013d8:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4013dc:	494a      	ldr	r1, [pc, #296]	; (401508 <udd_ep_in_sent+0x1ac>)
  4013de:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  4013e2:	443a      	add	r2, r7
  4013e4:	60da      	str	r2, [r3, #12]
	for (; pkt_size >= 8; pkt_size -= 8) {
  4013e6:	2f07      	cmp	r7, #7
  4013e8:	d92b      	bls.n	401442 <udd_ep_in_sent+0xe6>
  4013ea:	f104 0308 	add.w	r3, r4, #8
  4013ee:	463d      	mov	r5, r7
  4013f0:	0082      	lsls	r2, r0, #2
  4013f2:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  4013f6:	f502 3240 	add.w	r2, r2, #196608	; 0x30000
		udd_endpoint_fifo_write(ep, *ptr_src++);
  4013fa:	f813 1c08 	ldrb.w	r1, [r3, #-8]
  4013fe:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401400:	f813 1c07 	ldrb.w	r1, [r3, #-7]
  401404:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401406:	f813 1c06 	ldrb.w	r1, [r3, #-6]
  40140a:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40140c:	f813 1c05 	ldrb.w	r1, [r3, #-5]
  401410:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401412:	f813 1c04 	ldrb.w	r1, [r3, #-4]
  401416:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401418:	f813 1c03 	ldrb.w	r1, [r3, #-3]
  40141c:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40141e:	f813 1c02 	ldrb.w	r1, [r3, #-2]
  401422:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401424:	f813 1c01 	ldrb.w	r1, [r3, #-1]
  401428:	6511      	str	r1, [r2, #80]	; 0x50
	for (; pkt_size >= 8; pkt_size -= 8) {
  40142a:	3d08      	subs	r5, #8
  40142c:	3308      	adds	r3, #8
  40142e:	2d07      	cmp	r5, #7
  401430:	d8e3      	bhi.n	4013fa <udd_ep_in_sent+0x9e>
  401432:	f1a7 0308 	sub.w	r3, r7, #8
  401436:	f023 0307 	bic.w	r3, r3, #7
  40143a:	3308      	adds	r3, #8
  40143c:	441c      	add	r4, r3
  40143e:	f007 0707 	and.w	r7, r7, #7
	for (; pkt_size; pkt_size--) {
  401442:	b14f      	cbz	r7, 401458 <udd_ep_in_sent+0xfc>
  401444:	19e3      	adds	r3, r4, r7
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401446:	4931      	ldr	r1, [pc, #196]	; (40150c <udd_ep_in_sent+0x1b0>)
  401448:	f109 0914 	add.w	r9, r9, #20
  40144c:	f814 2b01 	ldrb.w	r2, [r4], #1
  401450:	f841 2029 	str.w	r2, [r1, r9, lsl #2]
	for (; pkt_size; pkt_size--) {
  401454:	429c      	cmp	r4, r3
  401456:	d1f9      	bne.n	40144c <udd_ep_in_sent+0xf0>
	ptr_job->bank++;
  401458:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  40145c:	4a2a      	ldr	r2, [pc, #168]	; (401508 <udd_ep_in_sent+0x1ac>)
  40145e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  401462:	f10c 0c01 	add.w	ip, ip, #1
  401466:	7c5a      	ldrb	r2, [r3, #17]
  401468:	f36c 0283 	bfi	r2, ip, #2, #2
  40146c:	745a      	strb	r2, [r3, #17]

	// Fill FIFO
	b_shortpacket = udd_ep_write_fifo(ep);

	// Data is ready to send
	if (b_tx) {
  40146e:	f1b8 0f00 	cmp.w	r8, #0
  401472:	d014      	beq.n	40149e <udd_ep_in_sent+0x142>
  401474:	0080      	lsls	r0, r0, #2
  401476:	f100 2040 	add.w	r0, r0, #1073758208	; 0x40004000
  40147a:	f500 3040 	add.w	r0, r0, #196608	; 0x30000
		udd_set_transmit_ready(ep);
  40147e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401480:	9301      	str	r3, [sp, #4]
  401482:	9b01      	ldr	r3, [sp, #4]
  401484:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401488:	9301      	str	r3, [sp, #4]
  40148a:	9b01      	ldr	r3, [sp, #4]
  40148c:	f043 0310 	orr.w	r3, r3, #16
  401490:	9301      	str	r3, [sp, #4]
  401492:	9b01      	ldr	r3, [sp, #4]
  401494:	6303      	str	r3, [r0, #48]	; 0x30
  401496:	6b03      	ldr	r3, [r0, #48]	; 0x30
  401498:	f013 0f10 	tst.w	r3, #16
  40149c:	d0fb      	beq.n	401496 <udd_ep_in_sent+0x13a>
	}
	// Short PKT? no need to send it again.
	if (b_shortpacket) {
  40149e:	f1be 0f00 	cmp.w	lr, #0
  4014a2:	d008      	beq.n	4014b6 <udd_ep_in_sent+0x15a>
		ptr_job->b_shortpacket = false;
  4014a4:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4014a8:	4a17      	ldr	r2, [pc, #92]	; (401508 <udd_ep_in_sent+0x1ac>)
  4014aa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4014ae:	7c5a      	ldrb	r2, [r3, #17]
  4014b0:	f36f 1286 	bfc	r2, #6, #1
  4014b4:	745a      	strb	r2, [r3, #17]
	}
	// All transfer done, including ZLP, Finish Job
	if ((ptr_job->buf_cnt >= ptr_job->buf_size)
  4014b6:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4014ba:	4a13      	ldr	r2, [pc, #76]	; (401508 <udd_ep_in_sent+0x1ac>)
  4014bc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4014c0:	68da      	ldr	r2, [r3, #12]
  4014c2:	689b      	ldr	r3, [r3, #8]
  4014c4:	429a      	cmp	r2, r3
  4014c6:	d31a      	bcc.n	4014fe <udd_ep_in_sent+0x1a2>
			&& (!ptr_job->b_shortpacket)) {
  4014c8:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4014cc:	4a0e      	ldr	r2, [pc, #56]	; (401508 <udd_ep_in_sent+0x1ac>)
  4014ce:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4014d2:	7c5b      	ldrb	r3, [r3, #17]
  4014d4:	f013 0f40 	tst.w	r3, #64	; 0x40
  4014d8:	d113      	bne.n	401502 <udd_ep_in_sent+0x1a6>
		ptr_job->b_buf_end = true;
  4014da:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4014de:	eb02 0686 	add.w	r6, r2, r6, lsl #2
  4014e2:	7c73      	ldrb	r3, [r6, #17]
  4014e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4014e8:	7473      	strb	r3, [r6, #17]
		return false;
  4014ea:	2000      	movs	r0, #0
  4014ec:	e002      	b.n	4014f4 <udd_ep_in_sent+0x198>
	if (ptr_job->bank >= udd_get_endpoint_bank_max_nbr(ep)) {
  4014ee:	2301      	movs	r3, #1
  4014f0:	e74a      	b.n	401388 <udd_ep_in_sent+0x2c>
		return true; // Data pending
  4014f2:	2001      	movs	r0, #1
	}
	return true; // Pending
}
  4014f4:	b003      	add	sp, #12
  4014f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		return false;
  4014fa:	2000      	movs	r0, #0
  4014fc:	e7fa      	b.n	4014f4 <udd_ep_in_sent+0x198>
	return true; // Pending
  4014fe:	2001      	movs	r0, #1
  401500:	e7f8      	b.n	4014f4 <udd_ep_in_sent+0x198>
  401502:	2001      	movs	r0, #1
  401504:	e7f6      	b.n	4014f4 <udd_ep_in_sent+0x198>
  401506:	bf00      	nop
  401508:	20000c48 	.word	0x20000c48
  40150c:	40034000 	.word	0x40034000

00401510 <UDP_Handler>:
{
  401510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401514:	b09b      	sub	sp, #108	; 0x6c
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
  401516:	4b86      	ldr	r3, [pc, #536]	; (401730 <UDP_Handler+0x220>)
  401518:	4798      	blx	r3
  40151a:	b920      	cbnz	r0, 401526 <UDP_Handler+0x16>
  40151c:	4b85      	ldr	r3, [pc, #532]	; (401734 <UDP_Handler+0x224>)
  40151e:	69db      	ldr	r3, [r3, #28]
  401520:	f413 7f80 	tst.w	r3, #256	; 0x100
  401524:	d03b      	beq.n	40159e <UDP_Handler+0x8e>
	udd_enable_periph_ck();
  401526:	2022      	movs	r0, #34	; 0x22
  401528:	4b83      	ldr	r3, [pc, #524]	; (401738 <UDP_Handler+0x228>)
  40152a:	4798      	blx	r3
	if (Is_udd_sof_interrupt_enabled() && Is_udd_sof()) {
  40152c:	4b81      	ldr	r3, [pc, #516]	; (401734 <UDP_Handler+0x224>)
  40152e:	699b      	ldr	r3, [r3, #24]
  401530:	f413 6f00 	tst.w	r3, #2048	; 0x800
  401534:	d004      	beq.n	401540 <UDP_Handler+0x30>
  401536:	4b7f      	ldr	r3, [pc, #508]	; (401734 <UDP_Handler+0x224>)
  401538:	69db      	ldr	r3, [r3, #28]
  40153a:	f413 6f00 	tst.w	r3, #2048	; 0x800
  40153e:	d137      	bne.n	4015b0 <UDP_Handler+0xa0>
	if (!Is_udd_endpoint_interrupt(0))
  401540:	4b7c      	ldr	r3, [pc, #496]	; (401734 <UDP_Handler+0x224>)
  401542:	69db      	ldr	r3, [r3, #28]
  401544:	f013 0f01 	tst.w	r3, #1
  401548:	f000 81b6 	beq.w	4018b8 <UDP_Handler+0x3a8>
	if (Is_udd_setup_received(0)) {
  40154c:	4b79      	ldr	r3, [pc, #484]	; (401734 <UDP_Handler+0x224>)
  40154e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401550:	f013 0f04 	tst.w	r3, #4
  401554:	d133      	bne.n	4015be <UDP_Handler+0xae>
	if (Is_udd_in_sent(0)) {
  401556:	4b77      	ldr	r3, [pc, #476]	; (401734 <UDP_Handler+0x224>)
  401558:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40155a:	f013 0f01 	tst.w	r3, #1
  40155e:	f040 80c3 	bne.w	4016e8 <UDP_Handler+0x1d8>
	if (Is_udd_bank0_received(0)) {
  401562:	4b74      	ldr	r3, [pc, #464]	; (401734 <UDP_Handler+0x224>)
  401564:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401566:	f013 0f02 	tst.w	r3, #2
  40156a:	f040 80c0 	bne.w	4016ee <UDP_Handler+0x1de>
	if (Is_udd_stall(0)) {
  40156e:	4b71      	ldr	r3, [pc, #452]	; (401734 <UDP_Handler+0x224>)
  401570:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401572:	f013 0f08 	tst.w	r3, #8
  401576:	f000 819f 	beq.w	4018b8 <UDP_Handler+0x3a8>
		udd_ack_stall(0);
  40157a:	4a6e      	ldr	r2, [pc, #440]	; (401734 <UDP_Handler+0x224>)
  40157c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40157e:	9300      	str	r3, [sp, #0]
  401580:	9b00      	ldr	r3, [sp, #0]
  401582:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401586:	9300      	str	r3, [sp, #0]
  401588:	9b00      	ldr	r3, [sp, #0]
  40158a:	f023 0308 	bic.w	r3, r3, #8
  40158e:	9300      	str	r3, [sp, #0]
  401590:	9b00      	ldr	r3, [sp, #0]
  401592:	6313      	str	r3, [r2, #48]	; 0x30
  401594:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401596:	f013 0f08 	tst.w	r3, #8
  40159a:	d1fb      	bne.n	401594 <UDP_Handler+0x84>
  40159c:	e005      	b.n	4015aa <UDP_Handler+0x9a>
  __ASM volatile ("cpsid i" : : : "memory");
  40159e:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4015a0:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
  4015a4:	2200      	movs	r2, #0
  4015a6:	4b65      	ldr	r3, [pc, #404]	; (40173c <UDP_Handler+0x22c>)
  4015a8:	701a      	strb	r2, [r3, #0]
}
  4015aa:	b01b      	add	sp, #108	; 0x6c
  4015ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		udd_ack_sof();
  4015b0:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4015b4:	4b5f      	ldr	r3, [pc, #380]	; (401734 <UDP_Handler+0x224>)
  4015b6:	621a      	str	r2, [r3, #32]
		udc_sof_notify();
  4015b8:	4b61      	ldr	r3, [pc, #388]	; (401740 <UDP_Handler+0x230>)
  4015ba:	4798      	blx	r3
		goto udd_interrupt_sof_end;
  4015bc:	e7f5      	b.n	4015aa <UDP_Handler+0x9a>
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
  4015be:	4b61      	ldr	r3, [pc, #388]	; (401744 <UDP_Handler+0x234>)
  4015c0:	781b      	ldrb	r3, [r3, #0]
  4015c2:	b9cb      	cbnz	r3, 4015f8 <UDP_Handler+0xe8>
	if (8 != udd_byte_count(0)) {
  4015c4:	4b5b      	ldr	r3, [pc, #364]	; (401734 <UDP_Handler+0x224>)
  4015c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4015c8:	f3c3 430a 	ubfx	r3, r3, #16, #11
  4015cc:	2b08      	cmp	r3, #8
  4015ce:	d018      	beq.n	401602 <UDP_Handler+0xf2>
		udd_ack_setup_received(0);
  4015d0:	4a58      	ldr	r2, [pc, #352]	; (401734 <UDP_Handler+0x224>)
  4015d2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015d4:	9301      	str	r3, [sp, #4]
  4015d6:	9b01      	ldr	r3, [sp, #4]
  4015d8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4015dc:	9301      	str	r3, [sp, #4]
  4015de:	9b01      	ldr	r3, [sp, #4]
  4015e0:	f023 0304 	bic.w	r3, r3, #4
  4015e4:	9301      	str	r3, [sp, #4]
  4015e6:	9b01      	ldr	r3, [sp, #4]
  4015e8:	6313      	str	r3, [r2, #48]	; 0x30
  4015ea:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015ec:	f013 0f04 	tst.w	r3, #4
  4015f0:	d1fb      	bne.n	4015ea <UDP_Handler+0xda>
		udd_ctrl_stall_data();
  4015f2:	4b55      	ldr	r3, [pc, #340]	; (401748 <UDP_Handler+0x238>)
  4015f4:	4798      	blx	r3
  4015f6:	e7d8      	b.n	4015aa <UDP_Handler+0x9a>
		udd_ctrl_endofrequest();
  4015f8:	4b54      	ldr	r3, [pc, #336]	; (40174c <UDP_Handler+0x23c>)
  4015fa:	4798      	blx	r3
		udd_ctrl_init();
  4015fc:	4b54      	ldr	r3, [pc, #336]	; (401750 <UDP_Handler+0x240>)
  4015fe:	4798      	blx	r3
  401600:	e7e0      	b.n	4015c4 <UDP_Handler+0xb4>
  401602:	4b54      	ldr	r3, [pc, #336]	; (401754 <UDP_Handler+0x244>)
  401604:	f103 0008 	add.w	r0, r3, #8
			udd_endpoint_fifo_read(0);
  401608:	494a      	ldr	r1, [pc, #296]	; (401734 <UDP_Handler+0x224>)
  40160a:	6d0a      	ldr	r2, [r1, #80]	; 0x50
		((uint8_t *) & udd_g_ctrlreq.req)[i] =
  40160c:	f803 2f01 	strb.w	r2, [r3, #1]!
	for (i = 0; i < 8; i++) {
  401610:	4283      	cmp	r3, r0
  401612:	d1fa      	bne.n	40160a <UDP_Handler+0xfa>
	if (udc_process_setup() == false) {
  401614:	4b50      	ldr	r3, [pc, #320]	; (401758 <UDP_Handler+0x248>)
  401616:	4798      	blx	r3
  401618:	b998      	cbnz	r0, 401642 <UDP_Handler+0x132>
		udd_ack_setup_received(0);
  40161a:	4a46      	ldr	r2, [pc, #280]	; (401734 <UDP_Handler+0x224>)
  40161c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40161e:	9302      	str	r3, [sp, #8]
  401620:	9b02      	ldr	r3, [sp, #8]
  401622:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401626:	9302      	str	r3, [sp, #8]
  401628:	9b02      	ldr	r3, [sp, #8]
  40162a:	f023 0304 	bic.w	r3, r3, #4
  40162e:	9302      	str	r3, [sp, #8]
  401630:	9b02      	ldr	r3, [sp, #8]
  401632:	6313      	str	r3, [r2, #48]	; 0x30
  401634:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401636:	f013 0f04 	tst.w	r3, #4
  40163a:	d1fb      	bne.n	401634 <UDP_Handler+0x124>
		udd_ctrl_stall_data();
  40163c:	4b42      	ldr	r3, [pc, #264]	; (401748 <UDP_Handler+0x238>)
  40163e:	4798      	blx	r3
  401640:	e7b3      	b.n	4015aa <UDP_Handler+0x9a>
	if (Udd_setup_is_in()) {
  401642:	4b46      	ldr	r3, [pc, #280]	; (40175c <UDP_Handler+0x24c>)
  401644:	f993 3000 	ldrsb.w	r3, [r3]
  401648:	2b00      	cmp	r3, #0
  40164a:	db1d      	blt.n	401688 <UDP_Handler+0x178>
		udd_ack_setup_received(0);
  40164c:	4a39      	ldr	r2, [pc, #228]	; (401734 <UDP_Handler+0x224>)
  40164e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401650:	9305      	str	r3, [sp, #20]
  401652:	9b05      	ldr	r3, [sp, #20]
  401654:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401658:	9305      	str	r3, [sp, #20]
  40165a:	9b05      	ldr	r3, [sp, #20]
  40165c:	f023 0304 	bic.w	r3, r3, #4
  401660:	9305      	str	r3, [sp, #20]
  401662:	9b05      	ldr	r3, [sp, #20]
  401664:	6313      	str	r3, [r2, #48]	; 0x30
  401666:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401668:	f013 0f04 	tst.w	r3, #4
  40166c:	d1fb      	bne.n	401666 <UDP_Handler+0x156>
		if (0 == udd_g_ctrlreq.req.wLength) {
  40166e:	4b3b      	ldr	r3, [pc, #236]	; (40175c <UDP_Handler+0x24c>)
  401670:	88db      	ldrh	r3, [r3, #6]
  401672:	2b00      	cmp	r3, #0
  401674:	d035      	beq.n	4016e2 <UDP_Handler+0x1d2>
		udd_ctrl_prev_payload_nb_trans = 0;
  401676:	2300      	movs	r3, #0
  401678:	4a39      	ldr	r2, [pc, #228]	; (401760 <UDP_Handler+0x250>)
  40167a:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_nb_trans = 0;
  40167c:	4a39      	ldr	r2, [pc, #228]	; (401764 <UDP_Handler+0x254>)
  40167e:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
  401680:	2201      	movs	r2, #1
  401682:	4b30      	ldr	r3, [pc, #192]	; (401744 <UDP_Handler+0x234>)
  401684:	701a      	strb	r2, [r3, #0]
  401686:	e790      	b.n	4015aa <UDP_Handler+0x9a>
		udd_set_endpoint_direction_in(0);
  401688:	4a2a      	ldr	r2, [pc, #168]	; (401734 <UDP_Handler+0x224>)
  40168a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40168c:	9303      	str	r3, [sp, #12]
  40168e:	9b03      	ldr	r3, [sp, #12]
  401690:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401694:	9303      	str	r3, [sp, #12]
  401696:	9b03      	ldr	r3, [sp, #12]
  401698:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40169c:	9303      	str	r3, [sp, #12]
  40169e:	9b03      	ldr	r3, [sp, #12]
  4016a0:	6313      	str	r3, [r2, #48]	; 0x30
  4016a2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016a4:	f013 0f80 	tst.w	r3, #128	; 0x80
  4016a8:	d0fb      	beq.n	4016a2 <UDP_Handler+0x192>
		udd_ack_setup_received(0);
  4016aa:	4a22      	ldr	r2, [pc, #136]	; (401734 <UDP_Handler+0x224>)
  4016ac:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016ae:	9304      	str	r3, [sp, #16]
  4016b0:	9b04      	ldr	r3, [sp, #16]
  4016b2:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4016b6:	9304      	str	r3, [sp, #16]
  4016b8:	9b04      	ldr	r3, [sp, #16]
  4016ba:	f023 0304 	bic.w	r3, r3, #4
  4016be:	9304      	str	r3, [sp, #16]
  4016c0:	9b04      	ldr	r3, [sp, #16]
  4016c2:	6313      	str	r3, [r2, #48]	; 0x30
  4016c4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016c6:	f013 0f04 	tst.w	r3, #4
  4016ca:	d1fb      	bne.n	4016c4 <UDP_Handler+0x1b4>
		udd_ctrl_prev_payload_nb_trans = 0;
  4016cc:	2300      	movs	r3, #0
  4016ce:	4a24      	ldr	r2, [pc, #144]	; (401760 <UDP_Handler+0x250>)
  4016d0:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_nb_trans = 0;
  4016d2:	4a24      	ldr	r2, [pc, #144]	; (401764 <UDP_Handler+0x254>)
  4016d4:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
  4016d6:	2202      	movs	r2, #2
  4016d8:	4b1a      	ldr	r3, [pc, #104]	; (401744 <UDP_Handler+0x234>)
  4016da:	701a      	strb	r2, [r3, #0]
		udd_ctrl_in_sent(); // Send first data transfer
  4016dc:	4b22      	ldr	r3, [pc, #136]	; (401768 <UDP_Handler+0x258>)
  4016de:	4798      	blx	r3
  4016e0:	e763      	b.n	4015aa <UDP_Handler+0x9a>
			udd_ctrl_send_zlp_in();
  4016e2:	4b22      	ldr	r3, [pc, #136]	; (40176c <UDP_Handler+0x25c>)
  4016e4:	4798      	blx	r3
  4016e6:	e760      	b.n	4015aa <UDP_Handler+0x9a>
		udd_ctrl_in_sent();
  4016e8:	4b1f      	ldr	r3, [pc, #124]	; (401768 <UDP_Handler+0x258>)
  4016ea:	4798      	blx	r3
  4016ec:	e75d      	b.n	4015aa <UDP_Handler+0x9a>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
  4016ee:	4b15      	ldr	r3, [pc, #84]	; (401744 <UDP_Handler+0x234>)
  4016f0:	781b      	ldrb	r3, [r3, #0]
  4016f2:	2b01      	cmp	r3, #1
  4016f4:	d03c      	beq.n	401770 <UDP_Handler+0x260>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
  4016f6:	2b02      	cmp	r3, #2
  4016f8:	d004      	beq.n	401704 <UDP_Handler+0x1f4>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
  4016fa:	2b04      	cmp	r3, #4
  4016fc:	d002      	beq.n	401704 <UDP_Handler+0x1f4>
			udd_ctrl_stall_data();
  4016fe:	4b12      	ldr	r3, [pc, #72]	; (401748 <UDP_Handler+0x238>)
  401700:	4798      	blx	r3
  401702:	e001      	b.n	401708 <UDP_Handler+0x1f8>
			udd_ctrl_endofrequest();
  401704:	4b11      	ldr	r3, [pc, #68]	; (40174c <UDP_Handler+0x23c>)
  401706:	4798      	blx	r3
		udd_ack_bank0_received(0);
  401708:	4a0a      	ldr	r2, [pc, #40]	; (401734 <UDP_Handler+0x224>)
  40170a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40170c:	9306      	str	r3, [sp, #24]
  40170e:	9b06      	ldr	r3, [sp, #24]
  401710:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401714:	9306      	str	r3, [sp, #24]
  401716:	9b06      	ldr	r3, [sp, #24]
  401718:	f023 0302 	bic.w	r3, r3, #2
  40171c:	9306      	str	r3, [sp, #24]
  40171e:	9b06      	ldr	r3, [sp, #24]
  401720:	6313      	str	r3, [r2, #48]	; 0x30
  401722:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401724:	f013 0f02 	tst.w	r3, #2
  401728:	d1fb      	bne.n	401722 <UDP_Handler+0x212>
		udd_ctrl_init();
  40172a:	4b09      	ldr	r3, [pc, #36]	; (401750 <UDP_Handler+0x240>)
  40172c:	4798      	blx	r3
  40172e:	e73c      	b.n	4015aa <UDP_Handler+0x9a>
  401730:	00402b2d 	.word	0x00402b2d
  401734:	40034000 	.word	0x40034000
  401738:	00402885 	.word	0x00402885
  40173c:	200000a0 	.word	0x200000a0
  401740:	00400a09 	.word	0x00400a09
  401744:	20000c46 	.word	0x20000c46
  401748:	00401011 	.word	0x00401011
  40174c:	00401081 	.word	0x00401081
  401750:	00400ff9 	.word	0x00400ff9
  401754:	20000cd3 	.word	0x20000cd3
  401758:	00400a49 	.word	0x00400a49
  40175c:	20000cd4 	.word	0x20000cd4
  401760:	20000c44 	.word	0x20000c44
  401764:	20000c42 	.word	0x20000c42
  401768:	00401091 	.word	0x00401091
  40176c:	00401049 	.word	0x00401049
	nb_data = udd_byte_count(0);
  401770:	4b93      	ldr	r3, [pc, #588]	; (4019c0 <UDP_Handler+0x4b0>)
  401772:	6b19      	ldr	r1, [r3, #48]	; 0x30
  401774:	f3c1 410a 	ubfx	r1, r1, #16, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_nb_trans + nb_data)) {
  401778:	4b92      	ldr	r3, [pc, #584]	; (4019c4 <UDP_Handler+0x4b4>)
  40177a:	899b      	ldrh	r3, [r3, #12]
  40177c:	4a92      	ldr	r2, [pc, #584]	; (4019c8 <UDP_Handler+0x4b8>)
  40177e:	8815      	ldrh	r5, [r2, #0]
  401780:	186a      	adds	r2, r5, r1
  401782:	4293      	cmp	r3, r2
		nb_data = udd_g_ctrlreq.payload_size -
  401784:	bfbc      	itt	lt
  401786:	1b5b      	sublt	r3, r3, r5
  401788:	b299      	uxthlt	r1, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  40178a:	4b8e      	ldr	r3, [pc, #568]	; (4019c4 <UDP_Handler+0x4b4>)
  40178c:	6898      	ldr	r0, [r3, #8]
  40178e:	4428      	add	r0, r5
	for (i = 0; i < nb_data; i++) {
  401790:	b171      	cbz	r1, 4017b0 <UDP_Handler+0x2a0>
  401792:	4602      	mov	r2, r0
		*ptr_dest++ = udd_endpoint_fifo_read(0);
  401794:	4c8a      	ldr	r4, [pc, #552]	; (4019c0 <UDP_Handler+0x4b0>)
  401796:	6d23      	ldr	r3, [r4, #80]	; 0x50
  401798:	f802 3b01 	strb.w	r3, [r2], #1
	for (i = 0; i < nb_data; i++) {
  40179c:	1a13      	subs	r3, r2, r0
  40179e:	b2db      	uxtb	r3, r3
  4017a0:	428b      	cmp	r3, r1
  4017a2:	d3f8      	bcc.n	401796 <UDP_Handler+0x286>
	udd_ctrl_payload_nb_trans += nb_data;
  4017a4:	440d      	add	r5, r1
  4017a6:	b2ad      	uxth	r5, r5
  4017a8:	4b87      	ldr	r3, [pc, #540]	; (4019c8 <UDP_Handler+0x4b8>)
  4017aa:	801d      	strh	r5, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
  4017ac:	2940      	cmp	r1, #64	; 0x40
  4017ae:	d01a      	beq.n	4017e6 <UDP_Handler+0x2d6>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_nb_trans;
  4017b0:	4b84      	ldr	r3, [pc, #528]	; (4019c4 <UDP_Handler+0x4b4>)
  4017b2:	819d      	strh	r5, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
  4017b4:	695b      	ldr	r3, [r3, #20]
  4017b6:	b113      	cbz	r3, 4017be <UDP_Handler+0x2ae>
			if (!udd_g_ctrlreq.over_under_run()) {
  4017b8:	4798      	blx	r3
  4017ba:	2800      	cmp	r0, #0
  4017bc:	d030      	beq.n	401820 <UDP_Handler+0x310>
		udd_ack_bank0_received(0);
  4017be:	4a80      	ldr	r2, [pc, #512]	; (4019c0 <UDP_Handler+0x4b0>)
  4017c0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4017c2:	9308      	str	r3, [sp, #32]
  4017c4:	9b08      	ldr	r3, [sp, #32]
  4017c6:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4017ca:	9308      	str	r3, [sp, #32]
  4017cc:	9b08      	ldr	r3, [sp, #32]
  4017ce:	f023 0302 	bic.w	r3, r3, #2
  4017d2:	9308      	str	r3, [sp, #32]
  4017d4:	9b08      	ldr	r3, [sp, #32]
  4017d6:	6313      	str	r3, [r2, #48]	; 0x30
  4017d8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4017da:	f013 0f02 	tst.w	r3, #2
  4017de:	d1fb      	bne.n	4017d8 <UDP_Handler+0x2c8>
		udd_ctrl_send_zlp_in();
  4017e0:	4b7a      	ldr	r3, [pc, #488]	; (4019cc <UDP_Handler+0x4bc>)
  4017e2:	4798      	blx	r3
  4017e4:	e6e1      	b.n	4015aa <UDP_Handler+0x9a>
			|| (udd_g_ctrlreq.req.wLength <=
  4017e6:	4b77      	ldr	r3, [pc, #476]	; (4019c4 <UDP_Handler+0x4b4>)
  4017e8:	88da      	ldrh	r2, [r3, #6]
			(udd_ctrl_prev_payload_nb_trans +
  4017ea:	4b79      	ldr	r3, [pc, #484]	; (4019d0 <UDP_Handler+0x4c0>)
  4017ec:	881b      	ldrh	r3, [r3, #0]
  4017ee:	442b      	add	r3, r5
			|| (udd_g_ctrlreq.req.wLength <=
  4017f0:	429a      	cmp	r2, r3
  4017f2:	dddd      	ble.n	4017b0 <UDP_Handler+0x2a0>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_nb_trans) {
  4017f4:	4b73      	ldr	r3, [pc, #460]	; (4019c4 <UDP_Handler+0x4b4>)
  4017f6:	899b      	ldrh	r3, [r3, #12]
  4017f8:	42ab      	cmp	r3, r5
  4017fa:	d025      	beq.n	401848 <UDP_Handler+0x338>
	udd_ack_bank0_received(0);
  4017fc:	4a70      	ldr	r2, [pc, #448]	; (4019c0 <UDP_Handler+0x4b0>)
  4017fe:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401800:	930b      	str	r3, [sp, #44]	; 0x2c
  401802:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401804:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401808:	930b      	str	r3, [sp, #44]	; 0x2c
  40180a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40180c:	f023 0302 	bic.w	r3, r3, #2
  401810:	930b      	str	r3, [sp, #44]	; 0x2c
  401812:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401814:	6313      	str	r3, [r2, #48]	; 0x30
  401816:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401818:	f013 0f02 	tst.w	r3, #2
  40181c:	d1fb      	bne.n	401816 <UDP_Handler+0x306>
  40181e:	e6c4      	b.n	4015aa <UDP_Handler+0x9a>
				udd_ctrl_stall_data();
  401820:	4b6c      	ldr	r3, [pc, #432]	; (4019d4 <UDP_Handler+0x4c4>)
  401822:	4798      	blx	r3
				udd_ack_bank0_received(0);
  401824:	4a66      	ldr	r2, [pc, #408]	; (4019c0 <UDP_Handler+0x4b0>)
  401826:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401828:	9307      	str	r3, [sp, #28]
  40182a:	9b07      	ldr	r3, [sp, #28]
  40182c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401830:	9307      	str	r3, [sp, #28]
  401832:	9b07      	ldr	r3, [sp, #28]
  401834:	f023 0302 	bic.w	r3, r3, #2
  401838:	9307      	str	r3, [sp, #28]
  40183a:	9b07      	ldr	r3, [sp, #28]
  40183c:	6313      	str	r3, [r2, #48]	; 0x30
  40183e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401840:	f013 0f02 	tst.w	r3, #2
  401844:	d1fb      	bne.n	40183e <UDP_Handler+0x32e>
  401846:	e6b0      	b.n	4015aa <UDP_Handler+0x9a>
		if (!udd_g_ctrlreq.over_under_run) {
  401848:	4b5e      	ldr	r3, [pc, #376]	; (4019c4 <UDP_Handler+0x4b4>)
  40184a:	695b      	ldr	r3, [r3, #20]
  40184c:	b153      	cbz	r3, 401864 <UDP_Handler+0x354>
		if (!udd_g_ctrlreq.over_under_run()) {
  40184e:	4798      	blx	r3
  401850:	b1e8      	cbz	r0, 40188e <UDP_Handler+0x37e>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
  401852:	495f      	ldr	r1, [pc, #380]	; (4019d0 <UDP_Handler+0x4c0>)
  401854:	4a5c      	ldr	r2, [pc, #368]	; (4019c8 <UDP_Handler+0x4b8>)
  401856:	880b      	ldrh	r3, [r1, #0]
  401858:	8810      	ldrh	r0, [r2, #0]
  40185a:	4403      	add	r3, r0
  40185c:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_nb_trans = 0;
  40185e:	2300      	movs	r3, #0
  401860:	8013      	strh	r3, [r2, #0]
  401862:	e7cb      	b.n	4017fc <UDP_Handler+0x2ec>
			udd_ctrl_stall_data();
  401864:	4b5b      	ldr	r3, [pc, #364]	; (4019d4 <UDP_Handler+0x4c4>)
  401866:	4798      	blx	r3
			udd_ack_bank0_received(0);
  401868:	4a55      	ldr	r2, [pc, #340]	; (4019c0 <UDP_Handler+0x4b0>)
  40186a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40186c:	9309      	str	r3, [sp, #36]	; 0x24
  40186e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401870:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401874:	9309      	str	r3, [sp, #36]	; 0x24
  401876:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401878:	f023 0302 	bic.w	r3, r3, #2
  40187c:	9309      	str	r3, [sp, #36]	; 0x24
  40187e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401880:	6313      	str	r3, [r2, #48]	; 0x30
  401882:	4613      	mov	r3, r2
  401884:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401886:	f012 0f02 	tst.w	r2, #2
  40188a:	d1fb      	bne.n	401884 <UDP_Handler+0x374>
  40188c:	e68d      	b.n	4015aa <UDP_Handler+0x9a>
			udd_ctrl_stall_data();
  40188e:	4b51      	ldr	r3, [pc, #324]	; (4019d4 <UDP_Handler+0x4c4>)
  401890:	4798      	blx	r3
			udd_ack_bank0_received(0);
  401892:	4a4b      	ldr	r2, [pc, #300]	; (4019c0 <UDP_Handler+0x4b0>)
  401894:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401896:	930a      	str	r3, [sp, #40]	; 0x28
  401898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40189a:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40189e:	930a      	str	r3, [sp, #40]	; 0x28
  4018a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4018a2:	f023 0302 	bic.w	r3, r3, #2
  4018a6:	930a      	str	r3, [sp, #40]	; 0x28
  4018a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4018aa:	6313      	str	r3, [r2, #48]	; 0x30
  4018ac:	4613      	mov	r3, r2
  4018ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4018b0:	f012 0f02 	tst.w	r2, #2
  4018b4:	d1fb      	bne.n	4018ae <UDP_Handler+0x39e>
  4018b6:	e678      	b.n	4015aa <UDP_Handler+0x9a>
  4018b8:	4a47      	ldr	r2, [pc, #284]	; (4019d8 <UDP_Handler+0x4c8>)
	for (i = 0; i < nb_data; i++) {
  4018ba:	2301      	movs	r3, #1
	udd_ep_job_t *ptr_job;

	// For each endpoint different of control endpoint (0)
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
		// Check RXRDY and TXEMPTY event for none DMA endpoints
		if (!Is_udd_endpoint_interrupt_enabled(ep)) {
  4018bc:	f8df e100 	ldr.w	lr, [pc, #256]	; 4019c0 <UDP_Handler+0x4b0>
  4018c0:	4618      	mov	r0, r3
  4018c2:	e17f      	b.n	401bc4 <UDP_Handler+0x6b4>
	uint32_t pkt_size = ptr_job->size;
  4018c4:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  4018c8:	4b43      	ldr	r3, [pc, #268]	; (4019d8 <UDP_Handler+0x4c8>)
  4018ca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4018ce:	f8b3 a010 	ldrh.w	sl, [r3, #16]
  4018d2:	f3ca 0a09 	ubfx	sl, sl, #0, #10
	nb_data = udd_byte_count(ep);
  4018d6:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4018d8:	f3c3 490a 	ubfx	r9, r3, #16, #11
	if (nb_data > 0) {
  4018dc:	f1b9 0f00 	cmp.w	r9, #0
  4018e0:	f000 81df 	beq.w	401ca2 <UDP_Handler+0x792>
	uint32_t nb_remain = ptr_job->buf_size - ptr_job->buf_cnt;
  4018e4:	4b3c      	ldr	r3, [pc, #240]	; (4019d8 <UDP_Handler+0x4c8>)
  4018e6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4018ea:	f8d3 e008 	ldr.w	lr, [r3, #8]
  4018ee:	68da      	ldr	r2, [r3, #12]
  4018f0:	ebae 0002 	sub.w	r0, lr, r2
	uint8_t *ptr_dst = &ptr_job->buf[ptr_job->buf_cnt];
  4018f4:	6859      	ldr	r1, [r3, #4]
		if (nb_data >= nb_remain) {
  4018f6:	4548      	cmp	r0, r9
  4018f8:	f240 81c7 	bls.w	401c8a <UDP_Handler+0x77a>
		ptr_job->buf_cnt += nb_data;
  4018fc:	eb07 0087 	add.w	r0, r7, r7, lsl #2
  401900:	4b35      	ldr	r3, [pc, #212]	; (4019d8 <UDP_Handler+0x4c8>)
  401902:	eb03 0380 	add.w	r3, r3, r0, lsl #2
  401906:	eb02 0009 	add.w	r0, r2, r9
  40190a:	60d8      	str	r0, [r3, #12]
	nb_data = udd_byte_count(ep);
  40190c:	4648      	mov	r0, r9
	bool b_full = false, b_short;
  40190e:	f04f 0b00 	mov.w	fp, #0
	uint8_t *ptr_dst = &ptr_job->buf[ptr_job->buf_cnt];
  401912:	4411      	add	r1, r2
  401914:	460b      	mov	r3, r1
			*ptr_dst++ = udd_endpoint_fifo_read(ep);
  401916:	6d22      	ldr	r2, [r4, #80]	; 0x50
  401918:	f803 2b01 	strb.w	r2, [r3], #1
		for (i = 0; i < nb_data; i++) {
  40191c:	1a5a      	subs	r2, r3, r1
  40191e:	4282      	cmp	r2, r0
  401920:	d3f9      	bcc.n	401916 <UDP_Handler+0x406>
	udd_ep_ack_out_received(ep);
  401922:	4630      	mov	r0, r6
  401924:	4b2d      	ldr	r3, [pc, #180]	; (4019dc <UDP_Handler+0x4cc>)
  401926:	4798      	blx	r3
	if ((b_full || b_short) &&
  401928:	f1bb 0f00 	cmp.w	fp, #0
  40192c:	f000 81bc 	beq.w	401ca8 <UDP_Handler+0x798>
			!Is_udd_endpoint_stall_requested(ep)) {
  401930:	6b23      	ldr	r3, [r4, #48]	; 0x30
	if ((b_full || b_short) &&
  401932:	f013 0f20 	tst.w	r3, #32
  401936:	f47f ae38 	bne.w	4015aa <UDP_Handler+0x9a>
		udd_disable_endpoint_interrupt(ep);
  40193a:	4b21      	ldr	r3, [pc, #132]	; (4019c0 <UDP_Handler+0x4b0>)
  40193c:	615d      	str	r5, [r3, #20]
		ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  40193e:	4b26      	ldr	r3, [pc, #152]	; (4019d8 <UDP_Handler+0x4c8>)
  401940:	00ba      	lsls	r2, r7, #2
  401942:	19d1      	adds	r1, r2, r7
  401944:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  401948:	68cb      	ldr	r3, [r1, #12]
  40194a:	608b      	str	r3, [r1, #8]
		udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  40194c:	4632      	mov	r2, r6
  40194e:	2100      	movs	r1, #0
  401950:	4640      	mov	r0, r8
  401952:	4b23      	ldr	r3, [pc, #140]	; (4019e0 <UDP_Handler+0x4d0>)
  401954:	4798      	blx	r3
  401956:	e628      	b.n	4015aa <UDP_Handler+0x9a>
			return true;
		}
		// TXIN: packet sent
		if (Is_udd_in_sent(ep)) {

			ptr_job->bank--;
  401958:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  40195c:	4b1e      	ldr	r3, [pc, #120]	; (4019d8 <UDP_Handler+0x4c8>)
  40195e:	eb03 0282 	add.w	r2, r3, r2, lsl #2
  401962:	7c53      	ldrb	r3, [r2, #17]
  401964:	f3c3 0181 	ubfx	r1, r3, #2, #2
  401968:	3103      	adds	r1, #3
  40196a:	f361 0383 	bfi	r3, r1, #2, #2
  40196e:	7453      	strb	r3, [r2, #17]
			// Stall when all banks free
			if (ptr_job->b_stall_requested) {
  401970:	7c53      	ldrb	r3, [r2, #17]
  401972:	f013 0f20 	tst.w	r3, #32
  401976:	d05f      	beq.n	401a38 <UDP_Handler+0x528>
				if (ptr_job->bank) {
  401978:	f013 0f0c 	tst.w	r3, #12
  40197c:	d032      	beq.n	4019e4 <UDP_Handler+0x4d4>
					// Send remaining
					udd_set_transmit_ready(ep);
  40197e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401980:	930c      	str	r3, [sp, #48]	; 0x30
  401982:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  401984:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401988:	930c      	str	r3, [sp, #48]	; 0x30
  40198a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40198c:	f043 0310 	orr.w	r3, r3, #16
  401990:	930c      	str	r3, [sp, #48]	; 0x30
  401992:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  401994:	6323      	str	r3, [r4, #48]	; 0x30
  401996:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401998:	f013 0f10 	tst.w	r3, #16
  40199c:	d0fb      	beq.n	401996 <UDP_Handler+0x486>
					udd_ack_in_sent(ep);
  40199e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019a0:	930d      	str	r3, [sp, #52]	; 0x34
  4019a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4019a4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4019a8:	930d      	str	r3, [sp, #52]	; 0x34
  4019aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4019ac:	f023 0301 	bic.w	r3, r3, #1
  4019b0:	930d      	str	r3, [sp, #52]	; 0x34
  4019b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4019b4:	6323      	str	r3, [r4, #48]	; 0x30
  4019b6:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019b8:	f013 0f01 	tst.w	r3, #1
  4019bc:	d1fb      	bne.n	4019b6 <UDP_Handler+0x4a6>
  4019be:	e5f4      	b.n	4015aa <UDP_Handler+0x9a>
  4019c0:	40034000 	.word	0x40034000
  4019c4:	20000cd4 	.word	0x20000cd4
  4019c8:	20000c42 	.word	0x20000c42
  4019cc:	00401049 	.word	0x00401049
  4019d0:	20000c44 	.word	0x20000c44
  4019d4:	00401011 	.word	0x00401011
  4019d8:	20000c48 	.word	0x20000c48
  4019dc:	00401289 	.word	0x00401289
  4019e0:	00401249 	.word	0x00401249
				} else {
					// Ack last packet
					udd_ack_in_sent(ep);
  4019e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019e6:	930e      	str	r3, [sp, #56]	; 0x38
  4019e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4019ea:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4019ee:	930e      	str	r3, [sp, #56]	; 0x38
  4019f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4019f2:	f023 0301 	bic.w	r3, r3, #1
  4019f6:	930e      	str	r3, [sp, #56]	; 0x38
  4019f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4019fa:	6323      	str	r3, [r4, #48]	; 0x30
  4019fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019fe:	f013 0f01 	tst.w	r3, #1
  401a02:	d1fb      	bne.n	4019fc <UDP_Handler+0x4ec>
					// Enable stall
					udd_enable_stall_handshake(ep);
  401a04:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a06:	930f      	str	r3, [sp, #60]	; 0x3c
  401a08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401a0a:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401a0e:	930f      	str	r3, [sp, #60]	; 0x3c
  401a10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401a12:	f043 0320 	orr.w	r3, r3, #32
  401a16:	930f      	str	r3, [sp, #60]	; 0x3c
  401a18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401a1a:	6323      	str	r3, [r4, #48]	; 0x30
  401a1c:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a1e:	f013 0f20 	tst.w	r3, #32
  401a22:	d0fb      	beq.n	401a1c <UDP_Handler+0x50c>
					// Halt executed
					ptr_job->b_stall_requested = false;
  401a24:	eb07 0787 	add.w	r7, r7, r7, lsl #2
  401a28:	4ba1      	ldr	r3, [pc, #644]	; (401cb0 <UDP_Handler+0x7a0>)
  401a2a:	eb03 0387 	add.w	r3, r3, r7, lsl #2
  401a2e:	7c5a      	ldrb	r2, [r3, #17]
  401a30:	f36f 1245 	bfc	r2, #5, #1
  401a34:	745a      	strb	r2, [r3, #17]
  401a36:	e5b8      	b.n	4015aa <UDP_Handler+0x9a>
				}
				return true;
			}
			// Finish Job when buffer end
			if (ptr_job->b_buf_end) {
  401a38:	f013 0f80 	tst.w	r3, #128	; 0x80
  401a3c:	d138      	bne.n	401ab0 <UDP_Handler+0x5a0>
				ptr_job->b_buf_end = false;
				ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
                udd_disable_endpoint_interrupt(ep);
                udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
			}
			if (ptr_job->buf_cnt >= ptr_job->buf_size &&
  401a3e:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401a42:	4b9b      	ldr	r3, [pc, #620]	; (401cb0 <UDP_Handler+0x7a0>)
  401a44:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401a48:	68da      	ldr	r2, [r3, #12]
  401a4a:	689b      	ldr	r3, [r3, #8]
  401a4c:	429a      	cmp	r2, r3
  401a4e:	d341      	bcc.n	401ad4 <UDP_Handler+0x5c4>
					!ptr_job->b_shortpacket &&
  401a50:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401a54:	4b96      	ldr	r3, [pc, #600]	; (401cb0 <UDP_Handler+0x7a0>)
  401a56:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401a5a:	7c5b      	ldrb	r3, [r3, #17]
  401a5c:	f013 0f4c 	tst.w	r3, #76	; 0x4c
  401a60:	d138      	bne.n	401ad4 <UDP_Handler+0x5c4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401a62:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401a66:	fab3 f383 	clz	r3, r3
  401a6a:	095b      	lsrs	r3, r3, #5
  401a6c:	9310      	str	r3, [sp, #64]	; 0x40
  __ASM volatile ("cpsid i" : : : "memory");
  401a6e:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401a70:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401a74:	2200      	movs	r2, #0
  401a76:	4b8f      	ldr	r3, [pc, #572]	; (401cb4 <UDP_Handler+0x7a4>)
  401a78:	701a      	strb	r2, [r3, #0]
	return flags;
  401a7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
					ptr_job->bank == 0) {
				// All transfer done, including ZLP
				irqflags_t flags = cpu_irq_save();
				udd_disable_endpoint_interrupt(ep);
  401a7c:	4a8e      	ldr	r2, [pc, #568]	; (401cb8 <UDP_Handler+0x7a8>)
  401a7e:	6155      	str	r5, [r2, #20]
	if (cpu_irq_is_enabled_flags(flags))
  401a80:	b12b      	cbz	r3, 401a8e <UDP_Handler+0x57e>
		cpu_irq_enable();
  401a82:	2201      	movs	r2, #1
  401a84:	4b8b      	ldr	r3, [pc, #556]	; (401cb4 <UDP_Handler+0x7a4>)
  401a86:	701a      	strb	r2, [r3, #0]
  401a88:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401a8c:	b662      	cpsie	i
				cpu_irq_restore(flags);
				// Ack last packet
				udd_ack_in_sent(ep);
  401a8e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a90:	9311      	str	r3, [sp, #68]	; 0x44
  401a92:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401a94:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401a98:	9311      	str	r3, [sp, #68]	; 0x44
  401a9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401a9c:	f023 0301 	bic.w	r3, r3, #1
  401aa0:	9311      	str	r3, [sp, #68]	; 0x44
  401aa2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  401aa4:	6323      	str	r3, [r4, #48]	; 0x30
  401aa6:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401aa8:	f013 0f01 	tst.w	r3, #1
  401aac:	d1fb      	bne.n	401aa6 <UDP_Handler+0x596>
  401aae:	e57c      	b.n	4015aa <UDP_Handler+0x9a>
				ptr_job->b_buf_end = false;
  401ab0:	2314      	movs	r3, #20
  401ab2:	4a7f      	ldr	r2, [pc, #508]	; (401cb0 <UDP_Handler+0x7a0>)
  401ab4:	fb03 2307 	mla	r3, r3, r7, r2
  401ab8:	7c59      	ldrb	r1, [r3, #17]
  401aba:	f36f 11c7 	bfc	r1, #7, #1
  401abe:	7459      	strb	r1, [r3, #17]
				ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  401ac0:	68da      	ldr	r2, [r3, #12]
  401ac2:	609a      	str	r2, [r3, #8]
                udd_disable_endpoint_interrupt(ep);
  401ac4:	4b7c      	ldr	r3, [pc, #496]	; (401cb8 <UDP_Handler+0x7a8>)
  401ac6:	615d      	str	r5, [r3, #20]
                udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  401ac8:	4632      	mov	r2, r6
  401aca:	2100      	movs	r1, #0
  401acc:	4640      	mov	r0, r8
  401ace:	4b7b      	ldr	r3, [pc, #492]	; (401cbc <UDP_Handler+0x7ac>)
  401ad0:	4798      	blx	r3
  401ad2:	e7b4      	b.n	401a3e <UDP_Handler+0x52e>
				return true;
			} else if (udd_get_endpoint_bank_max_nbr(ep) > 1
  401ad4:	2e00      	cmp	r6, #0
  401ad6:	d05b      	beq.n	401b90 <UDP_Handler+0x680>
  401ad8:	2e03      	cmp	r6, #3
  401ada:	d059      	beq.n	401b90 <UDP_Handler+0x680>
					&& ptr_job->bank > 0) {
  401adc:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401ae0:	4b73      	ldr	r3, [pc, #460]	; (401cb0 <UDP_Handler+0x7a0>)
  401ae2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401ae6:	7c5b      	ldrb	r3, [r3, #17]
  401ae8:	f013 0f0c 	tst.w	r3, #12
  401aec:	d024      	beq.n	401b38 <UDP_Handler+0x628>
				// Already banks buffered, transmit while loading
				udd_set_transmit_ready(ep);
  401aee:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401af0:	9312      	str	r3, [sp, #72]	; 0x48
  401af2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401af4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401af8:	9312      	str	r3, [sp, #72]	; 0x48
  401afa:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401afc:	f043 0310 	orr.w	r3, r3, #16
  401b00:	9312      	str	r3, [sp, #72]	; 0x48
  401b02:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401b04:	6323      	str	r3, [r4, #48]	; 0x30
  401b06:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b08:	f013 0f10 	tst.w	r3, #16
  401b0c:	d0fb      	beq.n	401b06 <UDP_Handler+0x5f6>
				udd_ack_in_sent(ep);
  401b0e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b10:	9313      	str	r3, [sp, #76]	; 0x4c
  401b12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401b14:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401b18:	9313      	str	r3, [sp, #76]	; 0x4c
  401b1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401b1c:	f023 0301 	bic.w	r3, r3, #1
  401b20:	9313      	str	r3, [sp, #76]	; 0x4c
  401b22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401b24:	6323      	str	r3, [r4, #48]	; 0x30
  401b26:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b28:	f013 0f01 	tst.w	r3, #1
  401b2c:	d1fb      	bne.n	401b26 <UDP_Handler+0x616>
				udd_ep_in_sent(ep, false);
  401b2e:	2100      	movs	r1, #0
  401b30:	4630      	mov	r0, r6
  401b32:	4b63      	ldr	r3, [pc, #396]	; (401cc0 <UDP_Handler+0x7b0>)
  401b34:	4798      	blx	r3
  401b36:	e538      	b.n	4015aa <UDP_Handler+0x9a>
			} else if (udd_get_endpoint_bank_max_nbr(ep) > 1) {
				// Still bank free, load and transmit
				if (!udd_ep_in_sent(ep, true)) {
  401b38:	2101      	movs	r1, #1
  401b3a:	4630      	mov	r0, r6
  401b3c:	4b60      	ldr	r3, [pc, #384]	; (401cc0 <UDP_Handler+0x7b0>)
  401b3e:	4798      	blx	r3
  401b40:	b1a0      	cbz	r0, 401b6c <UDP_Handler+0x65c>
					ptr_job->b_buf_end = false;
					ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
                    udd_disable_endpoint_interrupt(ep);
                    udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
				}
				udd_ack_in_sent(ep);
  401b42:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b44:	9314      	str	r3, [sp, #80]	; 0x50
  401b46:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401b48:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401b4c:	9314      	str	r3, [sp, #80]	; 0x50
  401b4e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401b50:	f023 0301 	bic.w	r3, r3, #1
  401b54:	9314      	str	r3, [sp, #80]	; 0x50
  401b56:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401b58:	6323      	str	r3, [r4, #48]	; 0x30
  401b5a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b5c:	f013 0f01 	tst.w	r3, #1
  401b60:	d1fb      	bne.n	401b5a <UDP_Handler+0x64a>
				udd_ep_in_sent(ep, false);
  401b62:	2100      	movs	r1, #0
  401b64:	4630      	mov	r0, r6
  401b66:	4b56      	ldr	r3, [pc, #344]	; (401cc0 <UDP_Handler+0x7b0>)
  401b68:	4798      	blx	r3
  401b6a:	e51e      	b.n	4015aa <UDP_Handler+0x9a>
					ptr_job->b_buf_end = false;
  401b6c:	2314      	movs	r3, #20
  401b6e:	4a50      	ldr	r2, [pc, #320]	; (401cb0 <UDP_Handler+0x7a0>)
  401b70:	fb03 2707 	mla	r7, r3, r7, r2
  401b74:	7c7a      	ldrb	r2, [r7, #17]
  401b76:	f36f 12c7 	bfc	r2, #7, #1
  401b7a:	747a      	strb	r2, [r7, #17]
					ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  401b7c:	68fb      	ldr	r3, [r7, #12]
  401b7e:	60bb      	str	r3, [r7, #8]
                    udd_disable_endpoint_interrupt(ep);
  401b80:	4b4d      	ldr	r3, [pc, #308]	; (401cb8 <UDP_Handler+0x7a8>)
  401b82:	615d      	str	r5, [r3, #20]
                    udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  401b84:	4632      	mov	r2, r6
  401b86:	2100      	movs	r1, #0
  401b88:	4640      	mov	r0, r8
  401b8a:	4b4c      	ldr	r3, [pc, #304]	; (401cbc <UDP_Handler+0x7ac>)
  401b8c:	4798      	blx	r3
  401b8e:	e7d8      	b.n	401b42 <UDP_Handler+0x632>
			} else {
				// Single bank transfer, ack when ready
				udd_ep_in_sent(ep, true);
  401b90:	2101      	movs	r1, #1
  401b92:	4630      	mov	r0, r6
  401b94:	4b4a      	ldr	r3, [pc, #296]	; (401cc0 <UDP_Handler+0x7b0>)
  401b96:	4798      	blx	r3
				udd_ack_in_sent(ep);
  401b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b9a:	9315      	str	r3, [sp, #84]	; 0x54
  401b9c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401b9e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401ba2:	9315      	str	r3, [sp, #84]	; 0x54
  401ba4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401ba6:	f023 0301 	bic.w	r3, r3, #1
  401baa:	9315      	str	r3, [sp, #84]	; 0x54
  401bac:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401bae:	6323      	str	r3, [r4, #48]	; 0x30
  401bb0:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401bb2:	f013 0f01 	tst.w	r3, #1
  401bb6:	d1fb      	bne.n	401bb0 <UDP_Handler+0x6a0>
  401bb8:	e4f7      	b.n	4015aa <UDP_Handler+0x9a>
  401bba:	3301      	adds	r3, #1
  401bbc:	3214      	adds	r2, #20
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
  401bbe:	2b04      	cmp	r3, #4
  401bc0:	f000 8086 	beq.w	401cd0 <UDP_Handler+0x7c0>
  401bc4:	b2de      	uxtb	r6, r3
		if (!Is_udd_endpoint_interrupt_enabled(ep)) {
  401bc6:	f8de 1018 	ldr.w	r1, [lr, #24]
  401bca:	fa00 f503 	lsl.w	r5, r0, r3
  401bce:	4229      	tst	r1, r5
  401bd0:	d0f3      	beq.n	401bba <UDP_Handler+0x6aa>
  401bd2:	1e5f      	subs	r7, r3, #1
		ptr_job = &udd_ep_job[ep - 1];
  401bd4:	4690      	mov	r8, r2
  401bd6:	009c      	lsls	r4, r3, #2
  401bd8:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  401bdc:	f504 3440 	add.w	r4, r4, #196608	; 0x30000
		if (Is_udd_any_bank_received(ep)) {
  401be0:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401be2:	f011 0f42 	tst.w	r1, #66	; 0x42
  401be6:	f47f ae6d 	bne.w	4018c4 <UDP_Handler+0x3b4>
		if (Is_udd_in_sent(ep)) {
  401bea:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401bec:	f011 0f01 	tst.w	r1, #1
  401bf0:	f47f aeb2 	bne.w	401958 <UDP_Handler+0x448>
			}
			return true;
		}
		// Stall sent/CRC error
		if (Is_udd_stall(ep)) {
  401bf4:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401bf6:	f011 0f08 	tst.w	r1, #8
  401bfa:	d0de      	beq.n	401bba <UDP_Handler+0x6aa>
			udd_ack_stall(ep);
  401bfc:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401bfe:	9316      	str	r3, [sp, #88]	; 0x58
  401c00:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401c02:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401c06:	9316      	str	r3, [sp, #88]	; 0x58
  401c08:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401c0a:	f023 0308 	bic.w	r3, r3, #8
  401c0e:	9316      	str	r3, [sp, #88]	; 0x58
  401c10:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401c12:	6323      	str	r3, [r4, #48]	; 0x30
  401c14:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401c16:	f013 0f08 	tst.w	r3, #8
  401c1a:	d1fb      	bne.n	401c14 <UDP_Handler+0x704>
			if (udd_get_endpoint_type(ep) == UDP_CSR_EPTYPE_ISO_OUT ||
  401c1c:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401c1e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  401c22:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  401c26:	f43f acc0 	beq.w	4015aa <UDP_Handler+0x9a>
				udd_get_endpoint_type(ep) == UDP_CSR_EPTYPE_ISO_IN) {
  401c2a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401c2c:	e4bd      	b.n	4015aa <UDP_Handler+0x9a>
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401c2e:	4b22      	ldr	r3, [pc, #136]	; (401cb8 <UDP_Handler+0x7a8>)
  401c30:	69db      	ldr	r3, [r3, #28]
  401c32:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  401c36:	d050      	beq.n	401cda <UDP_Handler+0x7ca>
		udd_ack_wakeups();
  401c38:	4c1f      	ldr	r4, [pc, #124]	; (401cb8 <UDP_Handler+0x7a8>)
  401c3a:	f44f 5318 	mov.w	r3, #9728	; 0x2600
  401c3e:	6223      	str	r3, [r4, #32]
		udd_disable_wakeups();
  401c40:	6163      	str	r3, [r4, #20]
		udd_sleep_mode(true); // Enter in IDLE mode
  401c42:	2001      	movs	r0, #1
  401c44:	4b1f      	ldr	r3, [pc, #124]	; (401cc4 <UDP_Handler+0x7b4>)
  401c46:	4798      	blx	r3
		udd_ack_suspend();
  401c48:	f44f 7380 	mov.w	r3, #256	; 0x100
  401c4c:	6223      	str	r3, [r4, #32]
		udd_enable_suspend_interrupt();
  401c4e:	6123      	str	r3, [r4, #16]
		udd_enable_sof_interrupt();
  401c50:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401c54:	6123      	str	r3, [r4, #16]
		goto udd_interrupt_end;
  401c56:	e4a8      	b.n	4015aa <UDP_Handler+0x9a>
		udd_ack_suspend();
  401c58:	4b17      	ldr	r3, [pc, #92]	; (401cb8 <UDP_Handler+0x7a8>)
  401c5a:	f44f 7280 	mov.w	r2, #256	; 0x100
  401c5e:	621a      	str	r2, [r3, #32]
		udd_disable_suspend_interrupt();
  401c60:	615a      	str	r2, [r3, #20]
		udd_enable_wake_up_interrupt();
  401c62:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  401c66:	611a      	str	r2, [r3, #16]
		udd_enable_resume_interrupt();
  401c68:	f44f 7200 	mov.w	r2, #512	; 0x200
  401c6c:	611a      	str	r2, [r3, #16]
		udd_enable_ext_resume_interrupt();
  401c6e:	f44f 6280 	mov.w	r2, #1024	; 0x400
  401c72:	611a      	str	r2, [r3, #16]
		udd_disable_periph_ck();
  401c74:	2022      	movs	r0, #34	; 0x22
  401c76:	4b14      	ldr	r3, [pc, #80]	; (401cc8 <UDP_Handler+0x7b8>)
  401c78:	4798      	blx	r3
		udd_sleep_mode(false); // Enter in SUSPEND mode
  401c7a:	2000      	movs	r0, #0
  401c7c:	4b11      	ldr	r3, [pc, #68]	; (401cc4 <UDP_Handler+0x7b4>)
  401c7e:	4798      	blx	r3
		goto udd_interrupt_end;
  401c80:	e493      	b.n	4015aa <UDP_Handler+0x9a>
	udd_ep_ack_out_received(ep);
  401c82:	4630      	mov	r0, r6
  401c84:	4b11      	ldr	r3, [pc, #68]	; (401ccc <UDP_Handler+0x7bc>)
  401c86:	4798      	blx	r3
  401c88:	e652      	b.n	401930 <UDP_Handler+0x420>
		ptr_job->buf_cnt += nb_data;
  401c8a:	eb07 0c87 	add.w	ip, r7, r7, lsl #2
  401c8e:	4b08      	ldr	r3, [pc, #32]	; (401cb0 <UDP_Handler+0x7a0>)
  401c90:	eb03 038c 	add.w	r3, r3, ip, lsl #2
  401c94:	f8c3 e00c 	str.w	lr, [r3, #12]
		for (i = 0; i < nb_data; i++) {
  401c98:	2800      	cmp	r0, #0
  401c9a:	d0f2      	beq.n	401c82 <UDP_Handler+0x772>
			b_full = true;
  401c9c:	f04f 0b01 	mov.w	fp, #1
  401ca0:	e637      	b.n	401912 <UDP_Handler+0x402>
	udd_ep_ack_out_received(ep);
  401ca2:	4630      	mov	r0, r6
  401ca4:	4b09      	ldr	r3, [pc, #36]	; (401ccc <UDP_Handler+0x7bc>)
  401ca6:	4798      	blx	r3
	if ((b_full || b_short) &&
  401ca8:	45ca      	cmp	sl, r9
  401caa:	f63f ae41 	bhi.w	401930 <UDP_Handler+0x420>
  401cae:	e47c      	b.n	4015aa <UDP_Handler+0x9a>
  401cb0:	20000c48 	.word	0x20000c48
  401cb4:	200000a0 	.word	0x200000a0
  401cb8:	40034000 	.word	0x40034000
  401cbc:	00401249 	.word	0x00401249
  401cc0:	0040135d 	.word	0x0040135d
  401cc4:	00400f55 	.word	0x00400f55
  401cc8:	004028d9 	.word	0x004028d9
  401ccc:	00401289 	.word	0x00401289
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401cd0:	4b4b      	ldr	r3, [pc, #300]	; (401e00 <UDP_Handler+0x8f0>)
  401cd2:	699b      	ldr	r3, [r3, #24]
  401cd4:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  401cd8:	d1a9      	bne.n	401c2e <UDP_Handler+0x71e>
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401cda:	4b49      	ldr	r3, [pc, #292]	; (401e00 <UDP_Handler+0x8f0>)
  401cdc:	699b      	ldr	r3, [r3, #24]
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401cde:	f413 7f00 	tst.w	r3, #512	; 0x200
  401ce2:	d004      	beq.n	401cee <UDP_Handler+0x7de>
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401ce4:	4b46      	ldr	r3, [pc, #280]	; (401e00 <UDP_Handler+0x8f0>)
  401ce6:	69db      	ldr	r3, [r3, #28]
  401ce8:	f413 7f00 	tst.w	r3, #512	; 0x200
  401cec:	d1a4      	bne.n	401c38 <UDP_Handler+0x728>
		(Is_udd_ext_resume_interrupt_enabled() && Is_udd_ext_resume())) {
  401cee:	4b44      	ldr	r3, [pc, #272]	; (401e00 <UDP_Handler+0x8f0>)
  401cf0:	699b      	ldr	r3, [r3, #24]
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401cf2:	f413 6f80 	tst.w	r3, #1024	; 0x400
  401cf6:	d004      	beq.n	401d02 <UDP_Handler+0x7f2>
		(Is_udd_ext_resume_interrupt_enabled() && Is_udd_ext_resume())) {
  401cf8:	4b41      	ldr	r3, [pc, #260]	; (401e00 <UDP_Handler+0x8f0>)
  401cfa:	69db      	ldr	r3, [r3, #28]
  401cfc:	f413 6f80 	tst.w	r3, #1024	; 0x400
  401d00:	d19a      	bne.n	401c38 <UDP_Handler+0x728>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
  401d02:	4b3f      	ldr	r3, [pc, #252]	; (401e00 <UDP_Handler+0x8f0>)
  401d04:	699b      	ldr	r3, [r3, #24]
  401d06:	f413 7f80 	tst.w	r3, #256	; 0x100
  401d0a:	d004      	beq.n	401d16 <UDP_Handler+0x806>
  401d0c:	4b3c      	ldr	r3, [pc, #240]	; (401e00 <UDP_Handler+0x8f0>)
  401d0e:	69db      	ldr	r3, [r3, #28]
  401d10:	f413 7f80 	tst.w	r3, #256	; 0x100
  401d14:	d1a0      	bne.n	401c58 <UDP_Handler+0x748>
	if (Is_udd_reset()) {
  401d16:	4b3a      	ldr	r3, [pc, #232]	; (401e00 <UDP_Handler+0x8f0>)
  401d18:	69db      	ldr	r3, [r3, #28]
  401d1a:	f413 5f80 	tst.w	r3, #4096	; 0x1000
  401d1e:	f43f ac44 	beq.w	4015aa <UDP_Handler+0x9a>
		udd_ack_reset();
  401d22:	4c37      	ldr	r4, [pc, #220]	; (401e00 <UDP_Handler+0x8f0>)
  401d24:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401d28:	6223      	str	r3, [r4, #32]
		udd_ep_finish_job(&udd_ep_job[i], UDD_EP_TRANSFER_ABORT, i + 1);
  401d2a:	4e36      	ldr	r6, [pc, #216]	; (401e04 <UDP_Handler+0x8f4>)
  401d2c:	2201      	movs	r2, #1
  401d2e:	4611      	mov	r1, r2
  401d30:	4630      	mov	r0, r6
  401d32:	4d35      	ldr	r5, [pc, #212]	; (401e08 <UDP_Handler+0x8f8>)
  401d34:	47a8      	blx	r5
  401d36:	2202      	movs	r2, #2
  401d38:	2101      	movs	r1, #1
  401d3a:	f106 0014 	add.w	r0, r6, #20
  401d3e:	47a8      	blx	r5
  401d40:	2203      	movs	r2, #3
  401d42:	2101      	movs	r1, #1
  401d44:	f106 0028 	add.w	r0, r6, #40	; 0x28
  401d48:	47a8      	blx	r5
		udc_reset();
  401d4a:	4b30      	ldr	r3, [pc, #192]	; (401e0c <UDP_Handler+0x8fc>)
  401d4c:	4798      	blx	r3
		udd_disable_address_state();
  401d4e:	6863      	ldr	r3, [r4, #4]
  401d50:	f023 0301 	bic.w	r3, r3, #1
  401d54:	6063      	str	r3, [r4, #4]
		udd_disable_configured_state();
  401d56:	6863      	ldr	r3, [r4, #4]
  401d58:	f023 0302 	bic.w	r3, r3, #2
  401d5c:	6063      	str	r3, [r4, #4]
	udd_enable_address();
  401d5e:	68a3      	ldr	r3, [r4, #8]
  401d60:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  401d64:	60a3      	str	r3, [r4, #8]
	udd_configure_address(0);
  401d66:	68a3      	ldr	r3, [r4, #8]
  401d68:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401d6c:	60a3      	str	r3, [r4, #8]
	udd_configure_endpoint(0, USB_EP_TYPE_CONTROL, 0);
  401d6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401d70:	9318      	str	r3, [sp, #96]	; 0x60
  401d72:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401d74:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401d78:	9318      	str	r3, [sp, #96]	; 0x60
  401d7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401d7c:	f423 4307 	bic.w	r3, r3, #34560	; 0x8700
  401d80:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  401d84:	9318      	str	r3, [sp, #96]	; 0x60
  401d86:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401d88:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  401d8c:	9318      	str	r3, [sp, #96]	; 0x60
  401d8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401d90:	6323      	str	r3, [r4, #48]	; 0x30
  401d92:	4622      	mov	r2, r4
  401d94:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401d96:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  401d9a:	d0fb      	beq.n	401d94 <UDP_Handler+0x884>
	udd_enable_endpoint(0);
  401d9c:	4a18      	ldr	r2, [pc, #96]	; (401e00 <UDP_Handler+0x8f0>)
  401d9e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401da0:	9319      	str	r3, [sp, #100]	; 0x64
  401da2:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401da4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401da8:	9319      	str	r3, [sp, #100]	; 0x64
  401daa:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401dac:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  401db0:	9319      	str	r3, [sp, #100]	; 0x64
  401db2:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401db4:	6313      	str	r3, [r2, #48]	; 0x30
  401db6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401db8:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  401dbc:	d0fb      	beq.n	401db6 <UDP_Handler+0x8a6>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401dbe:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401dc2:	fab3 f383 	clz	r3, r3
  401dc6:	095b      	lsrs	r3, r3, #5
  401dc8:	9317      	str	r3, [sp, #92]	; 0x5c
  __ASM volatile ("cpsid i" : : : "memory");
  401dca:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401dcc:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401dd0:	2200      	movs	r2, #0
  401dd2:	4b0f      	ldr	r3, [pc, #60]	; (401e10 <UDP_Handler+0x900>)
  401dd4:	701a      	strb	r2, [r3, #0]
	return flags;
  401dd6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
	udd_enable_endpoint_interrupt(0);
  401dd8:	2101      	movs	r1, #1
  401dda:	4a09      	ldr	r2, [pc, #36]	; (401e00 <UDP_Handler+0x8f0>)
  401ddc:	6111      	str	r1, [r2, #16]
	if (cpu_irq_is_enabled_flags(flags))
  401dde:	b123      	cbz	r3, 401dea <UDP_Handler+0x8da>
		cpu_irq_enable();
  401de0:	4b0b      	ldr	r3, [pc, #44]	; (401e10 <UDP_Handler+0x900>)
  401de2:	7019      	strb	r1, [r3, #0]
  401de4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401de8:	b662      	cpsie	i
		udd_ctrl_init();
  401dea:	4b0a      	ldr	r3, [pc, #40]	; (401e14 <UDP_Handler+0x904>)
  401dec:	4798      	blx	r3
		udd_enable_suspend_interrupt();
  401dee:	4b04      	ldr	r3, [pc, #16]	; (401e00 <UDP_Handler+0x8f0>)
  401df0:	f44f 7280 	mov.w	r2, #256	; 0x100
  401df4:	611a      	str	r2, [r3, #16]
		udd_enable_sof_interrupt();
  401df6:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401dfa:	611a      	str	r2, [r3, #16]
		goto udd_interrupt_end;
  401dfc:	f7ff bbd5 	b.w	4015aa <UDP_Handler+0x9a>
  401e00:	40034000 	.word	0x40034000
  401e04:	20000c48 	.word	0x20000c48
  401e08:	00401249 	.word	0x00401249
  401e0c:	004009c1 	.word	0x004009c1
  401e10:	200000a0 	.word	0x200000a0
  401e14:	00400ff9 	.word	0x00400ff9

00401e18 <udd_attach>:
{
  401e18:	b510      	push	{r4, lr}
  401e1a:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401e1c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401e20:	fab3 f383 	clz	r3, r3
  401e24:	095b      	lsrs	r3, r3, #5
  401e26:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401e28:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401e2a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401e2e:	2200      	movs	r2, #0
  401e30:	4b14      	ldr	r3, [pc, #80]	; (401e84 <udd_attach+0x6c>)
  401e32:	701a      	strb	r2, [r3, #0]
	return flags;
  401e34:	9c01      	ldr	r4, [sp, #4]
	udd_sleep_mode(true);
  401e36:	2001      	movs	r0, #1
  401e38:	4b13      	ldr	r3, [pc, #76]	; (401e88 <udd_attach+0x70>)
  401e3a:	4798      	blx	r3
	udd_enable_periph_ck();
  401e3c:	2022      	movs	r0, #34	; 0x22
  401e3e:	4b13      	ldr	r3, [pc, #76]	; (401e8c <udd_attach+0x74>)
  401e40:	4798      	blx	r3
	udd_enable_transceiver();
  401e42:	4b13      	ldr	r3, [pc, #76]	; (401e90 <udd_attach+0x78>)
  401e44:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401e46:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  401e4a:	675a      	str	r2, [r3, #116]	; 0x74
	udd_attach_device();
  401e4c:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401e4e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
  401e52:	675a      	str	r2, [r3, #116]	; 0x74
	udd_enable_suspend_interrupt();
  401e54:	f44f 7280 	mov.w	r2, #256	; 0x100
  401e58:	611a      	str	r2, [r3, #16]
	udd_enable_wake_up_interrupt();
  401e5a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  401e5e:	611a      	str	r2, [r3, #16]
	udd_enable_resume_interrupt();
  401e60:	f44f 7200 	mov.w	r2, #512	; 0x200
  401e64:	611a      	str	r2, [r3, #16]
	udd_enable_ext_resume_interrupt();
  401e66:	f44f 6280 	mov.w	r2, #1024	; 0x400
  401e6a:	611a      	str	r2, [r3, #16]
	udd_enable_sof_interrupt();
  401e6c:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401e70:	611a      	str	r2, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  401e72:	b12c      	cbz	r4, 401e80 <udd_attach+0x68>
		cpu_irq_enable();
  401e74:	2201      	movs	r2, #1
  401e76:	4b03      	ldr	r3, [pc, #12]	; (401e84 <udd_attach+0x6c>)
  401e78:	701a      	strb	r2, [r3, #0]
  401e7a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401e7e:	b662      	cpsie	i
}
  401e80:	b002      	add	sp, #8
  401e82:	bd10      	pop	{r4, pc}
  401e84:	200000a0 	.word	0x200000a0
  401e88:	00400f55 	.word	0x00400f55
  401e8c:	00402885 	.word	0x00402885
  401e90:	40034000 	.word	0x40034000

00401e94 <udd_enable>:
{
  401e94:	b530      	push	{r4, r5, lr}
  401e96:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401e98:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401e9c:	fab3 f383 	clz	r3, r3
  401ea0:	095b      	lsrs	r3, r3, #5
  401ea2:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  401ea4:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401ea6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401eaa:	2400      	movs	r4, #0
  401eac:	4b27      	ldr	r3, [pc, #156]	; (401f4c <udd_enable+0xb8>)
  401eae:	701c      	strb	r4, [r3, #0]
	return flags;
  401eb0:	9d00      	ldr	r5, [sp, #0]
	udd_enable_periph_ck();
  401eb2:	2022      	movs	r0, #34	; 0x22
  401eb4:	4b26      	ldr	r3, [pc, #152]	; (401f50 <udd_enable+0xbc>)
  401eb6:	4798      	blx	r3
	sysclk_enable_usb();
  401eb8:	4b26      	ldr	r3, [pc, #152]	; (401f54 <udd_enable+0xc0>)
  401eba:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  401ebc:	4b26      	ldr	r3, [pc, #152]	; (401f58 <udd_enable+0xc4>)
  401ebe:	2250      	movs	r2, #80	; 0x50
  401ec0:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401ec4:	2204      	movs	r2, #4
  401ec6:	605a      	str	r2, [r3, #4]
  401ec8:	4623      	mov	r3, r4
		udd_ep_job[i].bank = 0;
  401eca:	4824      	ldr	r0, [pc, #144]	; (401f5c <udd_enable+0xc8>)
  401ecc:	009a      	lsls	r2, r3, #2
  401ece:	18d1      	adds	r1, r2, r3
  401ed0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  401ed4:	7c49      	ldrb	r1, [r1, #17]
		udd_ep_job[i].b_buf_end = false;
  401ed6:	441a      	add	r2, r3
  401ed8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  401edc:	f001 0183 	and.w	r1, r1, #131	; 0x83
  401ee0:	f36f 11c7 	bfc	r1, #7, #1
  401ee4:	7451      	strb	r1, [r2, #17]
  401ee6:	3301      	adds	r3, #1
	for (i = 0; i < USB_DEVICE_MAX_EP; i++) {
  401ee8:	2b03      	cmp	r3, #3
  401eea:	d1ef      	bne.n	401ecc <udd_enable+0x38>
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
  401eec:	f44f 2080 	mov.w	r0, #262144	; 0x40000
  401ef0:	4b1b      	ldr	r3, [pc, #108]	; (401f60 <udd_enable+0xcc>)
  401ef2:	4798      	blx	r3
	udd_b_idle = false;
  401ef4:	2200      	movs	r2, #0
  401ef6:	4b1b      	ldr	r3, [pc, #108]	; (401f64 <udd_enable+0xd0>)
  401ef8:	701a      	strb	r2, [r3, #0]
	if(sleepmgr_locks[mode] >= 0xff) {
  401efa:	4b1b      	ldr	r3, [pc, #108]	; (401f68 <udd_enable+0xd4>)
  401efc:	781b      	ldrb	r3, [r3, #0]
  401efe:	2bff      	cmp	r3, #255	; 0xff
  401f00:	d022      	beq.n	401f48 <udd_enable+0xb4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401f02:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401f06:	fab3 f383 	clz	r3, r3
  401f0a:	095b      	lsrs	r3, r3, #5
  401f0c:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401f0e:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401f10:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401f14:	2200      	movs	r2, #0
  401f16:	4b0d      	ldr	r3, [pc, #52]	; (401f4c <udd_enable+0xb8>)
  401f18:	701a      	strb	r2, [r3, #0]
	return flags;
  401f1a:	9901      	ldr	r1, [sp, #4]
	++sleepmgr_locks[mode];
  401f1c:	4a12      	ldr	r2, [pc, #72]	; (401f68 <udd_enable+0xd4>)
  401f1e:	7813      	ldrb	r3, [r2, #0]
  401f20:	3301      	adds	r3, #1
  401f22:	7013      	strb	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  401f24:	b129      	cbz	r1, 401f32 <udd_enable+0x9e>
		cpu_irq_enable();
  401f26:	2201      	movs	r2, #1
  401f28:	4b08      	ldr	r3, [pc, #32]	; (401f4c <udd_enable+0xb8>)
  401f2a:	701a      	strb	r2, [r3, #0]
  401f2c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401f30:	b662      	cpsie	i
	udd_attach();
  401f32:	4b0e      	ldr	r3, [pc, #56]	; (401f6c <udd_enable+0xd8>)
  401f34:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
  401f36:	b12d      	cbz	r5, 401f44 <udd_enable+0xb0>
		cpu_irq_enable();
  401f38:	2201      	movs	r2, #1
  401f3a:	4b04      	ldr	r3, [pc, #16]	; (401f4c <udd_enable+0xb8>)
  401f3c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  401f3e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401f42:	b662      	cpsie	i
}
  401f44:	b003      	add	sp, #12
  401f46:	bd30      	pop	{r4, r5, pc}
  401f48:	e7fe      	b.n	401f48 <udd_enable+0xb4>
  401f4a:	bf00      	nop
  401f4c:	200000a0 	.word	0x200000a0
  401f50:	00402885 	.word	0x00402885
  401f54:	00402615 	.word	0x00402615
  401f58:	e000e100 	.word	0xe000e100
  401f5c:	20000c48 	.word	0x20000c48
  401f60:	0040294d 	.word	0x0040294d
  401f64:	20000c41 	.word	0x20000c41
  401f68:	20000ccc 	.word	0x20000ccc
  401f6c:	00401e19 	.word	0x00401e19

00401f70 <udd_is_high_speed>:
}
  401f70:	2000      	movs	r0, #0
  401f72:	4770      	bx	lr

00401f74 <udd_set_address>:
	udd_disable_address_state();
  401f74:	4b0d      	ldr	r3, [pc, #52]	; (401fac <udd_set_address+0x38>)
  401f76:	685a      	ldr	r2, [r3, #4]
  401f78:	f022 0201 	bic.w	r2, r2, #1
  401f7c:	605a      	str	r2, [r3, #4]
	udd_disable_address();
  401f7e:	689a      	ldr	r2, [r3, #8]
  401f80:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  401f84:	609a      	str	r2, [r3, #8]
	if (address) {
  401f86:	4602      	mov	r2, r0
  401f88:	b170      	cbz	r0, 401fa8 <udd_set_address+0x34>
		udd_configure_address(address);
  401f8a:	6898      	ldr	r0, [r3, #8]
  401f8c:	f020 007f 	bic.w	r0, r0, #127	; 0x7f
  401f90:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  401f94:	4310      	orrs	r0, r2
  401f96:	6098      	str	r0, [r3, #8]
		udd_enable_address();
  401f98:	689a      	ldr	r2, [r3, #8]
  401f9a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  401f9e:	609a      	str	r2, [r3, #8]
		udd_enable_address_state();
  401fa0:	685a      	ldr	r2, [r3, #4]
  401fa2:	f042 0201 	orr.w	r2, r2, #1
  401fa6:	605a      	str	r2, [r3, #4]
  401fa8:	4770      	bx	lr
  401faa:	bf00      	nop
  401fac:	40034000 	.word	0x40034000

00401fb0 <udd_getaddress>:
	if (Is_udd_address_state_enabled())
  401fb0:	4b05      	ldr	r3, [pc, #20]	; (401fc8 <udd_getaddress+0x18>)
  401fb2:	685b      	ldr	r3, [r3, #4]
  401fb4:	f013 0f01 	tst.w	r3, #1
		return udd_get_configured_address();
  401fb8:	bf1d      	ittte	ne
  401fba:	4b03      	ldrne	r3, [pc, #12]	; (401fc8 <udd_getaddress+0x18>)
  401fbc:	6898      	ldrne	r0, [r3, #8]
  401fbe:	f000 007f 	andne.w	r0, r0, #127	; 0x7f
	return 0;
  401fc2:	2000      	moveq	r0, #0
}
  401fc4:	4770      	bx	lr
  401fc6:	bf00      	nop
  401fc8:	40034000 	.word	0x40034000

00401fcc <udd_get_frame_number>:
	return udd_frame_number();
  401fcc:	4b02      	ldr	r3, [pc, #8]	; (401fd8 <udd_get_frame_number+0xc>)
  401fce:	6818      	ldr	r0, [r3, #0]
}
  401fd0:	f3c0 000a 	ubfx	r0, r0, #0, #11
  401fd4:	4770      	bx	lr
  401fd6:	bf00      	nop
  401fd8:	40034000 	.word	0x40034000

00401fdc <udd_get_micro_frame_number>:
}
  401fdc:	2000      	movs	r0, #0
  401fde:	4770      	bx	lr

00401fe0 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
  401fe0:	4b01      	ldr	r3, [pc, #4]	; (401fe8 <udd_set_setup_payload+0x8>)
  401fe2:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
  401fe4:	8199      	strh	r1, [r3, #12]
  401fe6:	4770      	bx	lr
  401fe8:	20000cd4 	.word	0x20000cd4

00401fec <udd_ep_alloc>:
{
  401fec:	b5f0      	push	{r4, r5, r6, r7, lr}
  401fee:	b083      	sub	sp, #12
	ep = ep & USB_EP_ADDR_MASK;
  401ff0:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
  401ff4:	2c03      	cmp	r4, #3
  401ff6:	d867      	bhi.n	4020c8 <udd_ep_alloc+0xdc>
  401ff8:	00a3      	lsls	r3, r4, #2
  401ffa:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  401ffe:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
	if (Is_udd_endpoint_enabled(ep)) {
  402002:	6b1d      	ldr	r5, [r3, #48]	; 0x30
  402004:	f415 4f00 	tst.w	r5, #32768	; 0x8000
  402008:	d161      	bne.n	4020ce <udd_ep_alloc+0xe2>
	if (b_iso && (!udd_is_endpoint_support_iso(ep))) {
  40200a:	f001 0503 	and.w	r5, r1, #3
  40200e:	2d01      	cmp	r5, #1
  402010:	d050      	beq.n	4020b4 <udd_ep_alloc+0xc8>
	if (MaxEndpointSize > udd_get_endpoint_size_max(ep)) {
  402012:	1f25      	subs	r5, r4, #4
  402014:	b2ed      	uxtb	r5, r5
  402016:	2d02      	cmp	r5, #2
  402018:	bf34      	ite	cc
  40201a:	f44f 7500 	movcc.w	r5, #512	; 0x200
  40201e:	2540      	movcs	r5, #64	; 0x40
  402020:	4295      	cmp	r5, r2
  402022:	db58      	blt.n	4020d6 <udd_ep_alloc+0xea>
  402024:	b240      	sxtb	r0, r0
	ptr_job = &udd_ep_job[ep - 1];
  402026:	1e66      	subs	r6, r4, #1
	ptr_job->size = MaxEndpointSize;
  402028:	eb06 0786 	add.w	r7, r6, r6, lsl #2
  40202c:	4d2b      	ldr	r5, [pc, #172]	; (4020dc <udd_ep_alloc+0xf0>)
  40202e:	eb05 0587 	add.w	r5, r5, r7, lsl #2
  402032:	f105 0710 	add.w	r7, r5, #16
  402036:	f8b5 e010 	ldrh.w	lr, [r5, #16]
  40203a:	f362 0e09 	bfi	lr, r2, #0, #10
  40203e:	f8a5 e010 	strh.w	lr, [r5, #16]
	ptr_job->b_buf_end = false;
  402042:	7c6a      	ldrb	r2, [r5, #17]
	ptr_job->b_stall_requested = false;
  402044:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  402048:	f36f 1245 	bfc	r2, #5, #1
  40204c:	746a      	strb	r2, [r5, #17]
	if (b_dir_in) {
  40204e:	2800      	cmp	r0, #0
  402050:	db35      	blt.n	4020be <udd_ep_alloc+0xd2>
	udd_reset_endpoint(ep);
  402052:	4e23      	ldr	r6, [pc, #140]	; (4020e0 <udd_ep_alloc+0xf4>)
  402054:	6ab5      	ldr	r5, [r6, #40]	; 0x28
  402056:	2201      	movs	r2, #1
  402058:	fa02 f404 	lsl.w	r4, r2, r4
  40205c:	4325      	orrs	r5, r4
  40205e:	62b5      	str	r5, [r6, #40]	; 0x28
  402060:	4635      	mov	r5, r6
  402062:	6aaa      	ldr	r2, [r5, #40]	; 0x28
  402064:	4214      	tst	r4, r2
  402066:	d0fc      	beq.n	402062 <udd_ep_alloc+0x76>
  402068:	4d1d      	ldr	r5, [pc, #116]	; (4020e0 <udd_ep_alloc+0xf4>)
  40206a:	6aaa      	ldr	r2, [r5, #40]	; 0x28
  40206c:	ea22 0404 	bic.w	r4, r2, r4
  402070:	62ac      	str	r4, [r5, #40]	; 0x28
	udd_configure_endpoint(ep,
  402072:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402074:	9201      	str	r2, [sp, #4]
  402076:	9a01      	ldr	r2, [sp, #4]
  402078:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  40207c:	9201      	str	r2, [sp, #4]
  40207e:	9a01      	ldr	r2, [sp, #4]
  402080:	f422 4207 	bic.w	r2, r2, #34560	; 0x8700
  402084:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  402088:	9201      	str	r2, [sp, #4]
  40208a:	2800      	cmp	r0, #0
  40208c:	ea4f 2201 	mov.w	r2, r1, lsl #8
  402090:	f402 7240 	and.w	r2, r2, #768	; 0x300
  402094:	bfb4      	ite	lt
  402096:	f442 4204 	orrlt.w	r2, r2, #33792	; 0x8400
  40209a:	f442 4200 	orrge.w	r2, r2, #32768	; 0x8000
  40209e:	9901      	ldr	r1, [sp, #4]
  4020a0:	4311      	orrs	r1, r2
  4020a2:	9101      	str	r1, [sp, #4]
  4020a4:	9901      	ldr	r1, [sp, #4]
  4020a6:	6319      	str	r1, [r3, #48]	; 0x30
  4020a8:	6b19      	ldr	r1, [r3, #48]	; 0x30
  4020aa:	ea32 0101 	bics.w	r1, r2, r1
  4020ae:	d1fb      	bne.n	4020a8 <udd_ep_alloc+0xbc>
	return true;
  4020b0:	2001      	movs	r0, #1
  4020b2:	e00a      	b.n	4020ca <udd_ep_alloc+0xde>
	if (b_iso && (!udd_is_endpoint_support_iso(ep))) {
  4020b4:	b16c      	cbz	r4, 4020d2 <udd_ep_alloc+0xe6>
  4020b6:	2c03      	cmp	r4, #3
  4020b8:	d1ab      	bne.n	402012 <udd_ep_alloc+0x26>
		return false;
  4020ba:	2000      	movs	r0, #0
  4020bc:	e005      	b.n	4020ca <udd_ep_alloc+0xde>
		ptr_job->bank = 0;
  4020be:	787a      	ldrb	r2, [r7, #1]
  4020c0:	f36f 0283 	bfc	r2, #2, #2
  4020c4:	707a      	strb	r2, [r7, #1]
  4020c6:	e7c4      	b.n	402052 <udd_ep_alloc+0x66>
		return false;
  4020c8:	2000      	movs	r0, #0
}
  4020ca:	b003      	add	sp, #12
  4020cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false;
  4020ce:	2000      	movs	r0, #0
  4020d0:	e7fb      	b.n	4020ca <udd_ep_alloc+0xde>
		return false;
  4020d2:	2000      	movs	r0, #0
  4020d4:	e7f9      	b.n	4020ca <udd_ep_alloc+0xde>
		return false;
  4020d6:	2000      	movs	r0, #0
  4020d8:	e7f7      	b.n	4020ca <udd_ep_alloc+0xde>
  4020da:	bf00      	nop
  4020dc:	20000c48 	.word	0x20000c48
  4020e0:	40034000 	.word	0x40034000

004020e4 <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  4020e4:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  4020e8:	2a03      	cmp	r2, #3
  4020ea:	d822      	bhi.n	402132 <udd_ep_free+0x4e>
{
  4020ec:	b500      	push	{lr}
  4020ee:	b083      	sub	sp, #12
  4020f0:	0091      	lsls	r1, r2, #2
  4020f2:	f101 2140 	add.w	r1, r1, #1073758208	; 0x40004000
  4020f6:	f501 3140 	add.w	r1, r1, #196608	; 0x30000
	udd_disable_endpoint(ep_index);
  4020fa:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4020fc:	9301      	str	r3, [sp, #4]
  4020fe:	9b01      	ldr	r3, [sp, #4]
  402100:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  402104:	9301      	str	r3, [sp, #4]
  402106:	9b01      	ldr	r3, [sp, #4]
  402108:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
  40210c:	9301      	str	r3, [sp, #4]
  40210e:	9b01      	ldr	r3, [sp, #4]
  402110:	630b      	str	r3, [r1, #48]	; 0x30
  402112:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  402114:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  402118:	d1fb      	bne.n	402112 <udd_ep_free+0x2e>
	udd_ep_finish_job(&udd_ep_job[ep - 1], UDD_EP_TRANSFER_ABORT, ep);
  40211a:	1e50      	subs	r0, r2, #1
  40211c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402120:	2101      	movs	r1, #1
  402122:	4b04      	ldr	r3, [pc, #16]	; (402134 <udd_ep_free+0x50>)
  402124:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  402128:	4b03      	ldr	r3, [pc, #12]	; (402138 <udd_ep_free+0x54>)
  40212a:	4798      	blx	r3
}
  40212c:	b003      	add	sp, #12
  40212e:	f85d fb04 	ldr.w	pc, [sp], #4
  402132:	4770      	bx	lr
  402134:	20000c48 	.word	0x20000c48
  402138:	00401249 	.word	0x00401249

0040213c <udd_ep_is_halted>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  40213c:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  402140:	2803      	cmp	r0, #3
  402142:	d815      	bhi.n	402170 <udd_ep_is_halted+0x34>
	return ptr_job->b_stall_requested ||
  402144:	1e43      	subs	r3, r0, #1
  402146:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  40214a:	4a0a      	ldr	r2, [pc, #40]	; (402174 <udd_ep_is_halted+0x38>)
  40214c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  402150:	7c5b      	ldrb	r3, [r3, #17]
  402152:	f013 0f20 	tst.w	r3, #32
  402156:	d109      	bne.n	40216c <udd_ep_is_halted+0x30>
			Is_udd_endpoint_stall_pending(ep & USB_EP_ADDR_MASK);
  402158:	300c      	adds	r0, #12
  40215a:	4b07      	ldr	r3, [pc, #28]	; (402178 <udd_ep_is_halted+0x3c>)
  40215c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
	return ptr_job->b_stall_requested ||
  402160:	f013 0f28 	tst.w	r3, #40	; 0x28
  402164:	bf14      	ite	ne
  402166:	2001      	movne	r0, #1
  402168:	2000      	moveq	r0, #0
  40216a:	4770      	bx	lr
  40216c:	2001      	movs	r0, #1
  40216e:	4770      	bx	lr
		return false;
  402170:	2000      	movs	r0, #0
}
  402172:	4770      	bx	lr
  402174:	20000c48 	.word	0x20000c48
  402178:	40034000 	.word	0x40034000

0040217c <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  40217c:	f000 010f 	and.w	r1, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  402180:	2903      	cmp	r1, #3
  402182:	d85f      	bhi.n	402244 <udd_ep_set_halt+0xc8>
{
  402184:	b410      	push	{r4}
  402186:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  402188:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40218c:	fab3 f383 	clz	r3, r3
  402190:	095b      	lsrs	r3, r3, #5
  402192:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  402194:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  402196:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40219a:	2200      	movs	r2, #0
  40219c:	4b2c      	ldr	r3, [pc, #176]	; (402250 <udd_ep_set_halt+0xd4>)
  40219e:	701a      	strb	r2, [r3, #0]
	return flags;
  4021a0:	9c01      	ldr	r4, [sp, #4]
	if (b_dir_in && (Is_udd_transmit_ready(ep_index)
  4021a2:	f010 0f80 	tst.w	r0, #128	; 0x80
  4021a6:	d124      	bne.n	4021f2 <udd_ep_set_halt+0x76>
  4021a8:	008a      	lsls	r2, r1, #2
  4021aa:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  4021ae:	f502 3240 	add.w	r2, r2, #196608	; 0x30000
		udd_enable_stall_handshake(ep_index);
  4021b2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4021b4:	9300      	str	r3, [sp, #0]
  4021b6:	9b00      	ldr	r3, [sp, #0]
  4021b8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4021bc:	9300      	str	r3, [sp, #0]
  4021be:	9b00      	ldr	r3, [sp, #0]
  4021c0:	f043 0320 	orr.w	r3, r3, #32
  4021c4:	9300      	str	r3, [sp, #0]
  4021c6:	9b00      	ldr	r3, [sp, #0]
  4021c8:	6313      	str	r3, [r2, #48]	; 0x30
  4021ca:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4021cc:	f013 0f20 	tst.w	r3, #32
  4021d0:	d0fb      	beq.n	4021ca <udd_ep_set_halt+0x4e>
		udd_enable_endpoint_interrupt(ep_index);
  4021d2:	2301      	movs	r3, #1
  4021d4:	fa03 f101 	lsl.w	r1, r3, r1
  4021d8:	4b1e      	ldr	r3, [pc, #120]	; (402254 <udd_ep_set_halt+0xd8>)
  4021da:	6119      	str	r1, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  4021dc:	2c00      	cmp	r4, #0
  4021de:	d035      	beq.n	40224c <udd_ep_set_halt+0xd0>
		cpu_irq_enable();
  4021e0:	2001      	movs	r0, #1
  4021e2:	4b1b      	ldr	r3, [pc, #108]	; (402250 <udd_ep_set_halt+0xd4>)
  4021e4:	7018      	strb	r0, [r3, #0]
  4021e6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4021ea:	b662      	cpsie	i
}
  4021ec:	b003      	add	sp, #12
  4021ee:	bc10      	pop	{r4}
  4021f0:	4770      	bx	lr
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
  4021f2:	1e4b      	subs	r3, r1, #1
	if (b_dir_in && (Is_udd_transmit_ready(ep_index)
  4021f4:	f101 020c 	add.w	r2, r1, #12
  4021f8:	4816      	ldr	r0, [pc, #88]	; (402254 <udd_ep_set_halt+0xd8>)
  4021fa:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  4021fe:	f012 0f10 	tst.w	r2, #16
  402202:	d109      	bne.n	402218 <udd_ep_set_halt+0x9c>
				|| ptr_job->bank > 1)) {
  402204:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  402208:	4813      	ldr	r0, [pc, #76]	; (402258 <udd_ep_set_halt+0xdc>)
  40220a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  40220e:	7c52      	ldrb	r2, [r2, #17]
  402210:	f3c2 0281 	ubfx	r2, r2, #2, #2
  402214:	2a01      	cmp	r2, #1
  402216:	ddc7      	ble.n	4021a8 <udd_ep_set_halt+0x2c>
		ptr_job->b_stall_requested = true;
  402218:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  40221c:	4b0e      	ldr	r3, [pc, #56]	; (402258 <udd_ep_set_halt+0xdc>)
  40221e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  402222:	7c5a      	ldrb	r2, [r3, #17]
  402224:	f042 0220 	orr.w	r2, r2, #32
  402228:	745a      	strb	r2, [r3, #17]
		udd_enable_endpoint_interrupt(ep_index);
  40222a:	2301      	movs	r3, #1
  40222c:	fa03 f101 	lsl.w	r1, r3, r1
  402230:	4b08      	ldr	r3, [pc, #32]	; (402254 <udd_ep_set_halt+0xd8>)
  402232:	6119      	str	r1, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  402234:	b144      	cbz	r4, 402248 <udd_ep_set_halt+0xcc>
		cpu_irq_enable();
  402236:	2001      	movs	r0, #1
  402238:	4b05      	ldr	r3, [pc, #20]	; (402250 <udd_ep_set_halt+0xd4>)
  40223a:	7018      	strb	r0, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  40223c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402240:	b662      	cpsie	i
  402242:	e7d3      	b.n	4021ec <udd_ep_set_halt+0x70>
		return false;
  402244:	2000      	movs	r0, #0
  402246:	4770      	bx	lr
		return true;
  402248:	2001      	movs	r0, #1
  40224a:	e7cf      	b.n	4021ec <udd_ep_set_halt+0x70>
	return true;
  40224c:	2001      	movs	r0, #1
  40224e:	e7cd      	b.n	4021ec <udd_ep_set_halt+0x70>
  402250:	200000a0 	.word	0x200000a0
  402254:	40034000 	.word	0x40034000
  402258:	20000c48 	.word	0x20000c48

0040225c <udd_ep_clear_halt>:
	ep &= USB_EP_ADDR_MASK;
  40225c:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
  402260:	2803      	cmp	r0, #3
  402262:	d85e      	bhi.n	402322 <udd_ep_clear_halt+0xc6>
{
  402264:	b530      	push	{r4, r5, lr}
  402266:	b083      	sub	sp, #12
	ptr_job = &udd_ep_job[ep - 1];
  402268:	1e44      	subs	r4, r0, #1
	ptr_job->b_stall_requested = false;
  40226a:	eb04 0284 	add.w	r2, r4, r4, lsl #2
  40226e:	4b2f      	ldr	r3, [pc, #188]	; (40232c <udd_ep_clear_halt+0xd0>)
  402270:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  402274:	7c5a      	ldrb	r2, [r3, #17]
  402276:	f36f 1245 	bfc	r2, #5, #1
  40227a:	745a      	strb	r2, [r3, #17]
  40227c:	0083      	lsls	r3, r0, #2
  40227e:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  402282:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
	if (Is_udd_endpoint_stall_requested(ep)) {
  402286:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402288:	f012 0f20 	tst.w	r2, #32
  40228c:	d04b      	beq.n	402326 <udd_ep_clear_halt+0xca>
		udd_disable_stall_handshake(ep);
  40228e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402290:	9200      	str	r2, [sp, #0]
  402292:	9a00      	ldr	r2, [sp, #0]
  402294:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  402298:	9200      	str	r2, [sp, #0]
  40229a:	9a00      	ldr	r2, [sp, #0]
  40229c:	f022 0220 	bic.w	r2, r2, #32
  4022a0:	9200      	str	r2, [sp, #0]
  4022a2:	9a00      	ldr	r2, [sp, #0]
  4022a4:	631a      	str	r2, [r3, #48]	; 0x30
  4022a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4022a8:	f012 0f20 	tst.w	r2, #32
  4022ac:	d1fb      	bne.n	4022a6 <udd_ep_clear_halt+0x4a>
		udd_reset_endpoint(ep);
  4022ae:	4d20      	ldr	r5, [pc, #128]	; (402330 <udd_ep_clear_halt+0xd4>)
  4022b0:	6aa9      	ldr	r1, [r5, #40]	; 0x28
  4022b2:	2201      	movs	r2, #1
  4022b4:	fa02 f000 	lsl.w	r0, r2, r0
  4022b8:	4301      	orrs	r1, r0
  4022ba:	62a9      	str	r1, [r5, #40]	; 0x28
  4022bc:	4629      	mov	r1, r5
  4022be:	6a8a      	ldr	r2, [r1, #40]	; 0x28
  4022c0:	4210      	tst	r0, r2
  4022c2:	d0fc      	beq.n	4022be <udd_ep_clear_halt+0x62>
  4022c4:	491a      	ldr	r1, [pc, #104]	; (402330 <udd_ep_clear_halt+0xd4>)
  4022c6:	6a8a      	ldr	r2, [r1, #40]	; 0x28
  4022c8:	ea22 0000 	bic.w	r0, r2, r0
  4022cc:	6288      	str	r0, [r1, #40]	; 0x28
		udd_ack_stall(ep);
  4022ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4022d0:	9201      	str	r2, [sp, #4]
  4022d2:	9a01      	ldr	r2, [sp, #4]
  4022d4:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4022d8:	9201      	str	r2, [sp, #4]
  4022da:	9a01      	ldr	r2, [sp, #4]
  4022dc:	f022 0208 	bic.w	r2, r2, #8
  4022e0:	9201      	str	r2, [sp, #4]
  4022e2:	9a01      	ldr	r2, [sp, #4]
  4022e4:	631a      	str	r2, [r3, #48]	; 0x30
  4022e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4022e8:	f012 0f08 	tst.w	r2, #8
  4022ec:	d1fb      	bne.n	4022e6 <udd_ep_clear_halt+0x8a>
		if (ptr_job->busy == true) {
  4022ee:	eb04 0384 	add.w	r3, r4, r4, lsl #2
  4022f2:	4a0e      	ldr	r2, [pc, #56]	; (40232c <udd_ep_clear_halt+0xd0>)
  4022f4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4022f8:	7c5b      	ldrb	r3, [r3, #17]
  4022fa:	f013 0f10 	tst.w	r3, #16
  4022fe:	d101      	bne.n	402304 <udd_ep_clear_halt+0xa8>
	return true;
  402300:	2001      	movs	r0, #1
  402302:	e011      	b.n	402328 <udd_ep_clear_halt+0xcc>
			ptr_job->busy = false;
  402304:	4611      	mov	r1, r2
  402306:	00a2      	lsls	r2, r4, #2
  402308:	1913      	adds	r3, r2, r4
  40230a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  40230e:	7c58      	ldrb	r0, [r3, #17]
  402310:	f36f 1004 	bfc	r0, #4, #1
  402314:	7458      	strb	r0, [r3, #17]
			ptr_job->call_nohalt();
  402316:	4414      	add	r4, r2
  402318:	f851 3024 	ldr.w	r3, [r1, r4, lsl #2]
  40231c:	4798      	blx	r3
	return true;
  40231e:	2001      	movs	r0, #1
  402320:	e002      	b.n	402328 <udd_ep_clear_halt+0xcc>
		return false;
  402322:	2000      	movs	r0, #0
  402324:	4770      	bx	lr
	return true;
  402326:	2001      	movs	r0, #1
}
  402328:	b003      	add	sp, #12
  40232a:	bd30      	pop	{r4, r5, pc}
  40232c:	20000c48 	.word	0x20000c48
  402330:	40034000 	.word	0x40034000

00402334 <udd_ep_run>:
{
  402334:	b5f0      	push	{r4, r5, r6, r7, lr}
  402336:	b083      	sub	sp, #12
	ep &= USB_EP_ADDR_MASK;
  402338:	f000 070f 	and.w	r7, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
  40233c:	2f03      	cmp	r7, #3
  40233e:	f200 80a2 	bhi.w	402486 <udd_ep_run+0x152>
  402342:	00bc      	lsls	r4, r7, #2
  402344:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  402348:	f504 3440 	add.w	r4, r4, #196608	; 0x30000
	if ((!Is_udd_endpoint_enabled(ep))
  40234c:	6b25      	ldr	r5, [r4, #48]	; 0x30
  40234e:	f415 4f00 	tst.w	r5, #32768	; 0x8000
  402352:	f000 809b 	beq.w	40248c <udd_ep_run+0x158>
	ptr_job = &udd_ep_job[ep - 1];
  402356:	1e7d      	subs	r5, r7, #1
			|| ptr_job->b_stall_requested
  402358:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  40235c:	4e50      	ldr	r6, [pc, #320]	; (4024a0 <udd_ep_run+0x16c>)
  40235e:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  402362:	7c76      	ldrb	r6, [r6, #17]
  402364:	f016 0f20 	tst.w	r6, #32
  402368:	f040 8092 	bne.w	402490 <udd_ep_run+0x15c>
			|| Is_udd_endpoint_stall_requested(ep)) {
  40236c:	6b26      	ldr	r6, [r4, #48]	; 0x30
  40236e:	f016 0f20 	tst.w	r6, #32
  402372:	f040 808f 	bne.w	402494 <udd_ep_run+0x160>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  402376:	f3ef 8610 	mrs	r6, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40237a:	fab6 f686 	clz	r6, r6
  40237e:	0976      	lsrs	r6, r6, #5
  402380:	9600      	str	r6, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  402382:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  402384:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  402388:	f04f 0e00 	mov.w	lr, #0
  40238c:	4e45      	ldr	r6, [pc, #276]	; (4024a4 <udd_ep_run+0x170>)
  40238e:	f886 e000 	strb.w	lr, [r6]
	return flags;
  402392:	f8dd c000 	ldr.w	ip, [sp]
	if (ptr_job->busy == true) {
  402396:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  40239a:	4e41      	ldr	r6, [pc, #260]	; (4024a0 <udd_ep_run+0x16c>)
  40239c:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  4023a0:	7c76      	ldrb	r6, [r6, #17]
  4023a2:	f016 0f10 	tst.w	r6, #16
  4023a6:	d00a      	beq.n	4023be <udd_ep_run+0x8a>
	if (cpu_irq_is_enabled_flags(flags))
  4023a8:	f1bc 0f00 	cmp.w	ip, #0
  4023ac:	d074      	beq.n	402498 <udd_ep_run+0x164>
		cpu_irq_enable();
  4023ae:	2201      	movs	r2, #1
  4023b0:	4b3c      	ldr	r3, [pc, #240]	; (4024a4 <udd_ep_run+0x170>)
  4023b2:	701a      	strb	r2, [r3, #0]
  4023b4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4023b8:	b662      	cpsie	i
		return false; // Job already on going
  4023ba:	2000      	movs	r0, #0
  4023bc:	e064      	b.n	402488 <udd_ep_run+0x154>
	ptr_job->busy = true;
  4023be:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  4023c2:	4e37      	ldr	r6, [pc, #220]	; (4024a0 <udd_ep_run+0x16c>)
  4023c4:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  4023c8:	f896 e011 	ldrb.w	lr, [r6, #17]
  4023cc:	f04e 0e10 	orr.w	lr, lr, #16
  4023d0:	f886 e011 	strb.w	lr, [r6, #17]
	if (cpu_irq_is_enabled_flags(flags))
  4023d4:	f1bc 0f00 	cmp.w	ip, #0
  4023d8:	d007      	beq.n	4023ea <udd_ep_run+0xb6>
		cpu_irq_enable();
  4023da:	f04f 0e01 	mov.w	lr, #1
  4023de:	4e31      	ldr	r6, [pc, #196]	; (4024a4 <udd_ep_run+0x170>)
  4023e0:	f886 e000 	strb.w	lr, [r6]
  __ASM volatile ("dmb 0xF":::"memory");
  4023e4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4023e8:	b662      	cpsie	i
	ptr_job->buf = buf;
  4023ea:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 4024a0 <udd_ep_run+0x16c>
  4023ee:	eb05 0685 	add.w	r6, r5, r5, lsl #2
  4023f2:	00b6      	lsls	r6, r6, #2
  4023f4:	eb0c 0e06 	add.w	lr, ip, r6
  4023f8:	f8ce 2004 	str.w	r2, [lr, #4]
	ptr_job->buf_size = buf_size;
  4023fc:	f8ce 3008 	str.w	r3, [lr, #8]
	ptr_job->buf_cnt = 0;
  402400:	2200      	movs	r2, #0
  402402:	f8ce 200c 	str.w	r2, [lr, #12]
	ptr_job->call_trans = callback;
  402406:	9a08      	ldr	r2, [sp, #32]
  402408:	f84c 2006 	str.w	r2, [ip, r6]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
  40240c:	b911      	cbnz	r1, 402414 <udd_ep_run+0xe0>
  40240e:	fab3 f183 	clz	r1, r3
  402412:	0949      	lsrs	r1, r1, #5
  402414:	4a22      	ldr	r2, [pc, #136]	; (4024a0 <udd_ep_run+0x16c>)
  402416:	00ae      	lsls	r6, r5, #2
  402418:	1973      	adds	r3, r6, r5
  40241a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40241e:	7c5b      	ldrb	r3, [r3, #17]
  402420:	f361 1386 	bfi	r3, r1, #6, #1
	ptr_job->b_buf_end = false;
  402424:	4435      	add	r5, r6
  402426:	eb02 0285 	add.w	r2, r2, r5, lsl #2
  40242a:	f36f 13c7 	bfc	r3, #7, #1
  40242e:	7453      	strb	r3, [r2, #17]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  402430:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  402434:	fab3 f383 	clz	r3, r3
  402438:	095b      	lsrs	r3, r3, #5
  40243a:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40243c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  40243e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  402442:	2200      	movs	r2, #0
  402444:	4b17      	ldr	r3, [pc, #92]	; (4024a4 <udd_ep_run+0x170>)
  402446:	701a      	strb	r2, [r3, #0]
	return flags;
  402448:	9d01      	ldr	r5, [sp, #4]
	udd_enable_endpoint_interrupt(ep);
  40244a:	2301      	movs	r3, #1
  40244c:	40bb      	lsls	r3, r7
  40244e:	4a16      	ldr	r2, [pc, #88]	; (4024a8 <udd_ep_run+0x174>)
  402450:	6113      	str	r3, [r2, #16]
	if (b_dir_in) {
  402452:	f010 0f80 	tst.w	r0, #128	; 0x80
  402456:	d107      	bne.n	402468 <udd_ep_run+0x134>
	if (cpu_irq_is_enabled_flags(flags))
  402458:	b305      	cbz	r5, 40249c <udd_ep_run+0x168>
		cpu_irq_enable();
  40245a:	2001      	movs	r0, #1
  40245c:	4b11      	ldr	r3, [pc, #68]	; (4024a4 <udd_ep_run+0x170>)
  40245e:	7018      	strb	r0, [r3, #0]
  402460:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402464:	b662      	cpsie	i
  402466:	e00f      	b.n	402488 <udd_ep_run+0x154>
		if (Is_udd_in_pending(ep)) {
  402468:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40246a:	f013 0f11 	tst.w	r3, #17
  40246e:	d1f3      	bne.n	402458 <udd_ep_run+0x124>
			if (udd_ep_in_sent(ep, true)) {
  402470:	2101      	movs	r1, #1
  402472:	4638      	mov	r0, r7
  402474:	4b0d      	ldr	r3, [pc, #52]	; (4024ac <udd_ep_run+0x178>)
  402476:	4798      	blx	r3
  402478:	2800      	cmp	r0, #0
  40247a:	d0ed      	beq.n	402458 <udd_ep_run+0x124>
				udd_ep_in_sent(ep, false);
  40247c:	2100      	movs	r1, #0
  40247e:	4638      	mov	r0, r7
  402480:	4b0a      	ldr	r3, [pc, #40]	; (4024ac <udd_ep_run+0x178>)
  402482:	4798      	blx	r3
  402484:	e7e8      	b.n	402458 <udd_ep_run+0x124>
		return false;
  402486:	2000      	movs	r0, #0
}
  402488:	b003      	add	sp, #12
  40248a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false; // Endpoint is halted
  40248c:	2000      	movs	r0, #0
  40248e:	e7fb      	b.n	402488 <udd_ep_run+0x154>
  402490:	2000      	movs	r0, #0
  402492:	e7f9      	b.n	402488 <udd_ep_run+0x154>
  402494:	2000      	movs	r0, #0
  402496:	e7f7      	b.n	402488 <udd_ep_run+0x154>
		return false; // Job already on going
  402498:	2000      	movs	r0, #0
  40249a:	e7f5      	b.n	402488 <udd_ep_run+0x154>
	return true;
  40249c:	2001      	movs	r0, #1
  40249e:	e7f3      	b.n	402488 <udd_ep_run+0x154>
  4024a0:	20000c48 	.word	0x20000c48
  4024a4:	200000a0 	.word	0x200000a0
  4024a8:	40034000 	.word	0x40034000
  4024ac:	0040135d 	.word	0x0040135d

004024b0 <udd_ep_abort>:
{
  4024b0:	b5f0      	push	{r4, r5, r6, r7, lr}
  4024b2:	b087      	sub	sp, #28
	ep &= USB_EP_ADDR_MASK;
  4024b4:	f000 050f 	and.w	r5, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
  4024b8:	2d03      	cmp	r5, #3
  4024ba:	d840      	bhi.n	40253e <udd_ep_abort+0x8e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4024bc:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4024c0:	fab3 f383 	clz	r3, r3
  4024c4:	095b      	lsrs	r3, r3, #5
  4024c6:	9305      	str	r3, [sp, #20]
  __ASM volatile ("cpsid i" : : : "memory");
  4024c8:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4024ca:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4024ce:	2200      	movs	r2, #0
  4024d0:	4b4b      	ldr	r3, [pc, #300]	; (402600 <udd_ep_abort+0x150>)
  4024d2:	701a      	strb	r2, [r3, #0]
	return flags;
  4024d4:	9b05      	ldr	r3, [sp, #20]
	udd_disable_endpoint_interrupt(ep);
  4024d6:	2401      	movs	r4, #1
  4024d8:	40ac      	lsls	r4, r5
  4024da:	4a4a      	ldr	r2, [pc, #296]	; (402604 <udd_ep_abort+0x154>)
  4024dc:	6154      	str	r4, [r2, #20]
	if (cpu_irq_is_enabled_flags(flags))
  4024de:	b12b      	cbz	r3, 4024ec <udd_ep_abort+0x3c>
		cpu_irq_enable();
  4024e0:	2201      	movs	r2, #1
  4024e2:	4b47      	ldr	r3, [pc, #284]	; (402600 <udd_ep_abort+0x150>)
  4024e4:	701a      	strb	r2, [r3, #0]
  4024e6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4024ea:	b662      	cpsie	i
	if (b_dir_in) {
  4024ec:	f010 0f80 	tst.w	r0, #128	; 0x80
  4024f0:	d127      	bne.n	402542 <udd_ep_abort+0x92>
  4024f2:	00ae      	lsls	r6, r5, #2
  4024f4:	f106 2640 	add.w	r6, r6, #1073758208	; 0x40004000
  4024f8:	f506 3640 	add.w	r6, r6, #196608	; 0x30000
		while(Is_udd_any_bank_received(ep)) {
  4024fc:	6b33      	ldr	r3, [r6, #48]	; 0x30
  4024fe:	f013 0f42 	tst.w	r3, #66	; 0x42
  402502:	d006      	beq.n	402512 <udd_ep_abort+0x62>
			udd_ep_ack_out_received(ep);
  402504:	4f40      	ldr	r7, [pc, #256]	; (402608 <udd_ep_abort+0x158>)
  402506:	4628      	mov	r0, r5
  402508:	47b8      	blx	r7
		while(Is_udd_any_bank_received(ep)) {
  40250a:	6b33      	ldr	r3, [r6, #48]	; 0x30
  40250c:	f013 0f42 	tst.w	r3, #66	; 0x42
  402510:	d1f9      	bne.n	402506 <udd_ep_abort+0x56>
	udd_reset_endpoint(ep);
  402512:	4a3c      	ldr	r2, [pc, #240]	; (402604 <udd_ep_abort+0x154>)
  402514:	6a93      	ldr	r3, [r2, #40]	; 0x28
  402516:	4323      	orrs	r3, r4
  402518:	6293      	str	r3, [r2, #40]	; 0x28
  40251a:	6a93      	ldr	r3, [r2, #40]	; 0x28
  40251c:	421c      	tst	r4, r3
  40251e:	d0fc      	beq.n	40251a <udd_ep_abort+0x6a>
  402520:	4a38      	ldr	r2, [pc, #224]	; (402604 <udd_ep_abort+0x154>)
  402522:	6a93      	ldr	r3, [r2, #40]	; 0x28
  402524:	ea23 0404 	bic.w	r4, r3, r4
  402528:	6294      	str	r4, [r2, #40]	; 0x28
	udd_ep_finish_job(&udd_ep_job[ep - 1], UDD_EP_TRANSFER_ABORT, ep);
  40252a:	1e68      	subs	r0, r5, #1
  40252c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402530:	462a      	mov	r2, r5
  402532:	2101      	movs	r1, #1
  402534:	4b35      	ldr	r3, [pc, #212]	; (40260c <udd_ep_abort+0x15c>)
  402536:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  40253a:	4b35      	ldr	r3, [pc, #212]	; (402610 <udd_ep_abort+0x160>)
  40253c:	4798      	blx	r3
}
  40253e:	b007      	add	sp, #28
  402540:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402542:	00ab      	lsls	r3, r5, #2
  402544:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  402548:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
		if (Is_udd_transmit_ready(ep)) {
  40254c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40254e:	f012 0f10 	tst.w	r2, #16
  402552:	d03a      	beq.n	4025ca <udd_ep_abort+0x11a>
			udd_kill_data_in_fifo(ep,
  402554:	b34d      	cbz	r5, 4025aa <udd_ep_abort+0xfa>
  402556:	2d03      	cmp	r5, #3
  402558:	d027      	beq.n	4025aa <udd_ep_abort+0xfa>
  40255a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40255c:	9201      	str	r2, [sp, #4]
  40255e:	9a01      	ldr	r2, [sp, #4]
  402560:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  402564:	9201      	str	r2, [sp, #4]
  402566:	9a01      	ldr	r2, [sp, #4]
  402568:	f022 0210 	bic.w	r2, r2, #16
  40256c:	9201      	str	r2, [sp, #4]
  40256e:	9a01      	ldr	r2, [sp, #4]
  402570:	631a      	str	r2, [r3, #48]	; 0x30
  402572:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402574:	f012 0f10 	tst.w	r2, #16
  402578:	d1fb      	bne.n	402572 <udd_ep_abort+0xc2>
  40257a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40257c:	f012 0f10 	tst.w	r2, #16
  402580:	d1fb      	bne.n	40257a <udd_ep_abort+0xca>
  402582:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402584:	9202      	str	r2, [sp, #8]
  402586:	9a02      	ldr	r2, [sp, #8]
  402588:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  40258c:	9202      	str	r2, [sp, #8]
  40258e:	9a02      	ldr	r2, [sp, #8]
  402590:	f042 0210 	orr.w	r2, r2, #16
  402594:	9202      	str	r2, [sp, #8]
  402596:	9a02      	ldr	r2, [sp, #8]
  402598:	631a      	str	r2, [r3, #48]	; 0x30
  40259a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40259c:	f012 0f10 	tst.w	r2, #16
  4025a0:	d0fb      	beq.n	40259a <udd_ep_abort+0xea>
  4025a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025a4:	f012 0f10 	tst.w	r2, #16
  4025a8:	d0fb      	beq.n	4025a2 <udd_ep_abort+0xf2>
  4025aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025ac:	9203      	str	r2, [sp, #12]
  4025ae:	9a03      	ldr	r2, [sp, #12]
  4025b0:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4025b4:	9203      	str	r2, [sp, #12]
  4025b6:	9a03      	ldr	r2, [sp, #12]
  4025b8:	f022 0210 	bic.w	r2, r2, #16
  4025bc:	9203      	str	r2, [sp, #12]
  4025be:	9a03      	ldr	r2, [sp, #12]
  4025c0:	631a      	str	r2, [r3, #48]	; 0x30
  4025c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025c4:	f012 0f10 	tst.w	r2, #16
  4025c8:	d1fb      	bne.n	4025c2 <udd_ep_abort+0x112>
		udd_ack_in_sent(ep);
  4025ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025cc:	9204      	str	r2, [sp, #16]
  4025ce:	9a04      	ldr	r2, [sp, #16]
  4025d0:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4025d4:	9204      	str	r2, [sp, #16]
  4025d6:	9a04      	ldr	r2, [sp, #16]
  4025d8:	f022 0201 	bic.w	r2, r2, #1
  4025dc:	9204      	str	r2, [sp, #16]
  4025de:	9a04      	ldr	r2, [sp, #16]
  4025e0:	631a      	str	r2, [r3, #48]	; 0x30
  4025e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4025e4:	f012 0f01 	tst.w	r2, #1
  4025e8:	d1fb      	bne.n	4025e2 <udd_ep_abort+0x132>
		udd_ep_job[ep - 1].bank = 0;
  4025ea:	1e6b      	subs	r3, r5, #1
  4025ec:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  4025f0:	4b06      	ldr	r3, [pc, #24]	; (40260c <udd_ep_abort+0x15c>)
  4025f2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4025f6:	7c5a      	ldrb	r2, [r3, #17]
  4025f8:	f36f 0283 	bfc	r2, #2, #2
  4025fc:	745a      	strb	r2, [r3, #17]
  4025fe:	e788      	b.n	402512 <udd_ep_abort+0x62>
  402600:	200000a0 	.word	0x200000a0
  402604:	40034000 	.word	0x40034000
  402608:	00401289 	.word	0x00401289
  40260c:	20000c48 	.word	0x20000c48
  402610:	00401249 	.word	0x00401249

00402614 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
  402614:	b510      	push	{r4, lr}
	case OSC_MAINCK_8M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
		break;

	case OSC_MAINCK_12M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  402616:	2020      	movs	r0, #32
  402618:	4b0a      	ldr	r3, [pc, #40]	; (402644 <sysclk_enable_usb+0x30>)
  40261a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  40261c:	4c0a      	ldr	r4, [pc, #40]	; (402648 <sysclk_enable_usb+0x34>)
  40261e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  402620:	2800      	cmp	r0, #0
  402622:	d0fc      	beq.n	40261e <sysclk_enable_usb+0xa>

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
	} else {
		pmc_disable_pllbck();
  402624:	4b09      	ldr	r3, [pc, #36]	; (40264c <sysclk_enable_usb+0x38>)
  402626:	4798      	blx	r3
		PMC->CKGR_PLLBR = p_cfg->ctrl;
  402628:	4a09      	ldr	r2, [pc, #36]	; (402650 <sysclk_enable_usb+0x3c>)
  40262a:	4b0a      	ldr	r3, [pc, #40]	; (402654 <sysclk_enable_usb+0x40>)
  40262c:	62da      	str	r2, [r3, #44]	; 0x2c
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
	} else {
		return pmc_is_locked_pllbck();
  40262e:	4c0a      	ldr	r4, [pc, #40]	; (402658 <sysclk_enable_usb+0x44>)
  402630:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  402632:	2800      	cmp	r0, #0
  402634:	d0fc      	beq.n	402630 <sysclk_enable_usb+0x1c>

		pll_enable_source(CONFIG_PLL1_SOURCE);
		pll_config_defaults(&pllcfg, 1);
		pll_enable(&pllcfg, 1);
		pll_wait_for_lock(1);
		pmc_switch_udpck_to_pllbck(CONFIG_USBCLK_DIV - 1);
  402636:	2001      	movs	r0, #1
  402638:	4b08      	ldr	r3, [pc, #32]	; (40265c <sysclk_enable_usb+0x48>)
  40263a:	4798      	blx	r3
		pmc_enable_udpck();
  40263c:	4b08      	ldr	r3, [pc, #32]	; (402660 <sysclk_enable_usb+0x4c>)
  40263e:	4798      	blx	r3
  402640:	bd10      	pop	{r4, pc}
  402642:	bf00      	nop
  402644:	004027ed 	.word	0x004027ed
  402648:	00402839 	.word	0x00402839
  40264c:	00402869 	.word	0x00402869
  402650:	000f3f02 	.word	0x000f3f02
  402654:	400e0400 	.word	0x400e0400
  402658:	00402875 	.word	0x00402875
  40265c:	0040292d 	.word	0x0040292d
  402660:	00402941 	.word	0x00402941

00402664 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  402664:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  402666:	480e      	ldr	r0, [pc, #56]	; (4026a0 <sysclk_init+0x3c>)
  402668:	4b0e      	ldr	r3, [pc, #56]	; (4026a4 <sysclk_init+0x40>)
  40266a:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  40266c:	2020      	movs	r0, #32
  40266e:	4b0e      	ldr	r3, [pc, #56]	; (4026a8 <sysclk_init+0x44>)
  402670:	4798      	blx	r3
		return pmc_osc_is_ready_mainck();
  402672:	4c0e      	ldr	r4, [pc, #56]	; (4026ac <sysclk_init+0x48>)
  402674:	47a0      	blx	r4
  402676:	2800      	cmp	r0, #0
  402678:	d0fc      	beq.n	402674 <sysclk_init+0x10>
		pmc_disable_pllack(); // Always stop PLL first!
  40267a:	4b0d      	ldr	r3, [pc, #52]	; (4026b0 <sysclk_init+0x4c>)
  40267c:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  40267e:	4a0d      	ldr	r2, [pc, #52]	; (4026b4 <sysclk_init+0x50>)
  402680:	4b0d      	ldr	r3, [pc, #52]	; (4026b8 <sysclk_init+0x54>)
  402682:	629a      	str	r2, [r3, #40]	; 0x28
		return pmc_is_locked_pllack();
  402684:	4c0d      	ldr	r4, [pc, #52]	; (4026bc <sysclk_init+0x58>)
  402686:	47a0      	blx	r4
  402688:	2800      	cmp	r0, #0
  40268a:	d0fc      	beq.n	402686 <sysclk_init+0x22>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  40268c:	2010      	movs	r0, #16
  40268e:	4b0c      	ldr	r3, [pc, #48]	; (4026c0 <sysclk_init+0x5c>)
  402690:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  402692:	4b0c      	ldr	r3, [pc, #48]	; (4026c4 <sysclk_init+0x60>)
  402694:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());									//Might need to add back in
  402696:	4802      	ldr	r0, [pc, #8]	; (4026a0 <sysclk_init+0x3c>)
  402698:	4b02      	ldr	r3, [pc, #8]	; (4026a4 <sysclk_init+0x40>)
  40269a:	4798      	blx	r3
  40269c:	bd10      	pop	{r4, pc}
  40269e:	bf00      	nop
  4026a0:	07270e00 	.word	0x07270e00
  4026a4:	00402e25 	.word	0x00402e25
  4026a8:	004027ed 	.word	0x004027ed
  4026ac:	00402839 	.word	0x00402839
  4026b0:	00402849 	.word	0x00402849
  4026b4:	20133f01 	.word	0x20133f01
  4026b8:	400e0400 	.word	0x400e0400
  4026bc:	00402859 	.word	0x00402859
  4026c0:	00402789 	.word	0x00402789
  4026c4:	00402d15 	.word	0x00402d15

004026c8 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  4026c8:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  4026ca:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  4026ce:	d039      	beq.n	402744 <pio_set_peripheral+0x7c>
  4026d0:	d813      	bhi.n	4026fa <pio_set_peripheral+0x32>
  4026d2:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4026d6:	d025      	beq.n	402724 <pio_set_peripheral+0x5c>
  4026d8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4026dc:	d10a      	bne.n	4026f4 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4026de:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4026e0:	4313      	orrs	r3, r2
  4026e2:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4026e4:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4026e6:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4026e8:	400b      	ands	r3, r1
  4026ea:	ea23 0302 	bic.w	r3, r3, r2
  4026ee:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  4026f0:	6042      	str	r2, [r0, #4]
  4026f2:	4770      	bx	lr
	switch (ul_type) {
  4026f4:	2900      	cmp	r1, #0
  4026f6:	d1fb      	bne.n	4026f0 <pio_set_peripheral+0x28>
  4026f8:	4770      	bx	lr
  4026fa:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4026fe:	d020      	beq.n	402742 <pio_set_peripheral+0x7a>
  402700:	d809      	bhi.n	402716 <pio_set_peripheral+0x4e>
  402702:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  402706:	d1f3      	bne.n	4026f0 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  402708:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  40270a:	4313      	orrs	r3, r2
  40270c:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  40270e:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  402710:	4313      	orrs	r3, r2
  402712:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  402714:	e7ec      	b.n	4026f0 <pio_set_peripheral+0x28>
	switch (ul_type) {
  402716:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  40271a:	d012      	beq.n	402742 <pio_set_peripheral+0x7a>
  40271c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  402720:	d00f      	beq.n	402742 <pio_set_peripheral+0x7a>
  402722:	e7e5      	b.n	4026f0 <pio_set_peripheral+0x28>
{
  402724:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  402726:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  402728:	6f04      	ldr	r4, [r0, #112]	; 0x70
  40272a:	43d3      	mvns	r3, r2
  40272c:	4021      	ands	r1, r4
  40272e:	461c      	mov	r4, r3
  402730:	4019      	ands	r1, r3
  402732:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  402734:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  402736:	6f41      	ldr	r1, [r0, #116]	; 0x74
  402738:	400b      	ands	r3, r1
  40273a:	4023      	ands	r3, r4
  40273c:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  40273e:	6042      	str	r2, [r0, #4]
}
  402740:	bc10      	pop	{r4}
  402742:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  402744:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  402746:	6f01      	ldr	r1, [r0, #112]	; 0x70
  402748:	400b      	ands	r3, r1
  40274a:	ea23 0302 	bic.w	r3, r3, r2
  40274e:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  402750:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  402752:	4313      	orrs	r3, r2
  402754:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  402756:	e7cb      	b.n	4026f0 <pio_set_peripheral+0x28>

00402758 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  402758:	b410      	push	{r4}
  40275a:	9c01      	ldr	r4, [sp, #4]
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  40275c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  40275e:	b944      	cbnz	r4, 402772 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  402760:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  402762:	b143      	cbz	r3, 402776 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  402764:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  402766:	b942      	cbnz	r2, 40277a <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  402768:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  40276a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  40276c:	6001      	str	r1, [r0, #0]
}
  40276e:	bc10      	pop	{r4}
  402770:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  402772:	6641      	str	r1, [r0, #100]	; 0x64
  402774:	e7f5      	b.n	402762 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  402776:	6541      	str	r1, [r0, #84]	; 0x54
  402778:	e7f5      	b.n	402766 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  40277a:	6301      	str	r1, [r0, #48]	; 0x30
  40277c:	e7f5      	b.n	40276a <pio_set_output+0x12>

0040277e <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  40277e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  402780:	4770      	bx	lr

00402782 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  402782:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  402784:	4770      	bx	lr
	...

00402788 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  402788:	4a17      	ldr	r2, [pc, #92]	; (4027e8 <pmc_switch_mck_to_pllack+0x60>)
  40278a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40278c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  402790:	4318      	orrs	r0, r3
  402792:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402794:	6e93      	ldr	r3, [r2, #104]	; 0x68
  402796:	f013 0f08 	tst.w	r3, #8
  40279a:	d10a      	bne.n	4027b2 <pmc_switch_mck_to_pllack+0x2a>
  40279c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4027a0:	4911      	ldr	r1, [pc, #68]	; (4027e8 <pmc_switch_mck_to_pllack+0x60>)
  4027a2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4027a4:	f012 0f08 	tst.w	r2, #8
  4027a8:	d103      	bne.n	4027b2 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4027aa:	3b01      	subs	r3, #1
  4027ac:	d1f9      	bne.n	4027a2 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  4027ae:	2001      	movs	r0, #1
  4027b0:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4027b2:	4a0d      	ldr	r2, [pc, #52]	; (4027e8 <pmc_switch_mck_to_pllack+0x60>)
  4027b4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4027b6:	f023 0303 	bic.w	r3, r3, #3
  4027ba:	f043 0302 	orr.w	r3, r3, #2
  4027be:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4027c0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4027c2:	f013 0f08 	tst.w	r3, #8
  4027c6:	d10a      	bne.n	4027de <pmc_switch_mck_to_pllack+0x56>
  4027c8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4027cc:	4906      	ldr	r1, [pc, #24]	; (4027e8 <pmc_switch_mck_to_pllack+0x60>)
  4027ce:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4027d0:	f012 0f08 	tst.w	r2, #8
  4027d4:	d105      	bne.n	4027e2 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4027d6:	3b01      	subs	r3, #1
  4027d8:	d1f9      	bne.n	4027ce <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4027da:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4027dc:	4770      	bx	lr
	return 0;
  4027de:	2000      	movs	r0, #0
  4027e0:	4770      	bx	lr
  4027e2:	2000      	movs	r0, #0
  4027e4:	4770      	bx	lr
  4027e6:	bf00      	nop
  4027e8:	400e0400 	.word	0x400e0400

004027ec <pmc_switch_mainck_to_fastrc>:
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  4027ec:	4911      	ldr	r1, [pc, #68]	; (402834 <pmc_switch_mainck_to_fastrc+0x48>)
  4027ee:	6a0a      	ldr	r2, [r1, #32]
  4027f0:	f442 125c 	orr.w	r2, r2, #3604480	; 0x370000
  4027f4:	f042 0208 	orr.w	r2, r2, #8
  4027f8:	620a      	str	r2, [r1, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4027fa:	460a      	mov	r2, r1
  4027fc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4027fe:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  402802:	d0fb      	beq.n	4027fc <pmc_switch_mainck_to_fastrc+0x10>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  402804:	4a0b      	ldr	r2, [pc, #44]	; (402834 <pmc_switch_mainck_to_fastrc+0x48>)
  402806:	6a13      	ldr	r3, [r2, #32]
  402808:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  40280c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  402810:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  402814:	4318      	orrs	r0, r3
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  402816:	6210      	str	r0, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  402818:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40281a:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  40281e:	d0fb      	beq.n	402818 <pmc_switch_mainck_to_fastrc+0x2c>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  402820:	4a04      	ldr	r2, [pc, #16]	; (402834 <pmc_switch_mainck_to_fastrc+0x48>)
  402822:	6a13      	ldr	r3, [r2, #32]
  402824:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  402828:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  40282c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  402830:	6213      	str	r3, [r2, #32]
  402832:	4770      	bx	lr
  402834:	400e0400 	.word	0x400e0400

00402838 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  402838:	4b02      	ldr	r3, [pc, #8]	; (402844 <pmc_osc_is_ready_mainck+0xc>)
  40283a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40283c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  402840:	4770      	bx	lr
  402842:	bf00      	nop
  402844:	400e0400 	.word	0x400e0400

00402848 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  402848:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40284c:	4b01      	ldr	r3, [pc, #4]	; (402854 <pmc_disable_pllack+0xc>)
  40284e:	629a      	str	r2, [r3, #40]	; 0x28
  402850:	4770      	bx	lr
  402852:	bf00      	nop
  402854:	400e0400 	.word	0x400e0400

00402858 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  402858:	4b02      	ldr	r3, [pc, #8]	; (402864 <pmc_is_locked_pllack+0xc>)
  40285a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40285c:	f000 0002 	and.w	r0, r0, #2
  402860:	4770      	bx	lr
  402862:	bf00      	nop
  402864:	400e0400 	.word	0x400e0400

00402868 <pmc_disable_pllbck>:
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  402868:	2200      	movs	r2, #0
  40286a:	4b01      	ldr	r3, [pc, #4]	; (402870 <pmc_disable_pllbck+0x8>)
  40286c:	62da      	str	r2, [r3, #44]	; 0x2c
  40286e:	4770      	bx	lr
  402870:	400e0400 	.word	0x400e0400

00402874 <pmc_is_locked_pllbck>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllbck(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKB);
  402874:	4b02      	ldr	r3, [pc, #8]	; (402880 <pmc_is_locked_pllbck+0xc>)
  402876:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  402878:	f000 0004 	and.w	r0, r0, #4
  40287c:	4770      	bx	lr
  40287e:	bf00      	nop
  402880:	400e0400 	.word	0x400e0400

00402884 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  402884:	2822      	cmp	r0, #34	; 0x22
  402886:	d81e      	bhi.n	4028c6 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  402888:	281f      	cmp	r0, #31
  40288a:	d80c      	bhi.n	4028a6 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40288c:	4b11      	ldr	r3, [pc, #68]	; (4028d4 <pmc_enable_periph_clk+0x50>)
  40288e:	699a      	ldr	r2, [r3, #24]
  402890:	2301      	movs	r3, #1
  402892:	4083      	lsls	r3, r0
  402894:	4393      	bics	r3, r2
  402896:	d018      	beq.n	4028ca <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  402898:	2301      	movs	r3, #1
  40289a:	fa03 f000 	lsl.w	r0, r3, r0
  40289e:	4b0d      	ldr	r3, [pc, #52]	; (4028d4 <pmc_enable_periph_clk+0x50>)
  4028a0:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4028a2:	2000      	movs	r0, #0
  4028a4:	4770      	bx	lr
		ul_id -= 32;
  4028a6:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4028a8:	4b0a      	ldr	r3, [pc, #40]	; (4028d4 <pmc_enable_periph_clk+0x50>)
  4028aa:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4028ae:	2301      	movs	r3, #1
  4028b0:	4083      	lsls	r3, r0
  4028b2:	4393      	bics	r3, r2
  4028b4:	d00b      	beq.n	4028ce <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4028b6:	2301      	movs	r3, #1
  4028b8:	fa03 f000 	lsl.w	r0, r3, r0
  4028bc:	4b05      	ldr	r3, [pc, #20]	; (4028d4 <pmc_enable_periph_clk+0x50>)
  4028be:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4028c2:	2000      	movs	r0, #0
  4028c4:	4770      	bx	lr
		return 1;
  4028c6:	2001      	movs	r0, #1
  4028c8:	4770      	bx	lr
	return 0;
  4028ca:	2000      	movs	r0, #0
  4028cc:	4770      	bx	lr
  4028ce:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  4028d0:	4770      	bx	lr
  4028d2:	bf00      	nop
  4028d4:	400e0400 	.word	0x400e0400

004028d8 <pmc_disable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  4028d8:	2822      	cmp	r0, #34	; 0x22
  4028da:	d822      	bhi.n	402922 <pmc_disable_periph_clk+0x4a>
		return 1;
	}

	if (ul_id < 32) {
  4028dc:	281f      	cmp	r0, #31
  4028de:	d80e      	bhi.n	4028fe <pmc_disable_periph_clk+0x26>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
  4028e0:	4b11      	ldr	r3, [pc, #68]	; (402928 <pmc_disable_periph_clk+0x50>)
  4028e2:	699a      	ldr	r2, [r3, #24]
  4028e4:	2301      	movs	r3, #1
  4028e6:	4083      	lsls	r3, r0
  4028e8:	4393      	bics	r3, r2
  4028ea:	d001      	beq.n	4028f0 <pmc_disable_periph_clk+0x18>
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
  4028ec:	2000      	movs	r0, #0
  4028ee:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
  4028f0:	2301      	movs	r3, #1
  4028f2:	fa03 f000 	lsl.w	r0, r3, r0
  4028f6:	4b0c      	ldr	r3, [pc, #48]	; (402928 <pmc_disable_periph_clk+0x50>)
  4028f8:	6158      	str	r0, [r3, #20]
	return 0;
  4028fa:	2000      	movs	r0, #0
  4028fc:	4770      	bx	lr
		ul_id -= 32;
  4028fe:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
  402900:	4b09      	ldr	r3, [pc, #36]	; (402928 <pmc_disable_periph_clk+0x50>)
  402902:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  402906:	2301      	movs	r3, #1
  402908:	4083      	lsls	r3, r0
  40290a:	4393      	bics	r3, r2
  40290c:	d001      	beq.n	402912 <pmc_disable_periph_clk+0x3a>
	return 0;
  40290e:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  402910:	4770      	bx	lr
			PMC->PMC_PCDR1 = 1 << ul_id;
  402912:	2301      	movs	r3, #1
  402914:	fa03 f000 	lsl.w	r0, r3, r0
  402918:	4b03      	ldr	r3, [pc, #12]	; (402928 <pmc_disable_periph_clk+0x50>)
  40291a:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
	return 0;
  40291e:	2000      	movs	r0, #0
  402920:	4770      	bx	lr
		return 1;
  402922:	2001      	movs	r0, #1
  402924:	4770      	bx	lr
  402926:	bf00      	nop
  402928:	400e0400 	.word	0x400e0400

0040292c <pmc_switch_udpck_to_pllbck>:
 *
 * \param ul_usbdiv Clock divisor.
 */
void pmc_switch_udpck_to_pllbck(uint32_t ul_usbdiv)
{
	PMC->PMC_USB = PMC_USB_USBDIV(ul_usbdiv) | PMC_USB_USBS;
  40292c:	0200      	lsls	r0, r0, #8
  40292e:	f400 6070 	and.w	r0, r0, #3840	; 0xf00
  402932:	f040 0001 	orr.w	r0, r0, #1
  402936:	4b01      	ldr	r3, [pc, #4]	; (40293c <pmc_switch_udpck_to_pllbck+0x10>)
  402938:	6398      	str	r0, [r3, #56]	; 0x38
  40293a:	4770      	bx	lr
  40293c:	400e0400 	.word	0x400e0400

00402940 <pmc_enable_udpck>:
 * \brief Enable UDP (USB) clock.
 */
void pmc_enable_udpck(void)
{
#if (SAM3S || SAM4S || SAM4E || SAMG55)
	PMC->PMC_SCER = PMC_SCER_UDP;
  402940:	2280      	movs	r2, #128	; 0x80
  402942:	4b01      	ldr	r3, [pc, #4]	; (402948 <pmc_enable_udpck+0x8>)
  402944:	601a      	str	r2, [r3, #0]
  402946:	4770      	bx	lr
  402948:	400e0400 	.word	0x400e0400

0040294c <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
  40294c:	4b03      	ldr	r3, [pc, #12]	; (40295c <pmc_set_fast_startup_input+0x10>)
  40294e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
	ul_inputs &= PMC_FAST_STARTUP_Msk;
  402950:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
  402954:	4310      	orrs	r0, r2
  402956:	6718      	str	r0, [r3, #112]	; 0x70
  402958:	4770      	bx	lr
  40295a:	bf00      	nop
  40295c:	400e0400 	.word	0x400e0400

00402960 <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
  402960:	b4f0      	push	{r4, r5, r6, r7}
  402962:	b08c      	sub	sp, #48	; 0x30
  402964:	4607      	mov	r7, r0
  402966:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
  402968:	ac01      	add	r4, sp, #4
  40296a:	4d11      	ldr	r5, [pc, #68]	; (4029b0 <pwm_clocks_generate+0x50>)
  40296c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  40296e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  402970:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  402972:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  402974:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
  402978:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  40297c:	aa01      	add	r2, sp, #4
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
  40297e:	2300      	movs	r3, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
  402980:	f852 0b04 	ldr.w	r0, [r2], #4
  402984:	fbb6 f0f0 	udiv	r0, r6, r0
  402988:	fbb0 f0f7 	udiv	r0, r0, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
  40298c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  402990:	d907      	bls.n	4029a2 <pwm_clocks_generate+0x42>
			break;
		}
		ul_pre++;
  402992:	3301      	adds	r3, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
  402994:	2b0b      	cmp	r3, #11
  402996:	d1f3      	bne.n	402980 <pwm_clocks_generate+0x20>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
		return ul_div | (ul_pre << 8);
	} else {
		return PWM_INVALID_ARGUMENT;
  402998:	f64f 70ff 	movw	r0, #65535	; 0xffff
	}
}
  40299c:	b00c      	add	sp, #48	; 0x30
  40299e:	bcf0      	pop	{r4, r5, r6, r7}
  4029a0:	4770      	bx	lr
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
  4029a2:	2b0a      	cmp	r3, #10
		return ul_div | (ul_pre << 8);
  4029a4:	bf94      	ite	ls
  4029a6:	ea40 2003 	orrls.w	r0, r0, r3, lsl #8
		return PWM_INVALID_ARGUMENT;
  4029aa:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
  4029ae:	e7f5      	b.n	40299c <pwm_clocks_generate+0x3c>
  4029b0:	004087f0 	.word	0x004087f0

004029b4 <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
  4029b4:	b570      	push	{r4, r5, r6, lr}
  4029b6:	4606      	mov	r6, r0
  4029b8:	460d      	mov	r5, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
  4029ba:	680c      	ldr	r4, [r1, #0]
  4029bc:	b144      	cbz	r4, 4029d0 <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
  4029be:	6889      	ldr	r1, [r1, #8]
  4029c0:	4620      	mov	r0, r4
  4029c2:	4b0c      	ldr	r3, [pc, #48]	; (4029f4 <pwm_init+0x40>)
  4029c4:	4798      	blx	r3
  4029c6:	4604      	mov	r4, r0
		if (result == PWM_INVALID_ARGUMENT) {
  4029c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
  4029cc:	4298      	cmp	r0, r3
  4029ce:	d00c      	beq.n	4029ea <pwm_init+0x36>

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
  4029d0:	6868      	ldr	r0, [r5, #4]
  4029d2:	b140      	cbz	r0, 4029e6 <pwm_init+0x32>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
  4029d4:	68a9      	ldr	r1, [r5, #8]
  4029d6:	4b07      	ldr	r3, [pc, #28]	; (4029f4 <pwm_init+0x40>)
  4029d8:	4798      	blx	r3

		if (result == PWM_INVALID_ARGUMENT) {
  4029da:	f64f 73ff 	movw	r3, #65535	; 0xffff
  4029de:	4298      	cmp	r0, r3
  4029e0:	d005      	beq.n	4029ee <pwm_init+0x3a>
			return result;
		}

		clock |= (result << 16);
  4029e2:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
  4029e6:	6034      	str	r4, [r6, #0]
#endif
	return 0;
  4029e8:	2400      	movs	r4, #0
}
  4029ea:	4620      	mov	r0, r4
  4029ec:	bd70      	pop	{r4, r5, r6, pc}
			return result;
  4029ee:	4604      	mov	r4, r0
  4029f0:	e7fb      	b.n	4029ea <pwm_init+0x36>
  4029f2:	bf00      	nop
  4029f4:	00402961 	.word	0x00402961

004029f8 <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
  4029f8:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
  4029fa:	680a      	ldr	r2, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  4029fc:	684b      	ldr	r3, [r1, #4]
  4029fe:	f003 030f 	and.w	r3, r3, #15
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
			(p_channel->counter_event) |
  402a02:	8a8c      	ldrh	r4, [r1, #20]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402a04:	4323      	orrs	r3, r4
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
  402a06:	890c      	ldrh	r4, [r1, #8]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402a08:	4323      	orrs	r3, r4
			(p_channel->polarity << 9) |
  402a0a:	7a8c      	ldrb	r4, [r1, #10]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402a0c:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
			(p_channel->b_deadtime_generator << 16) |
  402a10:	7d8c      	ldrb	r4, [r1, #22]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402a12:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
  402a16:	7dcc      	ldrb	r4, [r1, #23]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402a18:	ea43 4344 	orr.w	r3, r3, r4, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
  402a1c:	7e0c      	ldrb	r4, [r1, #24]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402a1e:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
  402a22:	eb00 1442 	add.w	r4, r0, r2, lsl #5
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
  402a26:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
  402a2a:	68cb      	ldr	r3, [r1, #12]
  402a2c:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
  402a30:	690b      	ldr	r3, [r1, #16]
  402a32:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
  402a36:	7d8b      	ldrb	r3, [r1, #22]
  402a38:	b13b      	cbz	r3, 402a4a <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
  402a3a:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
  402a3c:	8b4b      	ldrh	r3, [r1, #26]
  402a3e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
  402a42:	eb00 1442 	add.w	r4, r0, r2, lsl #5
  402a46:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
  402a4a:	6c85      	ldr	r5, [r0, #72]	; 0x48
  402a4c:	f04f 1301 	mov.w	r3, #65537	; 0x10001
  402a50:	4093      	lsls	r3, r2
  402a52:	43db      	mvns	r3, r3
  402a54:	401d      	ands	r5, r3
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
  402a56:	7fcc      	ldrb	r4, [r1, #31]
  402a58:	fa04 f602 	lsl.w	r6, r4, r2
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
  402a5c:	7f8c      	ldrb	r4, [r1, #30]
  402a5e:	4094      	lsls	r4, r2
  402a60:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
  402a64:	432c      	orrs	r4, r5
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
  402a66:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
  402a68:	6c44      	ldr	r4, [r0, #68]	; 0x44
  402a6a:	4023      	ands	r3, r4
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
  402a6c:	f891 4021 	ldrb.w	r4, [r1, #33]	; 0x21
  402a70:	fa04 f502 	lsl.w	r5, r4, r2
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
  402a74:	f891 4020 	ldrb.w	r4, [r1, #32]
  402a78:	4094      	lsls	r4, r2
  402a7a:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  402a7e:	4323      	orrs	r3, r4
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
  402a80:	6443      	str	r3, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
  402a82:	2301      	movs	r3, #1
  402a84:	4093      	lsls	r3, r2
	if (p_channel->b_sync_ch) {
  402a86:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
  402a8a:	b31c      	cbz	r4, 402ad4 <pwm_channel_init+0xdc>
		p_pwm->PWM_SCM |= channel;
  402a8c:	6a04      	ldr	r4, [r0, #32]
  402a8e:	431c      	orrs	r4, r3
  402a90:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
  402a92:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
  402a96:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
  402a98:	6e84      	ldr	r4, [r0, #104]	; 0x68
  402a9a:	bf0c      	ite	eq
  402a9c:	431c      	orreq	r4, r3
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
  402a9e:	439c      	bicne	r4, r3
  402aa0:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
  402aa2:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
  402aa6:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
  402aa8:	6e84      	ldr	r4, [r0, #104]	; 0x68
  402aaa:	bf0c      	ite	eq
  402aac:	ea44 4303 	orreq.w	r3, r4, r3, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
  402ab0:	ea24 4303 	bicne.w	r3, r4, r3, lsl #16
  402ab4:	6683      	str	r3, [r0, #104]	; 0x68
		p_pwm->PWM_FPE2 = fault_enable_reg;
	}
#endif

#if (SAM3U || SAM3S || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
	ch_num *= 8;
  402ab6:	00d2      	lsls	r2, r2, #3
	fault_enable_reg = p_pwm->PWM_FPE;
  402ab8:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
	fault_enable_reg &= ~(0xFF << ch_num);
  402aba:	23ff      	movs	r3, #255	; 0xff
  402abc:	4093      	lsls	r3, r2
  402abe:	ea24 0403 	bic.w	r4, r4, r3
	fault_enable_reg |= ((p_channel->fault_id) << ch_num);
  402ac2:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
  402ac6:	fa03 f202 	lsl.w	r2, r3, r2
  402aca:	4322      	orrs	r2, r4
	p_pwm->PWM_FPE = fault_enable_reg;
  402acc:	66c2      	str	r2, [r0, #108]	; 0x6c
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR &= (~PWM_CMR_PPM);
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR |= (p_channel->ul_ppm_mode & PWM_CMR_PPM);
#endif

	return 0;
}
  402ace:	2000      	movs	r0, #0
  402ad0:	bc70      	pop	{r4, r5, r6}
  402ad2:	4770      	bx	lr
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
  402ad4:	6a04      	ldr	r4, [r0, #32]
  402ad6:	ea24 0403 	bic.w	r4, r4, r3
  402ada:	6204      	str	r4, [r0, #32]
  402adc:	e7d9      	b.n	402a92 <pwm_channel_init+0x9a>

00402ade <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
  402ade:	2301      	movs	r3, #1
  402ae0:	fa03 f101 	lsl.w	r1, r3, r1
  402ae4:	6041      	str	r1, [r0, #4]
  402ae6:	4770      	bx	lr

00402ae8 <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
  402ae8:	2301      	movs	r3, #1
  402aea:	fa03 f101 	lsl.w	r1, r3, r1
  402aee:	6081      	str	r1, [r0, #8]
  402af0:	4770      	bx	lr

00402af2 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  402af2:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  402af4:	0189      	lsls	r1, r1, #6
  402af6:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  402af8:	2402      	movs	r4, #2
  402afa:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  402afc:	f04f 31ff 	mov.w	r1, #4294967295
  402b00:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  402b02:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  402b04:	605a      	str	r2, [r3, #4]
}
  402b06:	bc10      	pop	{r4}
  402b08:	4770      	bx	lr

00402b0a <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  402b0a:	0189      	lsls	r1, r1, #6
  402b0c:	2305      	movs	r3, #5
  402b0e:	5043      	str	r3, [r0, r1]
  402b10:	4770      	bx	lr

00402b12 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  402b12:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  402b16:	61ca      	str	r2, [r1, #28]
  402b18:	4770      	bx	lr

00402b1a <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  402b1a:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  402b1e:	624a      	str	r2, [r1, #36]	; 0x24
  402b20:	4770      	bx	lr

00402b22 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  402b22:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  402b26:	6a08      	ldr	r0, [r1, #32]
}
  402b28:	4770      	bx	lr
	...

00402b2c <pmc_is_wakeup_clocks_restored>:
	}
}

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
  402b2c:	4b02      	ldr	r3, [pc, #8]	; (402b38 <pmc_is_wakeup_clocks_restored+0xc>)
  402b2e:	7818      	ldrb	r0, [r3, #0]
}
  402b30:	f080 0001 	eor.w	r0, r0, #1
  402b34:	4770      	bx	lr
  402b36:	bf00      	nop
  402b38:	20000c84 	.word	0x20000c84

00402b3c <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  402b3c:	b5f0      	push	{r4, r5, r6, r7, lr}
  402b3e:	b083      	sub	sp, #12
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
	
	WDT->WDT_MR |= WDT_MR_WDDIS;
  402b40:	4a36      	ldr	r2, [pc, #216]	; (402c1c <board_init+0xe0>)
  402b42:	6853      	ldr	r3, [r2, #4]
  402b44:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  402b48:	6053      	str	r3, [r2, #4]
	
	//GPIO Setup
	//ALL GPIO are on port A
	pmc_enable_periph_clk(ID_PIOA);
  402b4a:	200b      	movs	r0, #11
  402b4c:	4f34      	ldr	r7, [pc, #208]	; (402c20 <board_init+0xe4>)
  402b4e:	47b8      	blx	r7
	pio_set_output(PIOA,BUILT_IN_LED,LOW,DISABLE,DISABLE);
  402b50:	4e34      	ldr	r6, [pc, #208]	; (402c24 <board_init+0xe8>)
  402b52:	2400      	movs	r4, #0
  402b54:	9400      	str	r4, [sp, #0]
  402b56:	4623      	mov	r3, r4
  402b58:	4622      	mov	r2, r4
  402b5a:	f44f 7180 	mov.w	r1, #256	; 0x100
  402b5e:	4630      	mov	r0, r6
  402b60:	4d31      	ldr	r5, [pc, #196]	; (402c28 <board_init+0xec>)
  402b62:	47a8      	blx	r5
	pio_set_output(PIOA,MUX_EN,HIGH,DISABLE,DISABLE);
  402b64:	9400      	str	r4, [sp, #0]
  402b66:	4623      	mov	r3, r4
  402b68:	2201      	movs	r2, #1
  402b6a:	2180      	movs	r1, #128	; 0x80
  402b6c:	4630      	mov	r0, r6
  402b6e:	47a8      	blx	r5
	pio_set_output(PIOA,MUX_A0,HIGH,DISABLE,DISABLE);
  402b70:	9400      	str	r4, [sp, #0]
  402b72:	4623      	mov	r3, r4
  402b74:	2201      	movs	r2, #1
  402b76:	2140      	movs	r1, #64	; 0x40
  402b78:	4630      	mov	r0, r6
  402b7a:	47a8      	blx	r5
	pio_set_output(PIOA,MUX_A1,HIGH,DISABLE,DISABLE);
  402b7c:	9400      	str	r4, [sp, #0]
  402b7e:	4623      	mov	r3, r4
  402b80:	2201      	movs	r2, #1
  402b82:	2120      	movs	r1, #32
  402b84:	4630      	mov	r0, r6
  402b86:	47a8      	blx	r5
	pio_set_output(PIOA,MUX_A2,HIGH,DISABLE,DISABLE);
  402b88:	9400      	str	r4, [sp, #0]
  402b8a:	4623      	mov	r3, r4
  402b8c:	2201      	movs	r2, #1
  402b8e:	2110      	movs	r1, #16
  402b90:	4630      	mov	r0, r6
  402b92:	47a8      	blx	r5
	

	//ADC Setup
	pmc_enable_periph_clk(ID_ADC);
  402b94:	201d      	movs	r0, #29
  402b96:	47b8      	blx	r7
	/* Formula:
	 *     Startup  Time = startup value / ADCClock
	 *     Startup time = 64 / 6.4MHz = 10 us
	 */
	adc_init(ADC, sysclk_get_cpu_hz(), 6400000, ADC_STARTUP_TIME_4);
  402b98:	4d24      	ldr	r5, [pc, #144]	; (402c2c <board_init+0xf0>)
  402b9a:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  402b9e:	4a24      	ldr	r2, [pc, #144]	; (402c30 <board_init+0xf4>)
  402ba0:	4924      	ldr	r1, [pc, #144]	; (402c34 <board_init+0xf8>)
  402ba2:	4628      	mov	r0, r5
  402ba4:	4e24      	ldr	r6, [pc, #144]	; (402c38 <board_init+0xfc>)
  402ba6:	47b0      	blx	r6
	 *
	 *     Transfer Time = (1 * 2 + 3) / 6.4MHz = 781 ns
	 *     Tracking Time = (1 + 1) / 6.4MHz = 312 ns
	 *     Settling Time = 3 / 6.4MHz = 469 ns
	 */
	adc_configure_timing(ADC, TRACKING_TIME, ADC_SETTLING_TIME_3, TRANSFER_PERIOD);
  402ba8:	2301      	movs	r3, #1
  402baa:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
  402bae:	4619      	mov	r1, r3
  402bb0:	4628      	mov	r0, r5
  402bb2:	4e22      	ldr	r6, [pc, #136]	; (402c3c <board_init+0x100>)
  402bb4:	47b0      	blx	r6
	//adc_set_resolution(ADC,12);
	adc_configure_trigger(ADC, ADC_TRIG_SW, 1);
  402bb6:	2201      	movs	r2, #1
  402bb8:	4621      	mov	r1, r4
  402bba:	4628      	mov	r0, r5
  402bbc:	4b20      	ldr	r3, [pc, #128]	; (402c40 <board_init+0x104>)
  402bbe:	4798      	blx	r3
	adc_enable_channel(ADC, BOARD_TEMP1);
  402bc0:	2104      	movs	r1, #4
  402bc2:	4628      	mov	r0, r5
  402bc4:	4e1f      	ldr	r6, [pc, #124]	; (402c44 <board_init+0x108>)
  402bc6:	47b0      	blx	r6
	adc_enable_channel(ADC, BOARD_TEMP2);
  402bc8:	2105      	movs	r1, #5
  402bca:	4628      	mov	r0, r5
  402bcc:	47b0      	blx	r6
	adc_enable_channel(ADC, BOARD_CELLV);
  402bce:	4621      	mov	r1, r4
  402bd0:	4628      	mov	r0, r5
  402bd2:	47b0      	blx	r6
	adc_enable_channel(ADC, BOARD_SHUNT);
  402bd4:	2101      	movs	r1, #1
  402bd6:	4628      	mov	r0, r5
  402bd8:	47b0      	blx	r6
	
	//USB Setup
	udc_start();
  402bda:	4b1b      	ldr	r3, [pc, #108]	; (402c48 <board_init+0x10c>)
  402bdc:	4798      	blx	r3
	//to configure USB see conf_usb.h
	
	//timer counter configuration
	pmc_enable_periph_clk(ID_TC1);
  402bde:	2018      	movs	r0, #24
  402be0:	47b8      	blx	r7
	tc_init(TC, TC_CH, 
  402be2:	4c1a      	ldr	r4, [pc, #104]	; (402c4c <board_init+0x110>)
  402be4:	f24c 0202 	movw	r2, #49154	; 0xc002
  402be8:	2101      	movs	r1, #1
  402bea:	4620      	mov	r0, r4
  402bec:	4b18      	ldr	r3, [pc, #96]	; (402c50 <board_init+0x114>)
  402bee:	4798      	blx	r3
			  TC_CMR_WAVE
			| TC_CMR_WAVSEL_UP_RC 
			| TC_CMR_TCCLKS_TIMER_CLOCK3);     //Sets TC to reset when output compare is reached
	tc_enable_interrupt(TC, TC_CH, TC_IER_CPCS);
  402bf0:	2210      	movs	r2, #16
  402bf2:	2101      	movs	r1, #1
  402bf4:	4620      	mov	r0, r4
  402bf6:	4b17      	ldr	r3, [pc, #92]	; (402c54 <board_init+0x118>)
  402bf8:	4798      	blx	r3
  402bfa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  402bfe:	4b16      	ldr	r3, [pc, #88]	; (402c58 <board_init+0x11c>)
  402c00:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(TC1_IRQn);
	tc_write_rc(TC,TC_CH,37500);				  //causes timer to reset every 10ms (exactly)
  402c02:	f249 227c 	movw	r2, #37500	; 0x927c
  402c06:	2101      	movs	r1, #1
  402c08:	4620      	mov	r0, r4
  402c0a:	4b14      	ldr	r3, [pc, #80]	; (402c5c <board_init+0x120>)
  402c0c:	4798      	blx	r3
	tc_start(TC,TC_CH);	
  402c0e:	2101      	movs	r1, #1
  402c10:	4620      	mov	r0, r4
  402c12:	4b13      	ldr	r3, [pc, #76]	; (402c60 <board_init+0x124>)
  402c14:	4798      	blx	r3
	
}
  402c16:	b003      	add	sp, #12
  402c18:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402c1a:	bf00      	nop
  402c1c:	400e1450 	.word	0x400e1450
  402c20:	00402885 	.word	0x00402885
  402c24:	400e0e00 	.word	0x400e0e00
  402c28:	00402759 	.word	0x00402759
  402c2c:	40038000 	.word	0x40038000
  402c30:	0061a800 	.word	0x0061a800
  402c34:	07270e00 	.word	0x07270e00
  402c38:	00400e59 	.word	0x00400e59
  402c3c:	00400e9b 	.word	0x00400e9b
  402c40:	00400e8d 	.word	0x00400e8d
  402c44:	00400eb7 	.word	0x00400eb7
  402c48:	004009b5 	.word	0x004009b5
  402c4c:	40010000 	.word	0x40010000
  402c50:	00402af3 	.word	0x00402af3
  402c54:	00402b1b 	.word	0x00402b1b
  402c58:	e000e100 	.word	0xe000e100
  402c5c:	00402b13 	.word	0x00402b13
  402c60:	00402b0b 	.word	0x00402b0b

00402c64 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  402c64:	e7fe      	b.n	402c64 <Dummy_Handler>
	...

00402c68 <Reset_Handler>:
{
  402c68:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  402c6a:	4b21      	ldr	r3, [pc, #132]	; (402cf0 <Reset_Handler+0x88>)
  402c6c:	4a21      	ldr	r2, [pc, #132]	; (402cf4 <Reset_Handler+0x8c>)
  402c6e:	429a      	cmp	r2, r3
  402c70:	d928      	bls.n	402cc4 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  402c72:	4b21      	ldr	r3, [pc, #132]	; (402cf8 <Reset_Handler+0x90>)
  402c74:	4a1e      	ldr	r2, [pc, #120]	; (402cf0 <Reset_Handler+0x88>)
  402c76:	429a      	cmp	r2, r3
  402c78:	d20c      	bcs.n	402c94 <Reset_Handler+0x2c>
  402c7a:	3b01      	subs	r3, #1
  402c7c:	1a9b      	subs	r3, r3, r2
  402c7e:	f023 0303 	bic.w	r3, r3, #3
  402c82:	3304      	adds	r3, #4
  402c84:	4413      	add	r3, r2
  402c86:	491b      	ldr	r1, [pc, #108]	; (402cf4 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  402c88:	f851 0b04 	ldr.w	r0, [r1], #4
  402c8c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  402c90:	429a      	cmp	r2, r3
  402c92:	d1f9      	bne.n	402c88 <Reset_Handler+0x20>
	__NOP();
  402c94:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  402c96:	4b19      	ldr	r3, [pc, #100]	; (402cfc <Reset_Handler+0x94>)
  402c98:	4a19      	ldr	r2, [pc, #100]	; (402d00 <Reset_Handler+0x98>)
  402c9a:	429a      	cmp	r2, r3
  402c9c:	d20a      	bcs.n	402cb4 <Reset_Handler+0x4c>
  402c9e:	3b01      	subs	r3, #1
  402ca0:	1a9b      	subs	r3, r3, r2
  402ca2:	f023 0303 	bic.w	r3, r3, #3
  402ca6:	3304      	adds	r3, #4
  402ca8:	4413      	add	r3, r2
		*pDest++ = 0;
  402caa:	2100      	movs	r1, #0
  402cac:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  402cb0:	429a      	cmp	r2, r3
  402cb2:	d1fb      	bne.n	402cac <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  402cb4:	4b13      	ldr	r3, [pc, #76]	; (402d04 <Reset_Handler+0x9c>)
  402cb6:	4a14      	ldr	r2, [pc, #80]	; (402d08 <Reset_Handler+0xa0>)
  402cb8:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  402cba:	4b14      	ldr	r3, [pc, #80]	; (402d0c <Reset_Handler+0xa4>)
  402cbc:	4798      	blx	r3
	main();
  402cbe:	4b14      	ldr	r3, [pc, #80]	; (402d10 <Reset_Handler+0xa8>)
  402cc0:	4798      	blx	r3
  402cc2:	e7fe      	b.n	402cc2 <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  402cc4:	4b0a      	ldr	r3, [pc, #40]	; (402cf0 <Reset_Handler+0x88>)
  402cc6:	4a0b      	ldr	r2, [pc, #44]	; (402cf4 <Reset_Handler+0x8c>)
  402cc8:	429a      	cmp	r2, r3
  402cca:	d2e3      	bcs.n	402c94 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  402ccc:	4b0a      	ldr	r3, [pc, #40]	; (402cf8 <Reset_Handler+0x90>)
  402cce:	4808      	ldr	r0, [pc, #32]	; (402cf0 <Reset_Handler+0x88>)
  402cd0:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  402cd2:	4611      	mov	r1, r2
  402cd4:	3a04      	subs	r2, #4
  402cd6:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  402cd8:	2800      	cmp	r0, #0
  402cda:	d0db      	beq.n	402c94 <Reset_Handler+0x2c>
  402cdc:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  402ce0:	f852 0904 	ldr.w	r0, [r2], #-4
  402ce4:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  402ce8:	42ca      	cmn	r2, r1
  402cea:	d1f9      	bne.n	402ce0 <Reset_Handler+0x78>
  402cec:	e7d2      	b.n	402c94 <Reset_Handler+0x2c>
  402cee:	bf00      	nop
  402cf0:	20000000 	.word	0x20000000
  402cf4:	00408af4 	.word	0x00408af4
  402cf8:	20000a58 	.word	0x20000a58
  402cfc:	20000d50 	.word	0x20000d50
  402d00:	20000a58 	.word	0x20000a58
  402d04:	e000ed00 	.word	0xe000ed00
  402d08:	00400000 	.word	0x00400000
  402d0c:	004047a5 	.word	0x004047a5
  402d10:	0040335d 	.word	0x0040335d

00402d14 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  402d14:	4b3c      	ldr	r3, [pc, #240]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402d16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402d18:	f003 0303 	and.w	r3, r3, #3
  402d1c:	2b03      	cmp	r3, #3
  402d1e:	d80e      	bhi.n	402d3e <SystemCoreClockUpdate+0x2a>
  402d20:	e8df f003 	tbb	[pc, r3]
  402d24:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  402d28:	4b38      	ldr	r3, [pc, #224]	; (402e0c <SystemCoreClockUpdate+0xf8>)
  402d2a:	695b      	ldr	r3, [r3, #20]
  402d2c:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  402d30:	bf14      	ite	ne
  402d32:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  402d36:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  402d3a:	4b35      	ldr	r3, [pc, #212]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402d3c:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  402d3e:	4b32      	ldr	r3, [pc, #200]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402d40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402d42:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402d46:	2b70      	cmp	r3, #112	; 0x70
  402d48:	d055      	beq.n	402df6 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402d4a:	4b2f      	ldr	r3, [pc, #188]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402d4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  402d4e:	4930      	ldr	r1, [pc, #192]	; (402e10 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402d50:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  402d54:	680b      	ldr	r3, [r1, #0]
  402d56:	40d3      	lsrs	r3, r2
  402d58:	600b      	str	r3, [r1, #0]
  402d5a:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402d5c:	4b2a      	ldr	r3, [pc, #168]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402d5e:	6a1b      	ldr	r3, [r3, #32]
  402d60:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  402d64:	d003      	beq.n	402d6e <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  402d66:	4a2b      	ldr	r2, [pc, #172]	; (402e14 <SystemCoreClockUpdate+0x100>)
  402d68:	4b29      	ldr	r3, [pc, #164]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402d6a:	601a      	str	r2, [r3, #0]
  402d6c:	e7e7      	b.n	402d3e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402d6e:	4a2a      	ldr	r2, [pc, #168]	; (402e18 <SystemCoreClockUpdate+0x104>)
  402d70:	4b27      	ldr	r3, [pc, #156]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402d72:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402d74:	4b24      	ldr	r3, [pc, #144]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402d76:	6a1b      	ldr	r3, [r3, #32]
  402d78:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402d7c:	2b10      	cmp	r3, #16
  402d7e:	d005      	beq.n	402d8c <SystemCoreClockUpdate+0x78>
  402d80:	2b20      	cmp	r3, #32
  402d82:	d1dc      	bne.n	402d3e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402d84:	4a23      	ldr	r2, [pc, #140]	; (402e14 <SystemCoreClockUpdate+0x100>)
  402d86:	4b22      	ldr	r3, [pc, #136]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402d88:	601a      	str	r2, [r3, #0]
			break;
  402d8a:	e7d8      	b.n	402d3e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402d8c:	4a23      	ldr	r2, [pc, #140]	; (402e1c <SystemCoreClockUpdate+0x108>)
  402d8e:	4b20      	ldr	r3, [pc, #128]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402d90:	601a      	str	r2, [r3, #0]
			break;
  402d92:	e7d4      	b.n	402d3e <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402d94:	4b1c      	ldr	r3, [pc, #112]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402d96:	6a1b      	ldr	r3, [r3, #32]
  402d98:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  402d9c:	d018      	beq.n	402dd0 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  402d9e:	4a1d      	ldr	r2, [pc, #116]	; (402e14 <SystemCoreClockUpdate+0x100>)
  402da0:	4b1b      	ldr	r3, [pc, #108]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402da2:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  402da4:	4b18      	ldr	r3, [pc, #96]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402da6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402da8:	f003 0303 	and.w	r3, r3, #3
  402dac:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  402dae:	4a16      	ldr	r2, [pc, #88]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402db0:	bf07      	ittee	eq
  402db2:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402db4:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402db6:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402db8:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  402dba:	4815      	ldr	r0, [pc, #84]	; (402e10 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  402dbc:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402dc0:	6803      	ldr	r3, [r0, #0]
  402dc2:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  402dc6:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402dc8:	fbb3 f3f2 	udiv	r3, r3, r2
  402dcc:	6003      	str	r3, [r0, #0]
  402dce:	e7b6      	b.n	402d3e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402dd0:	4a11      	ldr	r2, [pc, #68]	; (402e18 <SystemCoreClockUpdate+0x104>)
  402dd2:	4b0f      	ldr	r3, [pc, #60]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402dd4:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402dd6:	4b0c      	ldr	r3, [pc, #48]	; (402e08 <SystemCoreClockUpdate+0xf4>)
  402dd8:	6a1b      	ldr	r3, [r3, #32]
  402dda:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402dde:	2b10      	cmp	r3, #16
  402de0:	d005      	beq.n	402dee <SystemCoreClockUpdate+0xda>
  402de2:	2b20      	cmp	r3, #32
  402de4:	d1de      	bne.n	402da4 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402de6:	4a0b      	ldr	r2, [pc, #44]	; (402e14 <SystemCoreClockUpdate+0x100>)
  402de8:	4b09      	ldr	r3, [pc, #36]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402dea:	601a      	str	r2, [r3, #0]
					break;
  402dec:	e7da      	b.n	402da4 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402dee:	4a0b      	ldr	r2, [pc, #44]	; (402e1c <SystemCoreClockUpdate+0x108>)
  402df0:	4b07      	ldr	r3, [pc, #28]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402df2:	601a      	str	r2, [r3, #0]
					break;
  402df4:	e7d6      	b.n	402da4 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  402df6:	4a06      	ldr	r2, [pc, #24]	; (402e10 <SystemCoreClockUpdate+0xfc>)
  402df8:	6813      	ldr	r3, [r2, #0]
  402dfa:	4909      	ldr	r1, [pc, #36]	; (402e20 <SystemCoreClockUpdate+0x10c>)
  402dfc:	fba1 1303 	umull	r1, r3, r1, r3
  402e00:	085b      	lsrs	r3, r3, #1
  402e02:	6013      	str	r3, [r2, #0]
  402e04:	4770      	bx	lr
  402e06:	bf00      	nop
  402e08:	400e0400 	.word	0x400e0400
  402e0c:	400e1410 	.word	0x400e1410
  402e10:	200000a4 	.word	0x200000a4
  402e14:	00b71b00 	.word	0x00b71b00
  402e18:	003d0900 	.word	0x003d0900
  402e1c:	007a1200 	.word	0x007a1200
  402e20:	aaaaaaab 	.word	0xaaaaaaab

00402e24 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  402e24:	4b12      	ldr	r3, [pc, #72]	; (402e70 <system_init_flash+0x4c>)
  402e26:	4298      	cmp	r0, r3
  402e28:	d911      	bls.n	402e4e <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  402e2a:	4b12      	ldr	r3, [pc, #72]	; (402e74 <system_init_flash+0x50>)
  402e2c:	4298      	cmp	r0, r3
  402e2e:	d913      	bls.n	402e58 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  402e30:	4b11      	ldr	r3, [pc, #68]	; (402e78 <system_init_flash+0x54>)
  402e32:	4298      	cmp	r0, r3
  402e34:	d914      	bls.n	402e60 <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  402e36:	4b11      	ldr	r3, [pc, #68]	; (402e7c <system_init_flash+0x58>)
  402e38:	4298      	cmp	r0, r3
  402e3a:	d915      	bls.n	402e68 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  402e3c:	4b10      	ldr	r3, [pc, #64]	; (402e80 <system_init_flash+0x5c>)
  402e3e:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  402e40:	bf94      	ite	ls
  402e42:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  402e46:	4a0f      	ldrhi	r2, [pc, #60]	; (402e84 <system_init_flash+0x60>)
  402e48:	4b0f      	ldr	r3, [pc, #60]	; (402e88 <system_init_flash+0x64>)
  402e4a:	601a      	str	r2, [r3, #0]
  402e4c:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  402e4e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  402e52:	4b0d      	ldr	r3, [pc, #52]	; (402e88 <system_init_flash+0x64>)
  402e54:	601a      	str	r2, [r3, #0]
  402e56:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402e58:	4a0c      	ldr	r2, [pc, #48]	; (402e8c <system_init_flash+0x68>)
  402e5a:	4b0b      	ldr	r3, [pc, #44]	; (402e88 <system_init_flash+0x64>)
  402e5c:	601a      	str	r2, [r3, #0]
  402e5e:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402e60:	4a0b      	ldr	r2, [pc, #44]	; (402e90 <system_init_flash+0x6c>)
  402e62:	4b09      	ldr	r3, [pc, #36]	; (402e88 <system_init_flash+0x64>)
  402e64:	601a      	str	r2, [r3, #0]
  402e66:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402e68:	4a0a      	ldr	r2, [pc, #40]	; (402e94 <system_init_flash+0x70>)
  402e6a:	4b07      	ldr	r3, [pc, #28]	; (402e88 <system_init_flash+0x64>)
  402e6c:	601a      	str	r2, [r3, #0]
  402e6e:	4770      	bx	lr
  402e70:	01312cff 	.word	0x01312cff
  402e74:	026259ff 	.word	0x026259ff
  402e78:	039386ff 	.word	0x039386ff
  402e7c:	04c4b3ff 	.word	0x04c4b3ff
  402e80:	05f5e0ff 	.word	0x05f5e0ff
  402e84:	04000500 	.word	0x04000500
  402e88:	400e0a00 	.word	0x400e0a00
  402e8c:	04000100 	.word	0x04000100
  402e90:	04000200 	.word	0x04000200
  402e94:	04000300 	.word	0x04000300

00402e98 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  402e98:	4b0a      	ldr	r3, [pc, #40]	; (402ec4 <_sbrk+0x2c>)
  402e9a:	681b      	ldr	r3, [r3, #0]
  402e9c:	b153      	cbz	r3, 402eb4 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  402e9e:	4b09      	ldr	r3, [pc, #36]	; (402ec4 <_sbrk+0x2c>)
  402ea0:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  402ea2:	181a      	adds	r2, r3, r0
  402ea4:	4908      	ldr	r1, [pc, #32]	; (402ec8 <_sbrk+0x30>)
  402ea6:	4291      	cmp	r1, r2
  402ea8:	db08      	blt.n	402ebc <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  402eaa:	4610      	mov	r0, r2
  402eac:	4a05      	ldr	r2, [pc, #20]	; (402ec4 <_sbrk+0x2c>)
  402eae:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  402eb0:	4618      	mov	r0, r3
  402eb2:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  402eb4:	4a05      	ldr	r2, [pc, #20]	; (402ecc <_sbrk+0x34>)
  402eb6:	4b03      	ldr	r3, [pc, #12]	; (402ec4 <_sbrk+0x2c>)
  402eb8:	601a      	str	r2, [r3, #0]
  402eba:	e7f0      	b.n	402e9e <_sbrk+0x6>
		return (caddr_t) -1;	
  402ebc:	f04f 30ff 	mov.w	r0, #4294967295
}
  402ec0:	4770      	bx	lr
  402ec2:	bf00      	nop
  402ec4:	20000c88 	.word	0x20000c88
  402ec8:	2000fffc 	.word	0x2000fffc
  402ecc:	20003d50 	.word	0x20003d50

00402ed0 <calculateCellVoltage>:
float cellV, current, tempBatt, tempFet;
float dischargeCurrent = 0;
int PWMDuty = 0;
bool updateLoop = false;

void calculateCellVoltage(int rawADCData){
  402ed0:	b510      	push	{r4, lr}
	cellV = (rawADCData)*((VOLT_REF/1000.0)/(4096.0*0.759));
  402ed2:	4b09      	ldr	r3, [pc, #36]	; (402ef8 <calculateCellVoltage+0x28>)
  402ed4:	4798      	blx	r3
  402ed6:	a306      	add	r3, pc, #24	; (adr r3, 402ef0 <calculateCellVoltage+0x20>)
  402ed8:	e9d3 2300 	ldrd	r2, r3, [r3]
  402edc:	4c07      	ldr	r4, [pc, #28]	; (402efc <calculateCellVoltage+0x2c>)
  402ede:	47a0      	blx	r4
  402ee0:	4b07      	ldr	r3, [pc, #28]	; (402f00 <calculateCellVoltage+0x30>)
  402ee2:	4798      	blx	r3
  402ee4:	4b07      	ldr	r3, [pc, #28]	; (402f04 <calculateCellVoltage+0x34>)
  402ee6:	6018      	str	r0, [r3, #0]
  402ee8:	bd10      	pop	{r4, pc}
  402eea:	bf00      	nop
  402eec:	f3af 8000 	nop.w
  402ef0:	8590b216 	.word	0x8590b216
  402ef4:	3f51642c 	.word	0x3f51642c
  402ef8:	00403b25 	.word	0x00403b25
  402efc:	00403bf1 	.word	0x00403bf1
  402f00:	00404151 	.word	0x00404151
  402f04:	20000cf4 	.word	0x20000cf4

00402f08 <calculateCellCurrent>:
}

void calculateCellCurrent(int rawADCData){
  402f08:	b538      	push	{r3, r4, r5, lr}
	float voltage = (float)(rawADCData)*((float)(VOLT_REF)/1000.0)/4096.0;
  402f0a:	4b11      	ldr	r3, [pc, #68]	; (402f50 <calculateCellCurrent+0x48>)
  402f0c:	4798      	blx	r3
  402f0e:	4d11      	ldr	r5, [pc, #68]	; (402f54 <calculateCellCurrent+0x4c>)
  402f10:	47a8      	blx	r5
  402f12:	4c11      	ldr	r4, [pc, #68]	; (402f58 <calculateCellCurrent+0x50>)
  402f14:	a30a      	add	r3, pc, #40	; (adr r3, 402f40 <calculateCellCurrent+0x38>)
  402f16:	e9d3 2300 	ldrd	r2, r3, [r3]
  402f1a:	47a0      	blx	r4
  402f1c:	2200      	movs	r2, #0
  402f1e:	4b0f      	ldr	r3, [pc, #60]	; (402f5c <calculateCellCurrent+0x54>)
  402f20:	47a0      	blx	r4
  402f22:	4c0f      	ldr	r4, [pc, #60]	; (402f60 <calculateCellCurrent+0x58>)
  402f24:	47a0      	blx	r4
	current = voltage/0.11;
  402f26:	47a8      	blx	r5
  402f28:	a307      	add	r3, pc, #28	; (adr r3, 402f48 <calculateCellCurrent+0x40>)
  402f2a:	e9d3 2300 	ldrd	r2, r3, [r3]
  402f2e:	4d0d      	ldr	r5, [pc, #52]	; (402f64 <calculateCellCurrent+0x5c>)
  402f30:	47a8      	blx	r5
  402f32:	47a0      	blx	r4
  402f34:	4b0c      	ldr	r3, [pc, #48]	; (402f68 <calculateCellCurrent+0x60>)
  402f36:	6018      	str	r0, [r3, #0]
  402f38:	bd38      	pop	{r3, r4, r5, pc}
  402f3a:	bf00      	nop
  402f3c:	f3af 8000 	nop.w
  402f40:	66666666 	.word	0x66666666
  402f44:	400a6666 	.word	0x400a6666
  402f48:	c28f5c29 	.word	0xc28f5c29
  402f4c:	3fbc28f5 	.word	0x3fbc28f5
  402f50:	00404365 	.word	0x00404365
  402f54:	00403b49 	.word	0x00403b49
  402f58:	00403bf1 	.word	0x00403bf1
  402f5c:	3f300000 	.word	0x3f300000
  402f60:	00404151 	.word	0x00404151
  402f64:	00403e45 	.word	0x00403e45
  402f68:	20000cf0 	.word	0x20000cf0
  402f6c:	00000000 	.word	0x00000000

00402f70 <calculateTemp>:
	//current = current - 0.6;
}

void calculateTemp(int rawADCData, int channel){
  402f70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402f74:	460f      	mov	r7, r1
	float voltage = (rawADCData*3.3/4096);
  402f76:	4b28      	ldr	r3, [pc, #160]	; (403018 <calculateTemp+0xa8>)
  402f78:	4798      	blx	r3
  402f7a:	4c28      	ldr	r4, [pc, #160]	; (40301c <calculateTemp+0xac>)
  402f7c:	a31e      	add	r3, pc, #120	; (adr r3, 402ff8 <calculateTemp+0x88>)
  402f7e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402f82:	47a0      	blx	r4
  402f84:	2200      	movs	r2, #0
  402f86:	4b26      	ldr	r3, [pc, #152]	; (403020 <calculateTemp+0xb0>)
  402f88:	47a0      	blx	r4
  402f8a:	4d26      	ldr	r5, [pc, #152]	; (403024 <calculateTemp+0xb4>)
  402f8c:	47a8      	blx	r5
	float tempCalc = (1.0/((log(voltage/((VOLT_REF/1000.0)-voltage))/THERMISTOR_BETA)+(1/(THERMISTOR_BETA_TEMP+273.15))))-273.15;
  402f8e:	4b26      	ldr	r3, [pc, #152]	; (403028 <calculateTemp+0xb8>)
  402f90:	4798      	blx	r3
  402f92:	4680      	mov	r8, r0
  402f94:	4689      	mov	r9, r1
  402f96:	4e25      	ldr	r6, [pc, #148]	; (40302c <calculateTemp+0xbc>)
  402f98:	4602      	mov	r2, r0
  402f9a:	460b      	mov	r3, r1
  402f9c:	a116      	add	r1, pc, #88	; (adr r1, 402ff8 <calculateTemp+0x88>)
  402f9e:	e9d1 0100 	ldrd	r0, r1, [r1]
  402fa2:	47b0      	blx	r6
  402fa4:	4c22      	ldr	r4, [pc, #136]	; (403030 <calculateTemp+0xc0>)
  402fa6:	4602      	mov	r2, r0
  402fa8:	460b      	mov	r3, r1
  402faa:	4640      	mov	r0, r8
  402fac:	4649      	mov	r1, r9
  402fae:	47a0      	blx	r4
  402fb0:	4b20      	ldr	r3, [pc, #128]	; (403034 <calculateTemp+0xc4>)
  402fb2:	4798      	blx	r3
  402fb4:	a312      	add	r3, pc, #72	; (adr r3, 403000 <calculateTemp+0x90>)
  402fb6:	e9d3 2300 	ldrd	r2, r3, [r3]
  402fba:	47a0      	blx	r4
  402fbc:	a312      	add	r3, pc, #72	; (adr r3, 403008 <calculateTemp+0x98>)
  402fbe:	e9d3 2300 	ldrd	r2, r3, [r3]
  402fc2:	f8df 8080 	ldr.w	r8, [pc, #128]	; 403044 <calculateTemp+0xd4>
  402fc6:	47c0      	blx	r8
  402fc8:	4602      	mov	r2, r0
  402fca:	460b      	mov	r3, r1
  402fcc:	2000      	movs	r0, #0
  402fce:	491a      	ldr	r1, [pc, #104]	; (403038 <calculateTemp+0xc8>)
  402fd0:	47a0      	blx	r4
  402fd2:	a30f      	add	r3, pc, #60	; (adr r3, 403010 <calculateTemp+0xa0>)
  402fd4:	e9d3 2300 	ldrd	r2, r3, [r3]
  402fd8:	47b0      	blx	r6
  402fda:	47a8      	blx	r5
	if(channel == 4)
  402fdc:	2f04      	cmp	r7, #4
  402fde:	d005      	beq.n	402fec <calculateTemp+0x7c>
		tempFet = tempCalc;
	else if(channel == 5)
  402fe0:	2f05      	cmp	r7, #5
		tempBatt = tempCalc;
  402fe2:	bf04      	itt	eq
  402fe4:	4b15      	ldreq	r3, [pc, #84]	; (40303c <calculateTemp+0xcc>)
  402fe6:	6018      	streq	r0, [r3, #0]
  402fe8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		tempFet = tempCalc;
  402fec:	4b14      	ldr	r3, [pc, #80]	; (403040 <calculateTemp+0xd0>)
  402fee:	6018      	str	r0, [r3, #0]
  402ff0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402ff4:	f3af 8000 	nop.w
  402ff8:	66666666 	.word	0x66666666
  402ffc:	400a6666 	.word	0x400a6666
  403000:	00000000 	.word	0x00000000
  403004:	40b25c00 	.word	0x40b25c00
  403008:	dcb5db83 	.word	0xdcb5db83
  40300c:	3f6b79e1 	.word	0x3f6b79e1
  403010:	66666666 	.word	0x66666666
  403014:	40711266 	.word	0x40711266
  403018:	00403b25 	.word	0x00403b25
  40301c:	00403bf1 	.word	0x00403bf1
  403020:	3f300000 	.word	0x3f300000
  403024:	00404151 	.word	0x00404151
  403028:	00403b49 	.word	0x00403b49
  40302c:	00403889 	.word	0x00403889
  403030:	00403e45 	.word	0x00403e45
  403034:	00403391 	.word	0x00403391
  403038:	3ff00000 	.word	0x3ff00000
  40303c:	20000cf8 	.word	0x20000cf8
  403040:	20000cfc 	.word	0x20000cfc
  403044:	0040388d 	.word	0x0040388d

00403048 <getADCData>:
}

void getADCData(){
  403048:	b538      	push	{r3, r4, r5, lr}
	if((adc_get_status(ADC) & ADC_ISR_DRDY) == ADC_ISR_DRDY) {
  40304a:	480b      	ldr	r0, [pc, #44]	; (403078 <getADCData+0x30>)
  40304c:	4b0b      	ldr	r3, [pc, #44]	; (40307c <getADCData+0x34>)
  40304e:	4798      	blx	r3
  403050:	f010 7f80 	tst.w	r0, #16777216	; 0x1000000
  403054:	d100      	bne.n	403058 <getADCData+0x10>
  403056:	bd38      	pop	{r3, r4, r5, pc}
		calculateCellVoltage(ADC->ADC_CDR[0]);
  403058:	4c07      	ldr	r4, [pc, #28]	; (403078 <getADCData+0x30>)
  40305a:	6d20      	ldr	r0, [r4, #80]	; 0x50
  40305c:	4b08      	ldr	r3, [pc, #32]	; (403080 <getADCData+0x38>)
  40305e:	4798      	blx	r3
		calculateCellCurrent(ADC->ADC_CDR[1]);
  403060:	6d60      	ldr	r0, [r4, #84]	; 0x54
  403062:	4b08      	ldr	r3, [pc, #32]	; (403084 <getADCData+0x3c>)
  403064:	4798      	blx	r3
		calculateTemp(ADC->ADC_CDR[4],4);
  403066:	6e20      	ldr	r0, [r4, #96]	; 0x60
  403068:	2104      	movs	r1, #4
  40306a:	4d07      	ldr	r5, [pc, #28]	; (403088 <getADCData+0x40>)
  40306c:	47a8      	blx	r5
		calculateTemp(ADC->ADC_CDR[5],5);
  40306e:	6e60      	ldr	r0, [r4, #100]	; 0x64
  403070:	2105      	movs	r1, #5
  403072:	47a8      	blx	r5
	}
}
  403074:	e7ef      	b.n	403056 <getADCData+0xe>
  403076:	bf00      	nop
  403078:	40038000 	.word	0x40038000
  40307c:	00400ec1 	.word	0x00400ec1
  403080:	00402ed1 	.word	0x00402ed1
  403084:	00402f09 	.word	0x00402f09
  403088:	00402f71 	.word	0x00402f71

0040308c <TC1_Handler>:

void TransmitTimerHandler(void){
  40308c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403090:	b087      	sub	sp, #28
  403092:	af06      	add	r7, sp, #24
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  403094:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  403098:	4b25      	ldr	r3, [pc, #148]	; (403130 <TC1_Handler+0xa4>)
  40309a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  __ASM volatile ("dsb 0xF":::"memory");
  40309e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4030a2:	f3bf 8f6f 	isb	sy
	NVIC_DisableIRQ(ID_TC1);
	if(tc_get_status(TC,TC_CH) & TC_SR_CPCS){
  4030a6:	2101      	movs	r1, #1
  4030a8:	4822      	ldr	r0, [pc, #136]	; (403134 <TC1_Handler+0xa8>)
  4030aa:	4b23      	ldr	r3, [pc, #140]	; (403138 <TC1_Handler+0xac>)
  4030ac:	4798      	blx	r3
  4030ae:	f010 0f10 	tst.w	r0, #16
  4030b2:	d10a      	bne.n	4030ca <TC1_Handler+0x3e>
			for(int i=0;i<strln;i++)
				if(udi_cdc_is_tx_ready())
					udi_cdc_putc(str[i]);
		}
	}
	updateLoop = true;
  4030b4:	2201      	movs	r2, #1
  4030b6:	4b21      	ldr	r3, [pc, #132]	; (40313c <TC1_Handler+0xb0>)
  4030b8:	701a      	strb	r2, [r3, #0]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4030ba:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  4030be:	4b1c      	ldr	r3, [pc, #112]	; (403130 <TC1_Handler+0xa4>)
  4030c0:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(ID_TC1);
}
  4030c2:	3704      	adds	r7, #4
  4030c4:	46bd      	mov	sp, r7
  4030c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if(udi_cdc_get_free_tx_buffer() >= 64){
  4030ca:	4b1d      	ldr	r3, [pc, #116]	; (403140 <TC1_Handler+0xb4>)
  4030cc:	4798      	blx	r3
  4030ce:	283f      	cmp	r0, #63	; 0x3f
  4030d0:	d9f0      	bls.n	4030b4 <TC1_Handler+0x28>
  4030d2:	46e9      	mov	r9, sp
			char str[strln];
  4030d4:	b08a      	sub	sp, #40	; 0x28
  4030d6:	ac06      	add	r4, sp, #24
			sprintf(str, "%f,%f,%f,%f\n\r",cellV,current,tempBatt,tempFet);
  4030d8:	4d1a      	ldr	r5, [pc, #104]	; (403144 <TC1_Handler+0xb8>)
  4030da:	4b1b      	ldr	r3, [pc, #108]	; (403148 <TC1_Handler+0xbc>)
  4030dc:	6818      	ldr	r0, [r3, #0]
  4030de:	47a8      	blx	r5
  4030e0:	4682      	mov	sl, r0
  4030e2:	468b      	mov	fp, r1
  4030e4:	4b19      	ldr	r3, [pc, #100]	; (40314c <TC1_Handler+0xc0>)
  4030e6:	6818      	ldr	r0, [r3, #0]
  4030e8:	47a8      	blx	r5
  4030ea:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4030ee:	4b18      	ldr	r3, [pc, #96]	; (403150 <TC1_Handler+0xc4>)
  4030f0:	6818      	ldr	r0, [r3, #0]
  4030f2:	47a8      	blx	r5
  4030f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4030f8:	4b16      	ldr	r3, [pc, #88]	; (403154 <TC1_Handler+0xc8>)
  4030fa:	6818      	ldr	r0, [r3, #0]
  4030fc:	47a8      	blx	r5
  4030fe:	e9cd 0100 	strd	r0, r1, [sp]
  403102:	4652      	mov	r2, sl
  403104:	465b      	mov	r3, fp
  403106:	4914      	ldr	r1, [pc, #80]	; (403158 <TC1_Handler+0xcc>)
  403108:	4620      	mov	r0, r4
  40310a:	4d14      	ldr	r5, [pc, #80]	; (40315c <TC1_Handler+0xd0>)
  40310c:	47a8      	blx	r5
  40310e:	ad10      	add	r5, sp, #64	; 0x40
				if(udi_cdc_is_tx_ready())
  403110:	4e13      	ldr	r6, [pc, #76]	; (403160 <TC1_Handler+0xd4>)
					udi_cdc_putc(str[i]);
  403112:	f8df 8050 	ldr.w	r8, [pc, #80]	; 403164 <TC1_Handler+0xd8>
  403116:	e002      	b.n	40311e <TC1_Handler+0x92>
  403118:	3401      	adds	r4, #1
			for(int i=0;i<strln;i++)
  40311a:	42ac      	cmp	r4, r5
  40311c:	d005      	beq.n	40312a <TC1_Handler+0x9e>
				if(udi_cdc_is_tx_ready())
  40311e:	47b0      	blx	r6
  403120:	2800      	cmp	r0, #0
  403122:	d0f9      	beq.n	403118 <TC1_Handler+0x8c>
					udi_cdc_putc(str[i]);
  403124:	7820      	ldrb	r0, [r4, #0]
  403126:	47c0      	blx	r8
  403128:	e7f6      	b.n	403118 <TC1_Handler+0x8c>
  40312a:	46cd      	mov	sp, r9
  40312c:	e7c2      	b.n	4030b4 <TC1_Handler+0x28>
  40312e:	bf00      	nop
  403130:	e000e100 	.word	0xe000e100
  403134:	40010000 	.word	0x40010000
  403138:	00402b23 	.word	0x00402b23
  40313c:	20000c94 	.word	0x20000c94
  403140:	00400739 	.word	0x00400739
  403144:	00403b49 	.word	0x00403b49
  403148:	20000cf4 	.word	0x20000cf4
  40314c:	20000cfc 	.word	0x20000cfc
  403150:	20000cf8 	.word	0x20000cf8
  403154:	20000cf0 	.word	0x20000cf0
  403158:	00408828 	.word	0x00408828
  40315c:	004049c5 	.word	0x004049c5
  403160:	0040075d 	.word	0x0040075d
  403164:	00400809 	.word	0x00400809

00403168 <initPWM>:

void initPWM(){
  403168:	b530      	push	{r4, r5, lr}
  40316a:	b085      	sub	sp, #20
	pmc_enable_periph_clk(ID_PWM);
  40316c:	201f      	movs	r0, #31
  40316e:	4b16      	ldr	r3, [pc, #88]	; (4031c8 <initPWM+0x60>)
  403170:	4798      	blx	r3
	pwm_channel_disable(PWM,PWM_CHANNEL_0);
  403172:	4c16      	ldr	r4, [pc, #88]	; (4031cc <initPWM+0x64>)
  403174:	2100      	movs	r1, #0
  403176:	4620      	mov	r0, r4
  403178:	4b15      	ldr	r3, [pc, #84]	; (4031d0 <initPWM+0x68>)
  40317a:	4798      	blx	r3
	pio_set_peripheral(LOAD_PORT,LOAD_PERIPH,LOAD_MASK);
  40317c:	2201      	movs	r2, #1
  40317e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  403182:	4814      	ldr	r0, [pc, #80]	; (4031d4 <initPWM+0x6c>)
  403184:	4b14      	ldr	r3, [pc, #80]	; (4031d8 <initPWM+0x70>)
  403186:	4798      	blx	r3
	pwm_clock_t clock_setting = {
  403188:	4a14      	ldr	r2, [pc, #80]	; (4031dc <initPWM+0x74>)
  40318a:	ab01      	add	r3, sp, #4
  40318c:	ca07      	ldmia	r2, {r0, r1, r2}
  40318e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
		.ul_clka = 1000000,
		.ul_clkb = 0,
		.ul_mck = 120000000
	};
	pwm_init(PWM,&clock_setting);
  403192:	4619      	mov	r1, r3
  403194:	4620      	mov	r0, r4
  403196:	4b12      	ldr	r3, [pc, #72]	; (4031e0 <initPWM+0x78>)
  403198:	4798      	blx	r3
	Load.ul_prescaler = PWM_CMR_CPRE_CLKA;
  40319a:	4912      	ldr	r1, [pc, #72]	; (4031e4 <initPWM+0x7c>)
  40319c:	230b      	movs	r3, #11
  40319e:	604b      	str	r3, [r1, #4]
	Load.ul_period = 1000;
  4031a0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
  4031a4:	610b      	str	r3, [r1, #16]
	Load.ul_duty = PWMDuty;
  4031a6:	4b10      	ldr	r3, [pc, #64]	; (4031e8 <initPWM+0x80>)
  4031a8:	681b      	ldr	r3, [r3, #0]
  4031aa:	60cb      	str	r3, [r1, #12]
	Load.channel = PWM_CHANNEL_0;
  4031ac:	2500      	movs	r5, #0
  4031ae:	600d      	str	r5, [r1, #0]
	Load.polarity = PWM_HIGH;
  4031b0:	2301      	movs	r3, #1
  4031b2:	728b      	strb	r3, [r1, #10]
	pwm_channel_init(PWM, &Load);
  4031b4:	4620      	mov	r0, r4
  4031b6:	4b0d      	ldr	r3, [pc, #52]	; (4031ec <initPWM+0x84>)
  4031b8:	4798      	blx	r3
	pwm_channel_enable(PWM,PWM_CHANNEL_0);
  4031ba:	4629      	mov	r1, r5
  4031bc:	4620      	mov	r0, r4
  4031be:	4b0c      	ldr	r3, [pc, #48]	; (4031f0 <initPWM+0x88>)
  4031c0:	4798      	blx	r3
}
  4031c2:	b005      	add	sp, #20
  4031c4:	bd30      	pop	{r4, r5, pc}
  4031c6:	bf00      	nop
  4031c8:	00402885 	.word	0x00402885
  4031cc:	40020000 	.word	0x40020000
  4031d0:	00402ae9 	.word	0x00402ae9
  4031d4:	400e0e00 	.word	0x400e0e00
  4031d8:	004026c9 	.word	0x004026c9
  4031dc:	0040881c 	.word	0x0040881c
  4031e0:	004029b5 	.word	0x004029b5
  4031e4:	20000d00 	.word	0x20000d00
  4031e8:	20000c8c 	.word	0x20000c8c
  4031ec:	004029f9 	.word	0x004029f9
  4031f0:	00402adf 	.word	0x00402adf

004031f4 <checkForDischargeCurrent>:

void checkForDischargeCurrent(){
  4031f4:	b508      	push	{r3, lr}
	if(udi_cdc_is_rx_ready()){
  4031f6:	4b07      	ldr	r3, [pc, #28]	; (403214 <checkForDischargeCurrent+0x20>)
  4031f8:	4798      	blx	r3
  4031fa:	b900      	cbnz	r0, 4031fe <checkForDischargeCurrent+0xa>
  4031fc:	bd08      	pop	{r3, pc}
		dischargeCurrent = (float)(udi_cdc_getc())/10.0;
  4031fe:	4b06      	ldr	r3, [pc, #24]	; (403218 <checkForDischargeCurrent+0x24>)
  403200:	4798      	blx	r3
  403202:	4b06      	ldr	r3, [pc, #24]	; (40321c <checkForDischargeCurrent+0x28>)
  403204:	4798      	blx	r3
  403206:	4906      	ldr	r1, [pc, #24]	; (403220 <checkForDischargeCurrent+0x2c>)
  403208:	4b06      	ldr	r3, [pc, #24]	; (403224 <checkForDischargeCurrent+0x30>)
  40320a:	4798      	blx	r3
  40320c:	4b06      	ldr	r3, [pc, #24]	; (403228 <checkForDischargeCurrent+0x34>)
  40320e:	6018      	str	r0, [r3, #0]
	}
}
  403210:	e7f4      	b.n	4031fc <checkForDischargeCurrent+0x8>
  403212:	bf00      	nop
  403214:	004005e1 	.word	0x004005e1
  403218:	004006ad 	.word	0x004006ad
  40321c:	00404365 	.word	0x00404365
  403220:	41200000 	.word	0x41200000
  403224:	00404575 	.word	0x00404575
  403228:	20000c90 	.word	0x20000c90

0040322c <updatePWM>:


void updatePWM(int newDuty){
  40322c:	b538      	push	{r3, r4, r5, lr}
	Load.ul_duty = newDuty;
  40322e:	4d08      	ldr	r5, [pc, #32]	; (403250 <updatePWM+0x24>)
  403230:	60e8      	str	r0, [r5, #12]
	pwm_channel_disable(PWM,PWM_CHANNEL_0);
  403232:	4c08      	ldr	r4, [pc, #32]	; (403254 <updatePWM+0x28>)
  403234:	2100      	movs	r1, #0
  403236:	4620      	mov	r0, r4
  403238:	4b07      	ldr	r3, [pc, #28]	; (403258 <updatePWM+0x2c>)
  40323a:	4798      	blx	r3
	pwm_channel_init(PWM,&Load);
  40323c:	4629      	mov	r1, r5
  40323e:	4620      	mov	r0, r4
  403240:	4b06      	ldr	r3, [pc, #24]	; (40325c <updatePWM+0x30>)
  403242:	4798      	blx	r3
	pwm_channel_enable(PWM,PWM_CHANNEL_0);
  403244:	2100      	movs	r1, #0
  403246:	4620      	mov	r0, r4
  403248:	4b05      	ldr	r3, [pc, #20]	; (403260 <updatePWM+0x34>)
  40324a:	4798      	blx	r3
  40324c:	bd38      	pop	{r3, r4, r5, pc}
  40324e:	bf00      	nop
  403250:	20000d00 	.word	0x20000d00
  403254:	40020000 	.word	0x40020000
  403258:	00402ae9 	.word	0x00402ae9
  40325c:	004029f9 	.word	0x004029f9
  403260:	00402adf 	.word	0x00402adf
  403264:	00000000 	.word	0x00000000

00403268 <LoadFeedback>:
}

void LoadFeedback(){
  403268:	b570      	push	{r4, r5, r6, lr}
	if(cellV <= 3.3){					//under voltage protection
  40326a:	4b2f      	ldr	r3, [pc, #188]	; (403328 <LoadFeedback+0xc0>)
  40326c:	6818      	ldr	r0, [r3, #0]
  40326e:	4b2f      	ldr	r3, [pc, #188]	; (40332c <LoadFeedback+0xc4>)
  403270:	4798      	blx	r3
  403272:	a329      	add	r3, pc, #164	; (adr r3, 403318 <LoadFeedback+0xb0>)
  403274:	e9d3 2300 	ldrd	r2, r3, [r3]
  403278:	4c2d      	ldr	r4, [pc, #180]	; (403330 <LoadFeedback+0xc8>)
  40327a:	47a0      	blx	r4
  40327c:	2800      	cmp	r0, #0
  40327e:	d13a      	bne.n	4032f6 <LoadFeedback+0x8e>
		dischargeCurrent = 0.0;
		PWMDuty = 0;
		updatePWM(PWMDuty);
	}
	if(updateLoop){
  403280:	4b2c      	ldr	r3, [pc, #176]	; (403334 <LoadFeedback+0xcc>)
  403282:	781b      	ldrb	r3, [r3, #0]
  403284:	2b00      	cmp	r3, #0
  403286:	d035      	beq.n	4032f4 <LoadFeedback+0x8c>
		if(dischargeCurrent - current > 0.1 && current < 25 && PWMDuty < 1000){
  403288:	4b2b      	ldr	r3, [pc, #172]	; (403338 <LoadFeedback+0xd0>)
  40328a:	681d      	ldr	r5, [r3, #0]
  40328c:	4b2b      	ldr	r3, [pc, #172]	; (40333c <LoadFeedback+0xd4>)
  40328e:	681c      	ldr	r4, [r3, #0]
  403290:	4621      	mov	r1, r4
  403292:	4628      	mov	r0, r5
  403294:	4b2a      	ldr	r3, [pc, #168]	; (403340 <LoadFeedback+0xd8>)
  403296:	4798      	blx	r3
  403298:	4b24      	ldr	r3, [pc, #144]	; (40332c <LoadFeedback+0xc4>)
  40329a:	4798      	blx	r3
  40329c:	a320      	add	r3, pc, #128	; (adr r3, 403320 <LoadFeedback+0xb8>)
  40329e:	e9d3 2300 	ldrd	r2, r3, [r3]
  4032a2:	4e28      	ldr	r6, [pc, #160]	; (403344 <LoadFeedback+0xdc>)
  4032a4:	47b0      	blx	r6
  4032a6:	b148      	cbz	r0, 4032bc <LoadFeedback+0x54>
  4032a8:	4927      	ldr	r1, [pc, #156]	; (403348 <LoadFeedback+0xe0>)
  4032aa:	4620      	mov	r0, r4
  4032ac:	4b27      	ldr	r3, [pc, #156]	; (40334c <LoadFeedback+0xe4>)
  4032ae:	4798      	blx	r3
  4032b0:	b120      	cbz	r0, 4032bc <LoadFeedback+0x54>
  4032b2:	4b27      	ldr	r3, [pc, #156]	; (403350 <LoadFeedback+0xe8>)
  4032b4:	6818      	ldr	r0, [r3, #0]
  4032b6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
  4032ba:	db25      	blt.n	403308 <LoadFeedback+0xa0>
			updatePWM(++PWMDuty);
		}else if(current - dischargeCurrent > 0.1 && current > 0 && PWMDuty > 0){
  4032bc:	4629      	mov	r1, r5
  4032be:	4620      	mov	r0, r4
  4032c0:	4b1f      	ldr	r3, [pc, #124]	; (403340 <LoadFeedback+0xd8>)
  4032c2:	4798      	blx	r3
  4032c4:	4b19      	ldr	r3, [pc, #100]	; (40332c <LoadFeedback+0xc4>)
  4032c6:	4798      	blx	r3
  4032c8:	a315      	add	r3, pc, #84	; (adr r3, 403320 <LoadFeedback+0xb8>)
  4032ca:	e9d3 2300 	ldrd	r2, r3, [r3]
  4032ce:	4d1d      	ldr	r5, [pc, #116]	; (403344 <LoadFeedback+0xdc>)
  4032d0:	47a8      	blx	r5
  4032d2:	b160      	cbz	r0, 4032ee <LoadFeedback+0x86>
  4032d4:	2100      	movs	r1, #0
  4032d6:	4620      	mov	r0, r4
  4032d8:	4b1e      	ldr	r3, [pc, #120]	; (403354 <LoadFeedback+0xec>)
  4032da:	4798      	blx	r3
  4032dc:	b138      	cbz	r0, 4032ee <LoadFeedback+0x86>
  4032de:	4b1c      	ldr	r3, [pc, #112]	; (403350 <LoadFeedback+0xe8>)
  4032e0:	6818      	ldr	r0, [r3, #0]
  4032e2:	2800      	cmp	r0, #0
  4032e4:	dd03      	ble.n	4032ee <LoadFeedback+0x86>
			PWMDuty -= 1;
  4032e6:	3801      	subs	r0, #1
  4032e8:	6018      	str	r0, [r3, #0]
			updatePWM(PWMDuty);
  4032ea:	4b1b      	ldr	r3, [pc, #108]	; (403358 <LoadFeedback+0xf0>)
  4032ec:	4798      	blx	r3
		}
		updateLoop = false;
  4032ee:	2200      	movs	r2, #0
  4032f0:	4b10      	ldr	r3, [pc, #64]	; (403334 <LoadFeedback+0xcc>)
  4032f2:	701a      	strb	r2, [r3, #0]
  4032f4:	bd70      	pop	{r4, r5, r6, pc}
		dischargeCurrent = 0.0;
  4032f6:	2200      	movs	r2, #0
  4032f8:	4b0f      	ldr	r3, [pc, #60]	; (403338 <LoadFeedback+0xd0>)
  4032fa:	601a      	str	r2, [r3, #0]
		PWMDuty = 0;
  4032fc:	2000      	movs	r0, #0
  4032fe:	4b14      	ldr	r3, [pc, #80]	; (403350 <LoadFeedback+0xe8>)
  403300:	6018      	str	r0, [r3, #0]
		updatePWM(PWMDuty);
  403302:	4b15      	ldr	r3, [pc, #84]	; (403358 <LoadFeedback+0xf0>)
  403304:	4798      	blx	r3
  403306:	e7bb      	b.n	403280 <LoadFeedback+0x18>
			updatePWM(++PWMDuty);
  403308:	3001      	adds	r0, #1
  40330a:	6018      	str	r0, [r3, #0]
  40330c:	4b12      	ldr	r3, [pc, #72]	; (403358 <LoadFeedback+0xf0>)
  40330e:	4798      	blx	r3
  403310:	e7ed      	b.n	4032ee <LoadFeedback+0x86>
  403312:	bf00      	nop
  403314:	f3af 8000 	nop.w
  403318:	66666666 	.word	0x66666666
  40331c:	400a6666 	.word	0x400a6666
  403320:	9999999a 	.word	0x9999999a
  403324:	3fb99999 	.word	0x3fb99999
  403328:	20000cf4 	.word	0x20000cf4
  40332c:	00403b49 	.word	0x00403b49
  403330:	004040e9 	.word	0x004040e9
  403334:	20000c94 	.word	0x20000c94
  403338:	20000c90 	.word	0x20000c90
  40333c:	20000cf0 	.word	0x20000cf0
  403340:	004041f9 	.word	0x004041f9
  403344:	00404111 	.word	0x00404111
  403348:	41c80000 	.word	0x41c80000
  40334c:	00404749 	.word	0x00404749
  403350:	20000c8c 	.word	0x20000c8c
  403354:	00404785 	.word	0x00404785
  403358:	0040322d 	.word	0x0040322d

0040335c <main>:
	}
}

int main (void)
{
  40335c:	b508      	push	{r3, lr}
	/* Insert system clock initialization code here (sysclk_init()). */
	sysclk_init();
  40335e:	4b06      	ldr	r3, [pc, #24]	; (403378 <main+0x1c>)
  403360:	4798      	blx	r3
	board_init();
  403362:	4b06      	ldr	r3, [pc, #24]	; (40337c <main+0x20>)
  403364:	4798      	blx	r3
	initPWM();
  403366:	4b06      	ldr	r3, [pc, #24]	; (403380 <main+0x24>)
  403368:	4798      	blx	r3

	/* Insert application code here, after the board has been initialized. */
	while(1){
		getADCData();
  40336a:	4e06      	ldr	r6, [pc, #24]	; (403384 <main+0x28>)
		checkForDischargeCurrent();
  40336c:	4d06      	ldr	r5, [pc, #24]	; (403388 <main+0x2c>)
		LoadFeedback();
  40336e:	4c07      	ldr	r4, [pc, #28]	; (40338c <main+0x30>)
		getADCData();
  403370:	47b0      	blx	r6
		checkForDischargeCurrent();
  403372:	47a8      	blx	r5
		LoadFeedback();
  403374:	47a0      	blx	r4
  403376:	e7fb      	b.n	403370 <main+0x14>
  403378:	00402665 	.word	0x00402665
  40337c:	00402b3d 	.word	0x00402b3d
  403380:	00403169 	.word	0x00403169
  403384:	00403049 	.word	0x00403049
  403388:	004031f5 	.word	0x004031f5
  40338c:	00403269 	.word	0x00403269

00403390 <log>:
  403390:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  403394:	b08a      	sub	sp, #40	; 0x28
  403396:	4604      	mov	r4, r0
  403398:	460d      	mov	r5, r1
  40339a:	f000 f875 	bl	403488 <__ieee754_log>
  40339e:	4b35      	ldr	r3, [pc, #212]	; (403474 <log+0xe4>)
  4033a0:	f993 6000 	ldrsb.w	r6, [r3]
  4033a4:	1c73      	adds	r3, r6, #1
  4033a6:	4680      	mov	r8, r0
  4033a8:	4689      	mov	r9, r1
  4033aa:	d00d      	beq.n	4033c8 <log+0x38>
  4033ac:	4622      	mov	r2, r4
  4033ae:	462b      	mov	r3, r5
  4033b0:	4620      	mov	r0, r4
  4033b2:	4629      	mov	r1, r5
  4033b4:	f000 feb6 	bl	404124 <__aeabi_dcmpun>
  4033b8:	b930      	cbnz	r0, 4033c8 <log+0x38>
  4033ba:	2200      	movs	r2, #0
  4033bc:	2300      	movs	r3, #0
  4033be:	4620      	mov	r0, r4
  4033c0:	4629      	mov	r1, r5
  4033c2:	f000 fea5 	bl	404110 <__aeabi_dcmpgt>
  4033c6:	b120      	cbz	r0, 4033d2 <log+0x42>
  4033c8:	4640      	mov	r0, r8
  4033ca:	4649      	mov	r1, r9
  4033cc:	b00a      	add	sp, #40	; 0x28
  4033ce:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
  4033d2:	4b29      	ldr	r3, [pc, #164]	; (403478 <log+0xe8>)
  4033d4:	9008      	str	r0, [sp, #32]
  4033d6:	e9cd 4502 	strd	r4, r5, [sp, #8]
  4033da:	e9cd 4504 	strd	r4, r5, [sp, #16]
  4033de:	9301      	str	r3, [sp, #4]
  4033e0:	4620      	mov	r0, r4
  4033e2:	4629      	mov	r1, r5
  4033e4:	b9ce      	cbnz	r6, 40341a <log+0x8a>
  4033e6:	4d25      	ldr	r5, [pc, #148]	; (40347c <log+0xec>)
  4033e8:	f04f 4460 	mov.w	r4, #3758096384	; 0xe0000000
  4033ec:	2200      	movs	r2, #0
  4033ee:	2300      	movs	r3, #0
  4033f0:	e9cd 4506 	strd	r4, r5, [sp, #24]
  4033f4:	f000 fe64 	bl	4040c0 <__aeabi_dcmpeq>
  4033f8:	2800      	cmp	r0, #0
  4033fa:	d033      	beq.n	403464 <log+0xd4>
  4033fc:	2302      	movs	r3, #2
  4033fe:	9300      	str	r3, [sp, #0]
  403400:	4668      	mov	r0, sp
  403402:	f000 fa35 	bl	403870 <matherr>
  403406:	b1a8      	cbz	r0, 403434 <log+0xa4>
  403408:	9b08      	ldr	r3, [sp, #32]
  40340a:	b9c3      	cbnz	r3, 40343e <log+0xae>
  40340c:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  403410:	4640      	mov	r0, r8
  403412:	4649      	mov	r1, r9
  403414:	b00a      	add	sp, #40	; 0x28
  403416:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
  40341a:	4d19      	ldr	r5, [pc, #100]	; (403480 <log+0xf0>)
  40341c:	2400      	movs	r4, #0
  40341e:	2200      	movs	r2, #0
  403420:	2300      	movs	r3, #0
  403422:	e9cd 4506 	strd	r4, r5, [sp, #24]
  403426:	f000 fe4b 	bl	4040c0 <__aeabi_dcmpeq>
  40342a:	b168      	cbz	r0, 403448 <log+0xb8>
  40342c:	2302      	movs	r3, #2
  40342e:	429e      	cmp	r6, r3
  403430:	9300      	str	r3, [sp, #0]
  403432:	d1e5      	bne.n	403400 <log+0x70>
  403434:	f001 f9b0 	bl	404798 <__errno>
  403438:	2322      	movs	r3, #34	; 0x22
  40343a:	6003      	str	r3, [r0, #0]
  40343c:	e7e4      	b.n	403408 <log+0x78>
  40343e:	f001 f9ab 	bl	404798 <__errno>
  403442:	9b08      	ldr	r3, [sp, #32]
  403444:	6003      	str	r3, [r0, #0]
  403446:	e7e1      	b.n	40340c <log+0x7c>
  403448:	2301      	movs	r3, #1
  40344a:	2e02      	cmp	r6, #2
  40344c:	9300      	str	r3, [sp, #0]
  40344e:	d10b      	bne.n	403468 <log+0xd8>
  403450:	f001 f9a2 	bl	404798 <__errno>
  403454:	2321      	movs	r3, #33	; 0x21
  403456:	6003      	str	r3, [r0, #0]
  403458:	480a      	ldr	r0, [pc, #40]	; (403484 <log+0xf4>)
  40345a:	f000 fa0b 	bl	403874 <nan>
  40345e:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403462:	e7d1      	b.n	403408 <log+0x78>
  403464:	2301      	movs	r3, #1
  403466:	9300      	str	r3, [sp, #0]
  403468:	4668      	mov	r0, sp
  40346a:	f000 fa01 	bl	403870 <matherr>
  40346e:	2800      	cmp	r0, #0
  403470:	d1f2      	bne.n	403458 <log+0xc8>
  403472:	e7ed      	b.n	403450 <log+0xc0>
  403474:	200000a8 	.word	0x200000a8
  403478:	00408838 	.word	0x00408838
  40347c:	c7efffff 	.word	0xc7efffff
  403480:	fff00000 	.word	0xfff00000
  403484:	00408860 	.word	0x00408860

00403488 <__ieee754_log>:
  403488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40348c:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  403490:	b085      	sub	sp, #20
  403492:	4606      	mov	r6, r0
  403494:	460f      	mov	r7, r1
  403496:	460b      	mov	r3, r1
  403498:	da5a      	bge.n	403550 <__ieee754_log+0xc8>
  40349a:	4602      	mov	r2, r0
  40349c:	f021 4400 	bic.w	r4, r1, #2147483648	; 0x80000000
  4034a0:	4322      	orrs	r2, r4
  4034a2:	f000 80f8 	beq.w	403696 <__ieee754_log+0x20e>
  4034a6:	2900      	cmp	r1, #0
  4034a8:	f2c0 817a 	blt.w	4037a0 <__ieee754_log+0x318>
  4034ac:	2200      	movs	r2, #0
  4034ae:	4bd6      	ldr	r3, [pc, #856]	; (403808 <__ieee754_log+0x380>)
  4034b0:	f000 fb9e 	bl	403bf0 <__aeabi_dmul>
  4034b4:	4ad5      	ldr	r2, [pc, #852]	; (40380c <__ieee754_log+0x384>)
  4034b6:	460b      	mov	r3, r1
  4034b8:	4293      	cmp	r3, r2
  4034ba:	4606      	mov	r6, r0
  4034bc:	460f      	mov	r7, r1
  4034be:	f06f 0c35 	mvn.w	ip, #53	; 0x35
  4034c2:	dc4a      	bgt.n	40355a <__ieee754_log+0xd2>
  4034c4:	f3c3 0513 	ubfx	r5, r3, #0, #20
  4034c8:	f505 2e15 	add.w	lr, r5, #610304	; 0x95000
  4034cc:	f60e 7e64 	addw	lr, lr, #3940	; 0xf64
  4034d0:	f40e 1e80 	and.w	lr, lr, #1048576	; 0x100000
  4034d4:	f08e 527f 	eor.w	r2, lr, #1069547520	; 0x3fc00000
  4034d8:	f482 1240 	eor.w	r2, r2, #3145728	; 0x300000
  4034dc:	151c      	asrs	r4, r3, #20
  4034de:	ea42 0705 	orr.w	r7, r2, r5
  4034e2:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
  4034e6:	4464      	add	r4, ip
  4034e8:	2200      	movs	r2, #0
  4034ea:	4bc9      	ldr	r3, [pc, #804]	; (403810 <__ieee754_log+0x388>)
  4034ec:	4630      	mov	r0, r6
  4034ee:	4639      	mov	r1, r7
  4034f0:	eb04 541e 	add.w	r4, r4, lr, lsr #20
  4034f4:	f000 f9c8 	bl	403888 <__aeabi_dsub>
  4034f8:	1cab      	adds	r3, r5, #2
  4034fa:	f3c3 0313 	ubfx	r3, r3, #0, #20
  4034fe:	2b02      	cmp	r3, #2
  403500:	4682      	mov	sl, r0
  403502:	468b      	mov	fp, r1
  403504:	f04f 0200 	mov.w	r2, #0
  403508:	dc30      	bgt.n	40356c <__ieee754_log+0xe4>
  40350a:	2300      	movs	r3, #0
  40350c:	f000 fdd8 	bl	4040c0 <__aeabi_dcmpeq>
  403510:	2800      	cmp	r0, #0
  403512:	f000 80c9 	beq.w	4036a8 <__ieee754_log+0x220>
  403516:	2c00      	cmp	r4, #0
  403518:	f000 814b 	beq.w	4037b2 <__ieee754_log+0x32a>
  40351c:	4620      	mov	r0, r4
  40351e:	f000 fb01 	bl	403b24 <__aeabi_i2d>
  403522:	a3a5      	add	r3, pc, #660	; (adr r3, 4037b8 <__ieee754_log+0x330>)
  403524:	e9d3 2300 	ldrd	r2, r3, [r3]
  403528:	4606      	mov	r6, r0
  40352a:	460f      	mov	r7, r1
  40352c:	f000 fb60 	bl	403bf0 <__aeabi_dmul>
  403530:	a3a3      	add	r3, pc, #652	; (adr r3, 4037c0 <__ieee754_log+0x338>)
  403532:	e9d3 2300 	ldrd	r2, r3, [r3]
  403536:	4604      	mov	r4, r0
  403538:	460d      	mov	r5, r1
  40353a:	4630      	mov	r0, r6
  40353c:	4639      	mov	r1, r7
  40353e:	f000 fb57 	bl	403bf0 <__aeabi_dmul>
  403542:	4602      	mov	r2, r0
  403544:	460b      	mov	r3, r1
  403546:	4620      	mov	r0, r4
  403548:	4629      	mov	r1, r5
  40354a:	f000 f99f 	bl	40388c <__adddf3>
  40354e:	e00a      	b.n	403566 <__ieee754_log+0xde>
  403550:	4aae      	ldr	r2, [pc, #696]	; (40380c <__ieee754_log+0x384>)
  403552:	4293      	cmp	r3, r2
  403554:	f04f 0c00 	mov.w	ip, #0
  403558:	ddb4      	ble.n	4034c4 <__ieee754_log+0x3c>
  40355a:	4632      	mov	r2, r6
  40355c:	463b      	mov	r3, r7
  40355e:	4630      	mov	r0, r6
  403560:	4639      	mov	r1, r7
  403562:	f000 f993 	bl	40388c <__adddf3>
  403566:	b005      	add	sp, #20
  403568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40356c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  403570:	f000 f98c 	bl	40388c <__adddf3>
  403574:	4602      	mov	r2, r0
  403576:	460b      	mov	r3, r1
  403578:	4650      	mov	r0, sl
  40357a:	4659      	mov	r1, fp
  40357c:	f000 fc62 	bl	403e44 <__aeabi_ddiv>
  403580:	4606      	mov	r6, r0
  403582:	4620      	mov	r0, r4
  403584:	460f      	mov	r7, r1
  403586:	f000 facd 	bl	403b24 <__aeabi_i2d>
  40358a:	4632      	mov	r2, r6
  40358c:	e9cd 0100 	strd	r0, r1, [sp]
  403590:	463b      	mov	r3, r7
  403592:	4630      	mov	r0, r6
  403594:	4639      	mov	r1, r7
  403596:	e9cd 6702 	strd	r6, r7, [sp, #8]
  40359a:	f000 fb29 	bl	403bf0 <__aeabi_dmul>
  40359e:	4602      	mov	r2, r0
  4035a0:	460b      	mov	r3, r1
  4035a2:	4680      	mov	r8, r0
  4035a4:	4689      	mov	r9, r1
  4035a6:	f000 fb23 	bl	403bf0 <__aeabi_dmul>
  4035aa:	a387      	add	r3, pc, #540	; (adr r3, 4037c8 <__ieee754_log+0x340>)
  4035ac:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035b0:	4606      	mov	r6, r0
  4035b2:	460f      	mov	r7, r1
  4035b4:	f000 fb1c 	bl	403bf0 <__aeabi_dmul>
  4035b8:	a385      	add	r3, pc, #532	; (adr r3, 4037d0 <__ieee754_log+0x348>)
  4035ba:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035be:	f000 f965 	bl	40388c <__adddf3>
  4035c2:	4632      	mov	r2, r6
  4035c4:	463b      	mov	r3, r7
  4035c6:	f000 fb13 	bl	403bf0 <__aeabi_dmul>
  4035ca:	a383      	add	r3, pc, #524	; (adr r3, 4037d8 <__ieee754_log+0x350>)
  4035cc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035d0:	f000 f95c 	bl	40388c <__adddf3>
  4035d4:	4632      	mov	r2, r6
  4035d6:	463b      	mov	r3, r7
  4035d8:	f000 fb0a 	bl	403bf0 <__aeabi_dmul>
  4035dc:	a380      	add	r3, pc, #512	; (adr r3, 4037e0 <__ieee754_log+0x358>)
  4035de:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035e2:	f000 f953 	bl	40388c <__adddf3>
  4035e6:	4642      	mov	r2, r8
  4035e8:	464b      	mov	r3, r9
  4035ea:	f000 fb01 	bl	403bf0 <__aeabi_dmul>
  4035ee:	a37e      	add	r3, pc, #504	; (adr r3, 4037e8 <__ieee754_log+0x360>)
  4035f0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035f4:	4680      	mov	r8, r0
  4035f6:	4689      	mov	r9, r1
  4035f8:	4630      	mov	r0, r6
  4035fa:	4639      	mov	r1, r7
  4035fc:	f000 faf8 	bl	403bf0 <__aeabi_dmul>
  403600:	a37b      	add	r3, pc, #492	; (adr r3, 4037f0 <__ieee754_log+0x368>)
  403602:	e9d3 2300 	ldrd	r2, r3, [r3]
  403606:	f000 f941 	bl	40388c <__adddf3>
  40360a:	4632      	mov	r2, r6
  40360c:	463b      	mov	r3, r7
  40360e:	f000 faef 	bl	403bf0 <__aeabi_dmul>
  403612:	a379      	add	r3, pc, #484	; (adr r3, 4037f8 <__ieee754_log+0x370>)
  403614:	e9d3 2300 	ldrd	r2, r3, [r3]
  403618:	f000 f938 	bl	40388c <__adddf3>
  40361c:	4632      	mov	r2, r6
  40361e:	463b      	mov	r3, r7
  403620:	f000 fae6 	bl	403bf0 <__aeabi_dmul>
  403624:	460b      	mov	r3, r1
  403626:	4602      	mov	r2, r0
  403628:	4649      	mov	r1, r9
  40362a:	4640      	mov	r0, r8
  40362c:	f000 f92e 	bl	40388c <__adddf3>
  403630:	f5a5 23c2 	sub.w	r3, r5, #397312	; 0x61000
  403634:	f5c5 25d7 	rsb	r5, r5, #440320	; 0x6b800
  403638:	f2a3 437a 	subw	r3, r3, #1146	; 0x47a
  40363c:	3551      	adds	r5, #81	; 0x51
  40363e:	431d      	orrs	r5, r3
  403640:	2d00      	cmp	r5, #0
  403642:	4680      	mov	r8, r0
  403644:	4689      	mov	r9, r1
  403646:	dd56      	ble.n	4036f6 <__ieee754_log+0x26e>
  403648:	2200      	movs	r2, #0
  40364a:	4b72      	ldr	r3, [pc, #456]	; (403814 <__ieee754_log+0x38c>)
  40364c:	4650      	mov	r0, sl
  40364e:	4659      	mov	r1, fp
  403650:	f000 face 	bl	403bf0 <__aeabi_dmul>
  403654:	4652      	mov	r2, sl
  403656:	465b      	mov	r3, fp
  403658:	f000 faca 	bl	403bf0 <__aeabi_dmul>
  40365c:	4606      	mov	r6, r0
  40365e:	460f      	mov	r7, r1
  403660:	2c00      	cmp	r4, #0
  403662:	d168      	bne.n	403736 <__ieee754_log+0x2ae>
  403664:	4632      	mov	r2, r6
  403666:	463b      	mov	r3, r7
  403668:	4640      	mov	r0, r8
  40366a:	4649      	mov	r1, r9
  40366c:	f000 f90e 	bl	40388c <__adddf3>
  403670:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403674:	f000 fabc 	bl	403bf0 <__aeabi_dmul>
  403678:	4602      	mov	r2, r0
  40367a:	460b      	mov	r3, r1
  40367c:	4630      	mov	r0, r6
  40367e:	4639      	mov	r1, r7
  403680:	f000 f902 	bl	403888 <__aeabi_dsub>
  403684:	4602      	mov	r2, r0
  403686:	460b      	mov	r3, r1
  403688:	4650      	mov	r0, sl
  40368a:	4659      	mov	r1, fp
  40368c:	f000 f8fc 	bl	403888 <__aeabi_dsub>
  403690:	b005      	add	sp, #20
  403692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403696:	2200      	movs	r2, #0
  403698:	2300      	movs	r3, #0
  40369a:	2000      	movs	r0, #0
  40369c:	495e      	ldr	r1, [pc, #376]	; (403818 <__ieee754_log+0x390>)
  40369e:	f000 fbd1 	bl	403e44 <__aeabi_ddiv>
  4036a2:	b005      	add	sp, #20
  4036a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4036a8:	a355      	add	r3, pc, #340	; (adr r3, 403800 <__ieee754_log+0x378>)
  4036aa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4036ae:	4650      	mov	r0, sl
  4036b0:	4659      	mov	r1, fp
  4036b2:	f000 fa9d 	bl	403bf0 <__aeabi_dmul>
  4036b6:	4602      	mov	r2, r0
  4036b8:	460b      	mov	r3, r1
  4036ba:	2000      	movs	r0, #0
  4036bc:	4955      	ldr	r1, [pc, #340]	; (403814 <__ieee754_log+0x38c>)
  4036be:	f000 f8e3 	bl	403888 <__aeabi_dsub>
  4036c2:	4652      	mov	r2, sl
  4036c4:	4606      	mov	r6, r0
  4036c6:	460f      	mov	r7, r1
  4036c8:	465b      	mov	r3, fp
  4036ca:	4650      	mov	r0, sl
  4036cc:	4659      	mov	r1, fp
  4036ce:	f000 fa8f 	bl	403bf0 <__aeabi_dmul>
  4036d2:	4602      	mov	r2, r0
  4036d4:	460b      	mov	r3, r1
  4036d6:	4630      	mov	r0, r6
  4036d8:	4639      	mov	r1, r7
  4036da:	f000 fa89 	bl	403bf0 <__aeabi_dmul>
  4036de:	4606      	mov	r6, r0
  4036e0:	460f      	mov	r7, r1
  4036e2:	2c00      	cmp	r4, #0
  4036e4:	f040 809a 	bne.w	40381c <__ieee754_log+0x394>
  4036e8:	4602      	mov	r2, r0
  4036ea:	460b      	mov	r3, r1
  4036ec:	4650      	mov	r0, sl
  4036ee:	4659      	mov	r1, fp
  4036f0:	f000 f8ca 	bl	403888 <__aeabi_dsub>
  4036f4:	e737      	b.n	403566 <__ieee754_log+0xde>
  4036f6:	2c00      	cmp	r4, #0
  4036f8:	f000 80a4 	beq.w	403844 <__ieee754_log+0x3bc>
  4036fc:	a32e      	add	r3, pc, #184	; (adr r3, 4037b8 <__ieee754_log+0x330>)
  4036fe:	e9d3 2300 	ldrd	r2, r3, [r3]
  403702:	e9dd 0100 	ldrd	r0, r1, [sp]
  403706:	f000 fa73 	bl	403bf0 <__aeabi_dmul>
  40370a:	4642      	mov	r2, r8
  40370c:	464b      	mov	r3, r9
  40370e:	4604      	mov	r4, r0
  403710:	460d      	mov	r5, r1
  403712:	4650      	mov	r0, sl
  403714:	4659      	mov	r1, fp
  403716:	f000 f8b7 	bl	403888 <__aeabi_dsub>
  40371a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40371e:	f000 fa67 	bl	403bf0 <__aeabi_dmul>
  403722:	a327      	add	r3, pc, #156	; (adr r3, 4037c0 <__ieee754_log+0x338>)
  403724:	e9d3 2300 	ldrd	r2, r3, [r3]
  403728:	4606      	mov	r6, r0
  40372a:	460f      	mov	r7, r1
  40372c:	e9dd 0100 	ldrd	r0, r1, [sp]
  403730:	f000 fa5e 	bl	403bf0 <__aeabi_dmul>
  403734:	e021      	b.n	40377a <__ieee754_log+0x2f2>
  403736:	a320      	add	r3, pc, #128	; (adr r3, 4037b8 <__ieee754_log+0x330>)
  403738:	e9d3 2300 	ldrd	r2, r3, [r3]
  40373c:	e9dd 0100 	ldrd	r0, r1, [sp]
  403740:	f000 fa56 	bl	403bf0 <__aeabi_dmul>
  403744:	4632      	mov	r2, r6
  403746:	463b      	mov	r3, r7
  403748:	4604      	mov	r4, r0
  40374a:	460d      	mov	r5, r1
  40374c:	4640      	mov	r0, r8
  40374e:	4649      	mov	r1, r9
  403750:	f000 f89c 	bl	40388c <__adddf3>
  403754:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403758:	f000 fa4a 	bl	403bf0 <__aeabi_dmul>
  40375c:	a318      	add	r3, pc, #96	; (adr r3, 4037c0 <__ieee754_log+0x338>)
  40375e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403762:	4680      	mov	r8, r0
  403764:	4689      	mov	r9, r1
  403766:	e9dd 0100 	ldrd	r0, r1, [sp]
  40376a:	f000 fa41 	bl	403bf0 <__aeabi_dmul>
  40376e:	4602      	mov	r2, r0
  403770:	460b      	mov	r3, r1
  403772:	4640      	mov	r0, r8
  403774:	4649      	mov	r1, r9
  403776:	f000 f889 	bl	40388c <__adddf3>
  40377a:	4602      	mov	r2, r0
  40377c:	460b      	mov	r3, r1
  40377e:	4630      	mov	r0, r6
  403780:	4639      	mov	r1, r7
  403782:	f000 f881 	bl	403888 <__aeabi_dsub>
  403786:	4652      	mov	r2, sl
  403788:	465b      	mov	r3, fp
  40378a:	f000 f87d 	bl	403888 <__aeabi_dsub>
  40378e:	4602      	mov	r2, r0
  403790:	460b      	mov	r3, r1
  403792:	4620      	mov	r0, r4
  403794:	4629      	mov	r1, r5
  403796:	f000 f877 	bl	403888 <__aeabi_dsub>
  40379a:	b005      	add	sp, #20
  40379c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4037a0:	4602      	mov	r2, r0
  4037a2:	460b      	mov	r3, r1
  4037a4:	f000 f870 	bl	403888 <__aeabi_dsub>
  4037a8:	2200      	movs	r2, #0
  4037aa:	2300      	movs	r3, #0
  4037ac:	f000 fb4a 	bl	403e44 <__aeabi_ddiv>
  4037b0:	e6d9      	b.n	403566 <__ieee754_log+0xde>
  4037b2:	2000      	movs	r0, #0
  4037b4:	2100      	movs	r1, #0
  4037b6:	e6d6      	b.n	403566 <__ieee754_log+0xde>
  4037b8:	fee00000 	.word	0xfee00000
  4037bc:	3fe62e42 	.word	0x3fe62e42
  4037c0:	35793c76 	.word	0x35793c76
  4037c4:	3dea39ef 	.word	0x3dea39ef
  4037c8:	df3e5244 	.word	0xdf3e5244
  4037cc:	3fc2f112 	.word	0x3fc2f112
  4037d0:	96cb03de 	.word	0x96cb03de
  4037d4:	3fc74664 	.word	0x3fc74664
  4037d8:	94229359 	.word	0x94229359
  4037dc:	3fd24924 	.word	0x3fd24924
  4037e0:	55555593 	.word	0x55555593
  4037e4:	3fe55555 	.word	0x3fe55555
  4037e8:	d078c69f 	.word	0xd078c69f
  4037ec:	3fc39a09 	.word	0x3fc39a09
  4037f0:	1d8e78af 	.word	0x1d8e78af
  4037f4:	3fcc71c5 	.word	0x3fcc71c5
  4037f8:	9997fa04 	.word	0x9997fa04
  4037fc:	3fd99999 	.word	0x3fd99999
  403800:	55555555 	.word	0x55555555
  403804:	3fd55555 	.word	0x3fd55555
  403808:	43500000 	.word	0x43500000
  40380c:	7fefffff 	.word	0x7fefffff
  403810:	3ff00000 	.word	0x3ff00000
  403814:	3fe00000 	.word	0x3fe00000
  403818:	c3500000 	.word	0xc3500000
  40381c:	4620      	mov	r0, r4
  40381e:	f000 f981 	bl	403b24 <__aeabi_i2d>
  403822:	a30f      	add	r3, pc, #60	; (adr r3, 403860 <__ieee754_log+0x3d8>)
  403824:	e9d3 2300 	ldrd	r2, r3, [r3]
  403828:	4680      	mov	r8, r0
  40382a:	4689      	mov	r9, r1
  40382c:	f000 f9e0 	bl	403bf0 <__aeabi_dmul>
  403830:	a30d      	add	r3, pc, #52	; (adr r3, 403868 <__ieee754_log+0x3e0>)
  403832:	e9d3 2300 	ldrd	r2, r3, [r3]
  403836:	4604      	mov	r4, r0
  403838:	460d      	mov	r5, r1
  40383a:	4640      	mov	r0, r8
  40383c:	4649      	mov	r1, r9
  40383e:	f000 f9d7 	bl	403bf0 <__aeabi_dmul>
  403842:	e79a      	b.n	40377a <__ieee754_log+0x2f2>
  403844:	4602      	mov	r2, r0
  403846:	460b      	mov	r3, r1
  403848:	4650      	mov	r0, sl
  40384a:	4659      	mov	r1, fp
  40384c:	f000 f81c 	bl	403888 <__aeabi_dsub>
  403850:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403854:	f000 f9cc 	bl	403bf0 <__aeabi_dmul>
  403858:	e714      	b.n	403684 <__ieee754_log+0x1fc>
  40385a:	bf00      	nop
  40385c:	f3af 8000 	nop.w
  403860:	fee00000 	.word	0xfee00000
  403864:	3fe62e42 	.word	0x3fe62e42
  403868:	35793c76 	.word	0x35793c76
  40386c:	3dea39ef 	.word	0x3dea39ef

00403870 <matherr>:
  403870:	2000      	movs	r0, #0
  403872:	4770      	bx	lr

00403874 <nan>:
  403874:	2000      	movs	r0, #0
  403876:	4901      	ldr	r1, [pc, #4]	; (40387c <nan+0x8>)
  403878:	4770      	bx	lr
  40387a:	bf00      	nop
  40387c:	7ff80000 	.word	0x7ff80000

00403880 <__aeabi_drsub>:
  403880:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  403884:	e002      	b.n	40388c <__adddf3>
  403886:	bf00      	nop

00403888 <__aeabi_dsub>:
  403888:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0040388c <__adddf3>:
  40388c:	b530      	push	{r4, r5, lr}
  40388e:	ea4f 0441 	mov.w	r4, r1, lsl #1
  403892:	ea4f 0543 	mov.w	r5, r3, lsl #1
  403896:	ea94 0f05 	teq	r4, r5
  40389a:	bf08      	it	eq
  40389c:	ea90 0f02 	teqeq	r0, r2
  4038a0:	bf1f      	itttt	ne
  4038a2:	ea54 0c00 	orrsne.w	ip, r4, r0
  4038a6:	ea55 0c02 	orrsne.w	ip, r5, r2
  4038aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4038ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4038b2:	f000 80e2 	beq.w	403a7a <__adddf3+0x1ee>
  4038b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4038ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4038be:	bfb8      	it	lt
  4038c0:	426d      	neglt	r5, r5
  4038c2:	dd0c      	ble.n	4038de <__adddf3+0x52>
  4038c4:	442c      	add	r4, r5
  4038c6:	ea80 0202 	eor.w	r2, r0, r2
  4038ca:	ea81 0303 	eor.w	r3, r1, r3
  4038ce:	ea82 0000 	eor.w	r0, r2, r0
  4038d2:	ea83 0101 	eor.w	r1, r3, r1
  4038d6:	ea80 0202 	eor.w	r2, r0, r2
  4038da:	ea81 0303 	eor.w	r3, r1, r3
  4038de:	2d36      	cmp	r5, #54	; 0x36
  4038e0:	bf88      	it	hi
  4038e2:	bd30      	pophi	{r4, r5, pc}
  4038e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4038e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4038ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4038f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4038f4:	d002      	beq.n	4038fc <__adddf3+0x70>
  4038f6:	4240      	negs	r0, r0
  4038f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4038fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  403900:	ea4f 3303 	mov.w	r3, r3, lsl #12
  403904:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  403908:	d002      	beq.n	403910 <__adddf3+0x84>
  40390a:	4252      	negs	r2, r2
  40390c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  403910:	ea94 0f05 	teq	r4, r5
  403914:	f000 80a7 	beq.w	403a66 <__adddf3+0x1da>
  403918:	f1a4 0401 	sub.w	r4, r4, #1
  40391c:	f1d5 0e20 	rsbs	lr, r5, #32
  403920:	db0d      	blt.n	40393e <__adddf3+0xb2>
  403922:	fa02 fc0e 	lsl.w	ip, r2, lr
  403926:	fa22 f205 	lsr.w	r2, r2, r5
  40392a:	1880      	adds	r0, r0, r2
  40392c:	f141 0100 	adc.w	r1, r1, #0
  403930:	fa03 f20e 	lsl.w	r2, r3, lr
  403934:	1880      	adds	r0, r0, r2
  403936:	fa43 f305 	asr.w	r3, r3, r5
  40393a:	4159      	adcs	r1, r3
  40393c:	e00e      	b.n	40395c <__adddf3+0xd0>
  40393e:	f1a5 0520 	sub.w	r5, r5, #32
  403942:	f10e 0e20 	add.w	lr, lr, #32
  403946:	2a01      	cmp	r2, #1
  403948:	fa03 fc0e 	lsl.w	ip, r3, lr
  40394c:	bf28      	it	cs
  40394e:	f04c 0c02 	orrcs.w	ip, ip, #2
  403952:	fa43 f305 	asr.w	r3, r3, r5
  403956:	18c0      	adds	r0, r0, r3
  403958:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  40395c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  403960:	d507      	bpl.n	403972 <__adddf3+0xe6>
  403962:	f04f 0e00 	mov.w	lr, #0
  403966:	f1dc 0c00 	rsbs	ip, ip, #0
  40396a:	eb7e 0000 	sbcs.w	r0, lr, r0
  40396e:	eb6e 0101 	sbc.w	r1, lr, r1
  403972:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  403976:	d31b      	bcc.n	4039b0 <__adddf3+0x124>
  403978:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  40397c:	d30c      	bcc.n	403998 <__adddf3+0x10c>
  40397e:	0849      	lsrs	r1, r1, #1
  403980:	ea5f 0030 	movs.w	r0, r0, rrx
  403984:	ea4f 0c3c 	mov.w	ip, ip, rrx
  403988:	f104 0401 	add.w	r4, r4, #1
  40398c:	ea4f 5244 	mov.w	r2, r4, lsl #21
  403990:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  403994:	f080 809a 	bcs.w	403acc <__adddf3+0x240>
  403998:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  40399c:	bf08      	it	eq
  40399e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4039a2:	f150 0000 	adcs.w	r0, r0, #0
  4039a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4039aa:	ea41 0105 	orr.w	r1, r1, r5
  4039ae:	bd30      	pop	{r4, r5, pc}
  4039b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4039b4:	4140      	adcs	r0, r0
  4039b6:	eb41 0101 	adc.w	r1, r1, r1
  4039ba:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4039be:	f1a4 0401 	sub.w	r4, r4, #1
  4039c2:	d1e9      	bne.n	403998 <__adddf3+0x10c>
  4039c4:	f091 0f00 	teq	r1, #0
  4039c8:	bf04      	itt	eq
  4039ca:	4601      	moveq	r1, r0
  4039cc:	2000      	moveq	r0, #0
  4039ce:	fab1 f381 	clz	r3, r1
  4039d2:	bf08      	it	eq
  4039d4:	3320      	addeq	r3, #32
  4039d6:	f1a3 030b 	sub.w	r3, r3, #11
  4039da:	f1b3 0220 	subs.w	r2, r3, #32
  4039de:	da0c      	bge.n	4039fa <__adddf3+0x16e>
  4039e0:	320c      	adds	r2, #12
  4039e2:	dd08      	ble.n	4039f6 <__adddf3+0x16a>
  4039e4:	f102 0c14 	add.w	ip, r2, #20
  4039e8:	f1c2 020c 	rsb	r2, r2, #12
  4039ec:	fa01 f00c 	lsl.w	r0, r1, ip
  4039f0:	fa21 f102 	lsr.w	r1, r1, r2
  4039f4:	e00c      	b.n	403a10 <__adddf3+0x184>
  4039f6:	f102 0214 	add.w	r2, r2, #20
  4039fa:	bfd8      	it	le
  4039fc:	f1c2 0c20 	rsble	ip, r2, #32
  403a00:	fa01 f102 	lsl.w	r1, r1, r2
  403a04:	fa20 fc0c 	lsr.w	ip, r0, ip
  403a08:	bfdc      	itt	le
  403a0a:	ea41 010c 	orrle.w	r1, r1, ip
  403a0e:	4090      	lslle	r0, r2
  403a10:	1ae4      	subs	r4, r4, r3
  403a12:	bfa2      	ittt	ge
  403a14:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  403a18:	4329      	orrge	r1, r5
  403a1a:	bd30      	popge	{r4, r5, pc}
  403a1c:	ea6f 0404 	mvn.w	r4, r4
  403a20:	3c1f      	subs	r4, #31
  403a22:	da1c      	bge.n	403a5e <__adddf3+0x1d2>
  403a24:	340c      	adds	r4, #12
  403a26:	dc0e      	bgt.n	403a46 <__adddf3+0x1ba>
  403a28:	f104 0414 	add.w	r4, r4, #20
  403a2c:	f1c4 0220 	rsb	r2, r4, #32
  403a30:	fa20 f004 	lsr.w	r0, r0, r4
  403a34:	fa01 f302 	lsl.w	r3, r1, r2
  403a38:	ea40 0003 	orr.w	r0, r0, r3
  403a3c:	fa21 f304 	lsr.w	r3, r1, r4
  403a40:	ea45 0103 	orr.w	r1, r5, r3
  403a44:	bd30      	pop	{r4, r5, pc}
  403a46:	f1c4 040c 	rsb	r4, r4, #12
  403a4a:	f1c4 0220 	rsb	r2, r4, #32
  403a4e:	fa20 f002 	lsr.w	r0, r0, r2
  403a52:	fa01 f304 	lsl.w	r3, r1, r4
  403a56:	ea40 0003 	orr.w	r0, r0, r3
  403a5a:	4629      	mov	r1, r5
  403a5c:	bd30      	pop	{r4, r5, pc}
  403a5e:	fa21 f004 	lsr.w	r0, r1, r4
  403a62:	4629      	mov	r1, r5
  403a64:	bd30      	pop	{r4, r5, pc}
  403a66:	f094 0f00 	teq	r4, #0
  403a6a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  403a6e:	bf06      	itte	eq
  403a70:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  403a74:	3401      	addeq	r4, #1
  403a76:	3d01      	subne	r5, #1
  403a78:	e74e      	b.n	403918 <__adddf3+0x8c>
  403a7a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  403a7e:	bf18      	it	ne
  403a80:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  403a84:	d029      	beq.n	403ada <__adddf3+0x24e>
  403a86:	ea94 0f05 	teq	r4, r5
  403a8a:	bf08      	it	eq
  403a8c:	ea90 0f02 	teqeq	r0, r2
  403a90:	d005      	beq.n	403a9e <__adddf3+0x212>
  403a92:	ea54 0c00 	orrs.w	ip, r4, r0
  403a96:	bf04      	itt	eq
  403a98:	4619      	moveq	r1, r3
  403a9a:	4610      	moveq	r0, r2
  403a9c:	bd30      	pop	{r4, r5, pc}
  403a9e:	ea91 0f03 	teq	r1, r3
  403aa2:	bf1e      	ittt	ne
  403aa4:	2100      	movne	r1, #0
  403aa6:	2000      	movne	r0, #0
  403aa8:	bd30      	popne	{r4, r5, pc}
  403aaa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  403aae:	d105      	bne.n	403abc <__adddf3+0x230>
  403ab0:	0040      	lsls	r0, r0, #1
  403ab2:	4149      	adcs	r1, r1
  403ab4:	bf28      	it	cs
  403ab6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  403aba:	bd30      	pop	{r4, r5, pc}
  403abc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  403ac0:	bf3c      	itt	cc
  403ac2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  403ac6:	bd30      	popcc	{r4, r5, pc}
  403ac8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  403acc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  403ad0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  403ad4:	f04f 0000 	mov.w	r0, #0
  403ad8:	bd30      	pop	{r4, r5, pc}
  403ada:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  403ade:	bf1a      	itte	ne
  403ae0:	4619      	movne	r1, r3
  403ae2:	4610      	movne	r0, r2
  403ae4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  403ae8:	bf1c      	itt	ne
  403aea:	460b      	movne	r3, r1
  403aec:	4602      	movne	r2, r0
  403aee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  403af2:	bf06      	itte	eq
  403af4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  403af8:	ea91 0f03 	teqeq	r1, r3
  403afc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  403b00:	bd30      	pop	{r4, r5, pc}
  403b02:	bf00      	nop

00403b04 <__aeabi_ui2d>:
  403b04:	f090 0f00 	teq	r0, #0
  403b08:	bf04      	itt	eq
  403b0a:	2100      	moveq	r1, #0
  403b0c:	4770      	bxeq	lr
  403b0e:	b530      	push	{r4, r5, lr}
  403b10:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403b14:	f104 0432 	add.w	r4, r4, #50	; 0x32
  403b18:	f04f 0500 	mov.w	r5, #0
  403b1c:	f04f 0100 	mov.w	r1, #0
  403b20:	e750      	b.n	4039c4 <__adddf3+0x138>
  403b22:	bf00      	nop

00403b24 <__aeabi_i2d>:
  403b24:	f090 0f00 	teq	r0, #0
  403b28:	bf04      	itt	eq
  403b2a:	2100      	moveq	r1, #0
  403b2c:	4770      	bxeq	lr
  403b2e:	b530      	push	{r4, r5, lr}
  403b30:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403b34:	f104 0432 	add.w	r4, r4, #50	; 0x32
  403b38:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  403b3c:	bf48      	it	mi
  403b3e:	4240      	negmi	r0, r0
  403b40:	f04f 0100 	mov.w	r1, #0
  403b44:	e73e      	b.n	4039c4 <__adddf3+0x138>
  403b46:	bf00      	nop

00403b48 <__aeabi_f2d>:
  403b48:	0042      	lsls	r2, r0, #1
  403b4a:	ea4f 01e2 	mov.w	r1, r2, asr #3
  403b4e:	ea4f 0131 	mov.w	r1, r1, rrx
  403b52:	ea4f 7002 	mov.w	r0, r2, lsl #28
  403b56:	bf1f      	itttt	ne
  403b58:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  403b5c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  403b60:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  403b64:	4770      	bxne	lr
  403b66:	f092 0f00 	teq	r2, #0
  403b6a:	bf14      	ite	ne
  403b6c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  403b70:	4770      	bxeq	lr
  403b72:	b530      	push	{r4, r5, lr}
  403b74:	f44f 7460 	mov.w	r4, #896	; 0x380
  403b78:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  403b7c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  403b80:	e720      	b.n	4039c4 <__adddf3+0x138>
  403b82:	bf00      	nop

00403b84 <__aeabi_ul2d>:
  403b84:	ea50 0201 	orrs.w	r2, r0, r1
  403b88:	bf08      	it	eq
  403b8a:	4770      	bxeq	lr
  403b8c:	b530      	push	{r4, r5, lr}
  403b8e:	f04f 0500 	mov.w	r5, #0
  403b92:	e00a      	b.n	403baa <__aeabi_l2d+0x16>

00403b94 <__aeabi_l2d>:
  403b94:	ea50 0201 	orrs.w	r2, r0, r1
  403b98:	bf08      	it	eq
  403b9a:	4770      	bxeq	lr
  403b9c:	b530      	push	{r4, r5, lr}
  403b9e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  403ba2:	d502      	bpl.n	403baa <__aeabi_l2d+0x16>
  403ba4:	4240      	negs	r0, r0
  403ba6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  403baa:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403bae:	f104 0432 	add.w	r4, r4, #50	; 0x32
  403bb2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  403bb6:	f43f aedc 	beq.w	403972 <__adddf3+0xe6>
  403bba:	f04f 0203 	mov.w	r2, #3
  403bbe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  403bc2:	bf18      	it	ne
  403bc4:	3203      	addne	r2, #3
  403bc6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  403bca:	bf18      	it	ne
  403bcc:	3203      	addne	r2, #3
  403bce:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  403bd2:	f1c2 0320 	rsb	r3, r2, #32
  403bd6:	fa00 fc03 	lsl.w	ip, r0, r3
  403bda:	fa20 f002 	lsr.w	r0, r0, r2
  403bde:	fa01 fe03 	lsl.w	lr, r1, r3
  403be2:	ea40 000e 	orr.w	r0, r0, lr
  403be6:	fa21 f102 	lsr.w	r1, r1, r2
  403bea:	4414      	add	r4, r2
  403bec:	e6c1      	b.n	403972 <__adddf3+0xe6>
  403bee:	bf00      	nop

00403bf0 <__aeabi_dmul>:
  403bf0:	b570      	push	{r4, r5, r6, lr}
  403bf2:	f04f 0cff 	mov.w	ip, #255	; 0xff
  403bf6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  403bfa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  403bfe:	bf1d      	ittte	ne
  403c00:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  403c04:	ea94 0f0c 	teqne	r4, ip
  403c08:	ea95 0f0c 	teqne	r5, ip
  403c0c:	f000 f8de 	bleq	403dcc <__aeabi_dmul+0x1dc>
  403c10:	442c      	add	r4, r5
  403c12:	ea81 0603 	eor.w	r6, r1, r3
  403c16:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  403c1a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  403c1e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  403c22:	bf18      	it	ne
  403c24:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  403c28:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403c2c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  403c30:	d038      	beq.n	403ca4 <__aeabi_dmul+0xb4>
  403c32:	fba0 ce02 	umull	ip, lr, r0, r2
  403c36:	f04f 0500 	mov.w	r5, #0
  403c3a:	fbe1 e502 	umlal	lr, r5, r1, r2
  403c3e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  403c42:	fbe0 e503 	umlal	lr, r5, r0, r3
  403c46:	f04f 0600 	mov.w	r6, #0
  403c4a:	fbe1 5603 	umlal	r5, r6, r1, r3
  403c4e:	f09c 0f00 	teq	ip, #0
  403c52:	bf18      	it	ne
  403c54:	f04e 0e01 	orrne.w	lr, lr, #1
  403c58:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  403c5c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  403c60:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  403c64:	d204      	bcs.n	403c70 <__aeabi_dmul+0x80>
  403c66:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  403c6a:	416d      	adcs	r5, r5
  403c6c:	eb46 0606 	adc.w	r6, r6, r6
  403c70:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  403c74:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  403c78:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  403c7c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  403c80:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  403c84:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  403c88:	bf88      	it	hi
  403c8a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403c8e:	d81e      	bhi.n	403cce <__aeabi_dmul+0xde>
  403c90:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  403c94:	bf08      	it	eq
  403c96:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  403c9a:	f150 0000 	adcs.w	r0, r0, #0
  403c9e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  403ca2:	bd70      	pop	{r4, r5, r6, pc}
  403ca4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  403ca8:	ea46 0101 	orr.w	r1, r6, r1
  403cac:	ea40 0002 	orr.w	r0, r0, r2
  403cb0:	ea81 0103 	eor.w	r1, r1, r3
  403cb4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  403cb8:	bfc2      	ittt	gt
  403cba:	ebd4 050c 	rsbsgt	r5, r4, ip
  403cbe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  403cc2:	bd70      	popgt	{r4, r5, r6, pc}
  403cc4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403cc8:	f04f 0e00 	mov.w	lr, #0
  403ccc:	3c01      	subs	r4, #1
  403cce:	f300 80ab 	bgt.w	403e28 <__aeabi_dmul+0x238>
  403cd2:	f114 0f36 	cmn.w	r4, #54	; 0x36
  403cd6:	bfde      	ittt	le
  403cd8:	2000      	movle	r0, #0
  403cda:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  403cde:	bd70      	pople	{r4, r5, r6, pc}
  403ce0:	f1c4 0400 	rsb	r4, r4, #0
  403ce4:	3c20      	subs	r4, #32
  403ce6:	da35      	bge.n	403d54 <__aeabi_dmul+0x164>
  403ce8:	340c      	adds	r4, #12
  403cea:	dc1b      	bgt.n	403d24 <__aeabi_dmul+0x134>
  403cec:	f104 0414 	add.w	r4, r4, #20
  403cf0:	f1c4 0520 	rsb	r5, r4, #32
  403cf4:	fa00 f305 	lsl.w	r3, r0, r5
  403cf8:	fa20 f004 	lsr.w	r0, r0, r4
  403cfc:	fa01 f205 	lsl.w	r2, r1, r5
  403d00:	ea40 0002 	orr.w	r0, r0, r2
  403d04:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  403d08:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  403d0c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403d10:	fa21 f604 	lsr.w	r6, r1, r4
  403d14:	eb42 0106 	adc.w	r1, r2, r6
  403d18:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403d1c:	bf08      	it	eq
  403d1e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403d22:	bd70      	pop	{r4, r5, r6, pc}
  403d24:	f1c4 040c 	rsb	r4, r4, #12
  403d28:	f1c4 0520 	rsb	r5, r4, #32
  403d2c:	fa00 f304 	lsl.w	r3, r0, r4
  403d30:	fa20 f005 	lsr.w	r0, r0, r5
  403d34:	fa01 f204 	lsl.w	r2, r1, r4
  403d38:	ea40 0002 	orr.w	r0, r0, r2
  403d3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403d40:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403d44:	f141 0100 	adc.w	r1, r1, #0
  403d48:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403d4c:	bf08      	it	eq
  403d4e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403d52:	bd70      	pop	{r4, r5, r6, pc}
  403d54:	f1c4 0520 	rsb	r5, r4, #32
  403d58:	fa00 f205 	lsl.w	r2, r0, r5
  403d5c:	ea4e 0e02 	orr.w	lr, lr, r2
  403d60:	fa20 f304 	lsr.w	r3, r0, r4
  403d64:	fa01 f205 	lsl.w	r2, r1, r5
  403d68:	ea43 0302 	orr.w	r3, r3, r2
  403d6c:	fa21 f004 	lsr.w	r0, r1, r4
  403d70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403d74:	fa21 f204 	lsr.w	r2, r1, r4
  403d78:	ea20 0002 	bic.w	r0, r0, r2
  403d7c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  403d80:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403d84:	bf08      	it	eq
  403d86:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403d8a:	bd70      	pop	{r4, r5, r6, pc}
  403d8c:	f094 0f00 	teq	r4, #0
  403d90:	d10f      	bne.n	403db2 <__aeabi_dmul+0x1c2>
  403d92:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  403d96:	0040      	lsls	r0, r0, #1
  403d98:	eb41 0101 	adc.w	r1, r1, r1
  403d9c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403da0:	bf08      	it	eq
  403da2:	3c01      	subeq	r4, #1
  403da4:	d0f7      	beq.n	403d96 <__aeabi_dmul+0x1a6>
  403da6:	ea41 0106 	orr.w	r1, r1, r6
  403daa:	f095 0f00 	teq	r5, #0
  403dae:	bf18      	it	ne
  403db0:	4770      	bxne	lr
  403db2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  403db6:	0052      	lsls	r2, r2, #1
  403db8:	eb43 0303 	adc.w	r3, r3, r3
  403dbc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  403dc0:	bf08      	it	eq
  403dc2:	3d01      	subeq	r5, #1
  403dc4:	d0f7      	beq.n	403db6 <__aeabi_dmul+0x1c6>
  403dc6:	ea43 0306 	orr.w	r3, r3, r6
  403dca:	4770      	bx	lr
  403dcc:	ea94 0f0c 	teq	r4, ip
  403dd0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  403dd4:	bf18      	it	ne
  403dd6:	ea95 0f0c 	teqne	r5, ip
  403dda:	d00c      	beq.n	403df6 <__aeabi_dmul+0x206>
  403ddc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  403de0:	bf18      	it	ne
  403de2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  403de6:	d1d1      	bne.n	403d8c <__aeabi_dmul+0x19c>
  403de8:	ea81 0103 	eor.w	r1, r1, r3
  403dec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403df0:	f04f 0000 	mov.w	r0, #0
  403df4:	bd70      	pop	{r4, r5, r6, pc}
  403df6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  403dfa:	bf06      	itte	eq
  403dfc:	4610      	moveq	r0, r2
  403dfe:	4619      	moveq	r1, r3
  403e00:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  403e04:	d019      	beq.n	403e3a <__aeabi_dmul+0x24a>
  403e06:	ea94 0f0c 	teq	r4, ip
  403e0a:	d102      	bne.n	403e12 <__aeabi_dmul+0x222>
  403e0c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  403e10:	d113      	bne.n	403e3a <__aeabi_dmul+0x24a>
  403e12:	ea95 0f0c 	teq	r5, ip
  403e16:	d105      	bne.n	403e24 <__aeabi_dmul+0x234>
  403e18:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  403e1c:	bf1c      	itt	ne
  403e1e:	4610      	movne	r0, r2
  403e20:	4619      	movne	r1, r3
  403e22:	d10a      	bne.n	403e3a <__aeabi_dmul+0x24a>
  403e24:	ea81 0103 	eor.w	r1, r1, r3
  403e28:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403e2c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  403e30:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  403e34:	f04f 0000 	mov.w	r0, #0
  403e38:	bd70      	pop	{r4, r5, r6, pc}
  403e3a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  403e3e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  403e42:	bd70      	pop	{r4, r5, r6, pc}

00403e44 <__aeabi_ddiv>:
  403e44:	b570      	push	{r4, r5, r6, lr}
  403e46:	f04f 0cff 	mov.w	ip, #255	; 0xff
  403e4a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  403e4e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  403e52:	bf1d      	ittte	ne
  403e54:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  403e58:	ea94 0f0c 	teqne	r4, ip
  403e5c:	ea95 0f0c 	teqne	r5, ip
  403e60:	f000 f8a7 	bleq	403fb2 <__aeabi_ddiv+0x16e>
  403e64:	eba4 0405 	sub.w	r4, r4, r5
  403e68:	ea81 0e03 	eor.w	lr, r1, r3
  403e6c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  403e70:	ea4f 3101 	mov.w	r1, r1, lsl #12
  403e74:	f000 8088 	beq.w	403f88 <__aeabi_ddiv+0x144>
  403e78:	ea4f 3303 	mov.w	r3, r3, lsl #12
  403e7c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  403e80:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  403e84:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  403e88:	ea4f 2202 	mov.w	r2, r2, lsl #8
  403e8c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  403e90:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  403e94:	ea4f 2600 	mov.w	r6, r0, lsl #8
  403e98:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  403e9c:	429d      	cmp	r5, r3
  403e9e:	bf08      	it	eq
  403ea0:	4296      	cmpeq	r6, r2
  403ea2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  403ea6:	f504 7440 	add.w	r4, r4, #768	; 0x300
  403eaa:	d202      	bcs.n	403eb2 <__aeabi_ddiv+0x6e>
  403eac:	085b      	lsrs	r3, r3, #1
  403eae:	ea4f 0232 	mov.w	r2, r2, rrx
  403eb2:	1ab6      	subs	r6, r6, r2
  403eb4:	eb65 0503 	sbc.w	r5, r5, r3
  403eb8:	085b      	lsrs	r3, r3, #1
  403eba:	ea4f 0232 	mov.w	r2, r2, rrx
  403ebe:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  403ec2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  403ec6:	ebb6 0e02 	subs.w	lr, r6, r2
  403eca:	eb75 0e03 	sbcs.w	lr, r5, r3
  403ece:	bf22      	ittt	cs
  403ed0:	1ab6      	subcs	r6, r6, r2
  403ed2:	4675      	movcs	r5, lr
  403ed4:	ea40 000c 	orrcs.w	r0, r0, ip
  403ed8:	085b      	lsrs	r3, r3, #1
  403eda:	ea4f 0232 	mov.w	r2, r2, rrx
  403ede:	ebb6 0e02 	subs.w	lr, r6, r2
  403ee2:	eb75 0e03 	sbcs.w	lr, r5, r3
  403ee6:	bf22      	ittt	cs
  403ee8:	1ab6      	subcs	r6, r6, r2
  403eea:	4675      	movcs	r5, lr
  403eec:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  403ef0:	085b      	lsrs	r3, r3, #1
  403ef2:	ea4f 0232 	mov.w	r2, r2, rrx
  403ef6:	ebb6 0e02 	subs.w	lr, r6, r2
  403efa:	eb75 0e03 	sbcs.w	lr, r5, r3
  403efe:	bf22      	ittt	cs
  403f00:	1ab6      	subcs	r6, r6, r2
  403f02:	4675      	movcs	r5, lr
  403f04:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  403f08:	085b      	lsrs	r3, r3, #1
  403f0a:	ea4f 0232 	mov.w	r2, r2, rrx
  403f0e:	ebb6 0e02 	subs.w	lr, r6, r2
  403f12:	eb75 0e03 	sbcs.w	lr, r5, r3
  403f16:	bf22      	ittt	cs
  403f18:	1ab6      	subcs	r6, r6, r2
  403f1a:	4675      	movcs	r5, lr
  403f1c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  403f20:	ea55 0e06 	orrs.w	lr, r5, r6
  403f24:	d018      	beq.n	403f58 <__aeabi_ddiv+0x114>
  403f26:	ea4f 1505 	mov.w	r5, r5, lsl #4
  403f2a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  403f2e:	ea4f 1606 	mov.w	r6, r6, lsl #4
  403f32:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  403f36:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  403f3a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  403f3e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  403f42:	d1c0      	bne.n	403ec6 <__aeabi_ddiv+0x82>
  403f44:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403f48:	d10b      	bne.n	403f62 <__aeabi_ddiv+0x11e>
  403f4a:	ea41 0100 	orr.w	r1, r1, r0
  403f4e:	f04f 0000 	mov.w	r0, #0
  403f52:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  403f56:	e7b6      	b.n	403ec6 <__aeabi_ddiv+0x82>
  403f58:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403f5c:	bf04      	itt	eq
  403f5e:	4301      	orreq	r1, r0
  403f60:	2000      	moveq	r0, #0
  403f62:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  403f66:	bf88      	it	hi
  403f68:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  403f6c:	f63f aeaf 	bhi.w	403cce <__aeabi_dmul+0xde>
  403f70:	ebb5 0c03 	subs.w	ip, r5, r3
  403f74:	bf04      	itt	eq
  403f76:	ebb6 0c02 	subseq.w	ip, r6, r2
  403f7a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  403f7e:	f150 0000 	adcs.w	r0, r0, #0
  403f82:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  403f86:	bd70      	pop	{r4, r5, r6, pc}
  403f88:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  403f8c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  403f90:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  403f94:	bfc2      	ittt	gt
  403f96:	ebd4 050c 	rsbsgt	r5, r4, ip
  403f9a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  403f9e:	bd70      	popgt	{r4, r5, r6, pc}
  403fa0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403fa4:	f04f 0e00 	mov.w	lr, #0
  403fa8:	3c01      	subs	r4, #1
  403faa:	e690      	b.n	403cce <__aeabi_dmul+0xde>
  403fac:	ea45 0e06 	orr.w	lr, r5, r6
  403fb0:	e68d      	b.n	403cce <__aeabi_dmul+0xde>
  403fb2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  403fb6:	ea94 0f0c 	teq	r4, ip
  403fba:	bf08      	it	eq
  403fbc:	ea95 0f0c 	teqeq	r5, ip
  403fc0:	f43f af3b 	beq.w	403e3a <__aeabi_dmul+0x24a>
  403fc4:	ea94 0f0c 	teq	r4, ip
  403fc8:	d10a      	bne.n	403fe0 <__aeabi_ddiv+0x19c>
  403fca:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  403fce:	f47f af34 	bne.w	403e3a <__aeabi_dmul+0x24a>
  403fd2:	ea95 0f0c 	teq	r5, ip
  403fd6:	f47f af25 	bne.w	403e24 <__aeabi_dmul+0x234>
  403fda:	4610      	mov	r0, r2
  403fdc:	4619      	mov	r1, r3
  403fde:	e72c      	b.n	403e3a <__aeabi_dmul+0x24a>
  403fe0:	ea95 0f0c 	teq	r5, ip
  403fe4:	d106      	bne.n	403ff4 <__aeabi_ddiv+0x1b0>
  403fe6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  403fea:	f43f aefd 	beq.w	403de8 <__aeabi_dmul+0x1f8>
  403fee:	4610      	mov	r0, r2
  403ff0:	4619      	mov	r1, r3
  403ff2:	e722      	b.n	403e3a <__aeabi_dmul+0x24a>
  403ff4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  403ff8:	bf18      	it	ne
  403ffa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  403ffe:	f47f aec5 	bne.w	403d8c <__aeabi_dmul+0x19c>
  404002:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  404006:	f47f af0d 	bne.w	403e24 <__aeabi_dmul+0x234>
  40400a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40400e:	f47f aeeb 	bne.w	403de8 <__aeabi_dmul+0x1f8>
  404012:	e712      	b.n	403e3a <__aeabi_dmul+0x24a>

00404014 <__gedf2>:
  404014:	f04f 3cff 	mov.w	ip, #4294967295
  404018:	e006      	b.n	404028 <__cmpdf2+0x4>
  40401a:	bf00      	nop

0040401c <__ledf2>:
  40401c:	f04f 0c01 	mov.w	ip, #1
  404020:	e002      	b.n	404028 <__cmpdf2+0x4>
  404022:	bf00      	nop

00404024 <__cmpdf2>:
  404024:	f04f 0c01 	mov.w	ip, #1
  404028:	f84d cd04 	str.w	ip, [sp, #-4]!
  40402c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  404030:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  404034:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  404038:	bf18      	it	ne
  40403a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40403e:	d01b      	beq.n	404078 <__cmpdf2+0x54>
  404040:	b001      	add	sp, #4
  404042:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  404046:	bf0c      	ite	eq
  404048:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  40404c:	ea91 0f03 	teqne	r1, r3
  404050:	bf02      	ittt	eq
  404052:	ea90 0f02 	teqeq	r0, r2
  404056:	2000      	moveq	r0, #0
  404058:	4770      	bxeq	lr
  40405a:	f110 0f00 	cmn.w	r0, #0
  40405e:	ea91 0f03 	teq	r1, r3
  404062:	bf58      	it	pl
  404064:	4299      	cmppl	r1, r3
  404066:	bf08      	it	eq
  404068:	4290      	cmpeq	r0, r2
  40406a:	bf2c      	ite	cs
  40406c:	17d8      	asrcs	r0, r3, #31
  40406e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  404072:	f040 0001 	orr.w	r0, r0, #1
  404076:	4770      	bx	lr
  404078:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40407c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  404080:	d102      	bne.n	404088 <__cmpdf2+0x64>
  404082:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  404086:	d107      	bne.n	404098 <__cmpdf2+0x74>
  404088:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40408c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  404090:	d1d6      	bne.n	404040 <__cmpdf2+0x1c>
  404092:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  404096:	d0d3      	beq.n	404040 <__cmpdf2+0x1c>
  404098:	f85d 0b04 	ldr.w	r0, [sp], #4
  40409c:	4770      	bx	lr
  40409e:	bf00      	nop

004040a0 <__aeabi_cdrcmple>:
  4040a0:	4684      	mov	ip, r0
  4040a2:	4610      	mov	r0, r2
  4040a4:	4662      	mov	r2, ip
  4040a6:	468c      	mov	ip, r1
  4040a8:	4619      	mov	r1, r3
  4040aa:	4663      	mov	r3, ip
  4040ac:	e000      	b.n	4040b0 <__aeabi_cdcmpeq>
  4040ae:	bf00      	nop

004040b0 <__aeabi_cdcmpeq>:
  4040b0:	b501      	push	{r0, lr}
  4040b2:	f7ff ffb7 	bl	404024 <__cmpdf2>
  4040b6:	2800      	cmp	r0, #0
  4040b8:	bf48      	it	mi
  4040ba:	f110 0f00 	cmnmi.w	r0, #0
  4040be:	bd01      	pop	{r0, pc}

004040c0 <__aeabi_dcmpeq>:
  4040c0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4040c4:	f7ff fff4 	bl	4040b0 <__aeabi_cdcmpeq>
  4040c8:	bf0c      	ite	eq
  4040ca:	2001      	moveq	r0, #1
  4040cc:	2000      	movne	r0, #0
  4040ce:	f85d fb08 	ldr.w	pc, [sp], #8
  4040d2:	bf00      	nop

004040d4 <__aeabi_dcmplt>:
  4040d4:	f84d ed08 	str.w	lr, [sp, #-8]!
  4040d8:	f7ff ffea 	bl	4040b0 <__aeabi_cdcmpeq>
  4040dc:	bf34      	ite	cc
  4040de:	2001      	movcc	r0, #1
  4040e0:	2000      	movcs	r0, #0
  4040e2:	f85d fb08 	ldr.w	pc, [sp], #8
  4040e6:	bf00      	nop

004040e8 <__aeabi_dcmple>:
  4040e8:	f84d ed08 	str.w	lr, [sp, #-8]!
  4040ec:	f7ff ffe0 	bl	4040b0 <__aeabi_cdcmpeq>
  4040f0:	bf94      	ite	ls
  4040f2:	2001      	movls	r0, #1
  4040f4:	2000      	movhi	r0, #0
  4040f6:	f85d fb08 	ldr.w	pc, [sp], #8
  4040fa:	bf00      	nop

004040fc <__aeabi_dcmpge>:
  4040fc:	f84d ed08 	str.w	lr, [sp, #-8]!
  404100:	f7ff ffce 	bl	4040a0 <__aeabi_cdrcmple>
  404104:	bf94      	ite	ls
  404106:	2001      	movls	r0, #1
  404108:	2000      	movhi	r0, #0
  40410a:	f85d fb08 	ldr.w	pc, [sp], #8
  40410e:	bf00      	nop

00404110 <__aeabi_dcmpgt>:
  404110:	f84d ed08 	str.w	lr, [sp, #-8]!
  404114:	f7ff ffc4 	bl	4040a0 <__aeabi_cdrcmple>
  404118:	bf34      	ite	cc
  40411a:	2001      	movcc	r0, #1
  40411c:	2000      	movcs	r0, #0
  40411e:	f85d fb08 	ldr.w	pc, [sp], #8
  404122:	bf00      	nop

00404124 <__aeabi_dcmpun>:
  404124:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  404128:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40412c:	d102      	bne.n	404134 <__aeabi_dcmpun+0x10>
  40412e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  404132:	d10a      	bne.n	40414a <__aeabi_dcmpun+0x26>
  404134:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  404138:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40413c:	d102      	bne.n	404144 <__aeabi_dcmpun+0x20>
  40413e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  404142:	d102      	bne.n	40414a <__aeabi_dcmpun+0x26>
  404144:	f04f 0000 	mov.w	r0, #0
  404148:	4770      	bx	lr
  40414a:	f04f 0001 	mov.w	r0, #1
  40414e:	4770      	bx	lr

00404150 <__aeabi_d2f>:
  404150:	ea4f 0241 	mov.w	r2, r1, lsl #1
  404154:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  404158:	bf24      	itt	cs
  40415a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  40415e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  404162:	d90d      	bls.n	404180 <__aeabi_d2f+0x30>
  404164:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  404168:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  40416c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  404170:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  404174:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  404178:	bf08      	it	eq
  40417a:	f020 0001 	biceq.w	r0, r0, #1
  40417e:	4770      	bx	lr
  404180:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  404184:	d121      	bne.n	4041ca <__aeabi_d2f+0x7a>
  404186:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  40418a:	bfbc      	itt	lt
  40418c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  404190:	4770      	bxlt	lr
  404192:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  404196:	ea4f 5252 	mov.w	r2, r2, lsr #21
  40419a:	f1c2 0218 	rsb	r2, r2, #24
  40419e:	f1c2 0c20 	rsb	ip, r2, #32
  4041a2:	fa10 f30c 	lsls.w	r3, r0, ip
  4041a6:	fa20 f002 	lsr.w	r0, r0, r2
  4041aa:	bf18      	it	ne
  4041ac:	f040 0001 	orrne.w	r0, r0, #1
  4041b0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4041b4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  4041b8:	fa03 fc0c 	lsl.w	ip, r3, ip
  4041bc:	ea40 000c 	orr.w	r0, r0, ip
  4041c0:	fa23 f302 	lsr.w	r3, r3, r2
  4041c4:	ea4f 0343 	mov.w	r3, r3, lsl #1
  4041c8:	e7cc      	b.n	404164 <__aeabi_d2f+0x14>
  4041ca:	ea7f 5362 	mvns.w	r3, r2, asr #21
  4041ce:	d107      	bne.n	4041e0 <__aeabi_d2f+0x90>
  4041d0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  4041d4:	bf1e      	ittt	ne
  4041d6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  4041da:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  4041de:	4770      	bxne	lr
  4041e0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  4041e4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4041e8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4041ec:	4770      	bx	lr
  4041ee:	bf00      	nop

004041f0 <__aeabi_frsub>:
  4041f0:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  4041f4:	e002      	b.n	4041fc <__addsf3>
  4041f6:	bf00      	nop

004041f8 <__aeabi_fsub>:
  4041f8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

004041fc <__addsf3>:
  4041fc:	0042      	lsls	r2, r0, #1
  4041fe:	bf1f      	itttt	ne
  404200:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  404204:	ea92 0f03 	teqne	r2, r3
  404208:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  40420c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  404210:	d06a      	beq.n	4042e8 <__addsf3+0xec>
  404212:	ea4f 6212 	mov.w	r2, r2, lsr #24
  404216:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  40421a:	bfc1      	itttt	gt
  40421c:	18d2      	addgt	r2, r2, r3
  40421e:	4041      	eorgt	r1, r0
  404220:	4048      	eorgt	r0, r1
  404222:	4041      	eorgt	r1, r0
  404224:	bfb8      	it	lt
  404226:	425b      	neglt	r3, r3
  404228:	2b19      	cmp	r3, #25
  40422a:	bf88      	it	hi
  40422c:	4770      	bxhi	lr
  40422e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  404232:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  404236:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  40423a:	bf18      	it	ne
  40423c:	4240      	negne	r0, r0
  40423e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  404242:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  404246:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  40424a:	bf18      	it	ne
  40424c:	4249      	negne	r1, r1
  40424e:	ea92 0f03 	teq	r2, r3
  404252:	d03f      	beq.n	4042d4 <__addsf3+0xd8>
  404254:	f1a2 0201 	sub.w	r2, r2, #1
  404258:	fa41 fc03 	asr.w	ip, r1, r3
  40425c:	eb10 000c 	adds.w	r0, r0, ip
  404260:	f1c3 0320 	rsb	r3, r3, #32
  404264:	fa01 f103 	lsl.w	r1, r1, r3
  404268:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  40426c:	d502      	bpl.n	404274 <__addsf3+0x78>
  40426e:	4249      	negs	r1, r1
  404270:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  404274:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  404278:	d313      	bcc.n	4042a2 <__addsf3+0xa6>
  40427a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  40427e:	d306      	bcc.n	40428e <__addsf3+0x92>
  404280:	0840      	lsrs	r0, r0, #1
  404282:	ea4f 0131 	mov.w	r1, r1, rrx
  404286:	f102 0201 	add.w	r2, r2, #1
  40428a:	2afe      	cmp	r2, #254	; 0xfe
  40428c:	d251      	bcs.n	404332 <__addsf3+0x136>
  40428e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  404292:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  404296:	bf08      	it	eq
  404298:	f020 0001 	biceq.w	r0, r0, #1
  40429c:	ea40 0003 	orr.w	r0, r0, r3
  4042a0:	4770      	bx	lr
  4042a2:	0049      	lsls	r1, r1, #1
  4042a4:	eb40 0000 	adc.w	r0, r0, r0
  4042a8:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  4042ac:	f1a2 0201 	sub.w	r2, r2, #1
  4042b0:	d1ed      	bne.n	40428e <__addsf3+0x92>
  4042b2:	fab0 fc80 	clz	ip, r0
  4042b6:	f1ac 0c08 	sub.w	ip, ip, #8
  4042ba:	ebb2 020c 	subs.w	r2, r2, ip
  4042be:	fa00 f00c 	lsl.w	r0, r0, ip
  4042c2:	bfaa      	itet	ge
  4042c4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  4042c8:	4252      	neglt	r2, r2
  4042ca:	4318      	orrge	r0, r3
  4042cc:	bfbc      	itt	lt
  4042ce:	40d0      	lsrlt	r0, r2
  4042d0:	4318      	orrlt	r0, r3
  4042d2:	4770      	bx	lr
  4042d4:	f092 0f00 	teq	r2, #0
  4042d8:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  4042dc:	bf06      	itte	eq
  4042de:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  4042e2:	3201      	addeq	r2, #1
  4042e4:	3b01      	subne	r3, #1
  4042e6:	e7b5      	b.n	404254 <__addsf3+0x58>
  4042e8:	ea4f 0341 	mov.w	r3, r1, lsl #1
  4042ec:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  4042f0:	bf18      	it	ne
  4042f2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  4042f6:	d021      	beq.n	40433c <__addsf3+0x140>
  4042f8:	ea92 0f03 	teq	r2, r3
  4042fc:	d004      	beq.n	404308 <__addsf3+0x10c>
  4042fe:	f092 0f00 	teq	r2, #0
  404302:	bf08      	it	eq
  404304:	4608      	moveq	r0, r1
  404306:	4770      	bx	lr
  404308:	ea90 0f01 	teq	r0, r1
  40430c:	bf1c      	itt	ne
  40430e:	2000      	movne	r0, #0
  404310:	4770      	bxne	lr
  404312:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  404316:	d104      	bne.n	404322 <__addsf3+0x126>
  404318:	0040      	lsls	r0, r0, #1
  40431a:	bf28      	it	cs
  40431c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  404320:	4770      	bx	lr
  404322:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  404326:	bf3c      	itt	cc
  404328:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  40432c:	4770      	bxcc	lr
  40432e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  404332:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  404336:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40433a:	4770      	bx	lr
  40433c:	ea7f 6222 	mvns.w	r2, r2, asr #24
  404340:	bf16      	itet	ne
  404342:	4608      	movne	r0, r1
  404344:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  404348:	4601      	movne	r1, r0
  40434a:	0242      	lsls	r2, r0, #9
  40434c:	bf06      	itte	eq
  40434e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  404352:	ea90 0f01 	teqeq	r0, r1
  404356:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  40435a:	4770      	bx	lr

0040435c <__aeabi_ui2f>:
  40435c:	f04f 0300 	mov.w	r3, #0
  404360:	e004      	b.n	40436c <__aeabi_i2f+0x8>
  404362:	bf00      	nop

00404364 <__aeabi_i2f>:
  404364:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  404368:	bf48      	it	mi
  40436a:	4240      	negmi	r0, r0
  40436c:	ea5f 0c00 	movs.w	ip, r0
  404370:	bf08      	it	eq
  404372:	4770      	bxeq	lr
  404374:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  404378:	4601      	mov	r1, r0
  40437a:	f04f 0000 	mov.w	r0, #0
  40437e:	e01c      	b.n	4043ba <__aeabi_l2f+0x2a>

00404380 <__aeabi_ul2f>:
  404380:	ea50 0201 	orrs.w	r2, r0, r1
  404384:	bf08      	it	eq
  404386:	4770      	bxeq	lr
  404388:	f04f 0300 	mov.w	r3, #0
  40438c:	e00a      	b.n	4043a4 <__aeabi_l2f+0x14>
  40438e:	bf00      	nop

00404390 <__aeabi_l2f>:
  404390:	ea50 0201 	orrs.w	r2, r0, r1
  404394:	bf08      	it	eq
  404396:	4770      	bxeq	lr
  404398:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  40439c:	d502      	bpl.n	4043a4 <__aeabi_l2f+0x14>
  40439e:	4240      	negs	r0, r0
  4043a0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4043a4:	ea5f 0c01 	movs.w	ip, r1
  4043a8:	bf02      	ittt	eq
  4043aa:	4684      	moveq	ip, r0
  4043ac:	4601      	moveq	r1, r0
  4043ae:	2000      	moveq	r0, #0
  4043b0:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  4043b4:	bf08      	it	eq
  4043b6:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  4043ba:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  4043be:	fabc f28c 	clz	r2, ip
  4043c2:	3a08      	subs	r2, #8
  4043c4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  4043c8:	db10      	blt.n	4043ec <__aeabi_l2f+0x5c>
  4043ca:	fa01 fc02 	lsl.w	ip, r1, r2
  4043ce:	4463      	add	r3, ip
  4043d0:	fa00 fc02 	lsl.w	ip, r0, r2
  4043d4:	f1c2 0220 	rsb	r2, r2, #32
  4043d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4043dc:	fa20 f202 	lsr.w	r2, r0, r2
  4043e0:	eb43 0002 	adc.w	r0, r3, r2
  4043e4:	bf08      	it	eq
  4043e6:	f020 0001 	biceq.w	r0, r0, #1
  4043ea:	4770      	bx	lr
  4043ec:	f102 0220 	add.w	r2, r2, #32
  4043f0:	fa01 fc02 	lsl.w	ip, r1, r2
  4043f4:	f1c2 0220 	rsb	r2, r2, #32
  4043f8:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  4043fc:	fa21 f202 	lsr.w	r2, r1, r2
  404400:	eb43 0002 	adc.w	r0, r3, r2
  404404:	bf08      	it	eq
  404406:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  40440a:	4770      	bx	lr

0040440c <__aeabi_fmul>:
  40440c:	f04f 0cff 	mov.w	ip, #255	; 0xff
  404410:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  404414:	bf1e      	ittt	ne
  404416:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  40441a:	ea92 0f0c 	teqne	r2, ip
  40441e:	ea93 0f0c 	teqne	r3, ip
  404422:	d06f      	beq.n	404504 <__aeabi_fmul+0xf8>
  404424:	441a      	add	r2, r3
  404426:	ea80 0c01 	eor.w	ip, r0, r1
  40442a:	0240      	lsls	r0, r0, #9
  40442c:	bf18      	it	ne
  40442e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  404432:	d01e      	beq.n	404472 <__aeabi_fmul+0x66>
  404434:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  404438:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  40443c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  404440:	fba0 3101 	umull	r3, r1, r0, r1
  404444:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  404448:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  40444c:	bf3e      	ittt	cc
  40444e:	0049      	lslcc	r1, r1, #1
  404450:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  404454:	005b      	lslcc	r3, r3, #1
  404456:	ea40 0001 	orr.w	r0, r0, r1
  40445a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  40445e:	2afd      	cmp	r2, #253	; 0xfd
  404460:	d81d      	bhi.n	40449e <__aeabi_fmul+0x92>
  404462:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  404466:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  40446a:	bf08      	it	eq
  40446c:	f020 0001 	biceq.w	r0, r0, #1
  404470:	4770      	bx	lr
  404472:	f090 0f00 	teq	r0, #0
  404476:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  40447a:	bf08      	it	eq
  40447c:	0249      	lsleq	r1, r1, #9
  40447e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  404482:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  404486:	3a7f      	subs	r2, #127	; 0x7f
  404488:	bfc2      	ittt	gt
  40448a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  40448e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  404492:	4770      	bxgt	lr
  404494:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  404498:	f04f 0300 	mov.w	r3, #0
  40449c:	3a01      	subs	r2, #1
  40449e:	dc5d      	bgt.n	40455c <__aeabi_fmul+0x150>
  4044a0:	f112 0f19 	cmn.w	r2, #25
  4044a4:	bfdc      	itt	le
  4044a6:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  4044aa:	4770      	bxle	lr
  4044ac:	f1c2 0200 	rsb	r2, r2, #0
  4044b0:	0041      	lsls	r1, r0, #1
  4044b2:	fa21 f102 	lsr.w	r1, r1, r2
  4044b6:	f1c2 0220 	rsb	r2, r2, #32
  4044ba:	fa00 fc02 	lsl.w	ip, r0, r2
  4044be:	ea5f 0031 	movs.w	r0, r1, rrx
  4044c2:	f140 0000 	adc.w	r0, r0, #0
  4044c6:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  4044ca:	bf08      	it	eq
  4044cc:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  4044d0:	4770      	bx	lr
  4044d2:	f092 0f00 	teq	r2, #0
  4044d6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  4044da:	bf02      	ittt	eq
  4044dc:	0040      	lsleq	r0, r0, #1
  4044de:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  4044e2:	3a01      	subeq	r2, #1
  4044e4:	d0f9      	beq.n	4044da <__aeabi_fmul+0xce>
  4044e6:	ea40 000c 	orr.w	r0, r0, ip
  4044ea:	f093 0f00 	teq	r3, #0
  4044ee:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  4044f2:	bf02      	ittt	eq
  4044f4:	0049      	lsleq	r1, r1, #1
  4044f6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  4044fa:	3b01      	subeq	r3, #1
  4044fc:	d0f9      	beq.n	4044f2 <__aeabi_fmul+0xe6>
  4044fe:	ea41 010c 	orr.w	r1, r1, ip
  404502:	e78f      	b.n	404424 <__aeabi_fmul+0x18>
  404504:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  404508:	ea92 0f0c 	teq	r2, ip
  40450c:	bf18      	it	ne
  40450e:	ea93 0f0c 	teqne	r3, ip
  404512:	d00a      	beq.n	40452a <__aeabi_fmul+0x11e>
  404514:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  404518:	bf18      	it	ne
  40451a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  40451e:	d1d8      	bne.n	4044d2 <__aeabi_fmul+0xc6>
  404520:	ea80 0001 	eor.w	r0, r0, r1
  404524:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  404528:	4770      	bx	lr
  40452a:	f090 0f00 	teq	r0, #0
  40452e:	bf17      	itett	ne
  404530:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  404534:	4608      	moveq	r0, r1
  404536:	f091 0f00 	teqne	r1, #0
  40453a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  40453e:	d014      	beq.n	40456a <__aeabi_fmul+0x15e>
  404540:	ea92 0f0c 	teq	r2, ip
  404544:	d101      	bne.n	40454a <__aeabi_fmul+0x13e>
  404546:	0242      	lsls	r2, r0, #9
  404548:	d10f      	bne.n	40456a <__aeabi_fmul+0x15e>
  40454a:	ea93 0f0c 	teq	r3, ip
  40454e:	d103      	bne.n	404558 <__aeabi_fmul+0x14c>
  404550:	024b      	lsls	r3, r1, #9
  404552:	bf18      	it	ne
  404554:	4608      	movne	r0, r1
  404556:	d108      	bne.n	40456a <__aeabi_fmul+0x15e>
  404558:	ea80 0001 	eor.w	r0, r0, r1
  40455c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  404560:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  404564:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  404568:	4770      	bx	lr
  40456a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  40456e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  404572:	4770      	bx	lr

00404574 <__aeabi_fdiv>:
  404574:	f04f 0cff 	mov.w	ip, #255	; 0xff
  404578:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  40457c:	bf1e      	ittt	ne
  40457e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  404582:	ea92 0f0c 	teqne	r2, ip
  404586:	ea93 0f0c 	teqne	r3, ip
  40458a:	d069      	beq.n	404660 <__aeabi_fdiv+0xec>
  40458c:	eba2 0203 	sub.w	r2, r2, r3
  404590:	ea80 0c01 	eor.w	ip, r0, r1
  404594:	0249      	lsls	r1, r1, #9
  404596:	ea4f 2040 	mov.w	r0, r0, lsl #9
  40459a:	d037      	beq.n	40460c <__aeabi_fdiv+0x98>
  40459c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  4045a0:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  4045a4:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  4045a8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  4045ac:	428b      	cmp	r3, r1
  4045ae:	bf38      	it	cc
  4045b0:	005b      	lslcc	r3, r3, #1
  4045b2:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  4045b6:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  4045ba:	428b      	cmp	r3, r1
  4045bc:	bf24      	itt	cs
  4045be:	1a5b      	subcs	r3, r3, r1
  4045c0:	ea40 000c 	orrcs.w	r0, r0, ip
  4045c4:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  4045c8:	bf24      	itt	cs
  4045ca:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  4045ce:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  4045d2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  4045d6:	bf24      	itt	cs
  4045d8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  4045dc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4045e0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  4045e4:	bf24      	itt	cs
  4045e6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  4045ea:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4045ee:	011b      	lsls	r3, r3, #4
  4045f0:	bf18      	it	ne
  4045f2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  4045f6:	d1e0      	bne.n	4045ba <__aeabi_fdiv+0x46>
  4045f8:	2afd      	cmp	r2, #253	; 0xfd
  4045fa:	f63f af50 	bhi.w	40449e <__aeabi_fmul+0x92>
  4045fe:	428b      	cmp	r3, r1
  404600:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  404604:	bf08      	it	eq
  404606:	f020 0001 	biceq.w	r0, r0, #1
  40460a:	4770      	bx	lr
  40460c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  404610:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  404614:	327f      	adds	r2, #127	; 0x7f
  404616:	bfc2      	ittt	gt
  404618:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  40461c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  404620:	4770      	bxgt	lr
  404622:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  404626:	f04f 0300 	mov.w	r3, #0
  40462a:	3a01      	subs	r2, #1
  40462c:	e737      	b.n	40449e <__aeabi_fmul+0x92>
  40462e:	f092 0f00 	teq	r2, #0
  404632:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  404636:	bf02      	ittt	eq
  404638:	0040      	lsleq	r0, r0, #1
  40463a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  40463e:	3a01      	subeq	r2, #1
  404640:	d0f9      	beq.n	404636 <__aeabi_fdiv+0xc2>
  404642:	ea40 000c 	orr.w	r0, r0, ip
  404646:	f093 0f00 	teq	r3, #0
  40464a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  40464e:	bf02      	ittt	eq
  404650:	0049      	lsleq	r1, r1, #1
  404652:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  404656:	3b01      	subeq	r3, #1
  404658:	d0f9      	beq.n	40464e <__aeabi_fdiv+0xda>
  40465a:	ea41 010c 	orr.w	r1, r1, ip
  40465e:	e795      	b.n	40458c <__aeabi_fdiv+0x18>
  404660:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  404664:	ea92 0f0c 	teq	r2, ip
  404668:	d108      	bne.n	40467c <__aeabi_fdiv+0x108>
  40466a:	0242      	lsls	r2, r0, #9
  40466c:	f47f af7d 	bne.w	40456a <__aeabi_fmul+0x15e>
  404670:	ea93 0f0c 	teq	r3, ip
  404674:	f47f af70 	bne.w	404558 <__aeabi_fmul+0x14c>
  404678:	4608      	mov	r0, r1
  40467a:	e776      	b.n	40456a <__aeabi_fmul+0x15e>
  40467c:	ea93 0f0c 	teq	r3, ip
  404680:	d104      	bne.n	40468c <__aeabi_fdiv+0x118>
  404682:	024b      	lsls	r3, r1, #9
  404684:	f43f af4c 	beq.w	404520 <__aeabi_fmul+0x114>
  404688:	4608      	mov	r0, r1
  40468a:	e76e      	b.n	40456a <__aeabi_fmul+0x15e>
  40468c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  404690:	bf18      	it	ne
  404692:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  404696:	d1ca      	bne.n	40462e <__aeabi_fdiv+0xba>
  404698:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  40469c:	f47f af5c 	bne.w	404558 <__aeabi_fmul+0x14c>
  4046a0:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  4046a4:	f47f af3c 	bne.w	404520 <__aeabi_fmul+0x114>
  4046a8:	e75f      	b.n	40456a <__aeabi_fmul+0x15e>
  4046aa:	bf00      	nop

004046ac <__gesf2>:
  4046ac:	f04f 3cff 	mov.w	ip, #4294967295
  4046b0:	e006      	b.n	4046c0 <__cmpsf2+0x4>
  4046b2:	bf00      	nop

004046b4 <__lesf2>:
  4046b4:	f04f 0c01 	mov.w	ip, #1
  4046b8:	e002      	b.n	4046c0 <__cmpsf2+0x4>
  4046ba:	bf00      	nop

004046bc <__cmpsf2>:
  4046bc:	f04f 0c01 	mov.w	ip, #1
  4046c0:	f84d cd04 	str.w	ip, [sp, #-4]!
  4046c4:	ea4f 0240 	mov.w	r2, r0, lsl #1
  4046c8:	ea4f 0341 	mov.w	r3, r1, lsl #1
  4046cc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  4046d0:	bf18      	it	ne
  4046d2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  4046d6:	d011      	beq.n	4046fc <__cmpsf2+0x40>
  4046d8:	b001      	add	sp, #4
  4046da:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
  4046de:	bf18      	it	ne
  4046e0:	ea90 0f01 	teqne	r0, r1
  4046e4:	bf58      	it	pl
  4046e6:	ebb2 0003 	subspl.w	r0, r2, r3
  4046ea:	bf88      	it	hi
  4046ec:	17c8      	asrhi	r0, r1, #31
  4046ee:	bf38      	it	cc
  4046f0:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
  4046f4:	bf18      	it	ne
  4046f6:	f040 0001 	orrne.w	r0, r0, #1
  4046fa:	4770      	bx	lr
  4046fc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  404700:	d102      	bne.n	404708 <__cmpsf2+0x4c>
  404702:	ea5f 2c40 	movs.w	ip, r0, lsl #9
  404706:	d105      	bne.n	404714 <__cmpsf2+0x58>
  404708:	ea7f 6c23 	mvns.w	ip, r3, asr #24
  40470c:	d1e4      	bne.n	4046d8 <__cmpsf2+0x1c>
  40470e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
  404712:	d0e1      	beq.n	4046d8 <__cmpsf2+0x1c>
  404714:	f85d 0b04 	ldr.w	r0, [sp], #4
  404718:	4770      	bx	lr
  40471a:	bf00      	nop

0040471c <__aeabi_cfrcmple>:
  40471c:	4684      	mov	ip, r0
  40471e:	4608      	mov	r0, r1
  404720:	4661      	mov	r1, ip
  404722:	e7ff      	b.n	404724 <__aeabi_cfcmpeq>

00404724 <__aeabi_cfcmpeq>:
  404724:	b50f      	push	{r0, r1, r2, r3, lr}
  404726:	f7ff ffc9 	bl	4046bc <__cmpsf2>
  40472a:	2800      	cmp	r0, #0
  40472c:	bf48      	it	mi
  40472e:	f110 0f00 	cmnmi.w	r0, #0
  404732:	bd0f      	pop	{r0, r1, r2, r3, pc}

00404734 <__aeabi_fcmpeq>:
  404734:	f84d ed08 	str.w	lr, [sp, #-8]!
  404738:	f7ff fff4 	bl	404724 <__aeabi_cfcmpeq>
  40473c:	bf0c      	ite	eq
  40473e:	2001      	moveq	r0, #1
  404740:	2000      	movne	r0, #0
  404742:	f85d fb08 	ldr.w	pc, [sp], #8
  404746:	bf00      	nop

00404748 <__aeabi_fcmplt>:
  404748:	f84d ed08 	str.w	lr, [sp, #-8]!
  40474c:	f7ff ffea 	bl	404724 <__aeabi_cfcmpeq>
  404750:	bf34      	ite	cc
  404752:	2001      	movcc	r0, #1
  404754:	2000      	movcs	r0, #0
  404756:	f85d fb08 	ldr.w	pc, [sp], #8
  40475a:	bf00      	nop

0040475c <__aeabi_fcmple>:
  40475c:	f84d ed08 	str.w	lr, [sp, #-8]!
  404760:	f7ff ffe0 	bl	404724 <__aeabi_cfcmpeq>
  404764:	bf94      	ite	ls
  404766:	2001      	movls	r0, #1
  404768:	2000      	movhi	r0, #0
  40476a:	f85d fb08 	ldr.w	pc, [sp], #8
  40476e:	bf00      	nop

00404770 <__aeabi_fcmpge>:
  404770:	f84d ed08 	str.w	lr, [sp, #-8]!
  404774:	f7ff ffd2 	bl	40471c <__aeabi_cfrcmple>
  404778:	bf94      	ite	ls
  40477a:	2001      	movls	r0, #1
  40477c:	2000      	movhi	r0, #0
  40477e:	f85d fb08 	ldr.w	pc, [sp], #8
  404782:	bf00      	nop

00404784 <__aeabi_fcmpgt>:
  404784:	f84d ed08 	str.w	lr, [sp, #-8]!
  404788:	f7ff ffc8 	bl	40471c <__aeabi_cfrcmple>
  40478c:	bf34      	ite	cc
  40478e:	2001      	movcc	r0, #1
  404790:	2000      	movcs	r0, #0
  404792:	f85d fb08 	ldr.w	pc, [sp], #8
  404796:	bf00      	nop

00404798 <__errno>:
  404798:	4b01      	ldr	r3, [pc, #4]	; (4047a0 <__errno+0x8>)
  40479a:	6818      	ldr	r0, [r3, #0]
  40479c:	4770      	bx	lr
  40479e:	bf00      	nop
  4047a0:	200000ac 	.word	0x200000ac

004047a4 <__libc_init_array>:
  4047a4:	b570      	push	{r4, r5, r6, lr}
  4047a6:	4e0f      	ldr	r6, [pc, #60]	; (4047e4 <__libc_init_array+0x40>)
  4047a8:	4d0f      	ldr	r5, [pc, #60]	; (4047e8 <__libc_init_array+0x44>)
  4047aa:	1b76      	subs	r6, r6, r5
  4047ac:	10b6      	asrs	r6, r6, #2
  4047ae:	bf18      	it	ne
  4047b0:	2400      	movne	r4, #0
  4047b2:	d005      	beq.n	4047c0 <__libc_init_array+0x1c>
  4047b4:	3401      	adds	r4, #1
  4047b6:	f855 3b04 	ldr.w	r3, [r5], #4
  4047ba:	4798      	blx	r3
  4047bc:	42a6      	cmp	r6, r4
  4047be:	d1f9      	bne.n	4047b4 <__libc_init_array+0x10>
  4047c0:	4e0a      	ldr	r6, [pc, #40]	; (4047ec <__libc_init_array+0x48>)
  4047c2:	4d0b      	ldr	r5, [pc, #44]	; (4047f0 <__libc_init_array+0x4c>)
  4047c4:	1b76      	subs	r6, r6, r5
  4047c6:	f004 f97f 	bl	408ac8 <_init>
  4047ca:	10b6      	asrs	r6, r6, #2
  4047cc:	bf18      	it	ne
  4047ce:	2400      	movne	r4, #0
  4047d0:	d006      	beq.n	4047e0 <__libc_init_array+0x3c>
  4047d2:	3401      	adds	r4, #1
  4047d4:	f855 3b04 	ldr.w	r3, [r5], #4
  4047d8:	4798      	blx	r3
  4047da:	42a6      	cmp	r6, r4
  4047dc:	d1f9      	bne.n	4047d2 <__libc_init_array+0x2e>
  4047de:	bd70      	pop	{r4, r5, r6, pc}
  4047e0:	bd70      	pop	{r4, r5, r6, pc}
  4047e2:	bf00      	nop
  4047e4:	00408ad4 	.word	0x00408ad4
  4047e8:	00408ad4 	.word	0x00408ad4
  4047ec:	00408adc 	.word	0x00408adc
  4047f0:	00408ad4 	.word	0x00408ad4

004047f4 <memcpy>:
  4047f4:	4684      	mov	ip, r0
  4047f6:	ea41 0300 	orr.w	r3, r1, r0
  4047fa:	f013 0303 	ands.w	r3, r3, #3
  4047fe:	d16d      	bne.n	4048dc <memcpy+0xe8>
  404800:	3a40      	subs	r2, #64	; 0x40
  404802:	d341      	bcc.n	404888 <memcpy+0x94>
  404804:	f851 3b04 	ldr.w	r3, [r1], #4
  404808:	f840 3b04 	str.w	r3, [r0], #4
  40480c:	f851 3b04 	ldr.w	r3, [r1], #4
  404810:	f840 3b04 	str.w	r3, [r0], #4
  404814:	f851 3b04 	ldr.w	r3, [r1], #4
  404818:	f840 3b04 	str.w	r3, [r0], #4
  40481c:	f851 3b04 	ldr.w	r3, [r1], #4
  404820:	f840 3b04 	str.w	r3, [r0], #4
  404824:	f851 3b04 	ldr.w	r3, [r1], #4
  404828:	f840 3b04 	str.w	r3, [r0], #4
  40482c:	f851 3b04 	ldr.w	r3, [r1], #4
  404830:	f840 3b04 	str.w	r3, [r0], #4
  404834:	f851 3b04 	ldr.w	r3, [r1], #4
  404838:	f840 3b04 	str.w	r3, [r0], #4
  40483c:	f851 3b04 	ldr.w	r3, [r1], #4
  404840:	f840 3b04 	str.w	r3, [r0], #4
  404844:	f851 3b04 	ldr.w	r3, [r1], #4
  404848:	f840 3b04 	str.w	r3, [r0], #4
  40484c:	f851 3b04 	ldr.w	r3, [r1], #4
  404850:	f840 3b04 	str.w	r3, [r0], #4
  404854:	f851 3b04 	ldr.w	r3, [r1], #4
  404858:	f840 3b04 	str.w	r3, [r0], #4
  40485c:	f851 3b04 	ldr.w	r3, [r1], #4
  404860:	f840 3b04 	str.w	r3, [r0], #4
  404864:	f851 3b04 	ldr.w	r3, [r1], #4
  404868:	f840 3b04 	str.w	r3, [r0], #4
  40486c:	f851 3b04 	ldr.w	r3, [r1], #4
  404870:	f840 3b04 	str.w	r3, [r0], #4
  404874:	f851 3b04 	ldr.w	r3, [r1], #4
  404878:	f840 3b04 	str.w	r3, [r0], #4
  40487c:	f851 3b04 	ldr.w	r3, [r1], #4
  404880:	f840 3b04 	str.w	r3, [r0], #4
  404884:	3a40      	subs	r2, #64	; 0x40
  404886:	d2bd      	bcs.n	404804 <memcpy+0x10>
  404888:	3230      	adds	r2, #48	; 0x30
  40488a:	d311      	bcc.n	4048b0 <memcpy+0xbc>
  40488c:	f851 3b04 	ldr.w	r3, [r1], #4
  404890:	f840 3b04 	str.w	r3, [r0], #4
  404894:	f851 3b04 	ldr.w	r3, [r1], #4
  404898:	f840 3b04 	str.w	r3, [r0], #4
  40489c:	f851 3b04 	ldr.w	r3, [r1], #4
  4048a0:	f840 3b04 	str.w	r3, [r0], #4
  4048a4:	f851 3b04 	ldr.w	r3, [r1], #4
  4048a8:	f840 3b04 	str.w	r3, [r0], #4
  4048ac:	3a10      	subs	r2, #16
  4048ae:	d2ed      	bcs.n	40488c <memcpy+0x98>
  4048b0:	320c      	adds	r2, #12
  4048b2:	d305      	bcc.n	4048c0 <memcpy+0xcc>
  4048b4:	f851 3b04 	ldr.w	r3, [r1], #4
  4048b8:	f840 3b04 	str.w	r3, [r0], #4
  4048bc:	3a04      	subs	r2, #4
  4048be:	d2f9      	bcs.n	4048b4 <memcpy+0xc0>
  4048c0:	3204      	adds	r2, #4
  4048c2:	d008      	beq.n	4048d6 <memcpy+0xe2>
  4048c4:	07d2      	lsls	r2, r2, #31
  4048c6:	bf1c      	itt	ne
  4048c8:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4048cc:	f800 3b01 	strbne.w	r3, [r0], #1
  4048d0:	d301      	bcc.n	4048d6 <memcpy+0xe2>
  4048d2:	880b      	ldrh	r3, [r1, #0]
  4048d4:	8003      	strh	r3, [r0, #0]
  4048d6:	4660      	mov	r0, ip
  4048d8:	4770      	bx	lr
  4048da:	bf00      	nop
  4048dc:	2a08      	cmp	r2, #8
  4048de:	d313      	bcc.n	404908 <memcpy+0x114>
  4048e0:	078b      	lsls	r3, r1, #30
  4048e2:	d08d      	beq.n	404800 <memcpy+0xc>
  4048e4:	f010 0303 	ands.w	r3, r0, #3
  4048e8:	d08a      	beq.n	404800 <memcpy+0xc>
  4048ea:	f1c3 0304 	rsb	r3, r3, #4
  4048ee:	1ad2      	subs	r2, r2, r3
  4048f0:	07db      	lsls	r3, r3, #31
  4048f2:	bf1c      	itt	ne
  4048f4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4048f8:	f800 3b01 	strbne.w	r3, [r0], #1
  4048fc:	d380      	bcc.n	404800 <memcpy+0xc>
  4048fe:	f831 3b02 	ldrh.w	r3, [r1], #2
  404902:	f820 3b02 	strh.w	r3, [r0], #2
  404906:	e77b      	b.n	404800 <memcpy+0xc>
  404908:	3a04      	subs	r2, #4
  40490a:	d3d9      	bcc.n	4048c0 <memcpy+0xcc>
  40490c:	3a01      	subs	r2, #1
  40490e:	f811 3b01 	ldrb.w	r3, [r1], #1
  404912:	f800 3b01 	strb.w	r3, [r0], #1
  404916:	d2f9      	bcs.n	40490c <memcpy+0x118>
  404918:	780b      	ldrb	r3, [r1, #0]
  40491a:	7003      	strb	r3, [r0, #0]
  40491c:	784b      	ldrb	r3, [r1, #1]
  40491e:	7043      	strb	r3, [r0, #1]
  404920:	788b      	ldrb	r3, [r1, #2]
  404922:	7083      	strb	r3, [r0, #2]
  404924:	4660      	mov	r0, ip
  404926:	4770      	bx	lr

00404928 <memset>:
  404928:	b470      	push	{r4, r5, r6}
  40492a:	0786      	lsls	r6, r0, #30
  40492c:	d046      	beq.n	4049bc <memset+0x94>
  40492e:	1e54      	subs	r4, r2, #1
  404930:	2a00      	cmp	r2, #0
  404932:	d041      	beq.n	4049b8 <memset+0x90>
  404934:	b2ca      	uxtb	r2, r1
  404936:	4603      	mov	r3, r0
  404938:	e002      	b.n	404940 <memset+0x18>
  40493a:	f114 34ff 	adds.w	r4, r4, #4294967295
  40493e:	d33b      	bcc.n	4049b8 <memset+0x90>
  404940:	f803 2b01 	strb.w	r2, [r3], #1
  404944:	079d      	lsls	r5, r3, #30
  404946:	d1f8      	bne.n	40493a <memset+0x12>
  404948:	2c03      	cmp	r4, #3
  40494a:	d92e      	bls.n	4049aa <memset+0x82>
  40494c:	b2cd      	uxtb	r5, r1
  40494e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  404952:	2c0f      	cmp	r4, #15
  404954:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  404958:	d919      	bls.n	40498e <memset+0x66>
  40495a:	f103 0210 	add.w	r2, r3, #16
  40495e:	4626      	mov	r6, r4
  404960:	3e10      	subs	r6, #16
  404962:	2e0f      	cmp	r6, #15
  404964:	f842 5c10 	str.w	r5, [r2, #-16]
  404968:	f842 5c0c 	str.w	r5, [r2, #-12]
  40496c:	f842 5c08 	str.w	r5, [r2, #-8]
  404970:	f842 5c04 	str.w	r5, [r2, #-4]
  404974:	f102 0210 	add.w	r2, r2, #16
  404978:	d8f2      	bhi.n	404960 <memset+0x38>
  40497a:	f1a4 0210 	sub.w	r2, r4, #16
  40497e:	f022 020f 	bic.w	r2, r2, #15
  404982:	f004 040f 	and.w	r4, r4, #15
  404986:	3210      	adds	r2, #16
  404988:	2c03      	cmp	r4, #3
  40498a:	4413      	add	r3, r2
  40498c:	d90d      	bls.n	4049aa <memset+0x82>
  40498e:	461e      	mov	r6, r3
  404990:	4622      	mov	r2, r4
  404992:	3a04      	subs	r2, #4
  404994:	2a03      	cmp	r2, #3
  404996:	f846 5b04 	str.w	r5, [r6], #4
  40499a:	d8fa      	bhi.n	404992 <memset+0x6a>
  40499c:	1f22      	subs	r2, r4, #4
  40499e:	f022 0203 	bic.w	r2, r2, #3
  4049a2:	3204      	adds	r2, #4
  4049a4:	4413      	add	r3, r2
  4049a6:	f004 0403 	and.w	r4, r4, #3
  4049aa:	b12c      	cbz	r4, 4049b8 <memset+0x90>
  4049ac:	b2c9      	uxtb	r1, r1
  4049ae:	441c      	add	r4, r3
  4049b0:	f803 1b01 	strb.w	r1, [r3], #1
  4049b4:	429c      	cmp	r4, r3
  4049b6:	d1fb      	bne.n	4049b0 <memset+0x88>
  4049b8:	bc70      	pop	{r4, r5, r6}
  4049ba:	4770      	bx	lr
  4049bc:	4614      	mov	r4, r2
  4049be:	4603      	mov	r3, r0
  4049c0:	e7c2      	b.n	404948 <memset+0x20>
  4049c2:	bf00      	nop

004049c4 <sprintf>:
  4049c4:	b40e      	push	{r1, r2, r3}
  4049c6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4049c8:	b09c      	sub	sp, #112	; 0x70
  4049ca:	ab21      	add	r3, sp, #132	; 0x84
  4049cc:	490f      	ldr	r1, [pc, #60]	; (404a0c <sprintf+0x48>)
  4049ce:	f853 2b04 	ldr.w	r2, [r3], #4
  4049d2:	9301      	str	r3, [sp, #4]
  4049d4:	4605      	mov	r5, r0
  4049d6:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4049da:	6808      	ldr	r0, [r1, #0]
  4049dc:	9502      	str	r5, [sp, #8]
  4049de:	f44f 7702 	mov.w	r7, #520	; 0x208
  4049e2:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4049e6:	a902      	add	r1, sp, #8
  4049e8:	9506      	str	r5, [sp, #24]
  4049ea:	f8ad 7014 	strh.w	r7, [sp, #20]
  4049ee:	9404      	str	r4, [sp, #16]
  4049f0:	9407      	str	r4, [sp, #28]
  4049f2:	f8ad 6016 	strh.w	r6, [sp, #22]
  4049f6:	f000 f891 	bl	404b1c <_svfprintf_r>
  4049fa:	9b02      	ldr	r3, [sp, #8]
  4049fc:	2200      	movs	r2, #0
  4049fe:	701a      	strb	r2, [r3, #0]
  404a00:	b01c      	add	sp, #112	; 0x70
  404a02:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  404a06:	b003      	add	sp, #12
  404a08:	4770      	bx	lr
  404a0a:	bf00      	nop
  404a0c:	200000ac 	.word	0x200000ac
	...

00404a40 <strlen>:
  404a40:	f890 f000 	pld	[r0]
  404a44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404a48:	f020 0107 	bic.w	r1, r0, #7
  404a4c:	f06f 0c00 	mvn.w	ip, #0
  404a50:	f010 0407 	ands.w	r4, r0, #7
  404a54:	f891 f020 	pld	[r1, #32]
  404a58:	f040 8049 	bne.w	404aee <strlen+0xae>
  404a5c:	f04f 0400 	mov.w	r4, #0
  404a60:	f06f 0007 	mvn.w	r0, #7
  404a64:	e9d1 2300 	ldrd	r2, r3, [r1]
  404a68:	f891 f040 	pld	[r1, #64]	; 0x40
  404a6c:	f100 0008 	add.w	r0, r0, #8
  404a70:	fa82 f24c 	uadd8	r2, r2, ip
  404a74:	faa4 f28c 	sel	r2, r4, ip
  404a78:	fa83 f34c 	uadd8	r3, r3, ip
  404a7c:	faa2 f38c 	sel	r3, r2, ip
  404a80:	bb4b      	cbnz	r3, 404ad6 <strlen+0x96>
  404a82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404a86:	fa82 f24c 	uadd8	r2, r2, ip
  404a8a:	f100 0008 	add.w	r0, r0, #8
  404a8e:	faa4 f28c 	sel	r2, r4, ip
  404a92:	fa83 f34c 	uadd8	r3, r3, ip
  404a96:	faa2 f38c 	sel	r3, r2, ip
  404a9a:	b9e3      	cbnz	r3, 404ad6 <strlen+0x96>
  404a9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404aa0:	fa82 f24c 	uadd8	r2, r2, ip
  404aa4:	f100 0008 	add.w	r0, r0, #8
  404aa8:	faa4 f28c 	sel	r2, r4, ip
  404aac:	fa83 f34c 	uadd8	r3, r3, ip
  404ab0:	faa2 f38c 	sel	r3, r2, ip
  404ab4:	b97b      	cbnz	r3, 404ad6 <strlen+0x96>
  404ab6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404aba:	f101 0120 	add.w	r1, r1, #32
  404abe:	fa82 f24c 	uadd8	r2, r2, ip
  404ac2:	f100 0008 	add.w	r0, r0, #8
  404ac6:	faa4 f28c 	sel	r2, r4, ip
  404aca:	fa83 f34c 	uadd8	r3, r3, ip
  404ace:	faa2 f38c 	sel	r3, r2, ip
  404ad2:	2b00      	cmp	r3, #0
  404ad4:	d0c6      	beq.n	404a64 <strlen+0x24>
  404ad6:	2a00      	cmp	r2, #0
  404ad8:	bf04      	itt	eq
  404ada:	3004      	addeq	r0, #4
  404adc:	461a      	moveq	r2, r3
  404ade:	ba12      	rev	r2, r2
  404ae0:	fab2 f282 	clz	r2, r2
  404ae4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404ae8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404aec:	4770      	bx	lr
  404aee:	e9d1 2300 	ldrd	r2, r3, [r1]
  404af2:	f004 0503 	and.w	r5, r4, #3
  404af6:	f1c4 0000 	rsb	r0, r4, #0
  404afa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404afe:	f014 0f04 	tst.w	r4, #4
  404b02:	f891 f040 	pld	[r1, #64]	; 0x40
  404b06:	fa0c f505 	lsl.w	r5, ip, r5
  404b0a:	ea62 0205 	orn	r2, r2, r5
  404b0e:	bf1c      	itt	ne
  404b10:	ea63 0305 	ornne	r3, r3, r5
  404b14:	4662      	movne	r2, ip
  404b16:	f04f 0400 	mov.w	r4, #0
  404b1a:	e7a9      	b.n	404a70 <strlen+0x30>

00404b1c <_svfprintf_r>:
  404b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404b20:	b0c3      	sub	sp, #268	; 0x10c
  404b22:	460c      	mov	r4, r1
  404b24:	910b      	str	r1, [sp, #44]	; 0x2c
  404b26:	4692      	mov	sl, r2
  404b28:	930f      	str	r3, [sp, #60]	; 0x3c
  404b2a:	900c      	str	r0, [sp, #48]	; 0x30
  404b2c:	f002 fb42 	bl	4071b4 <_localeconv_r>
  404b30:	6803      	ldr	r3, [r0, #0]
  404b32:	931a      	str	r3, [sp, #104]	; 0x68
  404b34:	4618      	mov	r0, r3
  404b36:	f7ff ff83 	bl	404a40 <strlen>
  404b3a:	89a3      	ldrh	r3, [r4, #12]
  404b3c:	9019      	str	r0, [sp, #100]	; 0x64
  404b3e:	0619      	lsls	r1, r3, #24
  404b40:	d503      	bpl.n	404b4a <_svfprintf_r+0x2e>
  404b42:	6923      	ldr	r3, [r4, #16]
  404b44:	2b00      	cmp	r3, #0
  404b46:	f001 8003 	beq.w	405b50 <_svfprintf_r+0x1034>
  404b4a:	2300      	movs	r3, #0
  404b4c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  404b50:	9313      	str	r3, [sp, #76]	; 0x4c
  404b52:	9315      	str	r3, [sp, #84]	; 0x54
  404b54:	9314      	str	r3, [sp, #80]	; 0x50
  404b56:	9327      	str	r3, [sp, #156]	; 0x9c
  404b58:	9326      	str	r3, [sp, #152]	; 0x98
  404b5a:	9318      	str	r3, [sp, #96]	; 0x60
  404b5c:	931b      	str	r3, [sp, #108]	; 0x6c
  404b5e:	9309      	str	r3, [sp, #36]	; 0x24
  404b60:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  404b64:	46c8      	mov	r8, r9
  404b66:	9316      	str	r3, [sp, #88]	; 0x58
  404b68:	9317      	str	r3, [sp, #92]	; 0x5c
  404b6a:	f89a 3000 	ldrb.w	r3, [sl]
  404b6e:	4654      	mov	r4, sl
  404b70:	b1e3      	cbz	r3, 404bac <_svfprintf_r+0x90>
  404b72:	2b25      	cmp	r3, #37	; 0x25
  404b74:	d102      	bne.n	404b7c <_svfprintf_r+0x60>
  404b76:	e019      	b.n	404bac <_svfprintf_r+0x90>
  404b78:	2b25      	cmp	r3, #37	; 0x25
  404b7a:	d003      	beq.n	404b84 <_svfprintf_r+0x68>
  404b7c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  404b80:	2b00      	cmp	r3, #0
  404b82:	d1f9      	bne.n	404b78 <_svfprintf_r+0x5c>
  404b84:	eba4 050a 	sub.w	r5, r4, sl
  404b88:	b185      	cbz	r5, 404bac <_svfprintf_r+0x90>
  404b8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404b8c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404b8e:	f8c8 a000 	str.w	sl, [r8]
  404b92:	3301      	adds	r3, #1
  404b94:	442a      	add	r2, r5
  404b96:	2b07      	cmp	r3, #7
  404b98:	f8c8 5004 	str.w	r5, [r8, #4]
  404b9c:	9227      	str	r2, [sp, #156]	; 0x9c
  404b9e:	9326      	str	r3, [sp, #152]	; 0x98
  404ba0:	dc7f      	bgt.n	404ca2 <_svfprintf_r+0x186>
  404ba2:	f108 0808 	add.w	r8, r8, #8
  404ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404ba8:	442b      	add	r3, r5
  404baa:	9309      	str	r3, [sp, #36]	; 0x24
  404bac:	7823      	ldrb	r3, [r4, #0]
  404bae:	2b00      	cmp	r3, #0
  404bb0:	d07f      	beq.n	404cb2 <_svfprintf_r+0x196>
  404bb2:	2300      	movs	r3, #0
  404bb4:	461a      	mov	r2, r3
  404bb6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  404bba:	4619      	mov	r1, r3
  404bbc:	930d      	str	r3, [sp, #52]	; 0x34
  404bbe:	469b      	mov	fp, r3
  404bc0:	f04f 30ff 	mov.w	r0, #4294967295
  404bc4:	7863      	ldrb	r3, [r4, #1]
  404bc6:	900a      	str	r0, [sp, #40]	; 0x28
  404bc8:	f104 0a01 	add.w	sl, r4, #1
  404bcc:	f10a 0a01 	add.w	sl, sl, #1
  404bd0:	f1a3 0020 	sub.w	r0, r3, #32
  404bd4:	2858      	cmp	r0, #88	; 0x58
  404bd6:	f200 83c1 	bhi.w	40535c <_svfprintf_r+0x840>
  404bda:	e8df f010 	tbh	[pc, r0, lsl #1]
  404bde:	0238      	.short	0x0238
  404be0:	03bf03bf 	.word	0x03bf03bf
  404be4:	03bf0240 	.word	0x03bf0240
  404be8:	03bf03bf 	.word	0x03bf03bf
  404bec:	03bf03bf 	.word	0x03bf03bf
  404bf0:	024503bf 	.word	0x024503bf
  404bf4:	03bf0203 	.word	0x03bf0203
  404bf8:	026b005d 	.word	0x026b005d
  404bfc:	028603bf 	.word	0x028603bf
  404c00:	039d039d 	.word	0x039d039d
  404c04:	039d039d 	.word	0x039d039d
  404c08:	039d039d 	.word	0x039d039d
  404c0c:	039d039d 	.word	0x039d039d
  404c10:	03bf039d 	.word	0x03bf039d
  404c14:	03bf03bf 	.word	0x03bf03bf
  404c18:	03bf03bf 	.word	0x03bf03bf
  404c1c:	03bf03bf 	.word	0x03bf03bf
  404c20:	03bf03bf 	.word	0x03bf03bf
  404c24:	033703bf 	.word	0x033703bf
  404c28:	03bf0357 	.word	0x03bf0357
  404c2c:	03bf0357 	.word	0x03bf0357
  404c30:	03bf03bf 	.word	0x03bf03bf
  404c34:	039803bf 	.word	0x039803bf
  404c38:	03bf03bf 	.word	0x03bf03bf
  404c3c:	03bf03ad 	.word	0x03bf03ad
  404c40:	03bf03bf 	.word	0x03bf03bf
  404c44:	03bf03bf 	.word	0x03bf03bf
  404c48:	03bf0259 	.word	0x03bf0259
  404c4c:	031e03bf 	.word	0x031e03bf
  404c50:	03bf03bf 	.word	0x03bf03bf
  404c54:	03bf03bf 	.word	0x03bf03bf
  404c58:	03bf03bf 	.word	0x03bf03bf
  404c5c:	03bf03bf 	.word	0x03bf03bf
  404c60:	03bf03bf 	.word	0x03bf03bf
  404c64:	02db02c6 	.word	0x02db02c6
  404c68:	03570357 	.word	0x03570357
  404c6c:	028b0357 	.word	0x028b0357
  404c70:	03bf02db 	.word	0x03bf02db
  404c74:	029003bf 	.word	0x029003bf
  404c78:	029d03bf 	.word	0x029d03bf
  404c7c:	02b401cc 	.word	0x02b401cc
  404c80:	03bf0208 	.word	0x03bf0208
  404c84:	03bf01e1 	.word	0x03bf01e1
  404c88:	03bf007e 	.word	0x03bf007e
  404c8c:	020d03bf 	.word	0x020d03bf
  404c90:	980d      	ldr	r0, [sp, #52]	; 0x34
  404c92:	930f      	str	r3, [sp, #60]	; 0x3c
  404c94:	4240      	negs	r0, r0
  404c96:	900d      	str	r0, [sp, #52]	; 0x34
  404c98:	f04b 0b04 	orr.w	fp, fp, #4
  404c9c:	f89a 3000 	ldrb.w	r3, [sl]
  404ca0:	e794      	b.n	404bcc <_svfprintf_r+0xb0>
  404ca2:	aa25      	add	r2, sp, #148	; 0x94
  404ca4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404ca6:	980c      	ldr	r0, [sp, #48]	; 0x30
  404ca8:	f003 fad4 	bl	408254 <__ssprint_r>
  404cac:	b940      	cbnz	r0, 404cc0 <_svfprintf_r+0x1a4>
  404cae:	46c8      	mov	r8, r9
  404cb0:	e779      	b.n	404ba6 <_svfprintf_r+0x8a>
  404cb2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  404cb4:	b123      	cbz	r3, 404cc0 <_svfprintf_r+0x1a4>
  404cb6:	980c      	ldr	r0, [sp, #48]	; 0x30
  404cb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404cba:	aa25      	add	r2, sp, #148	; 0x94
  404cbc:	f003 faca 	bl	408254 <__ssprint_r>
  404cc0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404cc2:	899b      	ldrh	r3, [r3, #12]
  404cc4:	f013 0f40 	tst.w	r3, #64	; 0x40
  404cc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404cca:	bf18      	it	ne
  404ccc:	f04f 33ff 	movne.w	r3, #4294967295
  404cd0:	9309      	str	r3, [sp, #36]	; 0x24
  404cd2:	9809      	ldr	r0, [sp, #36]	; 0x24
  404cd4:	b043      	add	sp, #268	; 0x10c
  404cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404cda:	f01b 0f20 	tst.w	fp, #32
  404cde:	9311      	str	r3, [sp, #68]	; 0x44
  404ce0:	f040 81dd 	bne.w	40509e <_svfprintf_r+0x582>
  404ce4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404ce6:	f01b 0f10 	tst.w	fp, #16
  404cea:	4613      	mov	r3, r2
  404cec:	f040 856e 	bne.w	4057cc <_svfprintf_r+0xcb0>
  404cf0:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404cf4:	f000 856a 	beq.w	4057cc <_svfprintf_r+0xcb0>
  404cf8:	8814      	ldrh	r4, [r2, #0]
  404cfa:	3204      	adds	r2, #4
  404cfc:	2500      	movs	r5, #0
  404cfe:	2301      	movs	r3, #1
  404d00:	920f      	str	r2, [sp, #60]	; 0x3c
  404d02:	2700      	movs	r7, #0
  404d04:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404d08:	990a      	ldr	r1, [sp, #40]	; 0x28
  404d0a:	1c4a      	adds	r2, r1, #1
  404d0c:	f000 8265 	beq.w	4051da <_svfprintf_r+0x6be>
  404d10:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  404d14:	9207      	str	r2, [sp, #28]
  404d16:	ea54 0205 	orrs.w	r2, r4, r5
  404d1a:	f040 8264 	bne.w	4051e6 <_svfprintf_r+0x6ca>
  404d1e:	2900      	cmp	r1, #0
  404d20:	f040 843c 	bne.w	40559c <_svfprintf_r+0xa80>
  404d24:	2b00      	cmp	r3, #0
  404d26:	f040 84d7 	bne.w	4056d8 <_svfprintf_r+0xbbc>
  404d2a:	f01b 0301 	ands.w	r3, fp, #1
  404d2e:	930e      	str	r3, [sp, #56]	; 0x38
  404d30:	f000 8604 	beq.w	40593c <_svfprintf_r+0xe20>
  404d34:	ae42      	add	r6, sp, #264	; 0x108
  404d36:	2330      	movs	r3, #48	; 0x30
  404d38:	f806 3d41 	strb.w	r3, [r6, #-65]!
  404d3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404d3e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404d40:	4293      	cmp	r3, r2
  404d42:	bfb8      	it	lt
  404d44:	4613      	movlt	r3, r2
  404d46:	9308      	str	r3, [sp, #32]
  404d48:	2300      	movs	r3, #0
  404d4a:	9312      	str	r3, [sp, #72]	; 0x48
  404d4c:	b117      	cbz	r7, 404d54 <_svfprintf_r+0x238>
  404d4e:	9b08      	ldr	r3, [sp, #32]
  404d50:	3301      	adds	r3, #1
  404d52:	9308      	str	r3, [sp, #32]
  404d54:	9b07      	ldr	r3, [sp, #28]
  404d56:	f013 0302 	ands.w	r3, r3, #2
  404d5a:	9310      	str	r3, [sp, #64]	; 0x40
  404d5c:	d002      	beq.n	404d64 <_svfprintf_r+0x248>
  404d5e:	9b08      	ldr	r3, [sp, #32]
  404d60:	3302      	adds	r3, #2
  404d62:	9308      	str	r3, [sp, #32]
  404d64:	9b07      	ldr	r3, [sp, #28]
  404d66:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  404d6a:	f040 830e 	bne.w	40538a <_svfprintf_r+0x86e>
  404d6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404d70:	9a08      	ldr	r2, [sp, #32]
  404d72:	eba3 0b02 	sub.w	fp, r3, r2
  404d76:	f1bb 0f00 	cmp.w	fp, #0
  404d7a:	f340 8306 	ble.w	40538a <_svfprintf_r+0x86e>
  404d7e:	f1bb 0f10 	cmp.w	fp, #16
  404d82:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404d84:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404d86:	dd29      	ble.n	404ddc <_svfprintf_r+0x2c0>
  404d88:	4643      	mov	r3, r8
  404d8a:	4621      	mov	r1, r4
  404d8c:	46a8      	mov	r8, r5
  404d8e:	2710      	movs	r7, #16
  404d90:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404d92:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404d94:	e006      	b.n	404da4 <_svfprintf_r+0x288>
  404d96:	f1ab 0b10 	sub.w	fp, fp, #16
  404d9a:	f1bb 0f10 	cmp.w	fp, #16
  404d9e:	f103 0308 	add.w	r3, r3, #8
  404da2:	dd18      	ble.n	404dd6 <_svfprintf_r+0x2ba>
  404da4:	3201      	adds	r2, #1
  404da6:	48b7      	ldr	r0, [pc, #732]	; (405084 <_svfprintf_r+0x568>)
  404da8:	9226      	str	r2, [sp, #152]	; 0x98
  404daa:	3110      	adds	r1, #16
  404dac:	2a07      	cmp	r2, #7
  404dae:	9127      	str	r1, [sp, #156]	; 0x9c
  404db0:	e883 0081 	stmia.w	r3, {r0, r7}
  404db4:	ddef      	ble.n	404d96 <_svfprintf_r+0x27a>
  404db6:	aa25      	add	r2, sp, #148	; 0x94
  404db8:	4629      	mov	r1, r5
  404dba:	4620      	mov	r0, r4
  404dbc:	f003 fa4a 	bl	408254 <__ssprint_r>
  404dc0:	2800      	cmp	r0, #0
  404dc2:	f47f af7d 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  404dc6:	f1ab 0b10 	sub.w	fp, fp, #16
  404dca:	f1bb 0f10 	cmp.w	fp, #16
  404dce:	9927      	ldr	r1, [sp, #156]	; 0x9c
  404dd0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404dd2:	464b      	mov	r3, r9
  404dd4:	dce6      	bgt.n	404da4 <_svfprintf_r+0x288>
  404dd6:	4645      	mov	r5, r8
  404dd8:	460c      	mov	r4, r1
  404dda:	4698      	mov	r8, r3
  404ddc:	3201      	adds	r2, #1
  404dde:	4ba9      	ldr	r3, [pc, #676]	; (405084 <_svfprintf_r+0x568>)
  404de0:	9226      	str	r2, [sp, #152]	; 0x98
  404de2:	445c      	add	r4, fp
  404de4:	2a07      	cmp	r2, #7
  404de6:	9427      	str	r4, [sp, #156]	; 0x9c
  404de8:	e888 0808 	stmia.w	r8, {r3, fp}
  404dec:	f300 8498 	bgt.w	405720 <_svfprintf_r+0xc04>
  404df0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404df4:	f108 0808 	add.w	r8, r8, #8
  404df8:	b177      	cbz	r7, 404e18 <_svfprintf_r+0x2fc>
  404dfa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404dfc:	3301      	adds	r3, #1
  404dfe:	3401      	adds	r4, #1
  404e00:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  404e04:	2201      	movs	r2, #1
  404e06:	2b07      	cmp	r3, #7
  404e08:	9427      	str	r4, [sp, #156]	; 0x9c
  404e0a:	9326      	str	r3, [sp, #152]	; 0x98
  404e0c:	e888 0006 	stmia.w	r8, {r1, r2}
  404e10:	f300 83db 	bgt.w	4055ca <_svfprintf_r+0xaae>
  404e14:	f108 0808 	add.w	r8, r8, #8
  404e18:	9b10      	ldr	r3, [sp, #64]	; 0x40
  404e1a:	b16b      	cbz	r3, 404e38 <_svfprintf_r+0x31c>
  404e1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404e1e:	3301      	adds	r3, #1
  404e20:	3402      	adds	r4, #2
  404e22:	a91e      	add	r1, sp, #120	; 0x78
  404e24:	2202      	movs	r2, #2
  404e26:	2b07      	cmp	r3, #7
  404e28:	9427      	str	r4, [sp, #156]	; 0x9c
  404e2a:	9326      	str	r3, [sp, #152]	; 0x98
  404e2c:	e888 0006 	stmia.w	r8, {r1, r2}
  404e30:	f300 83d6 	bgt.w	4055e0 <_svfprintf_r+0xac4>
  404e34:	f108 0808 	add.w	r8, r8, #8
  404e38:	2d80      	cmp	r5, #128	; 0x80
  404e3a:	f000 8315 	beq.w	405468 <_svfprintf_r+0x94c>
  404e3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404e40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404e42:	1a9f      	subs	r7, r3, r2
  404e44:	2f00      	cmp	r7, #0
  404e46:	dd36      	ble.n	404eb6 <_svfprintf_r+0x39a>
  404e48:	2f10      	cmp	r7, #16
  404e4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404e4c:	4d8e      	ldr	r5, [pc, #568]	; (405088 <_svfprintf_r+0x56c>)
  404e4e:	dd27      	ble.n	404ea0 <_svfprintf_r+0x384>
  404e50:	4642      	mov	r2, r8
  404e52:	4621      	mov	r1, r4
  404e54:	46b0      	mov	r8, r6
  404e56:	f04f 0b10 	mov.w	fp, #16
  404e5a:	462e      	mov	r6, r5
  404e5c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404e5e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404e60:	e004      	b.n	404e6c <_svfprintf_r+0x350>
  404e62:	3f10      	subs	r7, #16
  404e64:	2f10      	cmp	r7, #16
  404e66:	f102 0208 	add.w	r2, r2, #8
  404e6a:	dd15      	ble.n	404e98 <_svfprintf_r+0x37c>
  404e6c:	3301      	adds	r3, #1
  404e6e:	3110      	adds	r1, #16
  404e70:	2b07      	cmp	r3, #7
  404e72:	9127      	str	r1, [sp, #156]	; 0x9c
  404e74:	9326      	str	r3, [sp, #152]	; 0x98
  404e76:	e882 0840 	stmia.w	r2, {r6, fp}
  404e7a:	ddf2      	ble.n	404e62 <_svfprintf_r+0x346>
  404e7c:	aa25      	add	r2, sp, #148	; 0x94
  404e7e:	4629      	mov	r1, r5
  404e80:	4620      	mov	r0, r4
  404e82:	f003 f9e7 	bl	408254 <__ssprint_r>
  404e86:	2800      	cmp	r0, #0
  404e88:	f47f af1a 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  404e8c:	3f10      	subs	r7, #16
  404e8e:	2f10      	cmp	r7, #16
  404e90:	9927      	ldr	r1, [sp, #156]	; 0x9c
  404e92:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404e94:	464a      	mov	r2, r9
  404e96:	dce9      	bgt.n	404e6c <_svfprintf_r+0x350>
  404e98:	4635      	mov	r5, r6
  404e9a:	460c      	mov	r4, r1
  404e9c:	4646      	mov	r6, r8
  404e9e:	4690      	mov	r8, r2
  404ea0:	3301      	adds	r3, #1
  404ea2:	443c      	add	r4, r7
  404ea4:	2b07      	cmp	r3, #7
  404ea6:	9427      	str	r4, [sp, #156]	; 0x9c
  404ea8:	9326      	str	r3, [sp, #152]	; 0x98
  404eaa:	e888 00a0 	stmia.w	r8, {r5, r7}
  404eae:	f300 8381 	bgt.w	4055b4 <_svfprintf_r+0xa98>
  404eb2:	f108 0808 	add.w	r8, r8, #8
  404eb6:	9b07      	ldr	r3, [sp, #28]
  404eb8:	05df      	lsls	r7, r3, #23
  404eba:	f100 8268 	bmi.w	40538e <_svfprintf_r+0x872>
  404ebe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404ec0:	990e      	ldr	r1, [sp, #56]	; 0x38
  404ec2:	f8c8 6000 	str.w	r6, [r8]
  404ec6:	3301      	adds	r3, #1
  404ec8:	440c      	add	r4, r1
  404eca:	2b07      	cmp	r3, #7
  404ecc:	9427      	str	r4, [sp, #156]	; 0x9c
  404ece:	f8c8 1004 	str.w	r1, [r8, #4]
  404ed2:	9326      	str	r3, [sp, #152]	; 0x98
  404ed4:	f300 834d 	bgt.w	405572 <_svfprintf_r+0xa56>
  404ed8:	f108 0808 	add.w	r8, r8, #8
  404edc:	9b07      	ldr	r3, [sp, #28]
  404ede:	075b      	lsls	r3, r3, #29
  404ee0:	d53a      	bpl.n	404f58 <_svfprintf_r+0x43c>
  404ee2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404ee4:	9a08      	ldr	r2, [sp, #32]
  404ee6:	1a9d      	subs	r5, r3, r2
  404ee8:	2d00      	cmp	r5, #0
  404eea:	dd35      	ble.n	404f58 <_svfprintf_r+0x43c>
  404eec:	2d10      	cmp	r5, #16
  404eee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404ef0:	dd20      	ble.n	404f34 <_svfprintf_r+0x418>
  404ef2:	2610      	movs	r6, #16
  404ef4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404ef6:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  404efa:	e004      	b.n	404f06 <_svfprintf_r+0x3ea>
  404efc:	3d10      	subs	r5, #16
  404efe:	2d10      	cmp	r5, #16
  404f00:	f108 0808 	add.w	r8, r8, #8
  404f04:	dd16      	ble.n	404f34 <_svfprintf_r+0x418>
  404f06:	3301      	adds	r3, #1
  404f08:	4a5e      	ldr	r2, [pc, #376]	; (405084 <_svfprintf_r+0x568>)
  404f0a:	9326      	str	r3, [sp, #152]	; 0x98
  404f0c:	3410      	adds	r4, #16
  404f0e:	2b07      	cmp	r3, #7
  404f10:	9427      	str	r4, [sp, #156]	; 0x9c
  404f12:	e888 0044 	stmia.w	r8, {r2, r6}
  404f16:	ddf1      	ble.n	404efc <_svfprintf_r+0x3e0>
  404f18:	aa25      	add	r2, sp, #148	; 0x94
  404f1a:	4659      	mov	r1, fp
  404f1c:	4638      	mov	r0, r7
  404f1e:	f003 f999 	bl	408254 <__ssprint_r>
  404f22:	2800      	cmp	r0, #0
  404f24:	f47f aecc 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  404f28:	3d10      	subs	r5, #16
  404f2a:	2d10      	cmp	r5, #16
  404f2c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404f2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404f30:	46c8      	mov	r8, r9
  404f32:	dce8      	bgt.n	404f06 <_svfprintf_r+0x3ea>
  404f34:	3301      	adds	r3, #1
  404f36:	4a53      	ldr	r2, [pc, #332]	; (405084 <_svfprintf_r+0x568>)
  404f38:	9326      	str	r3, [sp, #152]	; 0x98
  404f3a:	442c      	add	r4, r5
  404f3c:	2b07      	cmp	r3, #7
  404f3e:	9427      	str	r4, [sp, #156]	; 0x9c
  404f40:	e888 0024 	stmia.w	r8, {r2, r5}
  404f44:	dd08      	ble.n	404f58 <_svfprintf_r+0x43c>
  404f46:	aa25      	add	r2, sp, #148	; 0x94
  404f48:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404f4a:	980c      	ldr	r0, [sp, #48]	; 0x30
  404f4c:	f003 f982 	bl	408254 <__ssprint_r>
  404f50:	2800      	cmp	r0, #0
  404f52:	f47f aeb5 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  404f56:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404f58:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404f5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404f5c:	9908      	ldr	r1, [sp, #32]
  404f5e:	428a      	cmp	r2, r1
  404f60:	bfac      	ite	ge
  404f62:	189b      	addge	r3, r3, r2
  404f64:	185b      	addlt	r3, r3, r1
  404f66:	9309      	str	r3, [sp, #36]	; 0x24
  404f68:	2c00      	cmp	r4, #0
  404f6a:	f040 830d 	bne.w	405588 <_svfprintf_r+0xa6c>
  404f6e:	2300      	movs	r3, #0
  404f70:	9326      	str	r3, [sp, #152]	; 0x98
  404f72:	46c8      	mov	r8, r9
  404f74:	e5f9      	b.n	404b6a <_svfprintf_r+0x4e>
  404f76:	9311      	str	r3, [sp, #68]	; 0x44
  404f78:	f01b 0320 	ands.w	r3, fp, #32
  404f7c:	f040 81e3 	bne.w	405346 <_svfprintf_r+0x82a>
  404f80:	f01b 0210 	ands.w	r2, fp, #16
  404f84:	f040 842e 	bne.w	4057e4 <_svfprintf_r+0xcc8>
  404f88:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  404f8c:	f000 842a 	beq.w	4057e4 <_svfprintf_r+0xcc8>
  404f90:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404f92:	4613      	mov	r3, r2
  404f94:	460a      	mov	r2, r1
  404f96:	3204      	adds	r2, #4
  404f98:	880c      	ldrh	r4, [r1, #0]
  404f9a:	920f      	str	r2, [sp, #60]	; 0x3c
  404f9c:	2500      	movs	r5, #0
  404f9e:	e6b0      	b.n	404d02 <_svfprintf_r+0x1e6>
  404fa0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404fa2:	9311      	str	r3, [sp, #68]	; 0x44
  404fa4:	6816      	ldr	r6, [r2, #0]
  404fa6:	2400      	movs	r4, #0
  404fa8:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  404fac:	1d15      	adds	r5, r2, #4
  404fae:	2e00      	cmp	r6, #0
  404fb0:	f000 86a7 	beq.w	405d02 <_svfprintf_r+0x11e6>
  404fb4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404fb6:	1c53      	adds	r3, r2, #1
  404fb8:	f000 8609 	beq.w	405bce <_svfprintf_r+0x10b2>
  404fbc:	4621      	mov	r1, r4
  404fbe:	4630      	mov	r0, r6
  404fc0:	f002 fbd6 	bl	407770 <memchr>
  404fc4:	2800      	cmp	r0, #0
  404fc6:	f000 86e1 	beq.w	405d8c <_svfprintf_r+0x1270>
  404fca:	1b83      	subs	r3, r0, r6
  404fcc:	930e      	str	r3, [sp, #56]	; 0x38
  404fce:	940a      	str	r4, [sp, #40]	; 0x28
  404fd0:	950f      	str	r5, [sp, #60]	; 0x3c
  404fd2:	f8cd b01c 	str.w	fp, [sp, #28]
  404fd6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  404fda:	9308      	str	r3, [sp, #32]
  404fdc:	9412      	str	r4, [sp, #72]	; 0x48
  404fde:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404fe2:	e6b3      	b.n	404d4c <_svfprintf_r+0x230>
  404fe4:	f89a 3000 	ldrb.w	r3, [sl]
  404fe8:	2201      	movs	r2, #1
  404fea:	212b      	movs	r1, #43	; 0x2b
  404fec:	e5ee      	b.n	404bcc <_svfprintf_r+0xb0>
  404fee:	f04b 0b20 	orr.w	fp, fp, #32
  404ff2:	f89a 3000 	ldrb.w	r3, [sl]
  404ff6:	e5e9      	b.n	404bcc <_svfprintf_r+0xb0>
  404ff8:	9311      	str	r3, [sp, #68]	; 0x44
  404ffa:	2a00      	cmp	r2, #0
  404ffc:	f040 8795 	bne.w	405f2a <_svfprintf_r+0x140e>
  405000:	4b22      	ldr	r3, [pc, #136]	; (40508c <_svfprintf_r+0x570>)
  405002:	9318      	str	r3, [sp, #96]	; 0x60
  405004:	f01b 0f20 	tst.w	fp, #32
  405008:	f040 8111 	bne.w	40522e <_svfprintf_r+0x712>
  40500c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40500e:	f01b 0f10 	tst.w	fp, #16
  405012:	4613      	mov	r3, r2
  405014:	f040 83e1 	bne.w	4057da <_svfprintf_r+0xcbe>
  405018:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40501c:	f000 83dd 	beq.w	4057da <_svfprintf_r+0xcbe>
  405020:	3304      	adds	r3, #4
  405022:	8814      	ldrh	r4, [r2, #0]
  405024:	930f      	str	r3, [sp, #60]	; 0x3c
  405026:	2500      	movs	r5, #0
  405028:	f01b 0f01 	tst.w	fp, #1
  40502c:	f000 810c 	beq.w	405248 <_svfprintf_r+0x72c>
  405030:	ea54 0305 	orrs.w	r3, r4, r5
  405034:	f000 8108 	beq.w	405248 <_svfprintf_r+0x72c>
  405038:	2330      	movs	r3, #48	; 0x30
  40503a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40503e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  405042:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  405046:	f04b 0b02 	orr.w	fp, fp, #2
  40504a:	2302      	movs	r3, #2
  40504c:	e659      	b.n	404d02 <_svfprintf_r+0x1e6>
  40504e:	f89a 3000 	ldrb.w	r3, [sl]
  405052:	2900      	cmp	r1, #0
  405054:	f47f adba 	bne.w	404bcc <_svfprintf_r+0xb0>
  405058:	2201      	movs	r2, #1
  40505a:	2120      	movs	r1, #32
  40505c:	e5b6      	b.n	404bcc <_svfprintf_r+0xb0>
  40505e:	f04b 0b01 	orr.w	fp, fp, #1
  405062:	f89a 3000 	ldrb.w	r3, [sl]
  405066:	e5b1      	b.n	404bcc <_svfprintf_r+0xb0>
  405068:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40506a:	6823      	ldr	r3, [r4, #0]
  40506c:	930d      	str	r3, [sp, #52]	; 0x34
  40506e:	4618      	mov	r0, r3
  405070:	2800      	cmp	r0, #0
  405072:	4623      	mov	r3, r4
  405074:	f103 0304 	add.w	r3, r3, #4
  405078:	f6ff ae0a 	blt.w	404c90 <_svfprintf_r+0x174>
  40507c:	930f      	str	r3, [sp, #60]	; 0x3c
  40507e:	f89a 3000 	ldrb.w	r3, [sl]
  405082:	e5a3      	b.n	404bcc <_svfprintf_r+0xb0>
  405084:	00408884 	.word	0x00408884
  405088:	00408894 	.word	0x00408894
  40508c:	00408864 	.word	0x00408864
  405090:	f04b 0b10 	orr.w	fp, fp, #16
  405094:	f01b 0f20 	tst.w	fp, #32
  405098:	9311      	str	r3, [sp, #68]	; 0x44
  40509a:	f43f ae23 	beq.w	404ce4 <_svfprintf_r+0x1c8>
  40509e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4050a0:	3507      	adds	r5, #7
  4050a2:	f025 0307 	bic.w	r3, r5, #7
  4050a6:	f103 0208 	add.w	r2, r3, #8
  4050aa:	e9d3 4500 	ldrd	r4, r5, [r3]
  4050ae:	920f      	str	r2, [sp, #60]	; 0x3c
  4050b0:	2301      	movs	r3, #1
  4050b2:	e626      	b.n	404d02 <_svfprintf_r+0x1e6>
  4050b4:	f89a 3000 	ldrb.w	r3, [sl]
  4050b8:	2b2a      	cmp	r3, #42	; 0x2a
  4050ba:	f10a 0401 	add.w	r4, sl, #1
  4050be:	f000 8727 	beq.w	405f10 <_svfprintf_r+0x13f4>
  4050c2:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4050c6:	2809      	cmp	r0, #9
  4050c8:	46a2      	mov	sl, r4
  4050ca:	f200 86ad 	bhi.w	405e28 <_svfprintf_r+0x130c>
  4050ce:	2300      	movs	r3, #0
  4050d0:	461c      	mov	r4, r3
  4050d2:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4050d6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4050da:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4050de:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4050e2:	2809      	cmp	r0, #9
  4050e4:	d9f5      	bls.n	4050d2 <_svfprintf_r+0x5b6>
  4050e6:	940a      	str	r4, [sp, #40]	; 0x28
  4050e8:	e572      	b.n	404bd0 <_svfprintf_r+0xb4>
  4050ea:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4050ee:	f89a 3000 	ldrb.w	r3, [sl]
  4050f2:	e56b      	b.n	404bcc <_svfprintf_r+0xb0>
  4050f4:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4050f8:	f89a 3000 	ldrb.w	r3, [sl]
  4050fc:	e566      	b.n	404bcc <_svfprintf_r+0xb0>
  4050fe:	f89a 3000 	ldrb.w	r3, [sl]
  405102:	2b6c      	cmp	r3, #108	; 0x6c
  405104:	bf03      	ittte	eq
  405106:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40510a:	f04b 0b20 	orreq.w	fp, fp, #32
  40510e:	f10a 0a01 	addeq.w	sl, sl, #1
  405112:	f04b 0b10 	orrne.w	fp, fp, #16
  405116:	e559      	b.n	404bcc <_svfprintf_r+0xb0>
  405118:	2a00      	cmp	r2, #0
  40511a:	f040 8711 	bne.w	405f40 <_svfprintf_r+0x1424>
  40511e:	f01b 0f20 	tst.w	fp, #32
  405122:	f040 84f9 	bne.w	405b18 <_svfprintf_r+0xffc>
  405126:	f01b 0f10 	tst.w	fp, #16
  40512a:	f040 84ac 	bne.w	405a86 <_svfprintf_r+0xf6a>
  40512e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  405132:	f000 84a8 	beq.w	405a86 <_svfprintf_r+0xf6a>
  405136:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  405138:	6813      	ldr	r3, [r2, #0]
  40513a:	3204      	adds	r2, #4
  40513c:	920f      	str	r2, [sp, #60]	; 0x3c
  40513e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  405142:	801a      	strh	r2, [r3, #0]
  405144:	e511      	b.n	404b6a <_svfprintf_r+0x4e>
  405146:	990f      	ldr	r1, [sp, #60]	; 0x3c
  405148:	4bb3      	ldr	r3, [pc, #716]	; (405418 <_svfprintf_r+0x8fc>)
  40514a:	680c      	ldr	r4, [r1, #0]
  40514c:	9318      	str	r3, [sp, #96]	; 0x60
  40514e:	2230      	movs	r2, #48	; 0x30
  405150:	2378      	movs	r3, #120	; 0x78
  405152:	3104      	adds	r1, #4
  405154:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  405158:	9311      	str	r3, [sp, #68]	; 0x44
  40515a:	f04b 0b02 	orr.w	fp, fp, #2
  40515e:	910f      	str	r1, [sp, #60]	; 0x3c
  405160:	2500      	movs	r5, #0
  405162:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  405166:	2302      	movs	r3, #2
  405168:	e5cb      	b.n	404d02 <_svfprintf_r+0x1e6>
  40516a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40516c:	9311      	str	r3, [sp, #68]	; 0x44
  40516e:	680a      	ldr	r2, [r1, #0]
  405170:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  405174:	2300      	movs	r3, #0
  405176:	460a      	mov	r2, r1
  405178:	461f      	mov	r7, r3
  40517a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40517e:	3204      	adds	r2, #4
  405180:	2301      	movs	r3, #1
  405182:	9308      	str	r3, [sp, #32]
  405184:	f8cd b01c 	str.w	fp, [sp, #28]
  405188:	970a      	str	r7, [sp, #40]	; 0x28
  40518a:	9712      	str	r7, [sp, #72]	; 0x48
  40518c:	920f      	str	r2, [sp, #60]	; 0x3c
  40518e:	930e      	str	r3, [sp, #56]	; 0x38
  405190:	ae28      	add	r6, sp, #160	; 0xa0
  405192:	e5df      	b.n	404d54 <_svfprintf_r+0x238>
  405194:	9311      	str	r3, [sp, #68]	; 0x44
  405196:	2a00      	cmp	r2, #0
  405198:	f040 86ea 	bne.w	405f70 <_svfprintf_r+0x1454>
  40519c:	f01b 0f20 	tst.w	fp, #32
  4051a0:	d15d      	bne.n	40525e <_svfprintf_r+0x742>
  4051a2:	f01b 0f10 	tst.w	fp, #16
  4051a6:	f040 8308 	bne.w	4057ba <_svfprintf_r+0xc9e>
  4051aa:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4051ae:	f000 8304 	beq.w	4057ba <_svfprintf_r+0xc9e>
  4051b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4051b4:	f9b1 4000 	ldrsh.w	r4, [r1]
  4051b8:	3104      	adds	r1, #4
  4051ba:	17e5      	asrs	r5, r4, #31
  4051bc:	4622      	mov	r2, r4
  4051be:	462b      	mov	r3, r5
  4051c0:	910f      	str	r1, [sp, #60]	; 0x3c
  4051c2:	2a00      	cmp	r2, #0
  4051c4:	f173 0300 	sbcs.w	r3, r3, #0
  4051c8:	db58      	blt.n	40527c <_svfprintf_r+0x760>
  4051ca:	990a      	ldr	r1, [sp, #40]	; 0x28
  4051cc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4051d0:	1c4a      	adds	r2, r1, #1
  4051d2:	f04f 0301 	mov.w	r3, #1
  4051d6:	f47f ad9b 	bne.w	404d10 <_svfprintf_r+0x1f4>
  4051da:	ea54 0205 	orrs.w	r2, r4, r5
  4051de:	f000 81df 	beq.w	4055a0 <_svfprintf_r+0xa84>
  4051e2:	f8cd b01c 	str.w	fp, [sp, #28]
  4051e6:	2b01      	cmp	r3, #1
  4051e8:	f000 827b 	beq.w	4056e2 <_svfprintf_r+0xbc6>
  4051ec:	2b02      	cmp	r3, #2
  4051ee:	f040 8206 	bne.w	4055fe <_svfprintf_r+0xae2>
  4051f2:	9818      	ldr	r0, [sp, #96]	; 0x60
  4051f4:	464e      	mov	r6, r9
  4051f6:	0923      	lsrs	r3, r4, #4
  4051f8:	f004 010f 	and.w	r1, r4, #15
  4051fc:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  405200:	092a      	lsrs	r2, r5, #4
  405202:	461c      	mov	r4, r3
  405204:	4615      	mov	r5, r2
  405206:	5c43      	ldrb	r3, [r0, r1]
  405208:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40520c:	ea54 0305 	orrs.w	r3, r4, r5
  405210:	d1f1      	bne.n	4051f6 <_svfprintf_r+0x6da>
  405212:	eba9 0306 	sub.w	r3, r9, r6
  405216:	930e      	str	r3, [sp, #56]	; 0x38
  405218:	e590      	b.n	404d3c <_svfprintf_r+0x220>
  40521a:	9311      	str	r3, [sp, #68]	; 0x44
  40521c:	2a00      	cmp	r2, #0
  40521e:	f040 86a3 	bne.w	405f68 <_svfprintf_r+0x144c>
  405222:	4b7e      	ldr	r3, [pc, #504]	; (40541c <_svfprintf_r+0x900>)
  405224:	9318      	str	r3, [sp, #96]	; 0x60
  405226:	f01b 0f20 	tst.w	fp, #32
  40522a:	f43f aeef 	beq.w	40500c <_svfprintf_r+0x4f0>
  40522e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405230:	3507      	adds	r5, #7
  405232:	f025 0307 	bic.w	r3, r5, #7
  405236:	f103 0208 	add.w	r2, r3, #8
  40523a:	f01b 0f01 	tst.w	fp, #1
  40523e:	920f      	str	r2, [sp, #60]	; 0x3c
  405240:	e9d3 4500 	ldrd	r4, r5, [r3]
  405244:	f47f aef4 	bne.w	405030 <_svfprintf_r+0x514>
  405248:	2302      	movs	r3, #2
  40524a:	e55a      	b.n	404d02 <_svfprintf_r+0x1e6>
  40524c:	9311      	str	r3, [sp, #68]	; 0x44
  40524e:	2a00      	cmp	r2, #0
  405250:	f040 8686 	bne.w	405f60 <_svfprintf_r+0x1444>
  405254:	f04b 0b10 	orr.w	fp, fp, #16
  405258:	f01b 0f20 	tst.w	fp, #32
  40525c:	d0a1      	beq.n	4051a2 <_svfprintf_r+0x686>
  40525e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405260:	3507      	adds	r5, #7
  405262:	f025 0507 	bic.w	r5, r5, #7
  405266:	e9d5 2300 	ldrd	r2, r3, [r5]
  40526a:	2a00      	cmp	r2, #0
  40526c:	f105 0108 	add.w	r1, r5, #8
  405270:	461d      	mov	r5, r3
  405272:	f173 0300 	sbcs.w	r3, r3, #0
  405276:	910f      	str	r1, [sp, #60]	; 0x3c
  405278:	4614      	mov	r4, r2
  40527a:	daa6      	bge.n	4051ca <_svfprintf_r+0x6ae>
  40527c:	272d      	movs	r7, #45	; 0x2d
  40527e:	4264      	negs	r4, r4
  405280:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  405284:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  405288:	2301      	movs	r3, #1
  40528a:	e53d      	b.n	404d08 <_svfprintf_r+0x1ec>
  40528c:	9311      	str	r3, [sp, #68]	; 0x44
  40528e:	2a00      	cmp	r2, #0
  405290:	f040 8662 	bne.w	405f58 <_svfprintf_r+0x143c>
  405294:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405296:	3507      	adds	r5, #7
  405298:	f025 0307 	bic.w	r3, r5, #7
  40529c:	f103 0208 	add.w	r2, r3, #8
  4052a0:	920f      	str	r2, [sp, #60]	; 0x3c
  4052a2:	681a      	ldr	r2, [r3, #0]
  4052a4:	9215      	str	r2, [sp, #84]	; 0x54
  4052a6:	685b      	ldr	r3, [r3, #4]
  4052a8:	9314      	str	r3, [sp, #80]	; 0x50
  4052aa:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4052ac:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4052ae:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4052b2:	4628      	mov	r0, r5
  4052b4:	4621      	mov	r1, r4
  4052b6:	f04f 32ff 	mov.w	r2, #4294967295
  4052ba:	4b59      	ldr	r3, [pc, #356]	; (405420 <_svfprintf_r+0x904>)
  4052bc:	f7fe ff32 	bl	404124 <__aeabi_dcmpun>
  4052c0:	2800      	cmp	r0, #0
  4052c2:	f040 834a 	bne.w	40595a <_svfprintf_r+0xe3e>
  4052c6:	4628      	mov	r0, r5
  4052c8:	4621      	mov	r1, r4
  4052ca:	f04f 32ff 	mov.w	r2, #4294967295
  4052ce:	4b54      	ldr	r3, [pc, #336]	; (405420 <_svfprintf_r+0x904>)
  4052d0:	f7fe ff0a 	bl	4040e8 <__aeabi_dcmple>
  4052d4:	2800      	cmp	r0, #0
  4052d6:	f040 8340 	bne.w	40595a <_svfprintf_r+0xe3e>
  4052da:	a815      	add	r0, sp, #84	; 0x54
  4052dc:	c80d      	ldmia	r0, {r0, r2, r3}
  4052de:	9914      	ldr	r1, [sp, #80]	; 0x50
  4052e0:	f7fe fef8 	bl	4040d4 <__aeabi_dcmplt>
  4052e4:	2800      	cmp	r0, #0
  4052e6:	f040 8530 	bne.w	405d4a <_svfprintf_r+0x122e>
  4052ea:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4052ee:	4e4d      	ldr	r6, [pc, #308]	; (405424 <_svfprintf_r+0x908>)
  4052f0:	4b4d      	ldr	r3, [pc, #308]	; (405428 <_svfprintf_r+0x90c>)
  4052f2:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  4052f6:	9007      	str	r0, [sp, #28]
  4052f8:	9811      	ldr	r0, [sp, #68]	; 0x44
  4052fa:	2203      	movs	r2, #3
  4052fc:	2100      	movs	r1, #0
  4052fe:	9208      	str	r2, [sp, #32]
  405300:	910a      	str	r1, [sp, #40]	; 0x28
  405302:	2847      	cmp	r0, #71	; 0x47
  405304:	bfd8      	it	le
  405306:	461e      	movle	r6, r3
  405308:	920e      	str	r2, [sp, #56]	; 0x38
  40530a:	9112      	str	r1, [sp, #72]	; 0x48
  40530c:	e51e      	b.n	404d4c <_svfprintf_r+0x230>
  40530e:	f04b 0b08 	orr.w	fp, fp, #8
  405312:	f89a 3000 	ldrb.w	r3, [sl]
  405316:	e459      	b.n	404bcc <_svfprintf_r+0xb0>
  405318:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40531c:	2300      	movs	r3, #0
  40531e:	461c      	mov	r4, r3
  405320:	f81a 3b01 	ldrb.w	r3, [sl], #1
  405324:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  405328:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40532c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  405330:	2809      	cmp	r0, #9
  405332:	d9f5      	bls.n	405320 <_svfprintf_r+0x804>
  405334:	940d      	str	r4, [sp, #52]	; 0x34
  405336:	e44b      	b.n	404bd0 <_svfprintf_r+0xb4>
  405338:	f04b 0b10 	orr.w	fp, fp, #16
  40533c:	9311      	str	r3, [sp, #68]	; 0x44
  40533e:	f01b 0320 	ands.w	r3, fp, #32
  405342:	f43f ae1d 	beq.w	404f80 <_svfprintf_r+0x464>
  405346:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405348:	3507      	adds	r5, #7
  40534a:	f025 0307 	bic.w	r3, r5, #7
  40534e:	f103 0208 	add.w	r2, r3, #8
  405352:	e9d3 4500 	ldrd	r4, r5, [r3]
  405356:	920f      	str	r2, [sp, #60]	; 0x3c
  405358:	2300      	movs	r3, #0
  40535a:	e4d2      	b.n	404d02 <_svfprintf_r+0x1e6>
  40535c:	9311      	str	r3, [sp, #68]	; 0x44
  40535e:	2a00      	cmp	r2, #0
  405360:	f040 85e7 	bne.w	405f32 <_svfprintf_r+0x1416>
  405364:	9a11      	ldr	r2, [sp, #68]	; 0x44
  405366:	2a00      	cmp	r2, #0
  405368:	f43f aca3 	beq.w	404cb2 <_svfprintf_r+0x196>
  40536c:	2300      	movs	r3, #0
  40536e:	2101      	movs	r1, #1
  405370:	461f      	mov	r7, r3
  405372:	9108      	str	r1, [sp, #32]
  405374:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  405378:	f8cd b01c 	str.w	fp, [sp, #28]
  40537c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  405380:	930a      	str	r3, [sp, #40]	; 0x28
  405382:	9312      	str	r3, [sp, #72]	; 0x48
  405384:	910e      	str	r1, [sp, #56]	; 0x38
  405386:	ae28      	add	r6, sp, #160	; 0xa0
  405388:	e4e4      	b.n	404d54 <_svfprintf_r+0x238>
  40538a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40538c:	e534      	b.n	404df8 <_svfprintf_r+0x2dc>
  40538e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405390:	2b65      	cmp	r3, #101	; 0x65
  405392:	f340 80a7 	ble.w	4054e4 <_svfprintf_r+0x9c8>
  405396:	a815      	add	r0, sp, #84	; 0x54
  405398:	c80d      	ldmia	r0, {r0, r2, r3}
  40539a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40539c:	f7fe fe90 	bl	4040c0 <__aeabi_dcmpeq>
  4053a0:	2800      	cmp	r0, #0
  4053a2:	f000 8150 	beq.w	405646 <_svfprintf_r+0xb2a>
  4053a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4053a8:	4a20      	ldr	r2, [pc, #128]	; (40542c <_svfprintf_r+0x910>)
  4053aa:	f8c8 2000 	str.w	r2, [r8]
  4053ae:	3301      	adds	r3, #1
  4053b0:	3401      	adds	r4, #1
  4053b2:	2201      	movs	r2, #1
  4053b4:	2b07      	cmp	r3, #7
  4053b6:	9427      	str	r4, [sp, #156]	; 0x9c
  4053b8:	9326      	str	r3, [sp, #152]	; 0x98
  4053ba:	f8c8 2004 	str.w	r2, [r8, #4]
  4053be:	f300 836a 	bgt.w	405a96 <_svfprintf_r+0xf7a>
  4053c2:	f108 0808 	add.w	r8, r8, #8
  4053c6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4053c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4053ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4053cc:	4293      	cmp	r3, r2
  4053ce:	db03      	blt.n	4053d8 <_svfprintf_r+0x8bc>
  4053d0:	9b07      	ldr	r3, [sp, #28]
  4053d2:	07dd      	lsls	r5, r3, #31
  4053d4:	f57f ad82 	bpl.w	404edc <_svfprintf_r+0x3c0>
  4053d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4053da:	9919      	ldr	r1, [sp, #100]	; 0x64
  4053dc:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4053de:	f8c8 2000 	str.w	r2, [r8]
  4053e2:	3301      	adds	r3, #1
  4053e4:	440c      	add	r4, r1
  4053e6:	2b07      	cmp	r3, #7
  4053e8:	f8c8 1004 	str.w	r1, [r8, #4]
  4053ec:	9427      	str	r4, [sp, #156]	; 0x9c
  4053ee:	9326      	str	r3, [sp, #152]	; 0x98
  4053f0:	f300 839e 	bgt.w	405b30 <_svfprintf_r+0x1014>
  4053f4:	f108 0808 	add.w	r8, r8, #8
  4053f8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4053fa:	1e5e      	subs	r6, r3, #1
  4053fc:	2e00      	cmp	r6, #0
  4053fe:	f77f ad6d 	ble.w	404edc <_svfprintf_r+0x3c0>
  405402:	2e10      	cmp	r6, #16
  405404:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405406:	4d0a      	ldr	r5, [pc, #40]	; (405430 <_svfprintf_r+0x914>)
  405408:	f340 81f5 	ble.w	4057f6 <_svfprintf_r+0xcda>
  40540c:	4622      	mov	r2, r4
  40540e:	2710      	movs	r7, #16
  405410:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  405414:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  405416:	e013      	b.n	405440 <_svfprintf_r+0x924>
  405418:	00408864 	.word	0x00408864
  40541c:	00408850 	.word	0x00408850
  405420:	7fefffff 	.word	0x7fefffff
  405424:	00408844 	.word	0x00408844
  405428:	00408840 	.word	0x00408840
  40542c:	00408880 	.word	0x00408880
  405430:	00408894 	.word	0x00408894
  405434:	f108 0808 	add.w	r8, r8, #8
  405438:	3e10      	subs	r6, #16
  40543a:	2e10      	cmp	r6, #16
  40543c:	f340 81da 	ble.w	4057f4 <_svfprintf_r+0xcd8>
  405440:	3301      	adds	r3, #1
  405442:	3210      	adds	r2, #16
  405444:	2b07      	cmp	r3, #7
  405446:	9227      	str	r2, [sp, #156]	; 0x9c
  405448:	9326      	str	r3, [sp, #152]	; 0x98
  40544a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40544e:	ddf1      	ble.n	405434 <_svfprintf_r+0x918>
  405450:	aa25      	add	r2, sp, #148	; 0x94
  405452:	4621      	mov	r1, r4
  405454:	4658      	mov	r0, fp
  405456:	f002 fefd 	bl	408254 <__ssprint_r>
  40545a:	2800      	cmp	r0, #0
  40545c:	f47f ac30 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405460:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405462:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405464:	46c8      	mov	r8, r9
  405466:	e7e7      	b.n	405438 <_svfprintf_r+0x91c>
  405468:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40546a:	9a08      	ldr	r2, [sp, #32]
  40546c:	1a9f      	subs	r7, r3, r2
  40546e:	2f00      	cmp	r7, #0
  405470:	f77f ace5 	ble.w	404e3e <_svfprintf_r+0x322>
  405474:	2f10      	cmp	r7, #16
  405476:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405478:	4db6      	ldr	r5, [pc, #728]	; (405754 <_svfprintf_r+0xc38>)
  40547a:	dd27      	ble.n	4054cc <_svfprintf_r+0x9b0>
  40547c:	4642      	mov	r2, r8
  40547e:	4621      	mov	r1, r4
  405480:	46b0      	mov	r8, r6
  405482:	f04f 0b10 	mov.w	fp, #16
  405486:	462e      	mov	r6, r5
  405488:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40548a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40548c:	e004      	b.n	405498 <_svfprintf_r+0x97c>
  40548e:	3f10      	subs	r7, #16
  405490:	2f10      	cmp	r7, #16
  405492:	f102 0208 	add.w	r2, r2, #8
  405496:	dd15      	ble.n	4054c4 <_svfprintf_r+0x9a8>
  405498:	3301      	adds	r3, #1
  40549a:	3110      	adds	r1, #16
  40549c:	2b07      	cmp	r3, #7
  40549e:	9127      	str	r1, [sp, #156]	; 0x9c
  4054a0:	9326      	str	r3, [sp, #152]	; 0x98
  4054a2:	e882 0840 	stmia.w	r2, {r6, fp}
  4054a6:	ddf2      	ble.n	40548e <_svfprintf_r+0x972>
  4054a8:	aa25      	add	r2, sp, #148	; 0x94
  4054aa:	4629      	mov	r1, r5
  4054ac:	4620      	mov	r0, r4
  4054ae:	f002 fed1 	bl	408254 <__ssprint_r>
  4054b2:	2800      	cmp	r0, #0
  4054b4:	f47f ac04 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  4054b8:	3f10      	subs	r7, #16
  4054ba:	2f10      	cmp	r7, #16
  4054bc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4054be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4054c0:	464a      	mov	r2, r9
  4054c2:	dce9      	bgt.n	405498 <_svfprintf_r+0x97c>
  4054c4:	4635      	mov	r5, r6
  4054c6:	460c      	mov	r4, r1
  4054c8:	4646      	mov	r6, r8
  4054ca:	4690      	mov	r8, r2
  4054cc:	3301      	adds	r3, #1
  4054ce:	443c      	add	r4, r7
  4054d0:	2b07      	cmp	r3, #7
  4054d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4054d4:	9326      	str	r3, [sp, #152]	; 0x98
  4054d6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4054da:	f300 8232 	bgt.w	405942 <_svfprintf_r+0xe26>
  4054de:	f108 0808 	add.w	r8, r8, #8
  4054e2:	e4ac      	b.n	404e3e <_svfprintf_r+0x322>
  4054e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4054e6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4054e8:	2b01      	cmp	r3, #1
  4054ea:	f340 81fe 	ble.w	4058ea <_svfprintf_r+0xdce>
  4054ee:	3701      	adds	r7, #1
  4054f0:	3401      	adds	r4, #1
  4054f2:	2301      	movs	r3, #1
  4054f4:	2f07      	cmp	r7, #7
  4054f6:	9427      	str	r4, [sp, #156]	; 0x9c
  4054f8:	9726      	str	r7, [sp, #152]	; 0x98
  4054fa:	f8c8 6000 	str.w	r6, [r8]
  4054fe:	f8c8 3004 	str.w	r3, [r8, #4]
  405502:	f300 8203 	bgt.w	40590c <_svfprintf_r+0xdf0>
  405506:	f108 0808 	add.w	r8, r8, #8
  40550a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40550c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40550e:	f8c8 3000 	str.w	r3, [r8]
  405512:	3701      	adds	r7, #1
  405514:	4414      	add	r4, r2
  405516:	2f07      	cmp	r7, #7
  405518:	9427      	str	r4, [sp, #156]	; 0x9c
  40551a:	9726      	str	r7, [sp, #152]	; 0x98
  40551c:	f8c8 2004 	str.w	r2, [r8, #4]
  405520:	f300 8200 	bgt.w	405924 <_svfprintf_r+0xe08>
  405524:	f108 0808 	add.w	r8, r8, #8
  405528:	a815      	add	r0, sp, #84	; 0x54
  40552a:	c80d      	ldmia	r0, {r0, r2, r3}
  40552c:	9914      	ldr	r1, [sp, #80]	; 0x50
  40552e:	f7fe fdc7 	bl	4040c0 <__aeabi_dcmpeq>
  405532:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405534:	2800      	cmp	r0, #0
  405536:	f040 8101 	bne.w	40573c <_svfprintf_r+0xc20>
  40553a:	3b01      	subs	r3, #1
  40553c:	3701      	adds	r7, #1
  40553e:	3601      	adds	r6, #1
  405540:	441c      	add	r4, r3
  405542:	2f07      	cmp	r7, #7
  405544:	9726      	str	r7, [sp, #152]	; 0x98
  405546:	9427      	str	r4, [sp, #156]	; 0x9c
  405548:	f8c8 6000 	str.w	r6, [r8]
  40554c:	f8c8 3004 	str.w	r3, [r8, #4]
  405550:	f300 8127 	bgt.w	4057a2 <_svfprintf_r+0xc86>
  405554:	f108 0808 	add.w	r8, r8, #8
  405558:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  40555a:	f8c8 2004 	str.w	r2, [r8, #4]
  40555e:	3701      	adds	r7, #1
  405560:	4414      	add	r4, r2
  405562:	ab21      	add	r3, sp, #132	; 0x84
  405564:	2f07      	cmp	r7, #7
  405566:	9427      	str	r4, [sp, #156]	; 0x9c
  405568:	9726      	str	r7, [sp, #152]	; 0x98
  40556a:	f8c8 3000 	str.w	r3, [r8]
  40556e:	f77f acb3 	ble.w	404ed8 <_svfprintf_r+0x3bc>
  405572:	aa25      	add	r2, sp, #148	; 0x94
  405574:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405576:	980c      	ldr	r0, [sp, #48]	; 0x30
  405578:	f002 fe6c 	bl	408254 <__ssprint_r>
  40557c:	2800      	cmp	r0, #0
  40557e:	f47f ab9f 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405582:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405584:	46c8      	mov	r8, r9
  405586:	e4a9      	b.n	404edc <_svfprintf_r+0x3c0>
  405588:	aa25      	add	r2, sp, #148	; 0x94
  40558a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40558c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40558e:	f002 fe61 	bl	408254 <__ssprint_r>
  405592:	2800      	cmp	r0, #0
  405594:	f43f aceb 	beq.w	404f6e <_svfprintf_r+0x452>
  405598:	f7ff bb92 	b.w	404cc0 <_svfprintf_r+0x1a4>
  40559c:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4055a0:	2b01      	cmp	r3, #1
  4055a2:	f000 8134 	beq.w	40580e <_svfprintf_r+0xcf2>
  4055a6:	2b02      	cmp	r3, #2
  4055a8:	d125      	bne.n	4055f6 <_svfprintf_r+0xada>
  4055aa:	f8cd b01c 	str.w	fp, [sp, #28]
  4055ae:	2400      	movs	r4, #0
  4055b0:	2500      	movs	r5, #0
  4055b2:	e61e      	b.n	4051f2 <_svfprintf_r+0x6d6>
  4055b4:	aa25      	add	r2, sp, #148	; 0x94
  4055b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4055b8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4055ba:	f002 fe4b 	bl	408254 <__ssprint_r>
  4055be:	2800      	cmp	r0, #0
  4055c0:	f47f ab7e 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  4055c4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4055c6:	46c8      	mov	r8, r9
  4055c8:	e475      	b.n	404eb6 <_svfprintf_r+0x39a>
  4055ca:	aa25      	add	r2, sp, #148	; 0x94
  4055cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4055ce:	980c      	ldr	r0, [sp, #48]	; 0x30
  4055d0:	f002 fe40 	bl	408254 <__ssprint_r>
  4055d4:	2800      	cmp	r0, #0
  4055d6:	f47f ab73 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  4055da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4055dc:	46c8      	mov	r8, r9
  4055de:	e41b      	b.n	404e18 <_svfprintf_r+0x2fc>
  4055e0:	aa25      	add	r2, sp, #148	; 0x94
  4055e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4055e4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4055e6:	f002 fe35 	bl	408254 <__ssprint_r>
  4055ea:	2800      	cmp	r0, #0
  4055ec:	f47f ab68 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  4055f0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4055f2:	46c8      	mov	r8, r9
  4055f4:	e420      	b.n	404e38 <_svfprintf_r+0x31c>
  4055f6:	f8cd b01c 	str.w	fp, [sp, #28]
  4055fa:	2400      	movs	r4, #0
  4055fc:	2500      	movs	r5, #0
  4055fe:	4649      	mov	r1, r9
  405600:	e000      	b.n	405604 <_svfprintf_r+0xae8>
  405602:	4631      	mov	r1, r6
  405604:	08e2      	lsrs	r2, r4, #3
  405606:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  40560a:	08e8      	lsrs	r0, r5, #3
  40560c:	f004 0307 	and.w	r3, r4, #7
  405610:	4605      	mov	r5, r0
  405612:	4614      	mov	r4, r2
  405614:	3330      	adds	r3, #48	; 0x30
  405616:	ea54 0205 	orrs.w	r2, r4, r5
  40561a:	f801 3c01 	strb.w	r3, [r1, #-1]
  40561e:	f101 36ff 	add.w	r6, r1, #4294967295
  405622:	d1ee      	bne.n	405602 <_svfprintf_r+0xae6>
  405624:	9a07      	ldr	r2, [sp, #28]
  405626:	07d2      	lsls	r2, r2, #31
  405628:	f57f adf3 	bpl.w	405212 <_svfprintf_r+0x6f6>
  40562c:	2b30      	cmp	r3, #48	; 0x30
  40562e:	f43f adf0 	beq.w	405212 <_svfprintf_r+0x6f6>
  405632:	3902      	subs	r1, #2
  405634:	2330      	movs	r3, #48	; 0x30
  405636:	f806 3c01 	strb.w	r3, [r6, #-1]
  40563a:	eba9 0301 	sub.w	r3, r9, r1
  40563e:	930e      	str	r3, [sp, #56]	; 0x38
  405640:	460e      	mov	r6, r1
  405642:	f7ff bb7b 	b.w	404d3c <_svfprintf_r+0x220>
  405646:	991f      	ldr	r1, [sp, #124]	; 0x7c
  405648:	2900      	cmp	r1, #0
  40564a:	f340 822e 	ble.w	405aaa <_svfprintf_r+0xf8e>
  40564e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405650:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  405652:	4293      	cmp	r3, r2
  405654:	bfa8      	it	ge
  405656:	4613      	movge	r3, r2
  405658:	2b00      	cmp	r3, #0
  40565a:	461f      	mov	r7, r3
  40565c:	dd0d      	ble.n	40567a <_svfprintf_r+0xb5e>
  40565e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405660:	f8c8 6000 	str.w	r6, [r8]
  405664:	3301      	adds	r3, #1
  405666:	443c      	add	r4, r7
  405668:	2b07      	cmp	r3, #7
  40566a:	9427      	str	r4, [sp, #156]	; 0x9c
  40566c:	f8c8 7004 	str.w	r7, [r8, #4]
  405670:	9326      	str	r3, [sp, #152]	; 0x98
  405672:	f300 831f 	bgt.w	405cb4 <_svfprintf_r+0x1198>
  405676:	f108 0808 	add.w	r8, r8, #8
  40567a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40567c:	2f00      	cmp	r7, #0
  40567e:	bfa8      	it	ge
  405680:	1bdb      	subge	r3, r3, r7
  405682:	2b00      	cmp	r3, #0
  405684:	461f      	mov	r7, r3
  405686:	f340 80d6 	ble.w	405836 <_svfprintf_r+0xd1a>
  40568a:	2f10      	cmp	r7, #16
  40568c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40568e:	4d31      	ldr	r5, [pc, #196]	; (405754 <_svfprintf_r+0xc38>)
  405690:	f340 81ed 	ble.w	405a6e <_svfprintf_r+0xf52>
  405694:	4642      	mov	r2, r8
  405696:	4621      	mov	r1, r4
  405698:	46b0      	mov	r8, r6
  40569a:	f04f 0b10 	mov.w	fp, #16
  40569e:	462e      	mov	r6, r5
  4056a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4056a2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4056a4:	e004      	b.n	4056b0 <_svfprintf_r+0xb94>
  4056a6:	3208      	adds	r2, #8
  4056a8:	3f10      	subs	r7, #16
  4056aa:	2f10      	cmp	r7, #16
  4056ac:	f340 81db 	ble.w	405a66 <_svfprintf_r+0xf4a>
  4056b0:	3301      	adds	r3, #1
  4056b2:	3110      	adds	r1, #16
  4056b4:	2b07      	cmp	r3, #7
  4056b6:	9127      	str	r1, [sp, #156]	; 0x9c
  4056b8:	9326      	str	r3, [sp, #152]	; 0x98
  4056ba:	e882 0840 	stmia.w	r2, {r6, fp}
  4056be:	ddf2      	ble.n	4056a6 <_svfprintf_r+0xb8a>
  4056c0:	aa25      	add	r2, sp, #148	; 0x94
  4056c2:	4629      	mov	r1, r5
  4056c4:	4620      	mov	r0, r4
  4056c6:	f002 fdc5 	bl	408254 <__ssprint_r>
  4056ca:	2800      	cmp	r0, #0
  4056cc:	f47f aaf8 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  4056d0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4056d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4056d4:	464a      	mov	r2, r9
  4056d6:	e7e7      	b.n	4056a8 <_svfprintf_r+0xb8c>
  4056d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4056da:	930e      	str	r3, [sp, #56]	; 0x38
  4056dc:	464e      	mov	r6, r9
  4056de:	f7ff bb2d 	b.w	404d3c <_svfprintf_r+0x220>
  4056e2:	2d00      	cmp	r5, #0
  4056e4:	bf08      	it	eq
  4056e6:	2c0a      	cmpeq	r4, #10
  4056e8:	f0c0 808f 	bcc.w	40580a <_svfprintf_r+0xcee>
  4056ec:	464e      	mov	r6, r9
  4056ee:	4620      	mov	r0, r4
  4056f0:	4629      	mov	r1, r5
  4056f2:	220a      	movs	r2, #10
  4056f4:	2300      	movs	r3, #0
  4056f6:	f002 fef3 	bl	4084e0 <__aeabi_uldivmod>
  4056fa:	3230      	adds	r2, #48	; 0x30
  4056fc:	f806 2d01 	strb.w	r2, [r6, #-1]!
  405700:	4620      	mov	r0, r4
  405702:	4629      	mov	r1, r5
  405704:	2300      	movs	r3, #0
  405706:	220a      	movs	r2, #10
  405708:	f002 feea 	bl	4084e0 <__aeabi_uldivmod>
  40570c:	4604      	mov	r4, r0
  40570e:	460d      	mov	r5, r1
  405710:	ea54 0305 	orrs.w	r3, r4, r5
  405714:	d1eb      	bne.n	4056ee <_svfprintf_r+0xbd2>
  405716:	eba9 0306 	sub.w	r3, r9, r6
  40571a:	930e      	str	r3, [sp, #56]	; 0x38
  40571c:	f7ff bb0e 	b.w	404d3c <_svfprintf_r+0x220>
  405720:	aa25      	add	r2, sp, #148	; 0x94
  405722:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405724:	980c      	ldr	r0, [sp, #48]	; 0x30
  405726:	f002 fd95 	bl	408254 <__ssprint_r>
  40572a:	2800      	cmp	r0, #0
  40572c:	f47f aac8 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405730:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  405734:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405736:	46c8      	mov	r8, r9
  405738:	f7ff bb5e 	b.w	404df8 <_svfprintf_r+0x2dc>
  40573c:	1e5e      	subs	r6, r3, #1
  40573e:	2e00      	cmp	r6, #0
  405740:	f77f af0a 	ble.w	405558 <_svfprintf_r+0xa3c>
  405744:	2e10      	cmp	r6, #16
  405746:	4d03      	ldr	r5, [pc, #12]	; (405754 <_svfprintf_r+0xc38>)
  405748:	dd22      	ble.n	405790 <_svfprintf_r+0xc74>
  40574a:	4622      	mov	r2, r4
  40574c:	f04f 0b10 	mov.w	fp, #16
  405750:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405752:	e006      	b.n	405762 <_svfprintf_r+0xc46>
  405754:	00408894 	.word	0x00408894
  405758:	3e10      	subs	r6, #16
  40575a:	2e10      	cmp	r6, #16
  40575c:	f108 0808 	add.w	r8, r8, #8
  405760:	dd15      	ble.n	40578e <_svfprintf_r+0xc72>
  405762:	3701      	adds	r7, #1
  405764:	3210      	adds	r2, #16
  405766:	2f07      	cmp	r7, #7
  405768:	9227      	str	r2, [sp, #156]	; 0x9c
  40576a:	9726      	str	r7, [sp, #152]	; 0x98
  40576c:	e888 0820 	stmia.w	r8, {r5, fp}
  405770:	ddf2      	ble.n	405758 <_svfprintf_r+0xc3c>
  405772:	aa25      	add	r2, sp, #148	; 0x94
  405774:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405776:	4620      	mov	r0, r4
  405778:	f002 fd6c 	bl	408254 <__ssprint_r>
  40577c:	2800      	cmp	r0, #0
  40577e:	f47f aa9f 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405782:	3e10      	subs	r6, #16
  405784:	2e10      	cmp	r6, #16
  405786:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405788:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40578a:	46c8      	mov	r8, r9
  40578c:	dce9      	bgt.n	405762 <_svfprintf_r+0xc46>
  40578e:	4614      	mov	r4, r2
  405790:	3701      	adds	r7, #1
  405792:	4434      	add	r4, r6
  405794:	2f07      	cmp	r7, #7
  405796:	9427      	str	r4, [sp, #156]	; 0x9c
  405798:	9726      	str	r7, [sp, #152]	; 0x98
  40579a:	e888 0060 	stmia.w	r8, {r5, r6}
  40579e:	f77f aed9 	ble.w	405554 <_svfprintf_r+0xa38>
  4057a2:	aa25      	add	r2, sp, #148	; 0x94
  4057a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4057a6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4057a8:	f002 fd54 	bl	408254 <__ssprint_r>
  4057ac:	2800      	cmp	r0, #0
  4057ae:	f47f aa87 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  4057b2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4057b4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4057b6:	46c8      	mov	r8, r9
  4057b8:	e6ce      	b.n	405558 <_svfprintf_r+0xa3c>
  4057ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4057bc:	6814      	ldr	r4, [r2, #0]
  4057be:	4613      	mov	r3, r2
  4057c0:	3304      	adds	r3, #4
  4057c2:	17e5      	asrs	r5, r4, #31
  4057c4:	930f      	str	r3, [sp, #60]	; 0x3c
  4057c6:	4622      	mov	r2, r4
  4057c8:	462b      	mov	r3, r5
  4057ca:	e4fa      	b.n	4051c2 <_svfprintf_r+0x6a6>
  4057cc:	3204      	adds	r2, #4
  4057ce:	681c      	ldr	r4, [r3, #0]
  4057d0:	920f      	str	r2, [sp, #60]	; 0x3c
  4057d2:	2301      	movs	r3, #1
  4057d4:	2500      	movs	r5, #0
  4057d6:	f7ff ba94 	b.w	404d02 <_svfprintf_r+0x1e6>
  4057da:	681c      	ldr	r4, [r3, #0]
  4057dc:	3304      	adds	r3, #4
  4057de:	930f      	str	r3, [sp, #60]	; 0x3c
  4057e0:	2500      	movs	r5, #0
  4057e2:	e421      	b.n	405028 <_svfprintf_r+0x50c>
  4057e4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4057e6:	460a      	mov	r2, r1
  4057e8:	3204      	adds	r2, #4
  4057ea:	680c      	ldr	r4, [r1, #0]
  4057ec:	920f      	str	r2, [sp, #60]	; 0x3c
  4057ee:	2500      	movs	r5, #0
  4057f0:	f7ff ba87 	b.w	404d02 <_svfprintf_r+0x1e6>
  4057f4:	4614      	mov	r4, r2
  4057f6:	3301      	adds	r3, #1
  4057f8:	4434      	add	r4, r6
  4057fa:	2b07      	cmp	r3, #7
  4057fc:	9427      	str	r4, [sp, #156]	; 0x9c
  4057fe:	9326      	str	r3, [sp, #152]	; 0x98
  405800:	e888 0060 	stmia.w	r8, {r5, r6}
  405804:	f77f ab68 	ble.w	404ed8 <_svfprintf_r+0x3bc>
  405808:	e6b3      	b.n	405572 <_svfprintf_r+0xa56>
  40580a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40580e:	f8cd b01c 	str.w	fp, [sp, #28]
  405812:	ae42      	add	r6, sp, #264	; 0x108
  405814:	3430      	adds	r4, #48	; 0x30
  405816:	2301      	movs	r3, #1
  405818:	f806 4d41 	strb.w	r4, [r6, #-65]!
  40581c:	930e      	str	r3, [sp, #56]	; 0x38
  40581e:	f7ff ba8d 	b.w	404d3c <_svfprintf_r+0x220>
  405822:	aa25      	add	r2, sp, #148	; 0x94
  405824:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405826:	980c      	ldr	r0, [sp, #48]	; 0x30
  405828:	f002 fd14 	bl	408254 <__ssprint_r>
  40582c:	2800      	cmp	r0, #0
  40582e:	f47f aa47 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405832:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405834:	46c8      	mov	r8, r9
  405836:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  405838:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40583a:	429a      	cmp	r2, r3
  40583c:	db44      	blt.n	4058c8 <_svfprintf_r+0xdac>
  40583e:	9b07      	ldr	r3, [sp, #28]
  405840:	07d9      	lsls	r1, r3, #31
  405842:	d441      	bmi.n	4058c8 <_svfprintf_r+0xdac>
  405844:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405846:	9812      	ldr	r0, [sp, #72]	; 0x48
  405848:	1a9a      	subs	r2, r3, r2
  40584a:	1a1d      	subs	r5, r3, r0
  40584c:	4295      	cmp	r5, r2
  40584e:	bfa8      	it	ge
  405850:	4615      	movge	r5, r2
  405852:	2d00      	cmp	r5, #0
  405854:	dd0e      	ble.n	405874 <_svfprintf_r+0xd58>
  405856:	9926      	ldr	r1, [sp, #152]	; 0x98
  405858:	f8c8 5004 	str.w	r5, [r8, #4]
  40585c:	3101      	adds	r1, #1
  40585e:	4406      	add	r6, r0
  405860:	442c      	add	r4, r5
  405862:	2907      	cmp	r1, #7
  405864:	f8c8 6000 	str.w	r6, [r8]
  405868:	9427      	str	r4, [sp, #156]	; 0x9c
  40586a:	9126      	str	r1, [sp, #152]	; 0x98
  40586c:	f300 823b 	bgt.w	405ce6 <_svfprintf_r+0x11ca>
  405870:	f108 0808 	add.w	r8, r8, #8
  405874:	2d00      	cmp	r5, #0
  405876:	bfac      	ite	ge
  405878:	1b56      	subge	r6, r2, r5
  40587a:	4616      	movlt	r6, r2
  40587c:	2e00      	cmp	r6, #0
  40587e:	f77f ab2d 	ble.w	404edc <_svfprintf_r+0x3c0>
  405882:	2e10      	cmp	r6, #16
  405884:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405886:	4db0      	ldr	r5, [pc, #704]	; (405b48 <_svfprintf_r+0x102c>)
  405888:	ddb5      	ble.n	4057f6 <_svfprintf_r+0xcda>
  40588a:	4622      	mov	r2, r4
  40588c:	2710      	movs	r7, #16
  40588e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  405892:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  405894:	e004      	b.n	4058a0 <_svfprintf_r+0xd84>
  405896:	f108 0808 	add.w	r8, r8, #8
  40589a:	3e10      	subs	r6, #16
  40589c:	2e10      	cmp	r6, #16
  40589e:	dda9      	ble.n	4057f4 <_svfprintf_r+0xcd8>
  4058a0:	3301      	adds	r3, #1
  4058a2:	3210      	adds	r2, #16
  4058a4:	2b07      	cmp	r3, #7
  4058a6:	9227      	str	r2, [sp, #156]	; 0x9c
  4058a8:	9326      	str	r3, [sp, #152]	; 0x98
  4058aa:	e888 00a0 	stmia.w	r8, {r5, r7}
  4058ae:	ddf2      	ble.n	405896 <_svfprintf_r+0xd7a>
  4058b0:	aa25      	add	r2, sp, #148	; 0x94
  4058b2:	4621      	mov	r1, r4
  4058b4:	4658      	mov	r0, fp
  4058b6:	f002 fccd 	bl	408254 <__ssprint_r>
  4058ba:	2800      	cmp	r0, #0
  4058bc:	f47f aa00 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  4058c0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4058c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4058c4:	46c8      	mov	r8, r9
  4058c6:	e7e8      	b.n	40589a <_svfprintf_r+0xd7e>
  4058c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4058ca:	9819      	ldr	r0, [sp, #100]	; 0x64
  4058cc:	991a      	ldr	r1, [sp, #104]	; 0x68
  4058ce:	f8c8 1000 	str.w	r1, [r8]
  4058d2:	3301      	adds	r3, #1
  4058d4:	4404      	add	r4, r0
  4058d6:	2b07      	cmp	r3, #7
  4058d8:	9427      	str	r4, [sp, #156]	; 0x9c
  4058da:	f8c8 0004 	str.w	r0, [r8, #4]
  4058de:	9326      	str	r3, [sp, #152]	; 0x98
  4058e0:	f300 81f5 	bgt.w	405cce <_svfprintf_r+0x11b2>
  4058e4:	f108 0808 	add.w	r8, r8, #8
  4058e8:	e7ac      	b.n	405844 <_svfprintf_r+0xd28>
  4058ea:	9b07      	ldr	r3, [sp, #28]
  4058ec:	07da      	lsls	r2, r3, #31
  4058ee:	f53f adfe 	bmi.w	4054ee <_svfprintf_r+0x9d2>
  4058f2:	3701      	adds	r7, #1
  4058f4:	3401      	adds	r4, #1
  4058f6:	2301      	movs	r3, #1
  4058f8:	2f07      	cmp	r7, #7
  4058fa:	9427      	str	r4, [sp, #156]	; 0x9c
  4058fc:	9726      	str	r7, [sp, #152]	; 0x98
  4058fe:	f8c8 6000 	str.w	r6, [r8]
  405902:	f8c8 3004 	str.w	r3, [r8, #4]
  405906:	f77f ae25 	ble.w	405554 <_svfprintf_r+0xa38>
  40590a:	e74a      	b.n	4057a2 <_svfprintf_r+0xc86>
  40590c:	aa25      	add	r2, sp, #148	; 0x94
  40590e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405910:	980c      	ldr	r0, [sp, #48]	; 0x30
  405912:	f002 fc9f 	bl	408254 <__ssprint_r>
  405916:	2800      	cmp	r0, #0
  405918:	f47f a9d2 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  40591c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40591e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  405920:	46c8      	mov	r8, r9
  405922:	e5f2      	b.n	40550a <_svfprintf_r+0x9ee>
  405924:	aa25      	add	r2, sp, #148	; 0x94
  405926:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405928:	980c      	ldr	r0, [sp, #48]	; 0x30
  40592a:	f002 fc93 	bl	408254 <__ssprint_r>
  40592e:	2800      	cmp	r0, #0
  405930:	f47f a9c6 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405934:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405936:	9f26      	ldr	r7, [sp, #152]	; 0x98
  405938:	46c8      	mov	r8, r9
  40593a:	e5f5      	b.n	405528 <_svfprintf_r+0xa0c>
  40593c:	464e      	mov	r6, r9
  40593e:	f7ff b9fd 	b.w	404d3c <_svfprintf_r+0x220>
  405942:	aa25      	add	r2, sp, #148	; 0x94
  405944:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405946:	980c      	ldr	r0, [sp, #48]	; 0x30
  405948:	f002 fc84 	bl	408254 <__ssprint_r>
  40594c:	2800      	cmp	r0, #0
  40594e:	f47f a9b7 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405952:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405954:	46c8      	mov	r8, r9
  405956:	f7ff ba72 	b.w	404e3e <_svfprintf_r+0x322>
  40595a:	9c15      	ldr	r4, [sp, #84]	; 0x54
  40595c:	4622      	mov	r2, r4
  40595e:	4620      	mov	r0, r4
  405960:	9c14      	ldr	r4, [sp, #80]	; 0x50
  405962:	4623      	mov	r3, r4
  405964:	4621      	mov	r1, r4
  405966:	f7fe fbdd 	bl	404124 <__aeabi_dcmpun>
  40596a:	2800      	cmp	r0, #0
  40596c:	f040 8286 	bne.w	405e7c <_svfprintf_r+0x1360>
  405970:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405972:	3301      	adds	r3, #1
  405974:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405976:	f023 0320 	bic.w	r3, r3, #32
  40597a:	930e      	str	r3, [sp, #56]	; 0x38
  40597c:	f000 81e2 	beq.w	405d44 <_svfprintf_r+0x1228>
  405980:	2b47      	cmp	r3, #71	; 0x47
  405982:	f000 811e 	beq.w	405bc2 <_svfprintf_r+0x10a6>
  405986:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  40598a:	9307      	str	r3, [sp, #28]
  40598c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40598e:	1e1f      	subs	r7, r3, #0
  405990:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405992:	9308      	str	r3, [sp, #32]
  405994:	bfbb      	ittet	lt
  405996:	463b      	movlt	r3, r7
  405998:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  40599c:	2300      	movge	r3, #0
  40599e:	232d      	movlt	r3, #45	; 0x2d
  4059a0:	9310      	str	r3, [sp, #64]	; 0x40
  4059a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4059a4:	2b66      	cmp	r3, #102	; 0x66
  4059a6:	f000 81bb 	beq.w	405d20 <_svfprintf_r+0x1204>
  4059aa:	2b46      	cmp	r3, #70	; 0x46
  4059ac:	f000 80df 	beq.w	405b6e <_svfprintf_r+0x1052>
  4059b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4059b2:	9a08      	ldr	r2, [sp, #32]
  4059b4:	2b45      	cmp	r3, #69	; 0x45
  4059b6:	bf0c      	ite	eq
  4059b8:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  4059ba:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  4059bc:	a823      	add	r0, sp, #140	; 0x8c
  4059be:	a920      	add	r1, sp, #128	; 0x80
  4059c0:	bf08      	it	eq
  4059c2:	1c5d      	addeq	r5, r3, #1
  4059c4:	9004      	str	r0, [sp, #16]
  4059c6:	9103      	str	r1, [sp, #12]
  4059c8:	a81f      	add	r0, sp, #124	; 0x7c
  4059ca:	2102      	movs	r1, #2
  4059cc:	463b      	mov	r3, r7
  4059ce:	9002      	str	r0, [sp, #8]
  4059d0:	9501      	str	r5, [sp, #4]
  4059d2:	9100      	str	r1, [sp, #0]
  4059d4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4059d6:	f000 fb73 	bl	4060c0 <_dtoa_r>
  4059da:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4059dc:	2b67      	cmp	r3, #103	; 0x67
  4059de:	4606      	mov	r6, r0
  4059e0:	f040 81e0 	bne.w	405da4 <_svfprintf_r+0x1288>
  4059e4:	f01b 0f01 	tst.w	fp, #1
  4059e8:	f000 8246 	beq.w	405e78 <_svfprintf_r+0x135c>
  4059ec:	1974      	adds	r4, r6, r5
  4059ee:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4059f0:	9808      	ldr	r0, [sp, #32]
  4059f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4059f4:	4639      	mov	r1, r7
  4059f6:	f7fe fb63 	bl	4040c0 <__aeabi_dcmpeq>
  4059fa:	2800      	cmp	r0, #0
  4059fc:	f040 8165 	bne.w	405cca <_svfprintf_r+0x11ae>
  405a00:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  405a02:	42a3      	cmp	r3, r4
  405a04:	d206      	bcs.n	405a14 <_svfprintf_r+0xef8>
  405a06:	2130      	movs	r1, #48	; 0x30
  405a08:	1c5a      	adds	r2, r3, #1
  405a0a:	9223      	str	r2, [sp, #140]	; 0x8c
  405a0c:	7019      	strb	r1, [r3, #0]
  405a0e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  405a10:	429c      	cmp	r4, r3
  405a12:	d8f9      	bhi.n	405a08 <_svfprintf_r+0xeec>
  405a14:	1b9b      	subs	r3, r3, r6
  405a16:	9313      	str	r3, [sp, #76]	; 0x4c
  405a18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405a1a:	2b47      	cmp	r3, #71	; 0x47
  405a1c:	f000 80e9 	beq.w	405bf2 <_svfprintf_r+0x10d6>
  405a20:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405a22:	2b65      	cmp	r3, #101	; 0x65
  405a24:	f340 81cd 	ble.w	405dc2 <_svfprintf_r+0x12a6>
  405a28:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405a2a:	2b66      	cmp	r3, #102	; 0x66
  405a2c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405a2e:	9312      	str	r3, [sp, #72]	; 0x48
  405a30:	f000 819e 	beq.w	405d70 <_svfprintf_r+0x1254>
  405a34:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405a36:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405a38:	4619      	mov	r1, r3
  405a3a:	4291      	cmp	r1, r2
  405a3c:	f300 818a 	bgt.w	405d54 <_svfprintf_r+0x1238>
  405a40:	f01b 0f01 	tst.w	fp, #1
  405a44:	f040 8213 	bne.w	405e6e <_svfprintf_r+0x1352>
  405a48:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  405a4c:	9308      	str	r3, [sp, #32]
  405a4e:	2367      	movs	r3, #103	; 0x67
  405a50:	920e      	str	r2, [sp, #56]	; 0x38
  405a52:	9311      	str	r3, [sp, #68]	; 0x44
  405a54:	9b10      	ldr	r3, [sp, #64]	; 0x40
  405a56:	2b00      	cmp	r3, #0
  405a58:	f040 80c4 	bne.w	405be4 <_svfprintf_r+0x10c8>
  405a5c:	930a      	str	r3, [sp, #40]	; 0x28
  405a5e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  405a62:	f7ff b973 	b.w	404d4c <_svfprintf_r+0x230>
  405a66:	4635      	mov	r5, r6
  405a68:	460c      	mov	r4, r1
  405a6a:	4646      	mov	r6, r8
  405a6c:	4690      	mov	r8, r2
  405a6e:	3301      	adds	r3, #1
  405a70:	443c      	add	r4, r7
  405a72:	2b07      	cmp	r3, #7
  405a74:	9427      	str	r4, [sp, #156]	; 0x9c
  405a76:	9326      	str	r3, [sp, #152]	; 0x98
  405a78:	e888 00a0 	stmia.w	r8, {r5, r7}
  405a7c:	f73f aed1 	bgt.w	405822 <_svfprintf_r+0xd06>
  405a80:	f108 0808 	add.w	r8, r8, #8
  405a84:	e6d7      	b.n	405836 <_svfprintf_r+0xd1a>
  405a86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  405a88:	6813      	ldr	r3, [r2, #0]
  405a8a:	3204      	adds	r2, #4
  405a8c:	920f      	str	r2, [sp, #60]	; 0x3c
  405a8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  405a90:	601a      	str	r2, [r3, #0]
  405a92:	f7ff b86a 	b.w	404b6a <_svfprintf_r+0x4e>
  405a96:	aa25      	add	r2, sp, #148	; 0x94
  405a98:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405a9a:	980c      	ldr	r0, [sp, #48]	; 0x30
  405a9c:	f002 fbda 	bl	408254 <__ssprint_r>
  405aa0:	2800      	cmp	r0, #0
  405aa2:	f47f a90d 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405aa6:	46c8      	mov	r8, r9
  405aa8:	e48d      	b.n	4053c6 <_svfprintf_r+0x8aa>
  405aaa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405aac:	4a27      	ldr	r2, [pc, #156]	; (405b4c <_svfprintf_r+0x1030>)
  405aae:	f8c8 2000 	str.w	r2, [r8]
  405ab2:	3301      	adds	r3, #1
  405ab4:	3401      	adds	r4, #1
  405ab6:	2201      	movs	r2, #1
  405ab8:	2b07      	cmp	r3, #7
  405aba:	9427      	str	r4, [sp, #156]	; 0x9c
  405abc:	9326      	str	r3, [sp, #152]	; 0x98
  405abe:	f8c8 2004 	str.w	r2, [r8, #4]
  405ac2:	dc72      	bgt.n	405baa <_svfprintf_r+0x108e>
  405ac4:	f108 0808 	add.w	r8, r8, #8
  405ac8:	b929      	cbnz	r1, 405ad6 <_svfprintf_r+0xfba>
  405aca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405acc:	b91b      	cbnz	r3, 405ad6 <_svfprintf_r+0xfba>
  405ace:	9b07      	ldr	r3, [sp, #28]
  405ad0:	07d8      	lsls	r0, r3, #31
  405ad2:	f57f aa03 	bpl.w	404edc <_svfprintf_r+0x3c0>
  405ad6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405ad8:	9819      	ldr	r0, [sp, #100]	; 0x64
  405ada:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  405adc:	f8c8 2000 	str.w	r2, [r8]
  405ae0:	3301      	adds	r3, #1
  405ae2:	4602      	mov	r2, r0
  405ae4:	4422      	add	r2, r4
  405ae6:	2b07      	cmp	r3, #7
  405ae8:	9227      	str	r2, [sp, #156]	; 0x9c
  405aea:	f8c8 0004 	str.w	r0, [r8, #4]
  405aee:	9326      	str	r3, [sp, #152]	; 0x98
  405af0:	f300 818d 	bgt.w	405e0e <_svfprintf_r+0x12f2>
  405af4:	f108 0808 	add.w	r8, r8, #8
  405af8:	2900      	cmp	r1, #0
  405afa:	f2c0 8165 	blt.w	405dc8 <_svfprintf_r+0x12ac>
  405afe:	9913      	ldr	r1, [sp, #76]	; 0x4c
  405b00:	f8c8 6000 	str.w	r6, [r8]
  405b04:	3301      	adds	r3, #1
  405b06:	188c      	adds	r4, r1, r2
  405b08:	2b07      	cmp	r3, #7
  405b0a:	9427      	str	r4, [sp, #156]	; 0x9c
  405b0c:	9326      	str	r3, [sp, #152]	; 0x98
  405b0e:	f8c8 1004 	str.w	r1, [r8, #4]
  405b12:	f77f a9e1 	ble.w	404ed8 <_svfprintf_r+0x3bc>
  405b16:	e52c      	b.n	405572 <_svfprintf_r+0xa56>
  405b18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  405b1a:	9909      	ldr	r1, [sp, #36]	; 0x24
  405b1c:	6813      	ldr	r3, [r2, #0]
  405b1e:	17cd      	asrs	r5, r1, #31
  405b20:	4608      	mov	r0, r1
  405b22:	3204      	adds	r2, #4
  405b24:	4629      	mov	r1, r5
  405b26:	920f      	str	r2, [sp, #60]	; 0x3c
  405b28:	e9c3 0100 	strd	r0, r1, [r3]
  405b2c:	f7ff b81d 	b.w	404b6a <_svfprintf_r+0x4e>
  405b30:	aa25      	add	r2, sp, #148	; 0x94
  405b32:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405b34:	980c      	ldr	r0, [sp, #48]	; 0x30
  405b36:	f002 fb8d 	bl	408254 <__ssprint_r>
  405b3a:	2800      	cmp	r0, #0
  405b3c:	f47f a8c0 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405b40:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405b42:	46c8      	mov	r8, r9
  405b44:	e458      	b.n	4053f8 <_svfprintf_r+0x8dc>
  405b46:	bf00      	nop
  405b48:	00408894 	.word	0x00408894
  405b4c:	00408880 	.word	0x00408880
  405b50:	2140      	movs	r1, #64	; 0x40
  405b52:	980c      	ldr	r0, [sp, #48]	; 0x30
  405b54:	f001 fb40 	bl	4071d8 <_malloc_r>
  405b58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405b5a:	6010      	str	r0, [r2, #0]
  405b5c:	6110      	str	r0, [r2, #16]
  405b5e:	2800      	cmp	r0, #0
  405b60:	f000 81f2 	beq.w	405f48 <_svfprintf_r+0x142c>
  405b64:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405b66:	2340      	movs	r3, #64	; 0x40
  405b68:	6153      	str	r3, [r2, #20]
  405b6a:	f7fe bfee 	b.w	404b4a <_svfprintf_r+0x2e>
  405b6e:	a823      	add	r0, sp, #140	; 0x8c
  405b70:	a920      	add	r1, sp, #128	; 0x80
  405b72:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  405b74:	9004      	str	r0, [sp, #16]
  405b76:	9103      	str	r1, [sp, #12]
  405b78:	a81f      	add	r0, sp, #124	; 0x7c
  405b7a:	2103      	movs	r1, #3
  405b7c:	9002      	str	r0, [sp, #8]
  405b7e:	9a08      	ldr	r2, [sp, #32]
  405b80:	9401      	str	r4, [sp, #4]
  405b82:	463b      	mov	r3, r7
  405b84:	9100      	str	r1, [sp, #0]
  405b86:	980c      	ldr	r0, [sp, #48]	; 0x30
  405b88:	f000 fa9a 	bl	4060c0 <_dtoa_r>
  405b8c:	4625      	mov	r5, r4
  405b8e:	4606      	mov	r6, r0
  405b90:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405b92:	2b46      	cmp	r3, #70	; 0x46
  405b94:	eb06 0405 	add.w	r4, r6, r5
  405b98:	f47f af29 	bne.w	4059ee <_svfprintf_r+0xed2>
  405b9c:	7833      	ldrb	r3, [r6, #0]
  405b9e:	2b30      	cmp	r3, #48	; 0x30
  405ba0:	f000 8178 	beq.w	405e94 <_svfprintf_r+0x1378>
  405ba4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  405ba6:	442c      	add	r4, r5
  405ba8:	e721      	b.n	4059ee <_svfprintf_r+0xed2>
  405baa:	aa25      	add	r2, sp, #148	; 0x94
  405bac:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405bae:	980c      	ldr	r0, [sp, #48]	; 0x30
  405bb0:	f002 fb50 	bl	408254 <__ssprint_r>
  405bb4:	2800      	cmp	r0, #0
  405bb6:	f47f a883 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405bba:	991f      	ldr	r1, [sp, #124]	; 0x7c
  405bbc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405bbe:	46c8      	mov	r8, r9
  405bc0:	e782      	b.n	405ac8 <_svfprintf_r+0xfac>
  405bc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405bc4:	2b00      	cmp	r3, #0
  405bc6:	bf08      	it	eq
  405bc8:	2301      	moveq	r3, #1
  405bca:	930a      	str	r3, [sp, #40]	; 0x28
  405bcc:	e6db      	b.n	405986 <_svfprintf_r+0xe6a>
  405bce:	4630      	mov	r0, r6
  405bd0:	940a      	str	r4, [sp, #40]	; 0x28
  405bd2:	f7fe ff35 	bl	404a40 <strlen>
  405bd6:	950f      	str	r5, [sp, #60]	; 0x3c
  405bd8:	900e      	str	r0, [sp, #56]	; 0x38
  405bda:	f8cd b01c 	str.w	fp, [sp, #28]
  405bde:	4603      	mov	r3, r0
  405be0:	f7ff b9f9 	b.w	404fd6 <_svfprintf_r+0x4ba>
  405be4:	272d      	movs	r7, #45	; 0x2d
  405be6:	2300      	movs	r3, #0
  405be8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  405bec:	930a      	str	r3, [sp, #40]	; 0x28
  405bee:	f7ff b8ae 	b.w	404d4e <_svfprintf_r+0x232>
  405bf2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405bf4:	9312      	str	r3, [sp, #72]	; 0x48
  405bf6:	461a      	mov	r2, r3
  405bf8:	3303      	adds	r3, #3
  405bfa:	db04      	blt.n	405c06 <_svfprintf_r+0x10ea>
  405bfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405bfe:	4619      	mov	r1, r3
  405c00:	4291      	cmp	r1, r2
  405c02:	f6bf af17 	bge.w	405a34 <_svfprintf_r+0xf18>
  405c06:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405c08:	3b02      	subs	r3, #2
  405c0a:	9311      	str	r3, [sp, #68]	; 0x44
  405c0c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  405c10:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  405c14:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405c16:	3b01      	subs	r3, #1
  405c18:	2b00      	cmp	r3, #0
  405c1a:	931f      	str	r3, [sp, #124]	; 0x7c
  405c1c:	bfbd      	ittte	lt
  405c1e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  405c20:	f1c3 0301 	rsblt	r3, r3, #1
  405c24:	222d      	movlt	r2, #45	; 0x2d
  405c26:	222b      	movge	r2, #43	; 0x2b
  405c28:	2b09      	cmp	r3, #9
  405c2a:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  405c2e:	f340 8116 	ble.w	405e5e <_svfprintf_r+0x1342>
  405c32:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  405c36:	4620      	mov	r0, r4
  405c38:	4dab      	ldr	r5, [pc, #684]	; (405ee8 <_svfprintf_r+0x13cc>)
  405c3a:	e000      	b.n	405c3e <_svfprintf_r+0x1122>
  405c3c:	4610      	mov	r0, r2
  405c3e:	fb85 1203 	smull	r1, r2, r5, r3
  405c42:	17d9      	asrs	r1, r3, #31
  405c44:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  405c48:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  405c4c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  405c50:	3230      	adds	r2, #48	; 0x30
  405c52:	2909      	cmp	r1, #9
  405c54:	f800 2c01 	strb.w	r2, [r0, #-1]
  405c58:	460b      	mov	r3, r1
  405c5a:	f100 32ff 	add.w	r2, r0, #4294967295
  405c5e:	dced      	bgt.n	405c3c <_svfprintf_r+0x1120>
  405c60:	3330      	adds	r3, #48	; 0x30
  405c62:	3802      	subs	r0, #2
  405c64:	b2d9      	uxtb	r1, r3
  405c66:	4284      	cmp	r4, r0
  405c68:	f802 1c01 	strb.w	r1, [r2, #-1]
  405c6c:	f240 8165 	bls.w	405f3a <_svfprintf_r+0x141e>
  405c70:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  405c74:	4613      	mov	r3, r2
  405c76:	e001      	b.n	405c7c <_svfprintf_r+0x1160>
  405c78:	f813 1b01 	ldrb.w	r1, [r3], #1
  405c7c:	f800 1b01 	strb.w	r1, [r0], #1
  405c80:	42a3      	cmp	r3, r4
  405c82:	d1f9      	bne.n	405c78 <_svfprintf_r+0x115c>
  405c84:	3301      	adds	r3, #1
  405c86:	1a9b      	subs	r3, r3, r2
  405c88:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  405c8c:	4413      	add	r3, r2
  405c8e:	aa21      	add	r2, sp, #132	; 0x84
  405c90:	1a9b      	subs	r3, r3, r2
  405c92:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  405c94:	931b      	str	r3, [sp, #108]	; 0x6c
  405c96:	2a01      	cmp	r2, #1
  405c98:	4413      	add	r3, r2
  405c9a:	930e      	str	r3, [sp, #56]	; 0x38
  405c9c:	f340 8119 	ble.w	405ed2 <_svfprintf_r+0x13b6>
  405ca0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405ca2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405ca4:	4413      	add	r3, r2
  405ca6:	930e      	str	r3, [sp, #56]	; 0x38
  405ca8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405cac:	9308      	str	r3, [sp, #32]
  405cae:	2300      	movs	r3, #0
  405cb0:	9312      	str	r3, [sp, #72]	; 0x48
  405cb2:	e6cf      	b.n	405a54 <_svfprintf_r+0xf38>
  405cb4:	aa25      	add	r2, sp, #148	; 0x94
  405cb6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405cb8:	980c      	ldr	r0, [sp, #48]	; 0x30
  405cba:	f002 facb 	bl	408254 <__ssprint_r>
  405cbe:	2800      	cmp	r0, #0
  405cc0:	f47e affe 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405cc4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405cc6:	46c8      	mov	r8, r9
  405cc8:	e4d7      	b.n	40567a <_svfprintf_r+0xb5e>
  405cca:	4623      	mov	r3, r4
  405ccc:	e6a2      	b.n	405a14 <_svfprintf_r+0xef8>
  405cce:	aa25      	add	r2, sp, #148	; 0x94
  405cd0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405cd2:	980c      	ldr	r0, [sp, #48]	; 0x30
  405cd4:	f002 fabe 	bl	408254 <__ssprint_r>
  405cd8:	2800      	cmp	r0, #0
  405cda:	f47e aff1 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405cde:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  405ce0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405ce2:	46c8      	mov	r8, r9
  405ce4:	e5ae      	b.n	405844 <_svfprintf_r+0xd28>
  405ce6:	aa25      	add	r2, sp, #148	; 0x94
  405ce8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405cea:	980c      	ldr	r0, [sp, #48]	; 0x30
  405cec:	f002 fab2 	bl	408254 <__ssprint_r>
  405cf0:	2800      	cmp	r0, #0
  405cf2:	f47e afe5 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405cf6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  405cf8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405cfa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405cfc:	1a9a      	subs	r2, r3, r2
  405cfe:	46c8      	mov	r8, r9
  405d00:	e5b8      	b.n	405874 <_svfprintf_r+0xd58>
  405d02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405d04:	9612      	str	r6, [sp, #72]	; 0x48
  405d06:	2b06      	cmp	r3, #6
  405d08:	bf28      	it	cs
  405d0a:	2306      	movcs	r3, #6
  405d0c:	960a      	str	r6, [sp, #40]	; 0x28
  405d0e:	4637      	mov	r7, r6
  405d10:	9308      	str	r3, [sp, #32]
  405d12:	950f      	str	r5, [sp, #60]	; 0x3c
  405d14:	f8cd b01c 	str.w	fp, [sp, #28]
  405d18:	930e      	str	r3, [sp, #56]	; 0x38
  405d1a:	4e74      	ldr	r6, [pc, #464]	; (405eec <_svfprintf_r+0x13d0>)
  405d1c:	f7ff b816 	b.w	404d4c <_svfprintf_r+0x230>
  405d20:	a823      	add	r0, sp, #140	; 0x8c
  405d22:	a920      	add	r1, sp, #128	; 0x80
  405d24:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  405d26:	9004      	str	r0, [sp, #16]
  405d28:	9103      	str	r1, [sp, #12]
  405d2a:	a81f      	add	r0, sp, #124	; 0x7c
  405d2c:	2103      	movs	r1, #3
  405d2e:	9002      	str	r0, [sp, #8]
  405d30:	9a08      	ldr	r2, [sp, #32]
  405d32:	9501      	str	r5, [sp, #4]
  405d34:	463b      	mov	r3, r7
  405d36:	9100      	str	r1, [sp, #0]
  405d38:	980c      	ldr	r0, [sp, #48]	; 0x30
  405d3a:	f000 f9c1 	bl	4060c0 <_dtoa_r>
  405d3e:	4606      	mov	r6, r0
  405d40:	1944      	adds	r4, r0, r5
  405d42:	e72b      	b.n	405b9c <_svfprintf_r+0x1080>
  405d44:	2306      	movs	r3, #6
  405d46:	930a      	str	r3, [sp, #40]	; 0x28
  405d48:	e61d      	b.n	405986 <_svfprintf_r+0xe6a>
  405d4a:	272d      	movs	r7, #45	; 0x2d
  405d4c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  405d50:	f7ff bacd 	b.w	4052ee <_svfprintf_r+0x7d2>
  405d54:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405d56:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405d58:	4413      	add	r3, r2
  405d5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405d5c:	930e      	str	r3, [sp, #56]	; 0x38
  405d5e:	2a00      	cmp	r2, #0
  405d60:	f340 80b0 	ble.w	405ec4 <_svfprintf_r+0x13a8>
  405d64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405d68:	9308      	str	r3, [sp, #32]
  405d6a:	2367      	movs	r3, #103	; 0x67
  405d6c:	9311      	str	r3, [sp, #68]	; 0x44
  405d6e:	e671      	b.n	405a54 <_svfprintf_r+0xf38>
  405d70:	2b00      	cmp	r3, #0
  405d72:	f340 80c3 	ble.w	405efc <_svfprintf_r+0x13e0>
  405d76:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405d78:	2a00      	cmp	r2, #0
  405d7a:	f040 8099 	bne.w	405eb0 <_svfprintf_r+0x1394>
  405d7e:	f01b 0f01 	tst.w	fp, #1
  405d82:	f040 8095 	bne.w	405eb0 <_svfprintf_r+0x1394>
  405d86:	9308      	str	r3, [sp, #32]
  405d88:	930e      	str	r3, [sp, #56]	; 0x38
  405d8a:	e663      	b.n	405a54 <_svfprintf_r+0xf38>
  405d8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405d8e:	9308      	str	r3, [sp, #32]
  405d90:	930e      	str	r3, [sp, #56]	; 0x38
  405d92:	900a      	str	r0, [sp, #40]	; 0x28
  405d94:	950f      	str	r5, [sp, #60]	; 0x3c
  405d96:	f8cd b01c 	str.w	fp, [sp, #28]
  405d9a:	9012      	str	r0, [sp, #72]	; 0x48
  405d9c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  405da0:	f7fe bfd4 	b.w	404d4c <_svfprintf_r+0x230>
  405da4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405da6:	2b47      	cmp	r3, #71	; 0x47
  405da8:	f47f ae20 	bne.w	4059ec <_svfprintf_r+0xed0>
  405dac:	f01b 0f01 	tst.w	fp, #1
  405db0:	f47f aeee 	bne.w	405b90 <_svfprintf_r+0x1074>
  405db4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  405db6:	1b9b      	subs	r3, r3, r6
  405db8:	9313      	str	r3, [sp, #76]	; 0x4c
  405dba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405dbc:	2b47      	cmp	r3, #71	; 0x47
  405dbe:	f43f af18 	beq.w	405bf2 <_svfprintf_r+0x10d6>
  405dc2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405dc4:	9312      	str	r3, [sp, #72]	; 0x48
  405dc6:	e721      	b.n	405c0c <_svfprintf_r+0x10f0>
  405dc8:	424f      	negs	r7, r1
  405dca:	3110      	adds	r1, #16
  405dcc:	4d48      	ldr	r5, [pc, #288]	; (405ef0 <_svfprintf_r+0x13d4>)
  405dce:	da2f      	bge.n	405e30 <_svfprintf_r+0x1314>
  405dd0:	2410      	movs	r4, #16
  405dd2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  405dd6:	e004      	b.n	405de2 <_svfprintf_r+0x12c6>
  405dd8:	f108 0808 	add.w	r8, r8, #8
  405ddc:	3f10      	subs	r7, #16
  405dde:	2f10      	cmp	r7, #16
  405de0:	dd26      	ble.n	405e30 <_svfprintf_r+0x1314>
  405de2:	3301      	adds	r3, #1
  405de4:	3210      	adds	r2, #16
  405de6:	2b07      	cmp	r3, #7
  405de8:	9227      	str	r2, [sp, #156]	; 0x9c
  405dea:	9326      	str	r3, [sp, #152]	; 0x98
  405dec:	f8c8 5000 	str.w	r5, [r8]
  405df0:	f8c8 4004 	str.w	r4, [r8, #4]
  405df4:	ddf0      	ble.n	405dd8 <_svfprintf_r+0x12bc>
  405df6:	aa25      	add	r2, sp, #148	; 0x94
  405df8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405dfa:	4658      	mov	r0, fp
  405dfc:	f002 fa2a 	bl	408254 <__ssprint_r>
  405e00:	2800      	cmp	r0, #0
  405e02:	f47e af5d 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405e06:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405e08:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405e0a:	46c8      	mov	r8, r9
  405e0c:	e7e6      	b.n	405ddc <_svfprintf_r+0x12c0>
  405e0e:	aa25      	add	r2, sp, #148	; 0x94
  405e10:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405e12:	980c      	ldr	r0, [sp, #48]	; 0x30
  405e14:	f002 fa1e 	bl	408254 <__ssprint_r>
  405e18:	2800      	cmp	r0, #0
  405e1a:	f47e af51 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405e1e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  405e20:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405e22:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405e24:	46c8      	mov	r8, r9
  405e26:	e667      	b.n	405af8 <_svfprintf_r+0xfdc>
  405e28:	2000      	movs	r0, #0
  405e2a:	900a      	str	r0, [sp, #40]	; 0x28
  405e2c:	f7fe bed0 	b.w	404bd0 <_svfprintf_r+0xb4>
  405e30:	3301      	adds	r3, #1
  405e32:	443a      	add	r2, r7
  405e34:	2b07      	cmp	r3, #7
  405e36:	e888 00a0 	stmia.w	r8, {r5, r7}
  405e3a:	9227      	str	r2, [sp, #156]	; 0x9c
  405e3c:	9326      	str	r3, [sp, #152]	; 0x98
  405e3e:	f108 0808 	add.w	r8, r8, #8
  405e42:	f77f ae5c 	ble.w	405afe <_svfprintf_r+0xfe2>
  405e46:	aa25      	add	r2, sp, #148	; 0x94
  405e48:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405e4a:	980c      	ldr	r0, [sp, #48]	; 0x30
  405e4c:	f002 fa02 	bl	408254 <__ssprint_r>
  405e50:	2800      	cmp	r0, #0
  405e52:	f47e af35 	bne.w	404cc0 <_svfprintf_r+0x1a4>
  405e56:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405e58:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405e5a:	46c8      	mov	r8, r9
  405e5c:	e64f      	b.n	405afe <_svfprintf_r+0xfe2>
  405e5e:	3330      	adds	r3, #48	; 0x30
  405e60:	2230      	movs	r2, #48	; 0x30
  405e62:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  405e66:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  405e6a:	ab22      	add	r3, sp, #136	; 0x88
  405e6c:	e70f      	b.n	405c8e <_svfprintf_r+0x1172>
  405e6e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405e70:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405e72:	4413      	add	r3, r2
  405e74:	930e      	str	r3, [sp, #56]	; 0x38
  405e76:	e775      	b.n	405d64 <_svfprintf_r+0x1248>
  405e78:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  405e7a:	e5cb      	b.n	405a14 <_svfprintf_r+0xef8>
  405e7c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  405e7e:	4e1d      	ldr	r6, [pc, #116]	; (405ef4 <_svfprintf_r+0x13d8>)
  405e80:	2b00      	cmp	r3, #0
  405e82:	bfb6      	itet	lt
  405e84:	272d      	movlt	r7, #45	; 0x2d
  405e86:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  405e8a:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  405e8e:	4b1a      	ldr	r3, [pc, #104]	; (405ef8 <_svfprintf_r+0x13dc>)
  405e90:	f7ff ba2f 	b.w	4052f2 <_svfprintf_r+0x7d6>
  405e94:	9a16      	ldr	r2, [sp, #88]	; 0x58
  405e96:	9808      	ldr	r0, [sp, #32]
  405e98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  405e9a:	4639      	mov	r1, r7
  405e9c:	f7fe f910 	bl	4040c0 <__aeabi_dcmpeq>
  405ea0:	2800      	cmp	r0, #0
  405ea2:	f47f ae7f 	bne.w	405ba4 <_svfprintf_r+0x1088>
  405ea6:	f1c5 0501 	rsb	r5, r5, #1
  405eaa:	951f      	str	r5, [sp, #124]	; 0x7c
  405eac:	442c      	add	r4, r5
  405eae:	e59e      	b.n	4059ee <_svfprintf_r+0xed2>
  405eb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405eb2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405eb4:	4413      	add	r3, r2
  405eb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405eb8:	441a      	add	r2, r3
  405eba:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  405ebe:	920e      	str	r2, [sp, #56]	; 0x38
  405ec0:	9308      	str	r3, [sp, #32]
  405ec2:	e5c7      	b.n	405a54 <_svfprintf_r+0xf38>
  405ec4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405ec6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  405ec8:	f1c3 0301 	rsb	r3, r3, #1
  405ecc:	441a      	add	r2, r3
  405ece:	4613      	mov	r3, r2
  405ed0:	e7d0      	b.n	405e74 <_svfprintf_r+0x1358>
  405ed2:	f01b 0301 	ands.w	r3, fp, #1
  405ed6:	9312      	str	r3, [sp, #72]	; 0x48
  405ed8:	f47f aee2 	bne.w	405ca0 <_svfprintf_r+0x1184>
  405edc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405ede:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405ee2:	9308      	str	r3, [sp, #32]
  405ee4:	e5b6      	b.n	405a54 <_svfprintf_r+0xf38>
  405ee6:	bf00      	nop
  405ee8:	66666667 	.word	0x66666667
  405eec:	00408878 	.word	0x00408878
  405ef0:	00408894 	.word	0x00408894
  405ef4:	0040884c 	.word	0x0040884c
  405ef8:	00408848 	.word	0x00408848
  405efc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405efe:	b913      	cbnz	r3, 405f06 <_svfprintf_r+0x13ea>
  405f00:	f01b 0f01 	tst.w	fp, #1
  405f04:	d002      	beq.n	405f0c <_svfprintf_r+0x13f0>
  405f06:	9b19      	ldr	r3, [sp, #100]	; 0x64
  405f08:	3301      	adds	r3, #1
  405f0a:	e7d4      	b.n	405eb6 <_svfprintf_r+0x139a>
  405f0c:	2301      	movs	r3, #1
  405f0e:	e73a      	b.n	405d86 <_svfprintf_r+0x126a>
  405f10:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405f12:	f89a 3001 	ldrb.w	r3, [sl, #1]
  405f16:	6828      	ldr	r0, [r5, #0]
  405f18:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  405f1c:	900a      	str	r0, [sp, #40]	; 0x28
  405f1e:	4628      	mov	r0, r5
  405f20:	3004      	adds	r0, #4
  405f22:	46a2      	mov	sl, r4
  405f24:	900f      	str	r0, [sp, #60]	; 0x3c
  405f26:	f7fe be51 	b.w	404bcc <_svfprintf_r+0xb0>
  405f2a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405f2e:	f7ff b867 	b.w	405000 <_svfprintf_r+0x4e4>
  405f32:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405f36:	f7ff ba15 	b.w	405364 <_svfprintf_r+0x848>
  405f3a:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  405f3e:	e6a6      	b.n	405c8e <_svfprintf_r+0x1172>
  405f40:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405f44:	f7ff b8eb 	b.w	40511e <_svfprintf_r+0x602>
  405f48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405f4a:	230c      	movs	r3, #12
  405f4c:	6013      	str	r3, [r2, #0]
  405f4e:	f04f 33ff 	mov.w	r3, #4294967295
  405f52:	9309      	str	r3, [sp, #36]	; 0x24
  405f54:	f7fe bebd 	b.w	404cd2 <_svfprintf_r+0x1b6>
  405f58:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405f5c:	f7ff b99a 	b.w	405294 <_svfprintf_r+0x778>
  405f60:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405f64:	f7ff b976 	b.w	405254 <_svfprintf_r+0x738>
  405f68:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405f6c:	f7ff b959 	b.w	405222 <_svfprintf_r+0x706>
  405f70:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405f74:	f7ff b912 	b.w	40519c <_svfprintf_r+0x680>

00405f78 <register_fini>:
  405f78:	4b02      	ldr	r3, [pc, #8]	; (405f84 <register_fini+0xc>)
  405f7a:	b113      	cbz	r3, 405f82 <register_fini+0xa>
  405f7c:	4802      	ldr	r0, [pc, #8]	; (405f88 <register_fini+0x10>)
  405f7e:	f000 b805 	b.w	405f8c <atexit>
  405f82:	4770      	bx	lr
  405f84:	00000000 	.word	0x00000000
  405f88:	00406f15 	.word	0x00406f15

00405f8c <atexit>:
  405f8c:	2300      	movs	r3, #0
  405f8e:	4601      	mov	r1, r0
  405f90:	461a      	mov	r2, r3
  405f92:	4618      	mov	r0, r3
  405f94:	f002 b9ea 	b.w	40836c <__register_exitproc>

00405f98 <quorem>:
  405f98:	6902      	ldr	r2, [r0, #16]
  405f9a:	690b      	ldr	r3, [r1, #16]
  405f9c:	4293      	cmp	r3, r2
  405f9e:	f300 808d 	bgt.w	4060bc <quorem+0x124>
  405fa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405fa6:	f103 38ff 	add.w	r8, r3, #4294967295
  405faa:	f101 0714 	add.w	r7, r1, #20
  405fae:	f100 0b14 	add.w	fp, r0, #20
  405fb2:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  405fb6:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  405fba:	ea4f 0488 	mov.w	r4, r8, lsl #2
  405fbe:	b083      	sub	sp, #12
  405fc0:	3201      	adds	r2, #1
  405fc2:	fbb3 f9f2 	udiv	r9, r3, r2
  405fc6:	eb0b 0304 	add.w	r3, fp, r4
  405fca:	9400      	str	r4, [sp, #0]
  405fcc:	eb07 0a04 	add.w	sl, r7, r4
  405fd0:	9301      	str	r3, [sp, #4]
  405fd2:	f1b9 0f00 	cmp.w	r9, #0
  405fd6:	d039      	beq.n	40604c <quorem+0xb4>
  405fd8:	2500      	movs	r5, #0
  405fda:	462e      	mov	r6, r5
  405fdc:	46bc      	mov	ip, r7
  405fde:	46de      	mov	lr, fp
  405fe0:	f85c 4b04 	ldr.w	r4, [ip], #4
  405fe4:	f8de 3000 	ldr.w	r3, [lr]
  405fe8:	b2a2      	uxth	r2, r4
  405fea:	fb09 5502 	mla	r5, r9, r2, r5
  405fee:	0c22      	lsrs	r2, r4, #16
  405ff0:	0c2c      	lsrs	r4, r5, #16
  405ff2:	fb09 4202 	mla	r2, r9, r2, r4
  405ff6:	b2ad      	uxth	r5, r5
  405ff8:	1b75      	subs	r5, r6, r5
  405ffa:	b296      	uxth	r6, r2
  405ffc:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  406000:	fa15 f383 	uxtah	r3, r5, r3
  406004:	eb06 4623 	add.w	r6, r6, r3, asr #16
  406008:	b29b      	uxth	r3, r3
  40600a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40600e:	45e2      	cmp	sl, ip
  406010:	ea4f 4512 	mov.w	r5, r2, lsr #16
  406014:	f84e 3b04 	str.w	r3, [lr], #4
  406018:	ea4f 4626 	mov.w	r6, r6, asr #16
  40601c:	d2e0      	bcs.n	405fe0 <quorem+0x48>
  40601e:	9b00      	ldr	r3, [sp, #0]
  406020:	f85b 3003 	ldr.w	r3, [fp, r3]
  406024:	b993      	cbnz	r3, 40604c <quorem+0xb4>
  406026:	9c01      	ldr	r4, [sp, #4]
  406028:	1f23      	subs	r3, r4, #4
  40602a:	459b      	cmp	fp, r3
  40602c:	d20c      	bcs.n	406048 <quorem+0xb0>
  40602e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  406032:	b94b      	cbnz	r3, 406048 <quorem+0xb0>
  406034:	f1a4 0308 	sub.w	r3, r4, #8
  406038:	e002      	b.n	406040 <quorem+0xa8>
  40603a:	681a      	ldr	r2, [r3, #0]
  40603c:	3b04      	subs	r3, #4
  40603e:	b91a      	cbnz	r2, 406048 <quorem+0xb0>
  406040:	459b      	cmp	fp, r3
  406042:	f108 38ff 	add.w	r8, r8, #4294967295
  406046:	d3f8      	bcc.n	40603a <quorem+0xa2>
  406048:	f8c0 8010 	str.w	r8, [r0, #16]
  40604c:	4604      	mov	r4, r0
  40604e:	f001 fe4d 	bl	407cec <__mcmp>
  406052:	2800      	cmp	r0, #0
  406054:	db2e      	blt.n	4060b4 <quorem+0x11c>
  406056:	f109 0901 	add.w	r9, r9, #1
  40605a:	465d      	mov	r5, fp
  40605c:	2300      	movs	r3, #0
  40605e:	f857 1b04 	ldr.w	r1, [r7], #4
  406062:	6828      	ldr	r0, [r5, #0]
  406064:	b28a      	uxth	r2, r1
  406066:	1a9a      	subs	r2, r3, r2
  406068:	0c0b      	lsrs	r3, r1, #16
  40606a:	fa12 f280 	uxtah	r2, r2, r0
  40606e:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  406072:	eb03 4322 	add.w	r3, r3, r2, asr #16
  406076:	b292      	uxth	r2, r2
  406078:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40607c:	45ba      	cmp	sl, r7
  40607e:	f845 2b04 	str.w	r2, [r5], #4
  406082:	ea4f 4323 	mov.w	r3, r3, asr #16
  406086:	d2ea      	bcs.n	40605e <quorem+0xc6>
  406088:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40608c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  406090:	b982      	cbnz	r2, 4060b4 <quorem+0x11c>
  406092:	1f1a      	subs	r2, r3, #4
  406094:	4593      	cmp	fp, r2
  406096:	d20b      	bcs.n	4060b0 <quorem+0x118>
  406098:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40609c:	b942      	cbnz	r2, 4060b0 <quorem+0x118>
  40609e:	3b08      	subs	r3, #8
  4060a0:	e002      	b.n	4060a8 <quorem+0x110>
  4060a2:	681a      	ldr	r2, [r3, #0]
  4060a4:	3b04      	subs	r3, #4
  4060a6:	b91a      	cbnz	r2, 4060b0 <quorem+0x118>
  4060a8:	459b      	cmp	fp, r3
  4060aa:	f108 38ff 	add.w	r8, r8, #4294967295
  4060ae:	d3f8      	bcc.n	4060a2 <quorem+0x10a>
  4060b0:	f8c4 8010 	str.w	r8, [r4, #16]
  4060b4:	4648      	mov	r0, r9
  4060b6:	b003      	add	sp, #12
  4060b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4060bc:	2000      	movs	r0, #0
  4060be:	4770      	bx	lr

004060c0 <_dtoa_r>:
  4060c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4060c4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4060c6:	b09b      	sub	sp, #108	; 0x6c
  4060c8:	4604      	mov	r4, r0
  4060ca:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4060cc:	4692      	mov	sl, r2
  4060ce:	469b      	mov	fp, r3
  4060d0:	b141      	cbz	r1, 4060e4 <_dtoa_r+0x24>
  4060d2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4060d4:	604a      	str	r2, [r1, #4]
  4060d6:	2301      	movs	r3, #1
  4060d8:	4093      	lsls	r3, r2
  4060da:	608b      	str	r3, [r1, #8]
  4060dc:	f001 fc2e 	bl	40793c <_Bfree>
  4060e0:	2300      	movs	r3, #0
  4060e2:	6423      	str	r3, [r4, #64]	; 0x40
  4060e4:	f1bb 0f00 	cmp.w	fp, #0
  4060e8:	465d      	mov	r5, fp
  4060ea:	db35      	blt.n	406158 <_dtoa_r+0x98>
  4060ec:	2300      	movs	r3, #0
  4060ee:	6033      	str	r3, [r6, #0]
  4060f0:	4b9d      	ldr	r3, [pc, #628]	; (406368 <_dtoa_r+0x2a8>)
  4060f2:	43ab      	bics	r3, r5
  4060f4:	d015      	beq.n	406122 <_dtoa_r+0x62>
  4060f6:	4650      	mov	r0, sl
  4060f8:	4659      	mov	r1, fp
  4060fa:	2200      	movs	r2, #0
  4060fc:	2300      	movs	r3, #0
  4060fe:	f7fd ffdf 	bl	4040c0 <__aeabi_dcmpeq>
  406102:	4680      	mov	r8, r0
  406104:	2800      	cmp	r0, #0
  406106:	d02d      	beq.n	406164 <_dtoa_r+0xa4>
  406108:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40610a:	2301      	movs	r3, #1
  40610c:	6013      	str	r3, [r2, #0]
  40610e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  406110:	2b00      	cmp	r3, #0
  406112:	f000 80bd 	beq.w	406290 <_dtoa_r+0x1d0>
  406116:	4895      	ldr	r0, [pc, #596]	; (40636c <_dtoa_r+0x2ac>)
  406118:	6018      	str	r0, [r3, #0]
  40611a:	3801      	subs	r0, #1
  40611c:	b01b      	add	sp, #108	; 0x6c
  40611e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406122:	9a26      	ldr	r2, [sp, #152]	; 0x98
  406124:	f242 730f 	movw	r3, #9999	; 0x270f
  406128:	6013      	str	r3, [r2, #0]
  40612a:	f1ba 0f00 	cmp.w	sl, #0
  40612e:	d10d      	bne.n	40614c <_dtoa_r+0x8c>
  406130:	f3c5 0513 	ubfx	r5, r5, #0, #20
  406134:	b955      	cbnz	r5, 40614c <_dtoa_r+0x8c>
  406136:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  406138:	488d      	ldr	r0, [pc, #564]	; (406370 <_dtoa_r+0x2b0>)
  40613a:	2b00      	cmp	r3, #0
  40613c:	d0ee      	beq.n	40611c <_dtoa_r+0x5c>
  40613e:	f100 0308 	add.w	r3, r0, #8
  406142:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  406144:	6013      	str	r3, [r2, #0]
  406146:	b01b      	add	sp, #108	; 0x6c
  406148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40614c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40614e:	4889      	ldr	r0, [pc, #548]	; (406374 <_dtoa_r+0x2b4>)
  406150:	2b00      	cmp	r3, #0
  406152:	d0e3      	beq.n	40611c <_dtoa_r+0x5c>
  406154:	1cc3      	adds	r3, r0, #3
  406156:	e7f4      	b.n	406142 <_dtoa_r+0x82>
  406158:	2301      	movs	r3, #1
  40615a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40615e:	6033      	str	r3, [r6, #0]
  406160:	46ab      	mov	fp, r5
  406162:	e7c5      	b.n	4060f0 <_dtoa_r+0x30>
  406164:	aa18      	add	r2, sp, #96	; 0x60
  406166:	ab19      	add	r3, sp, #100	; 0x64
  406168:	9201      	str	r2, [sp, #4]
  40616a:	9300      	str	r3, [sp, #0]
  40616c:	4652      	mov	r2, sl
  40616e:	465b      	mov	r3, fp
  406170:	4620      	mov	r0, r4
  406172:	f001 fe5b 	bl	407e2c <__d2b>
  406176:	0d2b      	lsrs	r3, r5, #20
  406178:	4681      	mov	r9, r0
  40617a:	d071      	beq.n	406260 <_dtoa_r+0x1a0>
  40617c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  406180:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  406184:	9f18      	ldr	r7, [sp, #96]	; 0x60
  406186:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40618a:	4650      	mov	r0, sl
  40618c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  406190:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  406194:	2200      	movs	r2, #0
  406196:	4b78      	ldr	r3, [pc, #480]	; (406378 <_dtoa_r+0x2b8>)
  406198:	f7fd fb76 	bl	403888 <__aeabi_dsub>
  40619c:	a36c      	add	r3, pc, #432	; (adr r3, 406350 <_dtoa_r+0x290>)
  40619e:	e9d3 2300 	ldrd	r2, r3, [r3]
  4061a2:	f7fd fd25 	bl	403bf0 <__aeabi_dmul>
  4061a6:	a36c      	add	r3, pc, #432	; (adr r3, 406358 <_dtoa_r+0x298>)
  4061a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4061ac:	f7fd fb6e 	bl	40388c <__adddf3>
  4061b0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4061b4:	4630      	mov	r0, r6
  4061b6:	f7fd fcb5 	bl	403b24 <__aeabi_i2d>
  4061ba:	a369      	add	r3, pc, #420	; (adr r3, 406360 <_dtoa_r+0x2a0>)
  4061bc:	e9d3 2300 	ldrd	r2, r3, [r3]
  4061c0:	f7fd fd16 	bl	403bf0 <__aeabi_dmul>
  4061c4:	4602      	mov	r2, r0
  4061c6:	460b      	mov	r3, r1
  4061c8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4061cc:	f7fd fb5e 	bl	40388c <__adddf3>
  4061d0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4061d4:	f002 f95c 	bl	408490 <__aeabi_d2iz>
  4061d8:	2200      	movs	r2, #0
  4061da:	9002      	str	r0, [sp, #8]
  4061dc:	2300      	movs	r3, #0
  4061de:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4061e2:	f7fd ff77 	bl	4040d4 <__aeabi_dcmplt>
  4061e6:	2800      	cmp	r0, #0
  4061e8:	f040 8173 	bne.w	4064d2 <_dtoa_r+0x412>
  4061ec:	9d02      	ldr	r5, [sp, #8]
  4061ee:	2d16      	cmp	r5, #22
  4061f0:	f200 815d 	bhi.w	4064ae <_dtoa_r+0x3ee>
  4061f4:	4b61      	ldr	r3, [pc, #388]	; (40637c <_dtoa_r+0x2bc>)
  4061f6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4061fa:	e9d3 0100 	ldrd	r0, r1, [r3]
  4061fe:	4652      	mov	r2, sl
  406200:	465b      	mov	r3, fp
  406202:	f7fd ff85 	bl	404110 <__aeabi_dcmpgt>
  406206:	2800      	cmp	r0, #0
  406208:	f000 81c5 	beq.w	406596 <_dtoa_r+0x4d6>
  40620c:	1e6b      	subs	r3, r5, #1
  40620e:	9302      	str	r3, [sp, #8]
  406210:	2300      	movs	r3, #0
  406212:	930e      	str	r3, [sp, #56]	; 0x38
  406214:	1bbf      	subs	r7, r7, r6
  406216:	1e7b      	subs	r3, r7, #1
  406218:	9306      	str	r3, [sp, #24]
  40621a:	f100 8154 	bmi.w	4064c6 <_dtoa_r+0x406>
  40621e:	2300      	movs	r3, #0
  406220:	9308      	str	r3, [sp, #32]
  406222:	9b02      	ldr	r3, [sp, #8]
  406224:	2b00      	cmp	r3, #0
  406226:	f2c0 8145 	blt.w	4064b4 <_dtoa_r+0x3f4>
  40622a:	9a06      	ldr	r2, [sp, #24]
  40622c:	930d      	str	r3, [sp, #52]	; 0x34
  40622e:	4611      	mov	r1, r2
  406230:	4419      	add	r1, r3
  406232:	2300      	movs	r3, #0
  406234:	9106      	str	r1, [sp, #24]
  406236:	930c      	str	r3, [sp, #48]	; 0x30
  406238:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40623a:	2b09      	cmp	r3, #9
  40623c:	d82a      	bhi.n	406294 <_dtoa_r+0x1d4>
  40623e:	2b05      	cmp	r3, #5
  406240:	f340 865b 	ble.w	406efa <_dtoa_r+0xe3a>
  406244:	3b04      	subs	r3, #4
  406246:	9324      	str	r3, [sp, #144]	; 0x90
  406248:	2500      	movs	r5, #0
  40624a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40624c:	3b02      	subs	r3, #2
  40624e:	2b03      	cmp	r3, #3
  406250:	f200 8642 	bhi.w	406ed8 <_dtoa_r+0xe18>
  406254:	e8df f013 	tbh	[pc, r3, lsl #1]
  406258:	02c903d4 	.word	0x02c903d4
  40625c:	046103df 	.word	0x046103df
  406260:	9f18      	ldr	r7, [sp, #96]	; 0x60
  406262:	9e19      	ldr	r6, [sp, #100]	; 0x64
  406264:	443e      	add	r6, r7
  406266:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40626a:	2b20      	cmp	r3, #32
  40626c:	f340 818e 	ble.w	40658c <_dtoa_r+0x4cc>
  406270:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  406274:	f206 4012 	addw	r0, r6, #1042	; 0x412
  406278:	409d      	lsls	r5, r3
  40627a:	fa2a f000 	lsr.w	r0, sl, r0
  40627e:	4328      	orrs	r0, r5
  406280:	f7fd fc40 	bl	403b04 <__aeabi_ui2d>
  406284:	2301      	movs	r3, #1
  406286:	3e01      	subs	r6, #1
  406288:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40628c:	9314      	str	r3, [sp, #80]	; 0x50
  40628e:	e781      	b.n	406194 <_dtoa_r+0xd4>
  406290:	483b      	ldr	r0, [pc, #236]	; (406380 <_dtoa_r+0x2c0>)
  406292:	e743      	b.n	40611c <_dtoa_r+0x5c>
  406294:	2100      	movs	r1, #0
  406296:	6461      	str	r1, [r4, #68]	; 0x44
  406298:	4620      	mov	r0, r4
  40629a:	9125      	str	r1, [sp, #148]	; 0x94
  40629c:	f001 fb28 	bl	4078f0 <_Balloc>
  4062a0:	f04f 33ff 	mov.w	r3, #4294967295
  4062a4:	930a      	str	r3, [sp, #40]	; 0x28
  4062a6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4062a8:	930f      	str	r3, [sp, #60]	; 0x3c
  4062aa:	2301      	movs	r3, #1
  4062ac:	9004      	str	r0, [sp, #16]
  4062ae:	6420      	str	r0, [r4, #64]	; 0x40
  4062b0:	9224      	str	r2, [sp, #144]	; 0x90
  4062b2:	930b      	str	r3, [sp, #44]	; 0x2c
  4062b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4062b6:	2b00      	cmp	r3, #0
  4062b8:	f2c0 80d9 	blt.w	40646e <_dtoa_r+0x3ae>
  4062bc:	9a02      	ldr	r2, [sp, #8]
  4062be:	2a0e      	cmp	r2, #14
  4062c0:	f300 80d5 	bgt.w	40646e <_dtoa_r+0x3ae>
  4062c4:	4b2d      	ldr	r3, [pc, #180]	; (40637c <_dtoa_r+0x2bc>)
  4062c6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4062ca:	e9d3 2300 	ldrd	r2, r3, [r3]
  4062ce:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4062d2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4062d4:	2b00      	cmp	r3, #0
  4062d6:	f2c0 83ba 	blt.w	406a4e <_dtoa_r+0x98e>
  4062da:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4062de:	4650      	mov	r0, sl
  4062e0:	462a      	mov	r2, r5
  4062e2:	4633      	mov	r3, r6
  4062e4:	4659      	mov	r1, fp
  4062e6:	f7fd fdad 	bl	403e44 <__aeabi_ddiv>
  4062ea:	f002 f8d1 	bl	408490 <__aeabi_d2iz>
  4062ee:	4680      	mov	r8, r0
  4062f0:	f7fd fc18 	bl	403b24 <__aeabi_i2d>
  4062f4:	462a      	mov	r2, r5
  4062f6:	4633      	mov	r3, r6
  4062f8:	f7fd fc7a 	bl	403bf0 <__aeabi_dmul>
  4062fc:	460b      	mov	r3, r1
  4062fe:	4602      	mov	r2, r0
  406300:	4659      	mov	r1, fp
  406302:	4650      	mov	r0, sl
  406304:	f7fd fac0 	bl	403888 <__aeabi_dsub>
  406308:	9d04      	ldr	r5, [sp, #16]
  40630a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40630e:	702b      	strb	r3, [r5, #0]
  406310:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406312:	2b01      	cmp	r3, #1
  406314:	4606      	mov	r6, r0
  406316:	460f      	mov	r7, r1
  406318:	f105 0501 	add.w	r5, r5, #1
  40631c:	d068      	beq.n	4063f0 <_dtoa_r+0x330>
  40631e:	2200      	movs	r2, #0
  406320:	4b18      	ldr	r3, [pc, #96]	; (406384 <_dtoa_r+0x2c4>)
  406322:	f7fd fc65 	bl	403bf0 <__aeabi_dmul>
  406326:	2200      	movs	r2, #0
  406328:	2300      	movs	r3, #0
  40632a:	4606      	mov	r6, r0
  40632c:	460f      	mov	r7, r1
  40632e:	f7fd fec7 	bl	4040c0 <__aeabi_dcmpeq>
  406332:	2800      	cmp	r0, #0
  406334:	f040 8088 	bne.w	406448 <_dtoa_r+0x388>
  406338:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40633c:	f04f 0a00 	mov.w	sl, #0
  406340:	f8df b040 	ldr.w	fp, [pc, #64]	; 406384 <_dtoa_r+0x2c4>
  406344:	940c      	str	r4, [sp, #48]	; 0x30
  406346:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40634a:	e028      	b.n	40639e <_dtoa_r+0x2de>
  40634c:	f3af 8000 	nop.w
  406350:	636f4361 	.word	0x636f4361
  406354:	3fd287a7 	.word	0x3fd287a7
  406358:	8b60c8b3 	.word	0x8b60c8b3
  40635c:	3fc68a28 	.word	0x3fc68a28
  406360:	509f79fb 	.word	0x509f79fb
  406364:	3fd34413 	.word	0x3fd34413
  406368:	7ff00000 	.word	0x7ff00000
  40636c:	00408881 	.word	0x00408881
  406370:	004088a4 	.word	0x004088a4
  406374:	004088b0 	.word	0x004088b0
  406378:	3ff80000 	.word	0x3ff80000
  40637c:	004088f0 	.word	0x004088f0
  406380:	00408880 	.word	0x00408880
  406384:	40240000 	.word	0x40240000
  406388:	f7fd fc32 	bl	403bf0 <__aeabi_dmul>
  40638c:	2200      	movs	r2, #0
  40638e:	2300      	movs	r3, #0
  406390:	4606      	mov	r6, r0
  406392:	460f      	mov	r7, r1
  406394:	f7fd fe94 	bl	4040c0 <__aeabi_dcmpeq>
  406398:	2800      	cmp	r0, #0
  40639a:	f040 83c1 	bne.w	406b20 <_dtoa_r+0xa60>
  40639e:	4642      	mov	r2, r8
  4063a0:	464b      	mov	r3, r9
  4063a2:	4630      	mov	r0, r6
  4063a4:	4639      	mov	r1, r7
  4063a6:	f7fd fd4d 	bl	403e44 <__aeabi_ddiv>
  4063aa:	f002 f871 	bl	408490 <__aeabi_d2iz>
  4063ae:	4604      	mov	r4, r0
  4063b0:	f7fd fbb8 	bl	403b24 <__aeabi_i2d>
  4063b4:	4642      	mov	r2, r8
  4063b6:	464b      	mov	r3, r9
  4063b8:	f7fd fc1a 	bl	403bf0 <__aeabi_dmul>
  4063bc:	4602      	mov	r2, r0
  4063be:	460b      	mov	r3, r1
  4063c0:	4630      	mov	r0, r6
  4063c2:	4639      	mov	r1, r7
  4063c4:	f7fd fa60 	bl	403888 <__aeabi_dsub>
  4063c8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4063cc:	9e04      	ldr	r6, [sp, #16]
  4063ce:	f805 eb01 	strb.w	lr, [r5], #1
  4063d2:	eba5 0e06 	sub.w	lr, r5, r6
  4063d6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4063d8:	45b6      	cmp	lr, r6
  4063da:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4063de:	4652      	mov	r2, sl
  4063e0:	465b      	mov	r3, fp
  4063e2:	d1d1      	bne.n	406388 <_dtoa_r+0x2c8>
  4063e4:	46a0      	mov	r8, r4
  4063e6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4063ea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4063ec:	4606      	mov	r6, r0
  4063ee:	460f      	mov	r7, r1
  4063f0:	4632      	mov	r2, r6
  4063f2:	463b      	mov	r3, r7
  4063f4:	4630      	mov	r0, r6
  4063f6:	4639      	mov	r1, r7
  4063f8:	f7fd fa48 	bl	40388c <__adddf3>
  4063fc:	4606      	mov	r6, r0
  4063fe:	460f      	mov	r7, r1
  406400:	4602      	mov	r2, r0
  406402:	460b      	mov	r3, r1
  406404:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  406408:	f7fd fe64 	bl	4040d4 <__aeabi_dcmplt>
  40640c:	b948      	cbnz	r0, 406422 <_dtoa_r+0x362>
  40640e:	4632      	mov	r2, r6
  406410:	463b      	mov	r3, r7
  406412:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  406416:	f7fd fe53 	bl	4040c0 <__aeabi_dcmpeq>
  40641a:	b1a8      	cbz	r0, 406448 <_dtoa_r+0x388>
  40641c:	f018 0f01 	tst.w	r8, #1
  406420:	d012      	beq.n	406448 <_dtoa_r+0x388>
  406422:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  406426:	9a04      	ldr	r2, [sp, #16]
  406428:	1e6b      	subs	r3, r5, #1
  40642a:	e004      	b.n	406436 <_dtoa_r+0x376>
  40642c:	429a      	cmp	r2, r3
  40642e:	f000 8401 	beq.w	406c34 <_dtoa_r+0xb74>
  406432:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  406436:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40643a:	f103 0501 	add.w	r5, r3, #1
  40643e:	d0f5      	beq.n	40642c <_dtoa_r+0x36c>
  406440:	f108 0801 	add.w	r8, r8, #1
  406444:	f883 8000 	strb.w	r8, [r3]
  406448:	4649      	mov	r1, r9
  40644a:	4620      	mov	r0, r4
  40644c:	f001 fa76 	bl	40793c <_Bfree>
  406450:	2200      	movs	r2, #0
  406452:	9b02      	ldr	r3, [sp, #8]
  406454:	702a      	strb	r2, [r5, #0]
  406456:	9a26      	ldr	r2, [sp, #152]	; 0x98
  406458:	3301      	adds	r3, #1
  40645a:	6013      	str	r3, [r2, #0]
  40645c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40645e:	2b00      	cmp	r3, #0
  406460:	f000 839e 	beq.w	406ba0 <_dtoa_r+0xae0>
  406464:	9804      	ldr	r0, [sp, #16]
  406466:	601d      	str	r5, [r3, #0]
  406468:	b01b      	add	sp, #108	; 0x6c
  40646a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40646e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  406470:	2a00      	cmp	r2, #0
  406472:	d03e      	beq.n	4064f2 <_dtoa_r+0x432>
  406474:	9a24      	ldr	r2, [sp, #144]	; 0x90
  406476:	2a01      	cmp	r2, #1
  406478:	f340 8311 	ble.w	406a9e <_dtoa_r+0x9de>
  40647c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40647e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  406480:	1e5f      	subs	r7, r3, #1
  406482:	42ba      	cmp	r2, r7
  406484:	f2c0 838f 	blt.w	406ba6 <_dtoa_r+0xae6>
  406488:	1bd7      	subs	r7, r2, r7
  40648a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40648c:	2b00      	cmp	r3, #0
  40648e:	f2c0 848b 	blt.w	406da8 <_dtoa_r+0xce8>
  406492:	9d08      	ldr	r5, [sp, #32]
  406494:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406496:	9a08      	ldr	r2, [sp, #32]
  406498:	441a      	add	r2, r3
  40649a:	9208      	str	r2, [sp, #32]
  40649c:	9a06      	ldr	r2, [sp, #24]
  40649e:	2101      	movs	r1, #1
  4064a0:	441a      	add	r2, r3
  4064a2:	4620      	mov	r0, r4
  4064a4:	9206      	str	r2, [sp, #24]
  4064a6:	f001 fae3 	bl	407a70 <__i2b>
  4064aa:	4606      	mov	r6, r0
  4064ac:	e024      	b.n	4064f8 <_dtoa_r+0x438>
  4064ae:	2301      	movs	r3, #1
  4064b0:	930e      	str	r3, [sp, #56]	; 0x38
  4064b2:	e6af      	b.n	406214 <_dtoa_r+0x154>
  4064b4:	9a08      	ldr	r2, [sp, #32]
  4064b6:	9b02      	ldr	r3, [sp, #8]
  4064b8:	1ad2      	subs	r2, r2, r3
  4064ba:	425b      	negs	r3, r3
  4064bc:	930c      	str	r3, [sp, #48]	; 0x30
  4064be:	2300      	movs	r3, #0
  4064c0:	9208      	str	r2, [sp, #32]
  4064c2:	930d      	str	r3, [sp, #52]	; 0x34
  4064c4:	e6b8      	b.n	406238 <_dtoa_r+0x178>
  4064c6:	f1c7 0301 	rsb	r3, r7, #1
  4064ca:	9308      	str	r3, [sp, #32]
  4064cc:	2300      	movs	r3, #0
  4064ce:	9306      	str	r3, [sp, #24]
  4064d0:	e6a7      	b.n	406222 <_dtoa_r+0x162>
  4064d2:	9d02      	ldr	r5, [sp, #8]
  4064d4:	4628      	mov	r0, r5
  4064d6:	f7fd fb25 	bl	403b24 <__aeabi_i2d>
  4064da:	4602      	mov	r2, r0
  4064dc:	460b      	mov	r3, r1
  4064de:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4064e2:	f7fd fded 	bl	4040c0 <__aeabi_dcmpeq>
  4064e6:	2800      	cmp	r0, #0
  4064e8:	f47f ae80 	bne.w	4061ec <_dtoa_r+0x12c>
  4064ec:	1e6b      	subs	r3, r5, #1
  4064ee:	9302      	str	r3, [sp, #8]
  4064f0:	e67c      	b.n	4061ec <_dtoa_r+0x12c>
  4064f2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4064f4:	9d08      	ldr	r5, [sp, #32]
  4064f6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  4064f8:	2d00      	cmp	r5, #0
  4064fa:	dd0c      	ble.n	406516 <_dtoa_r+0x456>
  4064fc:	9906      	ldr	r1, [sp, #24]
  4064fe:	2900      	cmp	r1, #0
  406500:	460b      	mov	r3, r1
  406502:	dd08      	ble.n	406516 <_dtoa_r+0x456>
  406504:	42a9      	cmp	r1, r5
  406506:	9a08      	ldr	r2, [sp, #32]
  406508:	bfa8      	it	ge
  40650a:	462b      	movge	r3, r5
  40650c:	1ad2      	subs	r2, r2, r3
  40650e:	1aed      	subs	r5, r5, r3
  406510:	1acb      	subs	r3, r1, r3
  406512:	9208      	str	r2, [sp, #32]
  406514:	9306      	str	r3, [sp, #24]
  406516:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  406518:	b1d3      	cbz	r3, 406550 <_dtoa_r+0x490>
  40651a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40651c:	2b00      	cmp	r3, #0
  40651e:	f000 82b7 	beq.w	406a90 <_dtoa_r+0x9d0>
  406522:	2f00      	cmp	r7, #0
  406524:	dd10      	ble.n	406548 <_dtoa_r+0x488>
  406526:	4631      	mov	r1, r6
  406528:	463a      	mov	r2, r7
  40652a:	4620      	mov	r0, r4
  40652c:	f001 fb3c 	bl	407ba8 <__pow5mult>
  406530:	464a      	mov	r2, r9
  406532:	4601      	mov	r1, r0
  406534:	4606      	mov	r6, r0
  406536:	4620      	mov	r0, r4
  406538:	f001 faa4 	bl	407a84 <__multiply>
  40653c:	4649      	mov	r1, r9
  40653e:	4680      	mov	r8, r0
  406540:	4620      	mov	r0, r4
  406542:	f001 f9fb 	bl	40793c <_Bfree>
  406546:	46c1      	mov	r9, r8
  406548:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40654a:	1bda      	subs	r2, r3, r7
  40654c:	f040 82a1 	bne.w	406a92 <_dtoa_r+0x9d2>
  406550:	2101      	movs	r1, #1
  406552:	4620      	mov	r0, r4
  406554:	f001 fa8c 	bl	407a70 <__i2b>
  406558:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40655a:	2b00      	cmp	r3, #0
  40655c:	4680      	mov	r8, r0
  40655e:	dd1c      	ble.n	40659a <_dtoa_r+0x4da>
  406560:	4601      	mov	r1, r0
  406562:	461a      	mov	r2, r3
  406564:	4620      	mov	r0, r4
  406566:	f001 fb1f 	bl	407ba8 <__pow5mult>
  40656a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40656c:	2b01      	cmp	r3, #1
  40656e:	4680      	mov	r8, r0
  406570:	f340 8254 	ble.w	406a1c <_dtoa_r+0x95c>
  406574:	2300      	movs	r3, #0
  406576:	930c      	str	r3, [sp, #48]	; 0x30
  406578:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40657c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  406580:	6918      	ldr	r0, [r3, #16]
  406582:	f001 fa25 	bl	4079d0 <__hi0bits>
  406586:	f1c0 0020 	rsb	r0, r0, #32
  40658a:	e010      	b.n	4065ae <_dtoa_r+0x4ee>
  40658c:	f1c3 0520 	rsb	r5, r3, #32
  406590:	fa0a f005 	lsl.w	r0, sl, r5
  406594:	e674      	b.n	406280 <_dtoa_r+0x1c0>
  406596:	900e      	str	r0, [sp, #56]	; 0x38
  406598:	e63c      	b.n	406214 <_dtoa_r+0x154>
  40659a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40659c:	2b01      	cmp	r3, #1
  40659e:	f340 8287 	ble.w	406ab0 <_dtoa_r+0x9f0>
  4065a2:	2300      	movs	r3, #0
  4065a4:	930c      	str	r3, [sp, #48]	; 0x30
  4065a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4065a8:	2001      	movs	r0, #1
  4065aa:	2b00      	cmp	r3, #0
  4065ac:	d1e4      	bne.n	406578 <_dtoa_r+0x4b8>
  4065ae:	9a06      	ldr	r2, [sp, #24]
  4065b0:	4410      	add	r0, r2
  4065b2:	f010 001f 	ands.w	r0, r0, #31
  4065b6:	f000 80a1 	beq.w	4066fc <_dtoa_r+0x63c>
  4065ba:	f1c0 0320 	rsb	r3, r0, #32
  4065be:	2b04      	cmp	r3, #4
  4065c0:	f340 849e 	ble.w	406f00 <_dtoa_r+0xe40>
  4065c4:	9b08      	ldr	r3, [sp, #32]
  4065c6:	f1c0 001c 	rsb	r0, r0, #28
  4065ca:	4403      	add	r3, r0
  4065cc:	9308      	str	r3, [sp, #32]
  4065ce:	4613      	mov	r3, r2
  4065d0:	4403      	add	r3, r0
  4065d2:	4405      	add	r5, r0
  4065d4:	9306      	str	r3, [sp, #24]
  4065d6:	9b08      	ldr	r3, [sp, #32]
  4065d8:	2b00      	cmp	r3, #0
  4065da:	dd05      	ble.n	4065e8 <_dtoa_r+0x528>
  4065dc:	4649      	mov	r1, r9
  4065de:	461a      	mov	r2, r3
  4065e0:	4620      	mov	r0, r4
  4065e2:	f001 fb31 	bl	407c48 <__lshift>
  4065e6:	4681      	mov	r9, r0
  4065e8:	9b06      	ldr	r3, [sp, #24]
  4065ea:	2b00      	cmp	r3, #0
  4065ec:	dd05      	ble.n	4065fa <_dtoa_r+0x53a>
  4065ee:	4641      	mov	r1, r8
  4065f0:	461a      	mov	r2, r3
  4065f2:	4620      	mov	r0, r4
  4065f4:	f001 fb28 	bl	407c48 <__lshift>
  4065f8:	4680      	mov	r8, r0
  4065fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4065fc:	2b00      	cmp	r3, #0
  4065fe:	f040 8086 	bne.w	40670e <_dtoa_r+0x64e>
  406602:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406604:	2b00      	cmp	r3, #0
  406606:	f340 8266 	ble.w	406ad6 <_dtoa_r+0xa16>
  40660a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40660c:	2b00      	cmp	r3, #0
  40660e:	f000 8098 	beq.w	406742 <_dtoa_r+0x682>
  406612:	2d00      	cmp	r5, #0
  406614:	dd05      	ble.n	406622 <_dtoa_r+0x562>
  406616:	4631      	mov	r1, r6
  406618:	462a      	mov	r2, r5
  40661a:	4620      	mov	r0, r4
  40661c:	f001 fb14 	bl	407c48 <__lshift>
  406620:	4606      	mov	r6, r0
  406622:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  406624:	2b00      	cmp	r3, #0
  406626:	f040 8337 	bne.w	406c98 <_dtoa_r+0xbd8>
  40662a:	9606      	str	r6, [sp, #24]
  40662c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40662e:	9a04      	ldr	r2, [sp, #16]
  406630:	f8dd b018 	ldr.w	fp, [sp, #24]
  406634:	3b01      	subs	r3, #1
  406636:	18d3      	adds	r3, r2, r3
  406638:	930b      	str	r3, [sp, #44]	; 0x2c
  40663a:	f00a 0301 	and.w	r3, sl, #1
  40663e:	930c      	str	r3, [sp, #48]	; 0x30
  406640:	4617      	mov	r7, r2
  406642:	46c2      	mov	sl, r8
  406644:	4651      	mov	r1, sl
  406646:	4648      	mov	r0, r9
  406648:	f7ff fca6 	bl	405f98 <quorem>
  40664c:	4631      	mov	r1, r6
  40664e:	4605      	mov	r5, r0
  406650:	4648      	mov	r0, r9
  406652:	f001 fb4b 	bl	407cec <__mcmp>
  406656:	465a      	mov	r2, fp
  406658:	900a      	str	r0, [sp, #40]	; 0x28
  40665a:	4651      	mov	r1, sl
  40665c:	4620      	mov	r0, r4
  40665e:	f001 fb61 	bl	407d24 <__mdiff>
  406662:	68c2      	ldr	r2, [r0, #12]
  406664:	4680      	mov	r8, r0
  406666:	f105 0330 	add.w	r3, r5, #48	; 0x30
  40666a:	2a00      	cmp	r2, #0
  40666c:	f040 822b 	bne.w	406ac6 <_dtoa_r+0xa06>
  406670:	4601      	mov	r1, r0
  406672:	4648      	mov	r0, r9
  406674:	9308      	str	r3, [sp, #32]
  406676:	f001 fb39 	bl	407cec <__mcmp>
  40667a:	4641      	mov	r1, r8
  40667c:	9006      	str	r0, [sp, #24]
  40667e:	4620      	mov	r0, r4
  406680:	f001 f95c 	bl	40793c <_Bfree>
  406684:	9a06      	ldr	r2, [sp, #24]
  406686:	9b08      	ldr	r3, [sp, #32]
  406688:	b932      	cbnz	r2, 406698 <_dtoa_r+0x5d8>
  40668a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40668c:	b921      	cbnz	r1, 406698 <_dtoa_r+0x5d8>
  40668e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  406690:	2a00      	cmp	r2, #0
  406692:	f000 83ef 	beq.w	406e74 <_dtoa_r+0xdb4>
  406696:	9a24      	ldr	r2, [sp, #144]	; 0x90
  406698:	990a      	ldr	r1, [sp, #40]	; 0x28
  40669a:	2900      	cmp	r1, #0
  40669c:	f2c0 829f 	blt.w	406bde <_dtoa_r+0xb1e>
  4066a0:	d105      	bne.n	4066ae <_dtoa_r+0x5ee>
  4066a2:	9924      	ldr	r1, [sp, #144]	; 0x90
  4066a4:	b919      	cbnz	r1, 4066ae <_dtoa_r+0x5ee>
  4066a6:	990c      	ldr	r1, [sp, #48]	; 0x30
  4066a8:	2900      	cmp	r1, #0
  4066aa:	f000 8298 	beq.w	406bde <_dtoa_r+0xb1e>
  4066ae:	2a00      	cmp	r2, #0
  4066b0:	f300 8306 	bgt.w	406cc0 <_dtoa_r+0xc00>
  4066b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4066b6:	703b      	strb	r3, [r7, #0]
  4066b8:	f107 0801 	add.w	r8, r7, #1
  4066bc:	4297      	cmp	r7, r2
  4066be:	4645      	mov	r5, r8
  4066c0:	f000 830c 	beq.w	406cdc <_dtoa_r+0xc1c>
  4066c4:	4649      	mov	r1, r9
  4066c6:	2300      	movs	r3, #0
  4066c8:	220a      	movs	r2, #10
  4066ca:	4620      	mov	r0, r4
  4066cc:	f001 f940 	bl	407950 <__multadd>
  4066d0:	455e      	cmp	r6, fp
  4066d2:	4681      	mov	r9, r0
  4066d4:	4631      	mov	r1, r6
  4066d6:	f04f 0300 	mov.w	r3, #0
  4066da:	f04f 020a 	mov.w	r2, #10
  4066de:	4620      	mov	r0, r4
  4066e0:	f000 81eb 	beq.w	406aba <_dtoa_r+0x9fa>
  4066e4:	f001 f934 	bl	407950 <__multadd>
  4066e8:	4659      	mov	r1, fp
  4066ea:	4606      	mov	r6, r0
  4066ec:	2300      	movs	r3, #0
  4066ee:	220a      	movs	r2, #10
  4066f0:	4620      	mov	r0, r4
  4066f2:	f001 f92d 	bl	407950 <__multadd>
  4066f6:	4647      	mov	r7, r8
  4066f8:	4683      	mov	fp, r0
  4066fa:	e7a3      	b.n	406644 <_dtoa_r+0x584>
  4066fc:	201c      	movs	r0, #28
  4066fe:	9b08      	ldr	r3, [sp, #32]
  406700:	4403      	add	r3, r0
  406702:	9308      	str	r3, [sp, #32]
  406704:	9b06      	ldr	r3, [sp, #24]
  406706:	4403      	add	r3, r0
  406708:	4405      	add	r5, r0
  40670a:	9306      	str	r3, [sp, #24]
  40670c:	e763      	b.n	4065d6 <_dtoa_r+0x516>
  40670e:	4641      	mov	r1, r8
  406710:	4648      	mov	r0, r9
  406712:	f001 faeb 	bl	407cec <__mcmp>
  406716:	2800      	cmp	r0, #0
  406718:	f6bf af73 	bge.w	406602 <_dtoa_r+0x542>
  40671c:	9f02      	ldr	r7, [sp, #8]
  40671e:	4649      	mov	r1, r9
  406720:	2300      	movs	r3, #0
  406722:	220a      	movs	r2, #10
  406724:	4620      	mov	r0, r4
  406726:	3f01      	subs	r7, #1
  406728:	9702      	str	r7, [sp, #8]
  40672a:	f001 f911 	bl	407950 <__multadd>
  40672e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  406730:	4681      	mov	r9, r0
  406732:	2b00      	cmp	r3, #0
  406734:	f040 83b6 	bne.w	406ea4 <_dtoa_r+0xde4>
  406738:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40673a:	2b00      	cmp	r3, #0
  40673c:	f340 83bf 	ble.w	406ebe <_dtoa_r+0xdfe>
  406740:	930a      	str	r3, [sp, #40]	; 0x28
  406742:	f8dd b010 	ldr.w	fp, [sp, #16]
  406746:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  406748:	465d      	mov	r5, fp
  40674a:	e002      	b.n	406752 <_dtoa_r+0x692>
  40674c:	f001 f900 	bl	407950 <__multadd>
  406750:	4681      	mov	r9, r0
  406752:	4641      	mov	r1, r8
  406754:	4648      	mov	r0, r9
  406756:	f7ff fc1f 	bl	405f98 <quorem>
  40675a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40675e:	f805 ab01 	strb.w	sl, [r5], #1
  406762:	eba5 030b 	sub.w	r3, r5, fp
  406766:	42bb      	cmp	r3, r7
  406768:	f04f 020a 	mov.w	r2, #10
  40676c:	f04f 0300 	mov.w	r3, #0
  406770:	4649      	mov	r1, r9
  406772:	4620      	mov	r0, r4
  406774:	dbea      	blt.n	40674c <_dtoa_r+0x68c>
  406776:	9b04      	ldr	r3, [sp, #16]
  406778:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40677a:	2a01      	cmp	r2, #1
  40677c:	bfac      	ite	ge
  40677e:	189b      	addge	r3, r3, r2
  406780:	3301      	addlt	r3, #1
  406782:	461d      	mov	r5, r3
  406784:	f04f 0b00 	mov.w	fp, #0
  406788:	4649      	mov	r1, r9
  40678a:	2201      	movs	r2, #1
  40678c:	4620      	mov	r0, r4
  40678e:	f001 fa5b 	bl	407c48 <__lshift>
  406792:	4641      	mov	r1, r8
  406794:	4681      	mov	r9, r0
  406796:	f001 faa9 	bl	407cec <__mcmp>
  40679a:	2800      	cmp	r0, #0
  40679c:	f340 823d 	ble.w	406c1a <_dtoa_r+0xb5a>
  4067a0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4067a4:	9904      	ldr	r1, [sp, #16]
  4067a6:	1e6b      	subs	r3, r5, #1
  4067a8:	e004      	b.n	4067b4 <_dtoa_r+0x6f4>
  4067aa:	428b      	cmp	r3, r1
  4067ac:	f000 81ae 	beq.w	406b0c <_dtoa_r+0xa4c>
  4067b0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4067b4:	2a39      	cmp	r2, #57	; 0x39
  4067b6:	f103 0501 	add.w	r5, r3, #1
  4067ba:	d0f6      	beq.n	4067aa <_dtoa_r+0x6ea>
  4067bc:	3201      	adds	r2, #1
  4067be:	701a      	strb	r2, [r3, #0]
  4067c0:	4641      	mov	r1, r8
  4067c2:	4620      	mov	r0, r4
  4067c4:	f001 f8ba 	bl	40793c <_Bfree>
  4067c8:	2e00      	cmp	r6, #0
  4067ca:	f43f ae3d 	beq.w	406448 <_dtoa_r+0x388>
  4067ce:	f1bb 0f00 	cmp.w	fp, #0
  4067d2:	d005      	beq.n	4067e0 <_dtoa_r+0x720>
  4067d4:	45b3      	cmp	fp, r6
  4067d6:	d003      	beq.n	4067e0 <_dtoa_r+0x720>
  4067d8:	4659      	mov	r1, fp
  4067da:	4620      	mov	r0, r4
  4067dc:	f001 f8ae 	bl	40793c <_Bfree>
  4067e0:	4631      	mov	r1, r6
  4067e2:	4620      	mov	r0, r4
  4067e4:	f001 f8aa 	bl	40793c <_Bfree>
  4067e8:	e62e      	b.n	406448 <_dtoa_r+0x388>
  4067ea:	2300      	movs	r3, #0
  4067ec:	930b      	str	r3, [sp, #44]	; 0x2c
  4067ee:	9b02      	ldr	r3, [sp, #8]
  4067f0:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4067f2:	4413      	add	r3, r2
  4067f4:	930f      	str	r3, [sp, #60]	; 0x3c
  4067f6:	3301      	adds	r3, #1
  4067f8:	2b01      	cmp	r3, #1
  4067fa:	461f      	mov	r7, r3
  4067fc:	461e      	mov	r6, r3
  4067fe:	930a      	str	r3, [sp, #40]	; 0x28
  406800:	bfb8      	it	lt
  406802:	2701      	movlt	r7, #1
  406804:	2100      	movs	r1, #0
  406806:	2f17      	cmp	r7, #23
  406808:	6461      	str	r1, [r4, #68]	; 0x44
  40680a:	d90a      	bls.n	406822 <_dtoa_r+0x762>
  40680c:	2201      	movs	r2, #1
  40680e:	2304      	movs	r3, #4
  406810:	005b      	lsls	r3, r3, #1
  406812:	f103 0014 	add.w	r0, r3, #20
  406816:	4287      	cmp	r7, r0
  406818:	4611      	mov	r1, r2
  40681a:	f102 0201 	add.w	r2, r2, #1
  40681e:	d2f7      	bcs.n	406810 <_dtoa_r+0x750>
  406820:	6461      	str	r1, [r4, #68]	; 0x44
  406822:	4620      	mov	r0, r4
  406824:	f001 f864 	bl	4078f0 <_Balloc>
  406828:	2e0e      	cmp	r6, #14
  40682a:	9004      	str	r0, [sp, #16]
  40682c:	6420      	str	r0, [r4, #64]	; 0x40
  40682e:	f63f ad41 	bhi.w	4062b4 <_dtoa_r+0x1f4>
  406832:	2d00      	cmp	r5, #0
  406834:	f43f ad3e 	beq.w	4062b4 <_dtoa_r+0x1f4>
  406838:	9902      	ldr	r1, [sp, #8]
  40683a:	2900      	cmp	r1, #0
  40683c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  406840:	f340 8202 	ble.w	406c48 <_dtoa_r+0xb88>
  406844:	4bb8      	ldr	r3, [pc, #736]	; (406b28 <_dtoa_r+0xa68>)
  406846:	f001 020f 	and.w	r2, r1, #15
  40684a:	110d      	asrs	r5, r1, #4
  40684c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  406850:	06e9      	lsls	r1, r5, #27
  406852:	e9d3 6700 	ldrd	r6, r7, [r3]
  406856:	f140 81ae 	bpl.w	406bb6 <_dtoa_r+0xaf6>
  40685a:	4bb4      	ldr	r3, [pc, #720]	; (406b2c <_dtoa_r+0xa6c>)
  40685c:	4650      	mov	r0, sl
  40685e:	4659      	mov	r1, fp
  406860:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  406864:	f7fd faee 	bl	403e44 <__aeabi_ddiv>
  406868:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  40686c:	f005 050f 	and.w	r5, r5, #15
  406870:	f04f 0a03 	mov.w	sl, #3
  406874:	b18d      	cbz	r5, 40689a <_dtoa_r+0x7da>
  406876:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 406b2c <_dtoa_r+0xa6c>
  40687a:	07ea      	lsls	r2, r5, #31
  40687c:	d509      	bpl.n	406892 <_dtoa_r+0x7d2>
  40687e:	4630      	mov	r0, r6
  406880:	4639      	mov	r1, r7
  406882:	e9d8 2300 	ldrd	r2, r3, [r8]
  406886:	f7fd f9b3 	bl	403bf0 <__aeabi_dmul>
  40688a:	f10a 0a01 	add.w	sl, sl, #1
  40688e:	4606      	mov	r6, r0
  406890:	460f      	mov	r7, r1
  406892:	106d      	asrs	r5, r5, #1
  406894:	f108 0808 	add.w	r8, r8, #8
  406898:	d1ef      	bne.n	40687a <_dtoa_r+0x7ba>
  40689a:	463b      	mov	r3, r7
  40689c:	4632      	mov	r2, r6
  40689e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4068a2:	f7fd facf 	bl	403e44 <__aeabi_ddiv>
  4068a6:	4607      	mov	r7, r0
  4068a8:	4688      	mov	r8, r1
  4068aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4068ac:	b143      	cbz	r3, 4068c0 <_dtoa_r+0x800>
  4068ae:	2200      	movs	r2, #0
  4068b0:	4b9f      	ldr	r3, [pc, #636]	; (406b30 <_dtoa_r+0xa70>)
  4068b2:	4638      	mov	r0, r7
  4068b4:	4641      	mov	r1, r8
  4068b6:	f7fd fc0d 	bl	4040d4 <__aeabi_dcmplt>
  4068ba:	2800      	cmp	r0, #0
  4068bc:	f040 8286 	bne.w	406dcc <_dtoa_r+0xd0c>
  4068c0:	4650      	mov	r0, sl
  4068c2:	f7fd f92f 	bl	403b24 <__aeabi_i2d>
  4068c6:	463a      	mov	r2, r7
  4068c8:	4643      	mov	r3, r8
  4068ca:	f7fd f991 	bl	403bf0 <__aeabi_dmul>
  4068ce:	4b99      	ldr	r3, [pc, #612]	; (406b34 <_dtoa_r+0xa74>)
  4068d0:	2200      	movs	r2, #0
  4068d2:	f7fc ffdb 	bl	40388c <__adddf3>
  4068d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4068d8:	4605      	mov	r5, r0
  4068da:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4068de:	2b00      	cmp	r3, #0
  4068e0:	f000 813e 	beq.w	406b60 <_dtoa_r+0xaa0>
  4068e4:	9b02      	ldr	r3, [sp, #8]
  4068e6:	9315      	str	r3, [sp, #84]	; 0x54
  4068e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4068ea:	9312      	str	r3, [sp, #72]	; 0x48
  4068ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4068ee:	2b00      	cmp	r3, #0
  4068f0:	f000 81fa 	beq.w	406ce8 <_dtoa_r+0xc28>
  4068f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4068f6:	4b8c      	ldr	r3, [pc, #560]	; (406b28 <_dtoa_r+0xa68>)
  4068f8:	498f      	ldr	r1, [pc, #572]	; (406b38 <_dtoa_r+0xa78>)
  4068fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4068fe:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  406902:	2000      	movs	r0, #0
  406904:	f7fd fa9e 	bl	403e44 <__aeabi_ddiv>
  406908:	462a      	mov	r2, r5
  40690a:	4633      	mov	r3, r6
  40690c:	f7fc ffbc 	bl	403888 <__aeabi_dsub>
  406910:	4682      	mov	sl, r0
  406912:	468b      	mov	fp, r1
  406914:	4638      	mov	r0, r7
  406916:	4641      	mov	r1, r8
  406918:	f001 fdba 	bl	408490 <__aeabi_d2iz>
  40691c:	4605      	mov	r5, r0
  40691e:	f7fd f901 	bl	403b24 <__aeabi_i2d>
  406922:	4602      	mov	r2, r0
  406924:	460b      	mov	r3, r1
  406926:	4638      	mov	r0, r7
  406928:	4641      	mov	r1, r8
  40692a:	f7fc ffad 	bl	403888 <__aeabi_dsub>
  40692e:	3530      	adds	r5, #48	; 0x30
  406930:	fa5f f885 	uxtb.w	r8, r5
  406934:	9d04      	ldr	r5, [sp, #16]
  406936:	4606      	mov	r6, r0
  406938:	460f      	mov	r7, r1
  40693a:	f885 8000 	strb.w	r8, [r5]
  40693e:	4602      	mov	r2, r0
  406940:	460b      	mov	r3, r1
  406942:	4650      	mov	r0, sl
  406944:	4659      	mov	r1, fp
  406946:	3501      	adds	r5, #1
  406948:	f7fd fbe2 	bl	404110 <__aeabi_dcmpgt>
  40694c:	2800      	cmp	r0, #0
  40694e:	d154      	bne.n	4069fa <_dtoa_r+0x93a>
  406950:	4632      	mov	r2, r6
  406952:	463b      	mov	r3, r7
  406954:	2000      	movs	r0, #0
  406956:	4976      	ldr	r1, [pc, #472]	; (406b30 <_dtoa_r+0xa70>)
  406958:	f7fc ff96 	bl	403888 <__aeabi_dsub>
  40695c:	4602      	mov	r2, r0
  40695e:	460b      	mov	r3, r1
  406960:	4650      	mov	r0, sl
  406962:	4659      	mov	r1, fp
  406964:	f7fd fbd4 	bl	404110 <__aeabi_dcmpgt>
  406968:	2800      	cmp	r0, #0
  40696a:	f040 8270 	bne.w	406e4e <_dtoa_r+0xd8e>
  40696e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  406970:	2a01      	cmp	r2, #1
  406972:	f000 8111 	beq.w	406b98 <_dtoa_r+0xad8>
  406976:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406978:	9a04      	ldr	r2, [sp, #16]
  40697a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40697e:	4413      	add	r3, r2
  406980:	4699      	mov	r9, r3
  406982:	e00d      	b.n	4069a0 <_dtoa_r+0x8e0>
  406984:	2000      	movs	r0, #0
  406986:	496a      	ldr	r1, [pc, #424]	; (406b30 <_dtoa_r+0xa70>)
  406988:	f7fc ff7e 	bl	403888 <__aeabi_dsub>
  40698c:	4652      	mov	r2, sl
  40698e:	465b      	mov	r3, fp
  406990:	f7fd fba0 	bl	4040d4 <__aeabi_dcmplt>
  406994:	2800      	cmp	r0, #0
  406996:	f040 8258 	bne.w	406e4a <_dtoa_r+0xd8a>
  40699a:	454d      	cmp	r5, r9
  40699c:	f000 80fa 	beq.w	406b94 <_dtoa_r+0xad4>
  4069a0:	4650      	mov	r0, sl
  4069a2:	4659      	mov	r1, fp
  4069a4:	2200      	movs	r2, #0
  4069a6:	4b65      	ldr	r3, [pc, #404]	; (406b3c <_dtoa_r+0xa7c>)
  4069a8:	f7fd f922 	bl	403bf0 <__aeabi_dmul>
  4069ac:	2200      	movs	r2, #0
  4069ae:	4b63      	ldr	r3, [pc, #396]	; (406b3c <_dtoa_r+0xa7c>)
  4069b0:	4682      	mov	sl, r0
  4069b2:	468b      	mov	fp, r1
  4069b4:	4630      	mov	r0, r6
  4069b6:	4639      	mov	r1, r7
  4069b8:	f7fd f91a 	bl	403bf0 <__aeabi_dmul>
  4069bc:	460f      	mov	r7, r1
  4069be:	4606      	mov	r6, r0
  4069c0:	f001 fd66 	bl	408490 <__aeabi_d2iz>
  4069c4:	4680      	mov	r8, r0
  4069c6:	f7fd f8ad 	bl	403b24 <__aeabi_i2d>
  4069ca:	4602      	mov	r2, r0
  4069cc:	460b      	mov	r3, r1
  4069ce:	4630      	mov	r0, r6
  4069d0:	4639      	mov	r1, r7
  4069d2:	f7fc ff59 	bl	403888 <__aeabi_dsub>
  4069d6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4069da:	fa5f f888 	uxtb.w	r8, r8
  4069de:	4652      	mov	r2, sl
  4069e0:	465b      	mov	r3, fp
  4069e2:	f805 8b01 	strb.w	r8, [r5], #1
  4069e6:	4606      	mov	r6, r0
  4069e8:	460f      	mov	r7, r1
  4069ea:	f7fd fb73 	bl	4040d4 <__aeabi_dcmplt>
  4069ee:	4632      	mov	r2, r6
  4069f0:	463b      	mov	r3, r7
  4069f2:	2800      	cmp	r0, #0
  4069f4:	d0c6      	beq.n	406984 <_dtoa_r+0x8c4>
  4069f6:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4069fa:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4069fc:	9302      	str	r3, [sp, #8]
  4069fe:	e523      	b.n	406448 <_dtoa_r+0x388>
  406a00:	2300      	movs	r3, #0
  406a02:	930b      	str	r3, [sp, #44]	; 0x2c
  406a04:	9b25      	ldr	r3, [sp, #148]	; 0x94
  406a06:	2b00      	cmp	r3, #0
  406a08:	f340 80dc 	ble.w	406bc4 <_dtoa_r+0xb04>
  406a0c:	461f      	mov	r7, r3
  406a0e:	461e      	mov	r6, r3
  406a10:	930f      	str	r3, [sp, #60]	; 0x3c
  406a12:	930a      	str	r3, [sp, #40]	; 0x28
  406a14:	e6f6      	b.n	406804 <_dtoa_r+0x744>
  406a16:	2301      	movs	r3, #1
  406a18:	930b      	str	r3, [sp, #44]	; 0x2c
  406a1a:	e7f3      	b.n	406a04 <_dtoa_r+0x944>
  406a1c:	f1ba 0f00 	cmp.w	sl, #0
  406a20:	f47f ada8 	bne.w	406574 <_dtoa_r+0x4b4>
  406a24:	f3cb 0313 	ubfx	r3, fp, #0, #20
  406a28:	2b00      	cmp	r3, #0
  406a2a:	f47f adba 	bne.w	4065a2 <_dtoa_r+0x4e2>
  406a2e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  406a32:	0d3f      	lsrs	r7, r7, #20
  406a34:	053f      	lsls	r7, r7, #20
  406a36:	2f00      	cmp	r7, #0
  406a38:	f000 820d 	beq.w	406e56 <_dtoa_r+0xd96>
  406a3c:	9b08      	ldr	r3, [sp, #32]
  406a3e:	3301      	adds	r3, #1
  406a40:	9308      	str	r3, [sp, #32]
  406a42:	9b06      	ldr	r3, [sp, #24]
  406a44:	3301      	adds	r3, #1
  406a46:	9306      	str	r3, [sp, #24]
  406a48:	2301      	movs	r3, #1
  406a4a:	930c      	str	r3, [sp, #48]	; 0x30
  406a4c:	e5ab      	b.n	4065a6 <_dtoa_r+0x4e6>
  406a4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406a50:	2b00      	cmp	r3, #0
  406a52:	f73f ac42 	bgt.w	4062da <_dtoa_r+0x21a>
  406a56:	f040 8221 	bne.w	406e9c <_dtoa_r+0xddc>
  406a5a:	2200      	movs	r2, #0
  406a5c:	4b38      	ldr	r3, [pc, #224]	; (406b40 <_dtoa_r+0xa80>)
  406a5e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  406a62:	f7fd f8c5 	bl	403bf0 <__aeabi_dmul>
  406a66:	4652      	mov	r2, sl
  406a68:	465b      	mov	r3, fp
  406a6a:	f7fd fb47 	bl	4040fc <__aeabi_dcmpge>
  406a6e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  406a72:	4646      	mov	r6, r8
  406a74:	2800      	cmp	r0, #0
  406a76:	d041      	beq.n	406afc <_dtoa_r+0xa3c>
  406a78:	9b25      	ldr	r3, [sp, #148]	; 0x94
  406a7a:	9d04      	ldr	r5, [sp, #16]
  406a7c:	43db      	mvns	r3, r3
  406a7e:	9302      	str	r3, [sp, #8]
  406a80:	4641      	mov	r1, r8
  406a82:	4620      	mov	r0, r4
  406a84:	f000 ff5a 	bl	40793c <_Bfree>
  406a88:	2e00      	cmp	r6, #0
  406a8a:	f43f acdd 	beq.w	406448 <_dtoa_r+0x388>
  406a8e:	e6a7      	b.n	4067e0 <_dtoa_r+0x720>
  406a90:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  406a92:	4649      	mov	r1, r9
  406a94:	4620      	mov	r0, r4
  406a96:	f001 f887 	bl	407ba8 <__pow5mult>
  406a9a:	4681      	mov	r9, r0
  406a9c:	e558      	b.n	406550 <_dtoa_r+0x490>
  406a9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  406aa0:	2a00      	cmp	r2, #0
  406aa2:	f000 8187 	beq.w	406db4 <_dtoa_r+0xcf4>
  406aa6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  406aaa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  406aac:	9d08      	ldr	r5, [sp, #32]
  406aae:	e4f2      	b.n	406496 <_dtoa_r+0x3d6>
  406ab0:	f1ba 0f00 	cmp.w	sl, #0
  406ab4:	f47f ad75 	bne.w	4065a2 <_dtoa_r+0x4e2>
  406ab8:	e7b4      	b.n	406a24 <_dtoa_r+0x964>
  406aba:	f000 ff49 	bl	407950 <__multadd>
  406abe:	4647      	mov	r7, r8
  406ac0:	4606      	mov	r6, r0
  406ac2:	4683      	mov	fp, r0
  406ac4:	e5be      	b.n	406644 <_dtoa_r+0x584>
  406ac6:	4601      	mov	r1, r0
  406ac8:	4620      	mov	r0, r4
  406aca:	9306      	str	r3, [sp, #24]
  406acc:	f000 ff36 	bl	40793c <_Bfree>
  406ad0:	2201      	movs	r2, #1
  406ad2:	9b06      	ldr	r3, [sp, #24]
  406ad4:	e5e0      	b.n	406698 <_dtoa_r+0x5d8>
  406ad6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406ad8:	2b02      	cmp	r3, #2
  406ada:	f77f ad96 	ble.w	40660a <_dtoa_r+0x54a>
  406ade:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406ae0:	2b00      	cmp	r3, #0
  406ae2:	d1c9      	bne.n	406a78 <_dtoa_r+0x9b8>
  406ae4:	4641      	mov	r1, r8
  406ae6:	2205      	movs	r2, #5
  406ae8:	4620      	mov	r0, r4
  406aea:	f000 ff31 	bl	407950 <__multadd>
  406aee:	4601      	mov	r1, r0
  406af0:	4680      	mov	r8, r0
  406af2:	4648      	mov	r0, r9
  406af4:	f001 f8fa 	bl	407cec <__mcmp>
  406af8:	2800      	cmp	r0, #0
  406afa:	ddbd      	ble.n	406a78 <_dtoa_r+0x9b8>
  406afc:	9a02      	ldr	r2, [sp, #8]
  406afe:	9904      	ldr	r1, [sp, #16]
  406b00:	2331      	movs	r3, #49	; 0x31
  406b02:	3201      	adds	r2, #1
  406b04:	9202      	str	r2, [sp, #8]
  406b06:	700b      	strb	r3, [r1, #0]
  406b08:	1c4d      	adds	r5, r1, #1
  406b0a:	e7b9      	b.n	406a80 <_dtoa_r+0x9c0>
  406b0c:	9a02      	ldr	r2, [sp, #8]
  406b0e:	3201      	adds	r2, #1
  406b10:	9202      	str	r2, [sp, #8]
  406b12:	9a04      	ldr	r2, [sp, #16]
  406b14:	2331      	movs	r3, #49	; 0x31
  406b16:	7013      	strb	r3, [r2, #0]
  406b18:	e652      	b.n	4067c0 <_dtoa_r+0x700>
  406b1a:	2301      	movs	r3, #1
  406b1c:	930b      	str	r3, [sp, #44]	; 0x2c
  406b1e:	e666      	b.n	4067ee <_dtoa_r+0x72e>
  406b20:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  406b24:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  406b26:	e48f      	b.n	406448 <_dtoa_r+0x388>
  406b28:	004088f0 	.word	0x004088f0
  406b2c:	004088c8 	.word	0x004088c8
  406b30:	3ff00000 	.word	0x3ff00000
  406b34:	401c0000 	.word	0x401c0000
  406b38:	3fe00000 	.word	0x3fe00000
  406b3c:	40240000 	.word	0x40240000
  406b40:	40140000 	.word	0x40140000
  406b44:	4650      	mov	r0, sl
  406b46:	f7fc ffed 	bl	403b24 <__aeabi_i2d>
  406b4a:	463a      	mov	r2, r7
  406b4c:	4643      	mov	r3, r8
  406b4e:	f7fd f84f 	bl	403bf0 <__aeabi_dmul>
  406b52:	2200      	movs	r2, #0
  406b54:	4bc1      	ldr	r3, [pc, #772]	; (406e5c <_dtoa_r+0xd9c>)
  406b56:	f7fc fe99 	bl	40388c <__adddf3>
  406b5a:	4605      	mov	r5, r0
  406b5c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  406b60:	4641      	mov	r1, r8
  406b62:	2200      	movs	r2, #0
  406b64:	4bbe      	ldr	r3, [pc, #760]	; (406e60 <_dtoa_r+0xda0>)
  406b66:	4638      	mov	r0, r7
  406b68:	f7fc fe8e 	bl	403888 <__aeabi_dsub>
  406b6c:	462a      	mov	r2, r5
  406b6e:	4633      	mov	r3, r6
  406b70:	4682      	mov	sl, r0
  406b72:	468b      	mov	fp, r1
  406b74:	f7fd facc 	bl	404110 <__aeabi_dcmpgt>
  406b78:	4680      	mov	r8, r0
  406b7a:	2800      	cmp	r0, #0
  406b7c:	f040 8110 	bne.w	406da0 <_dtoa_r+0xce0>
  406b80:	462a      	mov	r2, r5
  406b82:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  406b86:	4650      	mov	r0, sl
  406b88:	4659      	mov	r1, fp
  406b8a:	f7fd faa3 	bl	4040d4 <__aeabi_dcmplt>
  406b8e:	b118      	cbz	r0, 406b98 <_dtoa_r+0xad8>
  406b90:	4646      	mov	r6, r8
  406b92:	e771      	b.n	406a78 <_dtoa_r+0x9b8>
  406b94:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  406b98:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  406b9c:	f7ff bb8a 	b.w	4062b4 <_dtoa_r+0x1f4>
  406ba0:	9804      	ldr	r0, [sp, #16]
  406ba2:	f7ff babb 	b.w	40611c <_dtoa_r+0x5c>
  406ba6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  406ba8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  406baa:	970c      	str	r7, [sp, #48]	; 0x30
  406bac:	1afb      	subs	r3, r7, r3
  406bae:	441a      	add	r2, r3
  406bb0:	920d      	str	r2, [sp, #52]	; 0x34
  406bb2:	2700      	movs	r7, #0
  406bb4:	e469      	b.n	40648a <_dtoa_r+0x3ca>
  406bb6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  406bba:	f04f 0a02 	mov.w	sl, #2
  406bbe:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  406bc2:	e657      	b.n	406874 <_dtoa_r+0x7b4>
  406bc4:	2100      	movs	r1, #0
  406bc6:	2301      	movs	r3, #1
  406bc8:	6461      	str	r1, [r4, #68]	; 0x44
  406bca:	4620      	mov	r0, r4
  406bcc:	9325      	str	r3, [sp, #148]	; 0x94
  406bce:	f000 fe8f 	bl	4078f0 <_Balloc>
  406bd2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  406bd4:	9004      	str	r0, [sp, #16]
  406bd6:	6420      	str	r0, [r4, #64]	; 0x40
  406bd8:	930a      	str	r3, [sp, #40]	; 0x28
  406bda:	930f      	str	r3, [sp, #60]	; 0x3c
  406bdc:	e629      	b.n	406832 <_dtoa_r+0x772>
  406bde:	2a00      	cmp	r2, #0
  406be0:	46d0      	mov	r8, sl
  406be2:	f8cd b018 	str.w	fp, [sp, #24]
  406be6:	469a      	mov	sl, r3
  406be8:	dd11      	ble.n	406c0e <_dtoa_r+0xb4e>
  406bea:	4649      	mov	r1, r9
  406bec:	2201      	movs	r2, #1
  406bee:	4620      	mov	r0, r4
  406bf0:	f001 f82a 	bl	407c48 <__lshift>
  406bf4:	4641      	mov	r1, r8
  406bf6:	4681      	mov	r9, r0
  406bf8:	f001 f878 	bl	407cec <__mcmp>
  406bfc:	2800      	cmp	r0, #0
  406bfe:	f340 8146 	ble.w	406e8e <_dtoa_r+0xdce>
  406c02:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  406c06:	f000 8106 	beq.w	406e16 <_dtoa_r+0xd56>
  406c0a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  406c0e:	46b3      	mov	fp, r6
  406c10:	f887 a000 	strb.w	sl, [r7]
  406c14:	1c7d      	adds	r5, r7, #1
  406c16:	9e06      	ldr	r6, [sp, #24]
  406c18:	e5d2      	b.n	4067c0 <_dtoa_r+0x700>
  406c1a:	d104      	bne.n	406c26 <_dtoa_r+0xb66>
  406c1c:	f01a 0f01 	tst.w	sl, #1
  406c20:	d001      	beq.n	406c26 <_dtoa_r+0xb66>
  406c22:	e5bd      	b.n	4067a0 <_dtoa_r+0x6e0>
  406c24:	4615      	mov	r5, r2
  406c26:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  406c2a:	2b30      	cmp	r3, #48	; 0x30
  406c2c:	f105 32ff 	add.w	r2, r5, #4294967295
  406c30:	d0f8      	beq.n	406c24 <_dtoa_r+0xb64>
  406c32:	e5c5      	b.n	4067c0 <_dtoa_r+0x700>
  406c34:	9904      	ldr	r1, [sp, #16]
  406c36:	2230      	movs	r2, #48	; 0x30
  406c38:	700a      	strb	r2, [r1, #0]
  406c3a:	9a02      	ldr	r2, [sp, #8]
  406c3c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  406c40:	3201      	adds	r2, #1
  406c42:	9202      	str	r2, [sp, #8]
  406c44:	f7ff bbfc 	b.w	406440 <_dtoa_r+0x380>
  406c48:	f000 80bb 	beq.w	406dc2 <_dtoa_r+0xd02>
  406c4c:	9b02      	ldr	r3, [sp, #8]
  406c4e:	425d      	negs	r5, r3
  406c50:	4b84      	ldr	r3, [pc, #528]	; (406e64 <_dtoa_r+0xda4>)
  406c52:	f005 020f 	and.w	r2, r5, #15
  406c56:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  406c5a:	e9d3 2300 	ldrd	r2, r3, [r3]
  406c5e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  406c62:	f7fc ffc5 	bl	403bf0 <__aeabi_dmul>
  406c66:	112d      	asrs	r5, r5, #4
  406c68:	4607      	mov	r7, r0
  406c6a:	4688      	mov	r8, r1
  406c6c:	f000 812c 	beq.w	406ec8 <_dtoa_r+0xe08>
  406c70:	4e7d      	ldr	r6, [pc, #500]	; (406e68 <_dtoa_r+0xda8>)
  406c72:	f04f 0a02 	mov.w	sl, #2
  406c76:	07eb      	lsls	r3, r5, #31
  406c78:	d509      	bpl.n	406c8e <_dtoa_r+0xbce>
  406c7a:	4638      	mov	r0, r7
  406c7c:	4641      	mov	r1, r8
  406c7e:	e9d6 2300 	ldrd	r2, r3, [r6]
  406c82:	f7fc ffb5 	bl	403bf0 <__aeabi_dmul>
  406c86:	f10a 0a01 	add.w	sl, sl, #1
  406c8a:	4607      	mov	r7, r0
  406c8c:	4688      	mov	r8, r1
  406c8e:	106d      	asrs	r5, r5, #1
  406c90:	f106 0608 	add.w	r6, r6, #8
  406c94:	d1ef      	bne.n	406c76 <_dtoa_r+0xbb6>
  406c96:	e608      	b.n	4068aa <_dtoa_r+0x7ea>
  406c98:	6871      	ldr	r1, [r6, #4]
  406c9a:	4620      	mov	r0, r4
  406c9c:	f000 fe28 	bl	4078f0 <_Balloc>
  406ca0:	6933      	ldr	r3, [r6, #16]
  406ca2:	3302      	adds	r3, #2
  406ca4:	009a      	lsls	r2, r3, #2
  406ca6:	4605      	mov	r5, r0
  406ca8:	f106 010c 	add.w	r1, r6, #12
  406cac:	300c      	adds	r0, #12
  406cae:	f7fd fda1 	bl	4047f4 <memcpy>
  406cb2:	4629      	mov	r1, r5
  406cb4:	2201      	movs	r2, #1
  406cb6:	4620      	mov	r0, r4
  406cb8:	f000 ffc6 	bl	407c48 <__lshift>
  406cbc:	9006      	str	r0, [sp, #24]
  406cbe:	e4b5      	b.n	40662c <_dtoa_r+0x56c>
  406cc0:	2b39      	cmp	r3, #57	; 0x39
  406cc2:	f8cd b018 	str.w	fp, [sp, #24]
  406cc6:	46d0      	mov	r8, sl
  406cc8:	f000 80a5 	beq.w	406e16 <_dtoa_r+0xd56>
  406ccc:	f103 0a01 	add.w	sl, r3, #1
  406cd0:	46b3      	mov	fp, r6
  406cd2:	f887 a000 	strb.w	sl, [r7]
  406cd6:	1c7d      	adds	r5, r7, #1
  406cd8:	9e06      	ldr	r6, [sp, #24]
  406cda:	e571      	b.n	4067c0 <_dtoa_r+0x700>
  406cdc:	465a      	mov	r2, fp
  406cde:	46d0      	mov	r8, sl
  406ce0:	46b3      	mov	fp, r6
  406ce2:	469a      	mov	sl, r3
  406ce4:	4616      	mov	r6, r2
  406ce6:	e54f      	b.n	406788 <_dtoa_r+0x6c8>
  406ce8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406cea:	495e      	ldr	r1, [pc, #376]	; (406e64 <_dtoa_r+0xda4>)
  406cec:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  406cf0:	462a      	mov	r2, r5
  406cf2:	4633      	mov	r3, r6
  406cf4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  406cf8:	f7fc ff7a 	bl	403bf0 <__aeabi_dmul>
  406cfc:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  406d00:	4638      	mov	r0, r7
  406d02:	4641      	mov	r1, r8
  406d04:	f001 fbc4 	bl	408490 <__aeabi_d2iz>
  406d08:	4605      	mov	r5, r0
  406d0a:	f7fc ff0b 	bl	403b24 <__aeabi_i2d>
  406d0e:	460b      	mov	r3, r1
  406d10:	4602      	mov	r2, r0
  406d12:	4641      	mov	r1, r8
  406d14:	4638      	mov	r0, r7
  406d16:	f7fc fdb7 	bl	403888 <__aeabi_dsub>
  406d1a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406d1c:	460f      	mov	r7, r1
  406d1e:	9904      	ldr	r1, [sp, #16]
  406d20:	3530      	adds	r5, #48	; 0x30
  406d22:	2b01      	cmp	r3, #1
  406d24:	700d      	strb	r5, [r1, #0]
  406d26:	4606      	mov	r6, r0
  406d28:	f101 0501 	add.w	r5, r1, #1
  406d2c:	d026      	beq.n	406d7c <_dtoa_r+0xcbc>
  406d2e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406d30:	9a04      	ldr	r2, [sp, #16]
  406d32:	f8df b13c 	ldr.w	fp, [pc, #316]	; 406e70 <_dtoa_r+0xdb0>
  406d36:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  406d3a:	4413      	add	r3, r2
  406d3c:	f04f 0a00 	mov.w	sl, #0
  406d40:	4699      	mov	r9, r3
  406d42:	4652      	mov	r2, sl
  406d44:	465b      	mov	r3, fp
  406d46:	4630      	mov	r0, r6
  406d48:	4639      	mov	r1, r7
  406d4a:	f7fc ff51 	bl	403bf0 <__aeabi_dmul>
  406d4e:	460f      	mov	r7, r1
  406d50:	4606      	mov	r6, r0
  406d52:	f001 fb9d 	bl	408490 <__aeabi_d2iz>
  406d56:	4680      	mov	r8, r0
  406d58:	f7fc fee4 	bl	403b24 <__aeabi_i2d>
  406d5c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  406d60:	4602      	mov	r2, r0
  406d62:	460b      	mov	r3, r1
  406d64:	4630      	mov	r0, r6
  406d66:	4639      	mov	r1, r7
  406d68:	f7fc fd8e 	bl	403888 <__aeabi_dsub>
  406d6c:	f805 8b01 	strb.w	r8, [r5], #1
  406d70:	454d      	cmp	r5, r9
  406d72:	4606      	mov	r6, r0
  406d74:	460f      	mov	r7, r1
  406d76:	d1e4      	bne.n	406d42 <_dtoa_r+0xc82>
  406d78:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  406d7c:	4b3b      	ldr	r3, [pc, #236]	; (406e6c <_dtoa_r+0xdac>)
  406d7e:	2200      	movs	r2, #0
  406d80:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  406d84:	f7fc fd82 	bl	40388c <__adddf3>
  406d88:	4632      	mov	r2, r6
  406d8a:	463b      	mov	r3, r7
  406d8c:	f7fd f9a2 	bl	4040d4 <__aeabi_dcmplt>
  406d90:	2800      	cmp	r0, #0
  406d92:	d046      	beq.n	406e22 <_dtoa_r+0xd62>
  406d94:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406d96:	9302      	str	r3, [sp, #8]
  406d98:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  406d9c:	f7ff bb43 	b.w	406426 <_dtoa_r+0x366>
  406da0:	f04f 0800 	mov.w	r8, #0
  406da4:	4646      	mov	r6, r8
  406da6:	e6a9      	b.n	406afc <_dtoa_r+0xa3c>
  406da8:	9b08      	ldr	r3, [sp, #32]
  406daa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  406dac:	1a9d      	subs	r5, r3, r2
  406dae:	2300      	movs	r3, #0
  406db0:	f7ff bb71 	b.w	406496 <_dtoa_r+0x3d6>
  406db4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  406db6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  406db8:	9d08      	ldr	r5, [sp, #32]
  406dba:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  406dbe:	f7ff bb6a 	b.w	406496 <_dtoa_r+0x3d6>
  406dc2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  406dc6:	f04f 0a02 	mov.w	sl, #2
  406dca:	e56e      	b.n	4068aa <_dtoa_r+0x7ea>
  406dcc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  406dce:	2b00      	cmp	r3, #0
  406dd0:	f43f aeb8 	beq.w	406b44 <_dtoa_r+0xa84>
  406dd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406dd6:	2b00      	cmp	r3, #0
  406dd8:	f77f aede 	ble.w	406b98 <_dtoa_r+0xad8>
  406ddc:	2200      	movs	r2, #0
  406dde:	4b24      	ldr	r3, [pc, #144]	; (406e70 <_dtoa_r+0xdb0>)
  406de0:	4638      	mov	r0, r7
  406de2:	4641      	mov	r1, r8
  406de4:	f7fc ff04 	bl	403bf0 <__aeabi_dmul>
  406de8:	4607      	mov	r7, r0
  406dea:	4688      	mov	r8, r1
  406dec:	f10a 0001 	add.w	r0, sl, #1
  406df0:	f7fc fe98 	bl	403b24 <__aeabi_i2d>
  406df4:	463a      	mov	r2, r7
  406df6:	4643      	mov	r3, r8
  406df8:	f7fc fefa 	bl	403bf0 <__aeabi_dmul>
  406dfc:	2200      	movs	r2, #0
  406dfe:	4b17      	ldr	r3, [pc, #92]	; (406e5c <_dtoa_r+0xd9c>)
  406e00:	f7fc fd44 	bl	40388c <__adddf3>
  406e04:	9a02      	ldr	r2, [sp, #8]
  406e06:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406e08:	9312      	str	r3, [sp, #72]	; 0x48
  406e0a:	3a01      	subs	r2, #1
  406e0c:	4605      	mov	r5, r0
  406e0e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  406e12:	9215      	str	r2, [sp, #84]	; 0x54
  406e14:	e56a      	b.n	4068ec <_dtoa_r+0x82c>
  406e16:	2239      	movs	r2, #57	; 0x39
  406e18:	46b3      	mov	fp, r6
  406e1a:	703a      	strb	r2, [r7, #0]
  406e1c:	9e06      	ldr	r6, [sp, #24]
  406e1e:	1c7d      	adds	r5, r7, #1
  406e20:	e4c0      	b.n	4067a4 <_dtoa_r+0x6e4>
  406e22:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  406e26:	2000      	movs	r0, #0
  406e28:	4910      	ldr	r1, [pc, #64]	; (406e6c <_dtoa_r+0xdac>)
  406e2a:	f7fc fd2d 	bl	403888 <__aeabi_dsub>
  406e2e:	4632      	mov	r2, r6
  406e30:	463b      	mov	r3, r7
  406e32:	f7fd f96d 	bl	404110 <__aeabi_dcmpgt>
  406e36:	b908      	cbnz	r0, 406e3c <_dtoa_r+0xd7c>
  406e38:	e6ae      	b.n	406b98 <_dtoa_r+0xad8>
  406e3a:	4615      	mov	r5, r2
  406e3c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  406e40:	2b30      	cmp	r3, #48	; 0x30
  406e42:	f105 32ff 	add.w	r2, r5, #4294967295
  406e46:	d0f8      	beq.n	406e3a <_dtoa_r+0xd7a>
  406e48:	e5d7      	b.n	4069fa <_dtoa_r+0x93a>
  406e4a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  406e4e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406e50:	9302      	str	r3, [sp, #8]
  406e52:	f7ff bae8 	b.w	406426 <_dtoa_r+0x366>
  406e56:	970c      	str	r7, [sp, #48]	; 0x30
  406e58:	f7ff bba5 	b.w	4065a6 <_dtoa_r+0x4e6>
  406e5c:	401c0000 	.word	0x401c0000
  406e60:	40140000 	.word	0x40140000
  406e64:	004088f0 	.word	0x004088f0
  406e68:	004088c8 	.word	0x004088c8
  406e6c:	3fe00000 	.word	0x3fe00000
  406e70:	40240000 	.word	0x40240000
  406e74:	2b39      	cmp	r3, #57	; 0x39
  406e76:	f8cd b018 	str.w	fp, [sp, #24]
  406e7a:	46d0      	mov	r8, sl
  406e7c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  406e80:	469a      	mov	sl, r3
  406e82:	d0c8      	beq.n	406e16 <_dtoa_r+0xd56>
  406e84:	f1bb 0f00 	cmp.w	fp, #0
  406e88:	f73f aebf 	bgt.w	406c0a <_dtoa_r+0xb4a>
  406e8c:	e6bf      	b.n	406c0e <_dtoa_r+0xb4e>
  406e8e:	f47f aebe 	bne.w	406c0e <_dtoa_r+0xb4e>
  406e92:	f01a 0f01 	tst.w	sl, #1
  406e96:	f43f aeba 	beq.w	406c0e <_dtoa_r+0xb4e>
  406e9a:	e6b2      	b.n	406c02 <_dtoa_r+0xb42>
  406e9c:	f04f 0800 	mov.w	r8, #0
  406ea0:	4646      	mov	r6, r8
  406ea2:	e5e9      	b.n	406a78 <_dtoa_r+0x9b8>
  406ea4:	4631      	mov	r1, r6
  406ea6:	2300      	movs	r3, #0
  406ea8:	220a      	movs	r2, #10
  406eaa:	4620      	mov	r0, r4
  406eac:	f000 fd50 	bl	407950 <__multadd>
  406eb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406eb2:	2b00      	cmp	r3, #0
  406eb4:	4606      	mov	r6, r0
  406eb6:	dd0a      	ble.n	406ece <_dtoa_r+0xe0e>
  406eb8:	930a      	str	r3, [sp, #40]	; 0x28
  406eba:	f7ff bbaa 	b.w	406612 <_dtoa_r+0x552>
  406ebe:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406ec0:	2b02      	cmp	r3, #2
  406ec2:	dc23      	bgt.n	406f0c <_dtoa_r+0xe4c>
  406ec4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406ec6:	e43b      	b.n	406740 <_dtoa_r+0x680>
  406ec8:	f04f 0a02 	mov.w	sl, #2
  406ecc:	e4ed      	b.n	4068aa <_dtoa_r+0x7ea>
  406ece:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406ed0:	2b02      	cmp	r3, #2
  406ed2:	dc1b      	bgt.n	406f0c <_dtoa_r+0xe4c>
  406ed4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406ed6:	e7ef      	b.n	406eb8 <_dtoa_r+0xdf8>
  406ed8:	2500      	movs	r5, #0
  406eda:	6465      	str	r5, [r4, #68]	; 0x44
  406edc:	4629      	mov	r1, r5
  406ede:	4620      	mov	r0, r4
  406ee0:	f000 fd06 	bl	4078f0 <_Balloc>
  406ee4:	f04f 33ff 	mov.w	r3, #4294967295
  406ee8:	930a      	str	r3, [sp, #40]	; 0x28
  406eea:	930f      	str	r3, [sp, #60]	; 0x3c
  406eec:	2301      	movs	r3, #1
  406eee:	9004      	str	r0, [sp, #16]
  406ef0:	9525      	str	r5, [sp, #148]	; 0x94
  406ef2:	6420      	str	r0, [r4, #64]	; 0x40
  406ef4:	930b      	str	r3, [sp, #44]	; 0x2c
  406ef6:	f7ff b9dd 	b.w	4062b4 <_dtoa_r+0x1f4>
  406efa:	2501      	movs	r5, #1
  406efc:	f7ff b9a5 	b.w	40624a <_dtoa_r+0x18a>
  406f00:	f43f ab69 	beq.w	4065d6 <_dtoa_r+0x516>
  406f04:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  406f08:	f7ff bbf9 	b.w	4066fe <_dtoa_r+0x63e>
  406f0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406f0e:	930a      	str	r3, [sp, #40]	; 0x28
  406f10:	e5e5      	b.n	406ade <_dtoa_r+0xa1e>
  406f12:	bf00      	nop

00406f14 <__libc_fini_array>:
  406f14:	b538      	push	{r3, r4, r5, lr}
  406f16:	4c0a      	ldr	r4, [pc, #40]	; (406f40 <__libc_fini_array+0x2c>)
  406f18:	4d0a      	ldr	r5, [pc, #40]	; (406f44 <__libc_fini_array+0x30>)
  406f1a:	1b64      	subs	r4, r4, r5
  406f1c:	10a4      	asrs	r4, r4, #2
  406f1e:	d00a      	beq.n	406f36 <__libc_fini_array+0x22>
  406f20:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  406f24:	3b01      	subs	r3, #1
  406f26:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  406f2a:	3c01      	subs	r4, #1
  406f2c:	f855 3904 	ldr.w	r3, [r5], #-4
  406f30:	4798      	blx	r3
  406f32:	2c00      	cmp	r4, #0
  406f34:	d1f9      	bne.n	406f2a <__libc_fini_array+0x16>
  406f36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  406f3a:	f001 bdcf 	b.w	408adc <_fini>
  406f3e:	bf00      	nop
  406f40:	00408aec 	.word	0x00408aec
  406f44:	00408ae8 	.word	0x00408ae8

00406f48 <_malloc_trim_r>:
  406f48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406f4a:	4f24      	ldr	r7, [pc, #144]	; (406fdc <_malloc_trim_r+0x94>)
  406f4c:	460c      	mov	r4, r1
  406f4e:	4606      	mov	r6, r0
  406f50:	f000 fcc2 	bl	4078d8 <__malloc_lock>
  406f54:	68bb      	ldr	r3, [r7, #8]
  406f56:	685d      	ldr	r5, [r3, #4]
  406f58:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  406f5c:	310f      	adds	r1, #15
  406f5e:	f025 0503 	bic.w	r5, r5, #3
  406f62:	4429      	add	r1, r5
  406f64:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  406f68:	f021 010f 	bic.w	r1, r1, #15
  406f6c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  406f70:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  406f74:	db07      	blt.n	406f86 <_malloc_trim_r+0x3e>
  406f76:	2100      	movs	r1, #0
  406f78:	4630      	mov	r0, r6
  406f7a:	f001 f959 	bl	408230 <_sbrk_r>
  406f7e:	68bb      	ldr	r3, [r7, #8]
  406f80:	442b      	add	r3, r5
  406f82:	4298      	cmp	r0, r3
  406f84:	d004      	beq.n	406f90 <_malloc_trim_r+0x48>
  406f86:	4630      	mov	r0, r6
  406f88:	f000 fcac 	bl	4078e4 <__malloc_unlock>
  406f8c:	2000      	movs	r0, #0
  406f8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406f90:	4261      	negs	r1, r4
  406f92:	4630      	mov	r0, r6
  406f94:	f001 f94c 	bl	408230 <_sbrk_r>
  406f98:	3001      	adds	r0, #1
  406f9a:	d00d      	beq.n	406fb8 <_malloc_trim_r+0x70>
  406f9c:	4b10      	ldr	r3, [pc, #64]	; (406fe0 <_malloc_trim_r+0x98>)
  406f9e:	68ba      	ldr	r2, [r7, #8]
  406fa0:	6819      	ldr	r1, [r3, #0]
  406fa2:	1b2d      	subs	r5, r5, r4
  406fa4:	f045 0501 	orr.w	r5, r5, #1
  406fa8:	4630      	mov	r0, r6
  406faa:	1b09      	subs	r1, r1, r4
  406fac:	6055      	str	r5, [r2, #4]
  406fae:	6019      	str	r1, [r3, #0]
  406fb0:	f000 fc98 	bl	4078e4 <__malloc_unlock>
  406fb4:	2001      	movs	r0, #1
  406fb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  406fb8:	2100      	movs	r1, #0
  406fba:	4630      	mov	r0, r6
  406fbc:	f001 f938 	bl	408230 <_sbrk_r>
  406fc0:	68ba      	ldr	r2, [r7, #8]
  406fc2:	1a83      	subs	r3, r0, r2
  406fc4:	2b0f      	cmp	r3, #15
  406fc6:	ddde      	ble.n	406f86 <_malloc_trim_r+0x3e>
  406fc8:	4c06      	ldr	r4, [pc, #24]	; (406fe4 <_malloc_trim_r+0x9c>)
  406fca:	4905      	ldr	r1, [pc, #20]	; (406fe0 <_malloc_trim_r+0x98>)
  406fcc:	6824      	ldr	r4, [r4, #0]
  406fce:	f043 0301 	orr.w	r3, r3, #1
  406fd2:	1b00      	subs	r0, r0, r4
  406fd4:	6053      	str	r3, [r2, #4]
  406fd6:	6008      	str	r0, [r1, #0]
  406fd8:	e7d5      	b.n	406f86 <_malloc_trim_r+0x3e>
  406fda:	bf00      	nop
  406fdc:	20000648 	.word	0x20000648
  406fe0:	20000c98 	.word	0x20000c98
  406fe4:	20000a50 	.word	0x20000a50

00406fe8 <_free_r>:
  406fe8:	2900      	cmp	r1, #0
  406fea:	d044      	beq.n	407076 <_free_r+0x8e>
  406fec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406ff0:	460d      	mov	r5, r1
  406ff2:	4680      	mov	r8, r0
  406ff4:	f000 fc70 	bl	4078d8 <__malloc_lock>
  406ff8:	f855 7c04 	ldr.w	r7, [r5, #-4]
  406ffc:	4969      	ldr	r1, [pc, #420]	; (4071a4 <_free_r+0x1bc>)
  406ffe:	f027 0301 	bic.w	r3, r7, #1
  407002:	f1a5 0408 	sub.w	r4, r5, #8
  407006:	18e2      	adds	r2, r4, r3
  407008:	688e      	ldr	r6, [r1, #8]
  40700a:	6850      	ldr	r0, [r2, #4]
  40700c:	42b2      	cmp	r2, r6
  40700e:	f020 0003 	bic.w	r0, r0, #3
  407012:	d05e      	beq.n	4070d2 <_free_r+0xea>
  407014:	07fe      	lsls	r6, r7, #31
  407016:	6050      	str	r0, [r2, #4]
  407018:	d40b      	bmi.n	407032 <_free_r+0x4a>
  40701a:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40701e:	1be4      	subs	r4, r4, r7
  407020:	f101 0e08 	add.w	lr, r1, #8
  407024:	68a5      	ldr	r5, [r4, #8]
  407026:	4575      	cmp	r5, lr
  407028:	443b      	add	r3, r7
  40702a:	d06d      	beq.n	407108 <_free_r+0x120>
  40702c:	68e7      	ldr	r7, [r4, #12]
  40702e:	60ef      	str	r7, [r5, #12]
  407030:	60bd      	str	r5, [r7, #8]
  407032:	1815      	adds	r5, r2, r0
  407034:	686d      	ldr	r5, [r5, #4]
  407036:	07ed      	lsls	r5, r5, #31
  407038:	d53e      	bpl.n	4070b8 <_free_r+0xd0>
  40703a:	f043 0201 	orr.w	r2, r3, #1
  40703e:	6062      	str	r2, [r4, #4]
  407040:	50e3      	str	r3, [r4, r3]
  407042:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  407046:	d217      	bcs.n	407078 <_free_r+0x90>
  407048:	08db      	lsrs	r3, r3, #3
  40704a:	1c58      	adds	r0, r3, #1
  40704c:	109a      	asrs	r2, r3, #2
  40704e:	684d      	ldr	r5, [r1, #4]
  407050:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  407054:	60a7      	str	r7, [r4, #8]
  407056:	2301      	movs	r3, #1
  407058:	4093      	lsls	r3, r2
  40705a:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40705e:	432b      	orrs	r3, r5
  407060:	3a08      	subs	r2, #8
  407062:	60e2      	str	r2, [r4, #12]
  407064:	604b      	str	r3, [r1, #4]
  407066:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40706a:	60fc      	str	r4, [r7, #12]
  40706c:	4640      	mov	r0, r8
  40706e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  407072:	f000 bc37 	b.w	4078e4 <__malloc_unlock>
  407076:	4770      	bx	lr
  407078:	0a5a      	lsrs	r2, r3, #9
  40707a:	2a04      	cmp	r2, #4
  40707c:	d852      	bhi.n	407124 <_free_r+0x13c>
  40707e:	099a      	lsrs	r2, r3, #6
  407080:	f102 0739 	add.w	r7, r2, #57	; 0x39
  407084:	00ff      	lsls	r7, r7, #3
  407086:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40708a:	19c8      	adds	r0, r1, r7
  40708c:	59ca      	ldr	r2, [r1, r7]
  40708e:	3808      	subs	r0, #8
  407090:	4290      	cmp	r0, r2
  407092:	d04f      	beq.n	407134 <_free_r+0x14c>
  407094:	6851      	ldr	r1, [r2, #4]
  407096:	f021 0103 	bic.w	r1, r1, #3
  40709a:	428b      	cmp	r3, r1
  40709c:	d232      	bcs.n	407104 <_free_r+0x11c>
  40709e:	6892      	ldr	r2, [r2, #8]
  4070a0:	4290      	cmp	r0, r2
  4070a2:	d1f7      	bne.n	407094 <_free_r+0xac>
  4070a4:	68c3      	ldr	r3, [r0, #12]
  4070a6:	60a0      	str	r0, [r4, #8]
  4070a8:	60e3      	str	r3, [r4, #12]
  4070aa:	609c      	str	r4, [r3, #8]
  4070ac:	60c4      	str	r4, [r0, #12]
  4070ae:	4640      	mov	r0, r8
  4070b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4070b4:	f000 bc16 	b.w	4078e4 <__malloc_unlock>
  4070b8:	6895      	ldr	r5, [r2, #8]
  4070ba:	4f3b      	ldr	r7, [pc, #236]	; (4071a8 <_free_r+0x1c0>)
  4070bc:	42bd      	cmp	r5, r7
  4070be:	4403      	add	r3, r0
  4070c0:	d040      	beq.n	407144 <_free_r+0x15c>
  4070c2:	68d0      	ldr	r0, [r2, #12]
  4070c4:	60e8      	str	r0, [r5, #12]
  4070c6:	f043 0201 	orr.w	r2, r3, #1
  4070ca:	6085      	str	r5, [r0, #8]
  4070cc:	6062      	str	r2, [r4, #4]
  4070ce:	50e3      	str	r3, [r4, r3]
  4070d0:	e7b7      	b.n	407042 <_free_r+0x5a>
  4070d2:	07ff      	lsls	r7, r7, #31
  4070d4:	4403      	add	r3, r0
  4070d6:	d407      	bmi.n	4070e8 <_free_r+0x100>
  4070d8:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4070dc:	1aa4      	subs	r4, r4, r2
  4070de:	4413      	add	r3, r2
  4070e0:	68a0      	ldr	r0, [r4, #8]
  4070e2:	68e2      	ldr	r2, [r4, #12]
  4070e4:	60c2      	str	r2, [r0, #12]
  4070e6:	6090      	str	r0, [r2, #8]
  4070e8:	4a30      	ldr	r2, [pc, #192]	; (4071ac <_free_r+0x1c4>)
  4070ea:	6812      	ldr	r2, [r2, #0]
  4070ec:	f043 0001 	orr.w	r0, r3, #1
  4070f0:	4293      	cmp	r3, r2
  4070f2:	6060      	str	r0, [r4, #4]
  4070f4:	608c      	str	r4, [r1, #8]
  4070f6:	d3b9      	bcc.n	40706c <_free_r+0x84>
  4070f8:	4b2d      	ldr	r3, [pc, #180]	; (4071b0 <_free_r+0x1c8>)
  4070fa:	4640      	mov	r0, r8
  4070fc:	6819      	ldr	r1, [r3, #0]
  4070fe:	f7ff ff23 	bl	406f48 <_malloc_trim_r>
  407102:	e7b3      	b.n	40706c <_free_r+0x84>
  407104:	4610      	mov	r0, r2
  407106:	e7cd      	b.n	4070a4 <_free_r+0xbc>
  407108:	1811      	adds	r1, r2, r0
  40710a:	6849      	ldr	r1, [r1, #4]
  40710c:	07c9      	lsls	r1, r1, #31
  40710e:	d444      	bmi.n	40719a <_free_r+0x1b2>
  407110:	6891      	ldr	r1, [r2, #8]
  407112:	68d2      	ldr	r2, [r2, #12]
  407114:	60ca      	str	r2, [r1, #12]
  407116:	4403      	add	r3, r0
  407118:	f043 0001 	orr.w	r0, r3, #1
  40711c:	6091      	str	r1, [r2, #8]
  40711e:	6060      	str	r0, [r4, #4]
  407120:	50e3      	str	r3, [r4, r3]
  407122:	e7a3      	b.n	40706c <_free_r+0x84>
  407124:	2a14      	cmp	r2, #20
  407126:	d816      	bhi.n	407156 <_free_r+0x16e>
  407128:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  40712c:	00ff      	lsls	r7, r7, #3
  40712e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  407132:	e7aa      	b.n	40708a <_free_r+0xa2>
  407134:	10aa      	asrs	r2, r5, #2
  407136:	2301      	movs	r3, #1
  407138:	684d      	ldr	r5, [r1, #4]
  40713a:	4093      	lsls	r3, r2
  40713c:	432b      	orrs	r3, r5
  40713e:	604b      	str	r3, [r1, #4]
  407140:	4603      	mov	r3, r0
  407142:	e7b0      	b.n	4070a6 <_free_r+0xbe>
  407144:	f043 0201 	orr.w	r2, r3, #1
  407148:	614c      	str	r4, [r1, #20]
  40714a:	610c      	str	r4, [r1, #16]
  40714c:	60e5      	str	r5, [r4, #12]
  40714e:	60a5      	str	r5, [r4, #8]
  407150:	6062      	str	r2, [r4, #4]
  407152:	50e3      	str	r3, [r4, r3]
  407154:	e78a      	b.n	40706c <_free_r+0x84>
  407156:	2a54      	cmp	r2, #84	; 0x54
  407158:	d806      	bhi.n	407168 <_free_r+0x180>
  40715a:	0b1a      	lsrs	r2, r3, #12
  40715c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  407160:	00ff      	lsls	r7, r7, #3
  407162:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  407166:	e790      	b.n	40708a <_free_r+0xa2>
  407168:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40716c:	d806      	bhi.n	40717c <_free_r+0x194>
  40716e:	0bda      	lsrs	r2, r3, #15
  407170:	f102 0778 	add.w	r7, r2, #120	; 0x78
  407174:	00ff      	lsls	r7, r7, #3
  407176:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40717a:	e786      	b.n	40708a <_free_r+0xa2>
  40717c:	f240 5054 	movw	r0, #1364	; 0x554
  407180:	4282      	cmp	r2, r0
  407182:	d806      	bhi.n	407192 <_free_r+0x1aa>
  407184:	0c9a      	lsrs	r2, r3, #18
  407186:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40718a:	00ff      	lsls	r7, r7, #3
  40718c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  407190:	e77b      	b.n	40708a <_free_r+0xa2>
  407192:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  407196:	257e      	movs	r5, #126	; 0x7e
  407198:	e777      	b.n	40708a <_free_r+0xa2>
  40719a:	f043 0101 	orr.w	r1, r3, #1
  40719e:	6061      	str	r1, [r4, #4]
  4071a0:	6013      	str	r3, [r2, #0]
  4071a2:	e763      	b.n	40706c <_free_r+0x84>
  4071a4:	20000648 	.word	0x20000648
  4071a8:	20000650 	.word	0x20000650
  4071ac:	20000a54 	.word	0x20000a54
  4071b0:	20000cc8 	.word	0x20000cc8

004071b4 <_localeconv_r>:
  4071b4:	4a04      	ldr	r2, [pc, #16]	; (4071c8 <_localeconv_r+0x14>)
  4071b6:	4b05      	ldr	r3, [pc, #20]	; (4071cc <_localeconv_r+0x18>)
  4071b8:	6812      	ldr	r2, [r2, #0]
  4071ba:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4071bc:	2800      	cmp	r0, #0
  4071be:	bf08      	it	eq
  4071c0:	4618      	moveq	r0, r3
  4071c2:	30f0      	adds	r0, #240	; 0xf0
  4071c4:	4770      	bx	lr
  4071c6:	bf00      	nop
  4071c8:	200000ac 	.word	0x200000ac
  4071cc:	200004dc 	.word	0x200004dc

004071d0 <__retarget_lock_acquire_recursive>:
  4071d0:	4770      	bx	lr
  4071d2:	bf00      	nop

004071d4 <__retarget_lock_release_recursive>:
  4071d4:	4770      	bx	lr
  4071d6:	bf00      	nop

004071d8 <_malloc_r>:
  4071d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4071dc:	f101 060b 	add.w	r6, r1, #11
  4071e0:	2e16      	cmp	r6, #22
  4071e2:	b083      	sub	sp, #12
  4071e4:	4605      	mov	r5, r0
  4071e6:	f240 809e 	bls.w	407326 <_malloc_r+0x14e>
  4071ea:	f036 0607 	bics.w	r6, r6, #7
  4071ee:	f100 80bd 	bmi.w	40736c <_malloc_r+0x194>
  4071f2:	42b1      	cmp	r1, r6
  4071f4:	f200 80ba 	bhi.w	40736c <_malloc_r+0x194>
  4071f8:	f000 fb6e 	bl	4078d8 <__malloc_lock>
  4071fc:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  407200:	f0c0 8293 	bcc.w	40772a <_malloc_r+0x552>
  407204:	0a73      	lsrs	r3, r6, #9
  407206:	f000 80b8 	beq.w	40737a <_malloc_r+0x1a2>
  40720a:	2b04      	cmp	r3, #4
  40720c:	f200 8179 	bhi.w	407502 <_malloc_r+0x32a>
  407210:	09b3      	lsrs	r3, r6, #6
  407212:	f103 0039 	add.w	r0, r3, #57	; 0x39
  407216:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40721a:	00c3      	lsls	r3, r0, #3
  40721c:	4fbf      	ldr	r7, [pc, #764]	; (40751c <_malloc_r+0x344>)
  40721e:	443b      	add	r3, r7
  407220:	f1a3 0108 	sub.w	r1, r3, #8
  407224:	685c      	ldr	r4, [r3, #4]
  407226:	42a1      	cmp	r1, r4
  407228:	d106      	bne.n	407238 <_malloc_r+0x60>
  40722a:	e00c      	b.n	407246 <_malloc_r+0x6e>
  40722c:	2a00      	cmp	r2, #0
  40722e:	f280 80aa 	bge.w	407386 <_malloc_r+0x1ae>
  407232:	68e4      	ldr	r4, [r4, #12]
  407234:	42a1      	cmp	r1, r4
  407236:	d006      	beq.n	407246 <_malloc_r+0x6e>
  407238:	6863      	ldr	r3, [r4, #4]
  40723a:	f023 0303 	bic.w	r3, r3, #3
  40723e:	1b9a      	subs	r2, r3, r6
  407240:	2a0f      	cmp	r2, #15
  407242:	ddf3      	ble.n	40722c <_malloc_r+0x54>
  407244:	4670      	mov	r0, lr
  407246:	693c      	ldr	r4, [r7, #16]
  407248:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 407530 <_malloc_r+0x358>
  40724c:	4574      	cmp	r4, lr
  40724e:	f000 81ab 	beq.w	4075a8 <_malloc_r+0x3d0>
  407252:	6863      	ldr	r3, [r4, #4]
  407254:	f023 0303 	bic.w	r3, r3, #3
  407258:	1b9a      	subs	r2, r3, r6
  40725a:	2a0f      	cmp	r2, #15
  40725c:	f300 8190 	bgt.w	407580 <_malloc_r+0x3a8>
  407260:	2a00      	cmp	r2, #0
  407262:	f8c7 e014 	str.w	lr, [r7, #20]
  407266:	f8c7 e010 	str.w	lr, [r7, #16]
  40726a:	f280 809d 	bge.w	4073a8 <_malloc_r+0x1d0>
  40726e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  407272:	f080 8161 	bcs.w	407538 <_malloc_r+0x360>
  407276:	08db      	lsrs	r3, r3, #3
  407278:	f103 0c01 	add.w	ip, r3, #1
  40727c:	1099      	asrs	r1, r3, #2
  40727e:	687a      	ldr	r2, [r7, #4]
  407280:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  407284:	f8c4 8008 	str.w	r8, [r4, #8]
  407288:	2301      	movs	r3, #1
  40728a:	408b      	lsls	r3, r1
  40728c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  407290:	4313      	orrs	r3, r2
  407292:	3908      	subs	r1, #8
  407294:	60e1      	str	r1, [r4, #12]
  407296:	607b      	str	r3, [r7, #4]
  407298:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  40729c:	f8c8 400c 	str.w	r4, [r8, #12]
  4072a0:	1082      	asrs	r2, r0, #2
  4072a2:	2401      	movs	r4, #1
  4072a4:	4094      	lsls	r4, r2
  4072a6:	429c      	cmp	r4, r3
  4072a8:	f200 808b 	bhi.w	4073c2 <_malloc_r+0x1ea>
  4072ac:	421c      	tst	r4, r3
  4072ae:	d106      	bne.n	4072be <_malloc_r+0xe6>
  4072b0:	f020 0003 	bic.w	r0, r0, #3
  4072b4:	0064      	lsls	r4, r4, #1
  4072b6:	421c      	tst	r4, r3
  4072b8:	f100 0004 	add.w	r0, r0, #4
  4072bc:	d0fa      	beq.n	4072b4 <_malloc_r+0xdc>
  4072be:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4072c2:	46cc      	mov	ip, r9
  4072c4:	4680      	mov	r8, r0
  4072c6:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4072ca:	459c      	cmp	ip, r3
  4072cc:	d107      	bne.n	4072de <_malloc_r+0x106>
  4072ce:	e16d      	b.n	4075ac <_malloc_r+0x3d4>
  4072d0:	2a00      	cmp	r2, #0
  4072d2:	f280 817b 	bge.w	4075cc <_malloc_r+0x3f4>
  4072d6:	68db      	ldr	r3, [r3, #12]
  4072d8:	459c      	cmp	ip, r3
  4072da:	f000 8167 	beq.w	4075ac <_malloc_r+0x3d4>
  4072de:	6859      	ldr	r1, [r3, #4]
  4072e0:	f021 0103 	bic.w	r1, r1, #3
  4072e4:	1b8a      	subs	r2, r1, r6
  4072e6:	2a0f      	cmp	r2, #15
  4072e8:	ddf2      	ble.n	4072d0 <_malloc_r+0xf8>
  4072ea:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4072ee:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4072f2:	9300      	str	r3, [sp, #0]
  4072f4:	199c      	adds	r4, r3, r6
  4072f6:	4628      	mov	r0, r5
  4072f8:	f046 0601 	orr.w	r6, r6, #1
  4072fc:	f042 0501 	orr.w	r5, r2, #1
  407300:	605e      	str	r6, [r3, #4]
  407302:	f8c8 c00c 	str.w	ip, [r8, #12]
  407306:	f8cc 8008 	str.w	r8, [ip, #8]
  40730a:	617c      	str	r4, [r7, #20]
  40730c:	613c      	str	r4, [r7, #16]
  40730e:	f8c4 e00c 	str.w	lr, [r4, #12]
  407312:	f8c4 e008 	str.w	lr, [r4, #8]
  407316:	6065      	str	r5, [r4, #4]
  407318:	505a      	str	r2, [r3, r1]
  40731a:	f000 fae3 	bl	4078e4 <__malloc_unlock>
  40731e:	9b00      	ldr	r3, [sp, #0]
  407320:	f103 0408 	add.w	r4, r3, #8
  407324:	e01e      	b.n	407364 <_malloc_r+0x18c>
  407326:	2910      	cmp	r1, #16
  407328:	d820      	bhi.n	40736c <_malloc_r+0x194>
  40732a:	f000 fad5 	bl	4078d8 <__malloc_lock>
  40732e:	2610      	movs	r6, #16
  407330:	2318      	movs	r3, #24
  407332:	2002      	movs	r0, #2
  407334:	4f79      	ldr	r7, [pc, #484]	; (40751c <_malloc_r+0x344>)
  407336:	443b      	add	r3, r7
  407338:	f1a3 0208 	sub.w	r2, r3, #8
  40733c:	685c      	ldr	r4, [r3, #4]
  40733e:	4294      	cmp	r4, r2
  407340:	f000 813d 	beq.w	4075be <_malloc_r+0x3e6>
  407344:	6863      	ldr	r3, [r4, #4]
  407346:	68e1      	ldr	r1, [r4, #12]
  407348:	68a6      	ldr	r6, [r4, #8]
  40734a:	f023 0303 	bic.w	r3, r3, #3
  40734e:	4423      	add	r3, r4
  407350:	4628      	mov	r0, r5
  407352:	685a      	ldr	r2, [r3, #4]
  407354:	60f1      	str	r1, [r6, #12]
  407356:	f042 0201 	orr.w	r2, r2, #1
  40735a:	608e      	str	r6, [r1, #8]
  40735c:	605a      	str	r2, [r3, #4]
  40735e:	f000 fac1 	bl	4078e4 <__malloc_unlock>
  407362:	3408      	adds	r4, #8
  407364:	4620      	mov	r0, r4
  407366:	b003      	add	sp, #12
  407368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40736c:	2400      	movs	r4, #0
  40736e:	230c      	movs	r3, #12
  407370:	4620      	mov	r0, r4
  407372:	602b      	str	r3, [r5, #0]
  407374:	b003      	add	sp, #12
  407376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40737a:	2040      	movs	r0, #64	; 0x40
  40737c:	f44f 7300 	mov.w	r3, #512	; 0x200
  407380:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  407384:	e74a      	b.n	40721c <_malloc_r+0x44>
  407386:	4423      	add	r3, r4
  407388:	68e1      	ldr	r1, [r4, #12]
  40738a:	685a      	ldr	r2, [r3, #4]
  40738c:	68a6      	ldr	r6, [r4, #8]
  40738e:	f042 0201 	orr.w	r2, r2, #1
  407392:	60f1      	str	r1, [r6, #12]
  407394:	4628      	mov	r0, r5
  407396:	608e      	str	r6, [r1, #8]
  407398:	605a      	str	r2, [r3, #4]
  40739a:	f000 faa3 	bl	4078e4 <__malloc_unlock>
  40739e:	3408      	adds	r4, #8
  4073a0:	4620      	mov	r0, r4
  4073a2:	b003      	add	sp, #12
  4073a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4073a8:	4423      	add	r3, r4
  4073aa:	4628      	mov	r0, r5
  4073ac:	685a      	ldr	r2, [r3, #4]
  4073ae:	f042 0201 	orr.w	r2, r2, #1
  4073b2:	605a      	str	r2, [r3, #4]
  4073b4:	f000 fa96 	bl	4078e4 <__malloc_unlock>
  4073b8:	3408      	adds	r4, #8
  4073ba:	4620      	mov	r0, r4
  4073bc:	b003      	add	sp, #12
  4073be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4073c2:	68bc      	ldr	r4, [r7, #8]
  4073c4:	6863      	ldr	r3, [r4, #4]
  4073c6:	f023 0803 	bic.w	r8, r3, #3
  4073ca:	45b0      	cmp	r8, r6
  4073cc:	d304      	bcc.n	4073d8 <_malloc_r+0x200>
  4073ce:	eba8 0306 	sub.w	r3, r8, r6
  4073d2:	2b0f      	cmp	r3, #15
  4073d4:	f300 8085 	bgt.w	4074e2 <_malloc_r+0x30a>
  4073d8:	f8df 9158 	ldr.w	r9, [pc, #344]	; 407534 <_malloc_r+0x35c>
  4073dc:	4b50      	ldr	r3, [pc, #320]	; (407520 <_malloc_r+0x348>)
  4073de:	f8d9 2000 	ldr.w	r2, [r9]
  4073e2:	681b      	ldr	r3, [r3, #0]
  4073e4:	3201      	adds	r2, #1
  4073e6:	4433      	add	r3, r6
  4073e8:	eb04 0a08 	add.w	sl, r4, r8
  4073ec:	f000 8155 	beq.w	40769a <_malloc_r+0x4c2>
  4073f0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4073f4:	330f      	adds	r3, #15
  4073f6:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4073fa:	f02b 0b0f 	bic.w	fp, fp, #15
  4073fe:	4659      	mov	r1, fp
  407400:	4628      	mov	r0, r5
  407402:	f000 ff15 	bl	408230 <_sbrk_r>
  407406:	1c41      	adds	r1, r0, #1
  407408:	4602      	mov	r2, r0
  40740a:	f000 80fc 	beq.w	407606 <_malloc_r+0x42e>
  40740e:	4582      	cmp	sl, r0
  407410:	f200 80f7 	bhi.w	407602 <_malloc_r+0x42a>
  407414:	4b43      	ldr	r3, [pc, #268]	; (407524 <_malloc_r+0x34c>)
  407416:	6819      	ldr	r1, [r3, #0]
  407418:	4459      	add	r1, fp
  40741a:	6019      	str	r1, [r3, #0]
  40741c:	f000 814d 	beq.w	4076ba <_malloc_r+0x4e2>
  407420:	f8d9 0000 	ldr.w	r0, [r9]
  407424:	3001      	adds	r0, #1
  407426:	bf1b      	ittet	ne
  407428:	eba2 0a0a 	subne.w	sl, r2, sl
  40742c:	4451      	addne	r1, sl
  40742e:	f8c9 2000 	streq.w	r2, [r9]
  407432:	6019      	strne	r1, [r3, #0]
  407434:	f012 0107 	ands.w	r1, r2, #7
  407438:	f000 8115 	beq.w	407666 <_malloc_r+0x48e>
  40743c:	f1c1 0008 	rsb	r0, r1, #8
  407440:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  407444:	4402      	add	r2, r0
  407446:	3108      	adds	r1, #8
  407448:	eb02 090b 	add.w	r9, r2, fp
  40744c:	f3c9 090b 	ubfx	r9, r9, #0, #12
  407450:	eba1 0909 	sub.w	r9, r1, r9
  407454:	4649      	mov	r1, r9
  407456:	4628      	mov	r0, r5
  407458:	9301      	str	r3, [sp, #4]
  40745a:	9200      	str	r2, [sp, #0]
  40745c:	f000 fee8 	bl	408230 <_sbrk_r>
  407460:	1c43      	adds	r3, r0, #1
  407462:	e89d 000c 	ldmia.w	sp, {r2, r3}
  407466:	f000 8143 	beq.w	4076f0 <_malloc_r+0x518>
  40746a:	1a80      	subs	r0, r0, r2
  40746c:	4448      	add	r0, r9
  40746e:	f040 0001 	orr.w	r0, r0, #1
  407472:	6819      	ldr	r1, [r3, #0]
  407474:	60ba      	str	r2, [r7, #8]
  407476:	4449      	add	r1, r9
  407478:	42bc      	cmp	r4, r7
  40747a:	6050      	str	r0, [r2, #4]
  40747c:	6019      	str	r1, [r3, #0]
  40747e:	d017      	beq.n	4074b0 <_malloc_r+0x2d8>
  407480:	f1b8 0f0f 	cmp.w	r8, #15
  407484:	f240 80fb 	bls.w	40767e <_malloc_r+0x4a6>
  407488:	6860      	ldr	r0, [r4, #4]
  40748a:	f1a8 020c 	sub.w	r2, r8, #12
  40748e:	f022 0207 	bic.w	r2, r2, #7
  407492:	eb04 0e02 	add.w	lr, r4, r2
  407496:	f000 0001 	and.w	r0, r0, #1
  40749a:	f04f 0c05 	mov.w	ip, #5
  40749e:	4310      	orrs	r0, r2
  4074a0:	2a0f      	cmp	r2, #15
  4074a2:	6060      	str	r0, [r4, #4]
  4074a4:	f8ce c004 	str.w	ip, [lr, #4]
  4074a8:	f8ce c008 	str.w	ip, [lr, #8]
  4074ac:	f200 8117 	bhi.w	4076de <_malloc_r+0x506>
  4074b0:	4b1d      	ldr	r3, [pc, #116]	; (407528 <_malloc_r+0x350>)
  4074b2:	68bc      	ldr	r4, [r7, #8]
  4074b4:	681a      	ldr	r2, [r3, #0]
  4074b6:	4291      	cmp	r1, r2
  4074b8:	bf88      	it	hi
  4074ba:	6019      	strhi	r1, [r3, #0]
  4074bc:	4b1b      	ldr	r3, [pc, #108]	; (40752c <_malloc_r+0x354>)
  4074be:	681a      	ldr	r2, [r3, #0]
  4074c0:	4291      	cmp	r1, r2
  4074c2:	6862      	ldr	r2, [r4, #4]
  4074c4:	bf88      	it	hi
  4074c6:	6019      	strhi	r1, [r3, #0]
  4074c8:	f022 0203 	bic.w	r2, r2, #3
  4074cc:	4296      	cmp	r6, r2
  4074ce:	eba2 0306 	sub.w	r3, r2, r6
  4074d2:	d801      	bhi.n	4074d8 <_malloc_r+0x300>
  4074d4:	2b0f      	cmp	r3, #15
  4074d6:	dc04      	bgt.n	4074e2 <_malloc_r+0x30a>
  4074d8:	4628      	mov	r0, r5
  4074da:	f000 fa03 	bl	4078e4 <__malloc_unlock>
  4074de:	2400      	movs	r4, #0
  4074e0:	e740      	b.n	407364 <_malloc_r+0x18c>
  4074e2:	19a2      	adds	r2, r4, r6
  4074e4:	f043 0301 	orr.w	r3, r3, #1
  4074e8:	f046 0601 	orr.w	r6, r6, #1
  4074ec:	6066      	str	r6, [r4, #4]
  4074ee:	4628      	mov	r0, r5
  4074f0:	60ba      	str	r2, [r7, #8]
  4074f2:	6053      	str	r3, [r2, #4]
  4074f4:	f000 f9f6 	bl	4078e4 <__malloc_unlock>
  4074f8:	3408      	adds	r4, #8
  4074fa:	4620      	mov	r0, r4
  4074fc:	b003      	add	sp, #12
  4074fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407502:	2b14      	cmp	r3, #20
  407504:	d971      	bls.n	4075ea <_malloc_r+0x412>
  407506:	2b54      	cmp	r3, #84	; 0x54
  407508:	f200 80a3 	bhi.w	407652 <_malloc_r+0x47a>
  40750c:	0b33      	lsrs	r3, r6, #12
  40750e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  407512:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  407516:	00c3      	lsls	r3, r0, #3
  407518:	e680      	b.n	40721c <_malloc_r+0x44>
  40751a:	bf00      	nop
  40751c:	20000648 	.word	0x20000648
  407520:	20000cc8 	.word	0x20000cc8
  407524:	20000c98 	.word	0x20000c98
  407528:	20000cc0 	.word	0x20000cc0
  40752c:	20000cc4 	.word	0x20000cc4
  407530:	20000650 	.word	0x20000650
  407534:	20000a50 	.word	0x20000a50
  407538:	0a5a      	lsrs	r2, r3, #9
  40753a:	2a04      	cmp	r2, #4
  40753c:	d95b      	bls.n	4075f6 <_malloc_r+0x41e>
  40753e:	2a14      	cmp	r2, #20
  407540:	f200 80ae 	bhi.w	4076a0 <_malloc_r+0x4c8>
  407544:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  407548:	00c9      	lsls	r1, r1, #3
  40754a:	325b      	adds	r2, #91	; 0x5b
  40754c:	eb07 0c01 	add.w	ip, r7, r1
  407550:	5879      	ldr	r1, [r7, r1]
  407552:	f1ac 0c08 	sub.w	ip, ip, #8
  407556:	458c      	cmp	ip, r1
  407558:	f000 8088 	beq.w	40766c <_malloc_r+0x494>
  40755c:	684a      	ldr	r2, [r1, #4]
  40755e:	f022 0203 	bic.w	r2, r2, #3
  407562:	4293      	cmp	r3, r2
  407564:	d273      	bcs.n	40764e <_malloc_r+0x476>
  407566:	6889      	ldr	r1, [r1, #8]
  407568:	458c      	cmp	ip, r1
  40756a:	d1f7      	bne.n	40755c <_malloc_r+0x384>
  40756c:	f8dc 200c 	ldr.w	r2, [ip, #12]
  407570:	687b      	ldr	r3, [r7, #4]
  407572:	60e2      	str	r2, [r4, #12]
  407574:	f8c4 c008 	str.w	ip, [r4, #8]
  407578:	6094      	str	r4, [r2, #8]
  40757a:	f8cc 400c 	str.w	r4, [ip, #12]
  40757e:	e68f      	b.n	4072a0 <_malloc_r+0xc8>
  407580:	19a1      	adds	r1, r4, r6
  407582:	f046 0c01 	orr.w	ip, r6, #1
  407586:	f042 0601 	orr.w	r6, r2, #1
  40758a:	f8c4 c004 	str.w	ip, [r4, #4]
  40758e:	4628      	mov	r0, r5
  407590:	6179      	str	r1, [r7, #20]
  407592:	6139      	str	r1, [r7, #16]
  407594:	f8c1 e00c 	str.w	lr, [r1, #12]
  407598:	f8c1 e008 	str.w	lr, [r1, #8]
  40759c:	604e      	str	r6, [r1, #4]
  40759e:	50e2      	str	r2, [r4, r3]
  4075a0:	f000 f9a0 	bl	4078e4 <__malloc_unlock>
  4075a4:	3408      	adds	r4, #8
  4075a6:	e6dd      	b.n	407364 <_malloc_r+0x18c>
  4075a8:	687b      	ldr	r3, [r7, #4]
  4075aa:	e679      	b.n	4072a0 <_malloc_r+0xc8>
  4075ac:	f108 0801 	add.w	r8, r8, #1
  4075b0:	f018 0f03 	tst.w	r8, #3
  4075b4:	f10c 0c08 	add.w	ip, ip, #8
  4075b8:	f47f ae85 	bne.w	4072c6 <_malloc_r+0xee>
  4075bc:	e02d      	b.n	40761a <_malloc_r+0x442>
  4075be:	68dc      	ldr	r4, [r3, #12]
  4075c0:	42a3      	cmp	r3, r4
  4075c2:	bf08      	it	eq
  4075c4:	3002      	addeq	r0, #2
  4075c6:	f43f ae3e 	beq.w	407246 <_malloc_r+0x6e>
  4075ca:	e6bb      	b.n	407344 <_malloc_r+0x16c>
  4075cc:	4419      	add	r1, r3
  4075ce:	461c      	mov	r4, r3
  4075d0:	684a      	ldr	r2, [r1, #4]
  4075d2:	68db      	ldr	r3, [r3, #12]
  4075d4:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4075d8:	f042 0201 	orr.w	r2, r2, #1
  4075dc:	604a      	str	r2, [r1, #4]
  4075de:	4628      	mov	r0, r5
  4075e0:	60f3      	str	r3, [r6, #12]
  4075e2:	609e      	str	r6, [r3, #8]
  4075e4:	f000 f97e 	bl	4078e4 <__malloc_unlock>
  4075e8:	e6bc      	b.n	407364 <_malloc_r+0x18c>
  4075ea:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4075ee:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4075f2:	00c3      	lsls	r3, r0, #3
  4075f4:	e612      	b.n	40721c <_malloc_r+0x44>
  4075f6:	099a      	lsrs	r2, r3, #6
  4075f8:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4075fc:	00c9      	lsls	r1, r1, #3
  4075fe:	3238      	adds	r2, #56	; 0x38
  407600:	e7a4      	b.n	40754c <_malloc_r+0x374>
  407602:	42bc      	cmp	r4, r7
  407604:	d054      	beq.n	4076b0 <_malloc_r+0x4d8>
  407606:	68bc      	ldr	r4, [r7, #8]
  407608:	6862      	ldr	r2, [r4, #4]
  40760a:	f022 0203 	bic.w	r2, r2, #3
  40760e:	e75d      	b.n	4074cc <_malloc_r+0x2f4>
  407610:	f859 3908 	ldr.w	r3, [r9], #-8
  407614:	4599      	cmp	r9, r3
  407616:	f040 8086 	bne.w	407726 <_malloc_r+0x54e>
  40761a:	f010 0f03 	tst.w	r0, #3
  40761e:	f100 30ff 	add.w	r0, r0, #4294967295
  407622:	d1f5      	bne.n	407610 <_malloc_r+0x438>
  407624:	687b      	ldr	r3, [r7, #4]
  407626:	ea23 0304 	bic.w	r3, r3, r4
  40762a:	607b      	str	r3, [r7, #4]
  40762c:	0064      	lsls	r4, r4, #1
  40762e:	429c      	cmp	r4, r3
  407630:	f63f aec7 	bhi.w	4073c2 <_malloc_r+0x1ea>
  407634:	2c00      	cmp	r4, #0
  407636:	f43f aec4 	beq.w	4073c2 <_malloc_r+0x1ea>
  40763a:	421c      	tst	r4, r3
  40763c:	4640      	mov	r0, r8
  40763e:	f47f ae3e 	bne.w	4072be <_malloc_r+0xe6>
  407642:	0064      	lsls	r4, r4, #1
  407644:	421c      	tst	r4, r3
  407646:	f100 0004 	add.w	r0, r0, #4
  40764a:	d0fa      	beq.n	407642 <_malloc_r+0x46a>
  40764c:	e637      	b.n	4072be <_malloc_r+0xe6>
  40764e:	468c      	mov	ip, r1
  407650:	e78c      	b.n	40756c <_malloc_r+0x394>
  407652:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  407656:	d815      	bhi.n	407684 <_malloc_r+0x4ac>
  407658:	0bf3      	lsrs	r3, r6, #15
  40765a:	f103 0078 	add.w	r0, r3, #120	; 0x78
  40765e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  407662:	00c3      	lsls	r3, r0, #3
  407664:	e5da      	b.n	40721c <_malloc_r+0x44>
  407666:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40766a:	e6ed      	b.n	407448 <_malloc_r+0x270>
  40766c:	687b      	ldr	r3, [r7, #4]
  40766e:	1092      	asrs	r2, r2, #2
  407670:	2101      	movs	r1, #1
  407672:	fa01 f202 	lsl.w	r2, r1, r2
  407676:	4313      	orrs	r3, r2
  407678:	607b      	str	r3, [r7, #4]
  40767a:	4662      	mov	r2, ip
  40767c:	e779      	b.n	407572 <_malloc_r+0x39a>
  40767e:	2301      	movs	r3, #1
  407680:	6053      	str	r3, [r2, #4]
  407682:	e729      	b.n	4074d8 <_malloc_r+0x300>
  407684:	f240 5254 	movw	r2, #1364	; 0x554
  407688:	4293      	cmp	r3, r2
  40768a:	d822      	bhi.n	4076d2 <_malloc_r+0x4fa>
  40768c:	0cb3      	lsrs	r3, r6, #18
  40768e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  407692:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  407696:	00c3      	lsls	r3, r0, #3
  407698:	e5c0      	b.n	40721c <_malloc_r+0x44>
  40769a:	f103 0b10 	add.w	fp, r3, #16
  40769e:	e6ae      	b.n	4073fe <_malloc_r+0x226>
  4076a0:	2a54      	cmp	r2, #84	; 0x54
  4076a2:	d829      	bhi.n	4076f8 <_malloc_r+0x520>
  4076a4:	0b1a      	lsrs	r2, r3, #12
  4076a6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  4076aa:	00c9      	lsls	r1, r1, #3
  4076ac:	326e      	adds	r2, #110	; 0x6e
  4076ae:	e74d      	b.n	40754c <_malloc_r+0x374>
  4076b0:	4b20      	ldr	r3, [pc, #128]	; (407734 <_malloc_r+0x55c>)
  4076b2:	6819      	ldr	r1, [r3, #0]
  4076b4:	4459      	add	r1, fp
  4076b6:	6019      	str	r1, [r3, #0]
  4076b8:	e6b2      	b.n	407420 <_malloc_r+0x248>
  4076ba:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4076be:	2800      	cmp	r0, #0
  4076c0:	f47f aeae 	bne.w	407420 <_malloc_r+0x248>
  4076c4:	eb08 030b 	add.w	r3, r8, fp
  4076c8:	68ba      	ldr	r2, [r7, #8]
  4076ca:	f043 0301 	orr.w	r3, r3, #1
  4076ce:	6053      	str	r3, [r2, #4]
  4076d0:	e6ee      	b.n	4074b0 <_malloc_r+0x2d8>
  4076d2:	207f      	movs	r0, #127	; 0x7f
  4076d4:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4076d8:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4076dc:	e59e      	b.n	40721c <_malloc_r+0x44>
  4076de:	f104 0108 	add.w	r1, r4, #8
  4076e2:	4628      	mov	r0, r5
  4076e4:	9300      	str	r3, [sp, #0]
  4076e6:	f7ff fc7f 	bl	406fe8 <_free_r>
  4076ea:	9b00      	ldr	r3, [sp, #0]
  4076ec:	6819      	ldr	r1, [r3, #0]
  4076ee:	e6df      	b.n	4074b0 <_malloc_r+0x2d8>
  4076f0:	2001      	movs	r0, #1
  4076f2:	f04f 0900 	mov.w	r9, #0
  4076f6:	e6bc      	b.n	407472 <_malloc_r+0x29a>
  4076f8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4076fc:	d805      	bhi.n	40770a <_malloc_r+0x532>
  4076fe:	0bda      	lsrs	r2, r3, #15
  407700:	f102 0178 	add.w	r1, r2, #120	; 0x78
  407704:	00c9      	lsls	r1, r1, #3
  407706:	3277      	adds	r2, #119	; 0x77
  407708:	e720      	b.n	40754c <_malloc_r+0x374>
  40770a:	f240 5154 	movw	r1, #1364	; 0x554
  40770e:	428a      	cmp	r2, r1
  407710:	d805      	bhi.n	40771e <_malloc_r+0x546>
  407712:	0c9a      	lsrs	r2, r3, #18
  407714:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  407718:	00c9      	lsls	r1, r1, #3
  40771a:	327c      	adds	r2, #124	; 0x7c
  40771c:	e716      	b.n	40754c <_malloc_r+0x374>
  40771e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  407722:	227e      	movs	r2, #126	; 0x7e
  407724:	e712      	b.n	40754c <_malloc_r+0x374>
  407726:	687b      	ldr	r3, [r7, #4]
  407728:	e780      	b.n	40762c <_malloc_r+0x454>
  40772a:	08f0      	lsrs	r0, r6, #3
  40772c:	f106 0308 	add.w	r3, r6, #8
  407730:	e600      	b.n	407334 <_malloc_r+0x15c>
  407732:	bf00      	nop
  407734:	20000c98 	.word	0x20000c98

00407738 <__ascii_mbtowc>:
  407738:	b082      	sub	sp, #8
  40773a:	b149      	cbz	r1, 407750 <__ascii_mbtowc+0x18>
  40773c:	b15a      	cbz	r2, 407756 <__ascii_mbtowc+0x1e>
  40773e:	b16b      	cbz	r3, 40775c <__ascii_mbtowc+0x24>
  407740:	7813      	ldrb	r3, [r2, #0]
  407742:	600b      	str	r3, [r1, #0]
  407744:	7812      	ldrb	r2, [r2, #0]
  407746:	1c10      	adds	r0, r2, #0
  407748:	bf18      	it	ne
  40774a:	2001      	movne	r0, #1
  40774c:	b002      	add	sp, #8
  40774e:	4770      	bx	lr
  407750:	a901      	add	r1, sp, #4
  407752:	2a00      	cmp	r2, #0
  407754:	d1f3      	bne.n	40773e <__ascii_mbtowc+0x6>
  407756:	4610      	mov	r0, r2
  407758:	b002      	add	sp, #8
  40775a:	4770      	bx	lr
  40775c:	f06f 0001 	mvn.w	r0, #1
  407760:	e7f4      	b.n	40774c <__ascii_mbtowc+0x14>
  407762:	bf00      	nop
	...

00407770 <memchr>:
  407770:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  407774:	2a10      	cmp	r2, #16
  407776:	db2b      	blt.n	4077d0 <memchr+0x60>
  407778:	f010 0f07 	tst.w	r0, #7
  40777c:	d008      	beq.n	407790 <memchr+0x20>
  40777e:	f810 3b01 	ldrb.w	r3, [r0], #1
  407782:	3a01      	subs	r2, #1
  407784:	428b      	cmp	r3, r1
  407786:	d02d      	beq.n	4077e4 <memchr+0x74>
  407788:	f010 0f07 	tst.w	r0, #7
  40778c:	b342      	cbz	r2, 4077e0 <memchr+0x70>
  40778e:	d1f6      	bne.n	40777e <memchr+0xe>
  407790:	b4f0      	push	{r4, r5, r6, r7}
  407792:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  407796:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40779a:	f022 0407 	bic.w	r4, r2, #7
  40779e:	f07f 0700 	mvns.w	r7, #0
  4077a2:	2300      	movs	r3, #0
  4077a4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4077a8:	3c08      	subs	r4, #8
  4077aa:	ea85 0501 	eor.w	r5, r5, r1
  4077ae:	ea86 0601 	eor.w	r6, r6, r1
  4077b2:	fa85 f547 	uadd8	r5, r5, r7
  4077b6:	faa3 f587 	sel	r5, r3, r7
  4077ba:	fa86 f647 	uadd8	r6, r6, r7
  4077be:	faa5 f687 	sel	r6, r5, r7
  4077c2:	b98e      	cbnz	r6, 4077e8 <memchr+0x78>
  4077c4:	d1ee      	bne.n	4077a4 <memchr+0x34>
  4077c6:	bcf0      	pop	{r4, r5, r6, r7}
  4077c8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4077cc:	f002 0207 	and.w	r2, r2, #7
  4077d0:	b132      	cbz	r2, 4077e0 <memchr+0x70>
  4077d2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4077d6:	3a01      	subs	r2, #1
  4077d8:	ea83 0301 	eor.w	r3, r3, r1
  4077dc:	b113      	cbz	r3, 4077e4 <memchr+0x74>
  4077de:	d1f8      	bne.n	4077d2 <memchr+0x62>
  4077e0:	2000      	movs	r0, #0
  4077e2:	4770      	bx	lr
  4077e4:	3801      	subs	r0, #1
  4077e6:	4770      	bx	lr
  4077e8:	2d00      	cmp	r5, #0
  4077ea:	bf06      	itte	eq
  4077ec:	4635      	moveq	r5, r6
  4077ee:	3803      	subeq	r0, #3
  4077f0:	3807      	subne	r0, #7
  4077f2:	f015 0f01 	tst.w	r5, #1
  4077f6:	d107      	bne.n	407808 <memchr+0x98>
  4077f8:	3001      	adds	r0, #1
  4077fa:	f415 7f80 	tst.w	r5, #256	; 0x100
  4077fe:	bf02      	ittt	eq
  407800:	3001      	addeq	r0, #1
  407802:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  407806:	3001      	addeq	r0, #1
  407808:	bcf0      	pop	{r4, r5, r6, r7}
  40780a:	3801      	subs	r0, #1
  40780c:	4770      	bx	lr
  40780e:	bf00      	nop

00407810 <memmove>:
  407810:	4288      	cmp	r0, r1
  407812:	b5f0      	push	{r4, r5, r6, r7, lr}
  407814:	d90d      	bls.n	407832 <memmove+0x22>
  407816:	188b      	adds	r3, r1, r2
  407818:	4298      	cmp	r0, r3
  40781a:	d20a      	bcs.n	407832 <memmove+0x22>
  40781c:	1884      	adds	r4, r0, r2
  40781e:	2a00      	cmp	r2, #0
  407820:	d051      	beq.n	4078c6 <memmove+0xb6>
  407822:	4622      	mov	r2, r4
  407824:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  407828:	f802 4d01 	strb.w	r4, [r2, #-1]!
  40782c:	4299      	cmp	r1, r3
  40782e:	d1f9      	bne.n	407824 <memmove+0x14>
  407830:	bdf0      	pop	{r4, r5, r6, r7, pc}
  407832:	2a0f      	cmp	r2, #15
  407834:	d948      	bls.n	4078c8 <memmove+0xb8>
  407836:	ea41 0300 	orr.w	r3, r1, r0
  40783a:	079b      	lsls	r3, r3, #30
  40783c:	d146      	bne.n	4078cc <memmove+0xbc>
  40783e:	f100 0410 	add.w	r4, r0, #16
  407842:	f101 0310 	add.w	r3, r1, #16
  407846:	4615      	mov	r5, r2
  407848:	f853 6c10 	ldr.w	r6, [r3, #-16]
  40784c:	f844 6c10 	str.w	r6, [r4, #-16]
  407850:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  407854:	f844 6c0c 	str.w	r6, [r4, #-12]
  407858:	f853 6c08 	ldr.w	r6, [r3, #-8]
  40785c:	f844 6c08 	str.w	r6, [r4, #-8]
  407860:	3d10      	subs	r5, #16
  407862:	f853 6c04 	ldr.w	r6, [r3, #-4]
  407866:	f844 6c04 	str.w	r6, [r4, #-4]
  40786a:	2d0f      	cmp	r5, #15
  40786c:	f103 0310 	add.w	r3, r3, #16
  407870:	f104 0410 	add.w	r4, r4, #16
  407874:	d8e8      	bhi.n	407848 <memmove+0x38>
  407876:	f1a2 0310 	sub.w	r3, r2, #16
  40787a:	f023 030f 	bic.w	r3, r3, #15
  40787e:	f002 0e0f 	and.w	lr, r2, #15
  407882:	3310      	adds	r3, #16
  407884:	f1be 0f03 	cmp.w	lr, #3
  407888:	4419      	add	r1, r3
  40788a:	4403      	add	r3, r0
  40788c:	d921      	bls.n	4078d2 <memmove+0xc2>
  40788e:	1f1e      	subs	r6, r3, #4
  407890:	460d      	mov	r5, r1
  407892:	4674      	mov	r4, lr
  407894:	3c04      	subs	r4, #4
  407896:	f855 7b04 	ldr.w	r7, [r5], #4
  40789a:	f846 7f04 	str.w	r7, [r6, #4]!
  40789e:	2c03      	cmp	r4, #3
  4078a0:	d8f8      	bhi.n	407894 <memmove+0x84>
  4078a2:	f1ae 0404 	sub.w	r4, lr, #4
  4078a6:	f024 0403 	bic.w	r4, r4, #3
  4078aa:	3404      	adds	r4, #4
  4078ac:	4421      	add	r1, r4
  4078ae:	4423      	add	r3, r4
  4078b0:	f002 0203 	and.w	r2, r2, #3
  4078b4:	b162      	cbz	r2, 4078d0 <memmove+0xc0>
  4078b6:	3b01      	subs	r3, #1
  4078b8:	440a      	add	r2, r1
  4078ba:	f811 4b01 	ldrb.w	r4, [r1], #1
  4078be:	f803 4f01 	strb.w	r4, [r3, #1]!
  4078c2:	428a      	cmp	r2, r1
  4078c4:	d1f9      	bne.n	4078ba <memmove+0xaa>
  4078c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4078c8:	4603      	mov	r3, r0
  4078ca:	e7f3      	b.n	4078b4 <memmove+0xa4>
  4078cc:	4603      	mov	r3, r0
  4078ce:	e7f2      	b.n	4078b6 <memmove+0xa6>
  4078d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4078d2:	4672      	mov	r2, lr
  4078d4:	e7ee      	b.n	4078b4 <memmove+0xa4>
  4078d6:	bf00      	nop

004078d8 <__malloc_lock>:
  4078d8:	4801      	ldr	r0, [pc, #4]	; (4078e0 <__malloc_lock+0x8>)
  4078da:	f7ff bc79 	b.w	4071d0 <__retarget_lock_acquire_recursive>
  4078de:	bf00      	nop
  4078e0:	20000d38 	.word	0x20000d38

004078e4 <__malloc_unlock>:
  4078e4:	4801      	ldr	r0, [pc, #4]	; (4078ec <__malloc_unlock+0x8>)
  4078e6:	f7ff bc75 	b.w	4071d4 <__retarget_lock_release_recursive>
  4078ea:	bf00      	nop
  4078ec:	20000d38 	.word	0x20000d38

004078f0 <_Balloc>:
  4078f0:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4078f2:	b570      	push	{r4, r5, r6, lr}
  4078f4:	4605      	mov	r5, r0
  4078f6:	460c      	mov	r4, r1
  4078f8:	b14b      	cbz	r3, 40790e <_Balloc+0x1e>
  4078fa:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  4078fe:	b180      	cbz	r0, 407922 <_Balloc+0x32>
  407900:	6802      	ldr	r2, [r0, #0]
  407902:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  407906:	2300      	movs	r3, #0
  407908:	6103      	str	r3, [r0, #16]
  40790a:	60c3      	str	r3, [r0, #12]
  40790c:	bd70      	pop	{r4, r5, r6, pc}
  40790e:	2221      	movs	r2, #33	; 0x21
  407910:	2104      	movs	r1, #4
  407912:	f000 fd8d 	bl	408430 <_calloc_r>
  407916:	64e8      	str	r0, [r5, #76]	; 0x4c
  407918:	4603      	mov	r3, r0
  40791a:	2800      	cmp	r0, #0
  40791c:	d1ed      	bne.n	4078fa <_Balloc+0xa>
  40791e:	2000      	movs	r0, #0
  407920:	bd70      	pop	{r4, r5, r6, pc}
  407922:	2101      	movs	r1, #1
  407924:	fa01 f604 	lsl.w	r6, r1, r4
  407928:	1d72      	adds	r2, r6, #5
  40792a:	4628      	mov	r0, r5
  40792c:	0092      	lsls	r2, r2, #2
  40792e:	f000 fd7f 	bl	408430 <_calloc_r>
  407932:	2800      	cmp	r0, #0
  407934:	d0f3      	beq.n	40791e <_Balloc+0x2e>
  407936:	6044      	str	r4, [r0, #4]
  407938:	6086      	str	r6, [r0, #8]
  40793a:	e7e4      	b.n	407906 <_Balloc+0x16>

0040793c <_Bfree>:
  40793c:	b131      	cbz	r1, 40794c <_Bfree+0x10>
  40793e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  407940:	684a      	ldr	r2, [r1, #4]
  407942:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  407946:	6008      	str	r0, [r1, #0]
  407948:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  40794c:	4770      	bx	lr
  40794e:	bf00      	nop

00407950 <__multadd>:
  407950:	b5f0      	push	{r4, r5, r6, r7, lr}
  407952:	690c      	ldr	r4, [r1, #16]
  407954:	b083      	sub	sp, #12
  407956:	460d      	mov	r5, r1
  407958:	4606      	mov	r6, r0
  40795a:	f101 0e14 	add.w	lr, r1, #20
  40795e:	2700      	movs	r7, #0
  407960:	f8de 0000 	ldr.w	r0, [lr]
  407964:	b281      	uxth	r1, r0
  407966:	fb02 3301 	mla	r3, r2, r1, r3
  40796a:	0c01      	lsrs	r1, r0, #16
  40796c:	0c18      	lsrs	r0, r3, #16
  40796e:	fb02 0101 	mla	r1, r2, r1, r0
  407972:	b29b      	uxth	r3, r3
  407974:	3701      	adds	r7, #1
  407976:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  40797a:	42bc      	cmp	r4, r7
  40797c:	f84e 3b04 	str.w	r3, [lr], #4
  407980:	ea4f 4311 	mov.w	r3, r1, lsr #16
  407984:	dcec      	bgt.n	407960 <__multadd+0x10>
  407986:	b13b      	cbz	r3, 407998 <__multadd+0x48>
  407988:	68aa      	ldr	r2, [r5, #8]
  40798a:	4294      	cmp	r4, r2
  40798c:	da07      	bge.n	40799e <__multadd+0x4e>
  40798e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  407992:	3401      	adds	r4, #1
  407994:	6153      	str	r3, [r2, #20]
  407996:	612c      	str	r4, [r5, #16]
  407998:	4628      	mov	r0, r5
  40799a:	b003      	add	sp, #12
  40799c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40799e:	6869      	ldr	r1, [r5, #4]
  4079a0:	9301      	str	r3, [sp, #4]
  4079a2:	3101      	adds	r1, #1
  4079a4:	4630      	mov	r0, r6
  4079a6:	f7ff ffa3 	bl	4078f0 <_Balloc>
  4079aa:	692a      	ldr	r2, [r5, #16]
  4079ac:	3202      	adds	r2, #2
  4079ae:	f105 010c 	add.w	r1, r5, #12
  4079b2:	4607      	mov	r7, r0
  4079b4:	0092      	lsls	r2, r2, #2
  4079b6:	300c      	adds	r0, #12
  4079b8:	f7fc ff1c 	bl	4047f4 <memcpy>
  4079bc:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  4079be:	6869      	ldr	r1, [r5, #4]
  4079c0:	9b01      	ldr	r3, [sp, #4]
  4079c2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  4079c6:	6028      	str	r0, [r5, #0]
  4079c8:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  4079cc:	463d      	mov	r5, r7
  4079ce:	e7de      	b.n	40798e <__multadd+0x3e>

004079d0 <__hi0bits>:
  4079d0:	0c02      	lsrs	r2, r0, #16
  4079d2:	0412      	lsls	r2, r2, #16
  4079d4:	4603      	mov	r3, r0
  4079d6:	b9b2      	cbnz	r2, 407a06 <__hi0bits+0x36>
  4079d8:	0403      	lsls	r3, r0, #16
  4079da:	2010      	movs	r0, #16
  4079dc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  4079e0:	bf04      	itt	eq
  4079e2:	021b      	lsleq	r3, r3, #8
  4079e4:	3008      	addeq	r0, #8
  4079e6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  4079ea:	bf04      	itt	eq
  4079ec:	011b      	lsleq	r3, r3, #4
  4079ee:	3004      	addeq	r0, #4
  4079f0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  4079f4:	bf04      	itt	eq
  4079f6:	009b      	lsleq	r3, r3, #2
  4079f8:	3002      	addeq	r0, #2
  4079fa:	2b00      	cmp	r3, #0
  4079fc:	db02      	blt.n	407a04 <__hi0bits+0x34>
  4079fe:	005b      	lsls	r3, r3, #1
  407a00:	d403      	bmi.n	407a0a <__hi0bits+0x3a>
  407a02:	2020      	movs	r0, #32
  407a04:	4770      	bx	lr
  407a06:	2000      	movs	r0, #0
  407a08:	e7e8      	b.n	4079dc <__hi0bits+0xc>
  407a0a:	3001      	adds	r0, #1
  407a0c:	4770      	bx	lr
  407a0e:	bf00      	nop

00407a10 <__lo0bits>:
  407a10:	6803      	ldr	r3, [r0, #0]
  407a12:	f013 0207 	ands.w	r2, r3, #7
  407a16:	4601      	mov	r1, r0
  407a18:	d007      	beq.n	407a2a <__lo0bits+0x1a>
  407a1a:	07da      	lsls	r2, r3, #31
  407a1c:	d421      	bmi.n	407a62 <__lo0bits+0x52>
  407a1e:	0798      	lsls	r0, r3, #30
  407a20:	d421      	bmi.n	407a66 <__lo0bits+0x56>
  407a22:	089b      	lsrs	r3, r3, #2
  407a24:	600b      	str	r3, [r1, #0]
  407a26:	2002      	movs	r0, #2
  407a28:	4770      	bx	lr
  407a2a:	b298      	uxth	r0, r3
  407a2c:	b198      	cbz	r0, 407a56 <__lo0bits+0x46>
  407a2e:	4610      	mov	r0, r2
  407a30:	f013 0fff 	tst.w	r3, #255	; 0xff
  407a34:	bf04      	itt	eq
  407a36:	0a1b      	lsreq	r3, r3, #8
  407a38:	3008      	addeq	r0, #8
  407a3a:	071a      	lsls	r2, r3, #28
  407a3c:	bf04      	itt	eq
  407a3e:	091b      	lsreq	r3, r3, #4
  407a40:	3004      	addeq	r0, #4
  407a42:	079a      	lsls	r2, r3, #30
  407a44:	bf04      	itt	eq
  407a46:	089b      	lsreq	r3, r3, #2
  407a48:	3002      	addeq	r0, #2
  407a4a:	07da      	lsls	r2, r3, #31
  407a4c:	d407      	bmi.n	407a5e <__lo0bits+0x4e>
  407a4e:	085b      	lsrs	r3, r3, #1
  407a50:	d104      	bne.n	407a5c <__lo0bits+0x4c>
  407a52:	2020      	movs	r0, #32
  407a54:	4770      	bx	lr
  407a56:	0c1b      	lsrs	r3, r3, #16
  407a58:	2010      	movs	r0, #16
  407a5a:	e7e9      	b.n	407a30 <__lo0bits+0x20>
  407a5c:	3001      	adds	r0, #1
  407a5e:	600b      	str	r3, [r1, #0]
  407a60:	4770      	bx	lr
  407a62:	2000      	movs	r0, #0
  407a64:	4770      	bx	lr
  407a66:	085b      	lsrs	r3, r3, #1
  407a68:	600b      	str	r3, [r1, #0]
  407a6a:	2001      	movs	r0, #1
  407a6c:	4770      	bx	lr
  407a6e:	bf00      	nop

00407a70 <__i2b>:
  407a70:	b510      	push	{r4, lr}
  407a72:	460c      	mov	r4, r1
  407a74:	2101      	movs	r1, #1
  407a76:	f7ff ff3b 	bl	4078f0 <_Balloc>
  407a7a:	2201      	movs	r2, #1
  407a7c:	6144      	str	r4, [r0, #20]
  407a7e:	6102      	str	r2, [r0, #16]
  407a80:	bd10      	pop	{r4, pc}
  407a82:	bf00      	nop

00407a84 <__multiply>:
  407a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407a88:	690c      	ldr	r4, [r1, #16]
  407a8a:	6915      	ldr	r5, [r2, #16]
  407a8c:	42ac      	cmp	r4, r5
  407a8e:	b083      	sub	sp, #12
  407a90:	468b      	mov	fp, r1
  407a92:	4616      	mov	r6, r2
  407a94:	da04      	bge.n	407aa0 <__multiply+0x1c>
  407a96:	4622      	mov	r2, r4
  407a98:	46b3      	mov	fp, r6
  407a9a:	462c      	mov	r4, r5
  407a9c:	460e      	mov	r6, r1
  407a9e:	4615      	mov	r5, r2
  407aa0:	f8db 3008 	ldr.w	r3, [fp, #8]
  407aa4:	f8db 1004 	ldr.w	r1, [fp, #4]
  407aa8:	eb04 0805 	add.w	r8, r4, r5
  407aac:	4598      	cmp	r8, r3
  407aae:	bfc8      	it	gt
  407ab0:	3101      	addgt	r1, #1
  407ab2:	f7ff ff1d 	bl	4078f0 <_Balloc>
  407ab6:	f100 0914 	add.w	r9, r0, #20
  407aba:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  407abe:	45d1      	cmp	r9, sl
  407ac0:	9000      	str	r0, [sp, #0]
  407ac2:	d205      	bcs.n	407ad0 <__multiply+0x4c>
  407ac4:	464b      	mov	r3, r9
  407ac6:	2100      	movs	r1, #0
  407ac8:	f843 1b04 	str.w	r1, [r3], #4
  407acc:	459a      	cmp	sl, r3
  407ace:	d8fb      	bhi.n	407ac8 <__multiply+0x44>
  407ad0:	f106 0c14 	add.w	ip, r6, #20
  407ad4:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  407ad8:	f10b 0b14 	add.w	fp, fp, #20
  407adc:	459c      	cmp	ip, r3
  407ade:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  407ae2:	d24c      	bcs.n	407b7e <__multiply+0xfa>
  407ae4:	f8cd a004 	str.w	sl, [sp, #4]
  407ae8:	469a      	mov	sl, r3
  407aea:	f8dc 5000 	ldr.w	r5, [ip]
  407aee:	b2af      	uxth	r7, r5
  407af0:	b1ef      	cbz	r7, 407b2e <__multiply+0xaa>
  407af2:	2100      	movs	r1, #0
  407af4:	464d      	mov	r5, r9
  407af6:	465e      	mov	r6, fp
  407af8:	460c      	mov	r4, r1
  407afa:	f856 2b04 	ldr.w	r2, [r6], #4
  407afe:	6828      	ldr	r0, [r5, #0]
  407b00:	b293      	uxth	r3, r2
  407b02:	b281      	uxth	r1, r0
  407b04:	fb07 1303 	mla	r3, r7, r3, r1
  407b08:	0c12      	lsrs	r2, r2, #16
  407b0a:	0c01      	lsrs	r1, r0, #16
  407b0c:	4423      	add	r3, r4
  407b0e:	fb07 1102 	mla	r1, r7, r2, r1
  407b12:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  407b16:	b29b      	uxth	r3, r3
  407b18:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  407b1c:	45b6      	cmp	lr, r6
  407b1e:	f845 3b04 	str.w	r3, [r5], #4
  407b22:	ea4f 4411 	mov.w	r4, r1, lsr #16
  407b26:	d8e8      	bhi.n	407afa <__multiply+0x76>
  407b28:	602c      	str	r4, [r5, #0]
  407b2a:	f8dc 5000 	ldr.w	r5, [ip]
  407b2e:	0c2d      	lsrs	r5, r5, #16
  407b30:	d01d      	beq.n	407b6e <__multiply+0xea>
  407b32:	f8d9 3000 	ldr.w	r3, [r9]
  407b36:	4648      	mov	r0, r9
  407b38:	461c      	mov	r4, r3
  407b3a:	4659      	mov	r1, fp
  407b3c:	2200      	movs	r2, #0
  407b3e:	880e      	ldrh	r6, [r1, #0]
  407b40:	0c24      	lsrs	r4, r4, #16
  407b42:	fb05 4406 	mla	r4, r5, r6, r4
  407b46:	4422      	add	r2, r4
  407b48:	b29b      	uxth	r3, r3
  407b4a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  407b4e:	f840 3b04 	str.w	r3, [r0], #4
  407b52:	f851 3b04 	ldr.w	r3, [r1], #4
  407b56:	6804      	ldr	r4, [r0, #0]
  407b58:	0c1b      	lsrs	r3, r3, #16
  407b5a:	b2a6      	uxth	r6, r4
  407b5c:	fb05 6303 	mla	r3, r5, r3, r6
  407b60:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  407b64:	458e      	cmp	lr, r1
  407b66:	ea4f 4213 	mov.w	r2, r3, lsr #16
  407b6a:	d8e8      	bhi.n	407b3e <__multiply+0xba>
  407b6c:	6003      	str	r3, [r0, #0]
  407b6e:	f10c 0c04 	add.w	ip, ip, #4
  407b72:	45e2      	cmp	sl, ip
  407b74:	f109 0904 	add.w	r9, r9, #4
  407b78:	d8b7      	bhi.n	407aea <__multiply+0x66>
  407b7a:	f8dd a004 	ldr.w	sl, [sp, #4]
  407b7e:	f1b8 0f00 	cmp.w	r8, #0
  407b82:	dd0b      	ble.n	407b9c <__multiply+0x118>
  407b84:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  407b88:	f1aa 0a04 	sub.w	sl, sl, #4
  407b8c:	b11b      	cbz	r3, 407b96 <__multiply+0x112>
  407b8e:	e005      	b.n	407b9c <__multiply+0x118>
  407b90:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  407b94:	b913      	cbnz	r3, 407b9c <__multiply+0x118>
  407b96:	f1b8 0801 	subs.w	r8, r8, #1
  407b9a:	d1f9      	bne.n	407b90 <__multiply+0x10c>
  407b9c:	9800      	ldr	r0, [sp, #0]
  407b9e:	f8c0 8010 	str.w	r8, [r0, #16]
  407ba2:	b003      	add	sp, #12
  407ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407ba8 <__pow5mult>:
  407ba8:	f012 0303 	ands.w	r3, r2, #3
  407bac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407bb0:	4614      	mov	r4, r2
  407bb2:	4607      	mov	r7, r0
  407bb4:	d12e      	bne.n	407c14 <__pow5mult+0x6c>
  407bb6:	460d      	mov	r5, r1
  407bb8:	10a4      	asrs	r4, r4, #2
  407bba:	d01c      	beq.n	407bf6 <__pow5mult+0x4e>
  407bbc:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  407bbe:	b396      	cbz	r6, 407c26 <__pow5mult+0x7e>
  407bc0:	07e3      	lsls	r3, r4, #31
  407bc2:	f04f 0800 	mov.w	r8, #0
  407bc6:	d406      	bmi.n	407bd6 <__pow5mult+0x2e>
  407bc8:	1064      	asrs	r4, r4, #1
  407bca:	d014      	beq.n	407bf6 <__pow5mult+0x4e>
  407bcc:	6830      	ldr	r0, [r6, #0]
  407bce:	b1a8      	cbz	r0, 407bfc <__pow5mult+0x54>
  407bd0:	4606      	mov	r6, r0
  407bd2:	07e3      	lsls	r3, r4, #31
  407bd4:	d5f8      	bpl.n	407bc8 <__pow5mult+0x20>
  407bd6:	4632      	mov	r2, r6
  407bd8:	4629      	mov	r1, r5
  407bda:	4638      	mov	r0, r7
  407bdc:	f7ff ff52 	bl	407a84 <__multiply>
  407be0:	b1b5      	cbz	r5, 407c10 <__pow5mult+0x68>
  407be2:	686a      	ldr	r2, [r5, #4]
  407be4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407be6:	1064      	asrs	r4, r4, #1
  407be8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  407bec:	6029      	str	r1, [r5, #0]
  407bee:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  407bf2:	4605      	mov	r5, r0
  407bf4:	d1ea      	bne.n	407bcc <__pow5mult+0x24>
  407bf6:	4628      	mov	r0, r5
  407bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407bfc:	4632      	mov	r2, r6
  407bfe:	4631      	mov	r1, r6
  407c00:	4638      	mov	r0, r7
  407c02:	f7ff ff3f 	bl	407a84 <__multiply>
  407c06:	6030      	str	r0, [r6, #0]
  407c08:	f8c0 8000 	str.w	r8, [r0]
  407c0c:	4606      	mov	r6, r0
  407c0e:	e7e0      	b.n	407bd2 <__pow5mult+0x2a>
  407c10:	4605      	mov	r5, r0
  407c12:	e7d9      	b.n	407bc8 <__pow5mult+0x20>
  407c14:	1e5a      	subs	r2, r3, #1
  407c16:	4d0b      	ldr	r5, [pc, #44]	; (407c44 <__pow5mult+0x9c>)
  407c18:	2300      	movs	r3, #0
  407c1a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  407c1e:	f7ff fe97 	bl	407950 <__multadd>
  407c22:	4605      	mov	r5, r0
  407c24:	e7c8      	b.n	407bb8 <__pow5mult+0x10>
  407c26:	2101      	movs	r1, #1
  407c28:	4638      	mov	r0, r7
  407c2a:	f7ff fe61 	bl	4078f0 <_Balloc>
  407c2e:	f240 2171 	movw	r1, #625	; 0x271
  407c32:	2201      	movs	r2, #1
  407c34:	2300      	movs	r3, #0
  407c36:	6141      	str	r1, [r0, #20]
  407c38:	6102      	str	r2, [r0, #16]
  407c3a:	4606      	mov	r6, r0
  407c3c:	64b8      	str	r0, [r7, #72]	; 0x48
  407c3e:	6003      	str	r3, [r0, #0]
  407c40:	e7be      	b.n	407bc0 <__pow5mult+0x18>
  407c42:	bf00      	nop
  407c44:	004089b8 	.word	0x004089b8

00407c48 <__lshift>:
  407c48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  407c4c:	4691      	mov	r9, r2
  407c4e:	690a      	ldr	r2, [r1, #16]
  407c50:	688b      	ldr	r3, [r1, #8]
  407c52:	ea4f 1469 	mov.w	r4, r9, asr #5
  407c56:	eb04 0802 	add.w	r8, r4, r2
  407c5a:	f108 0501 	add.w	r5, r8, #1
  407c5e:	429d      	cmp	r5, r3
  407c60:	460e      	mov	r6, r1
  407c62:	4607      	mov	r7, r0
  407c64:	6849      	ldr	r1, [r1, #4]
  407c66:	dd04      	ble.n	407c72 <__lshift+0x2a>
  407c68:	005b      	lsls	r3, r3, #1
  407c6a:	429d      	cmp	r5, r3
  407c6c:	f101 0101 	add.w	r1, r1, #1
  407c70:	dcfa      	bgt.n	407c68 <__lshift+0x20>
  407c72:	4638      	mov	r0, r7
  407c74:	f7ff fe3c 	bl	4078f0 <_Balloc>
  407c78:	2c00      	cmp	r4, #0
  407c7a:	f100 0314 	add.w	r3, r0, #20
  407c7e:	dd06      	ble.n	407c8e <__lshift+0x46>
  407c80:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  407c84:	2100      	movs	r1, #0
  407c86:	f843 1b04 	str.w	r1, [r3], #4
  407c8a:	429a      	cmp	r2, r3
  407c8c:	d1fb      	bne.n	407c86 <__lshift+0x3e>
  407c8e:	6934      	ldr	r4, [r6, #16]
  407c90:	f106 0114 	add.w	r1, r6, #20
  407c94:	f019 091f 	ands.w	r9, r9, #31
  407c98:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  407c9c:	d01d      	beq.n	407cda <__lshift+0x92>
  407c9e:	f1c9 0c20 	rsb	ip, r9, #32
  407ca2:	2200      	movs	r2, #0
  407ca4:	680c      	ldr	r4, [r1, #0]
  407ca6:	fa04 f409 	lsl.w	r4, r4, r9
  407caa:	4314      	orrs	r4, r2
  407cac:	f843 4b04 	str.w	r4, [r3], #4
  407cb0:	f851 2b04 	ldr.w	r2, [r1], #4
  407cb4:	458e      	cmp	lr, r1
  407cb6:	fa22 f20c 	lsr.w	r2, r2, ip
  407cba:	d8f3      	bhi.n	407ca4 <__lshift+0x5c>
  407cbc:	601a      	str	r2, [r3, #0]
  407cbe:	b10a      	cbz	r2, 407cc4 <__lshift+0x7c>
  407cc0:	f108 0502 	add.w	r5, r8, #2
  407cc4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407cc6:	6872      	ldr	r2, [r6, #4]
  407cc8:	3d01      	subs	r5, #1
  407cca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  407cce:	6105      	str	r5, [r0, #16]
  407cd0:	6031      	str	r1, [r6, #0]
  407cd2:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  407cd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407cda:	3b04      	subs	r3, #4
  407cdc:	f851 2b04 	ldr.w	r2, [r1], #4
  407ce0:	f843 2f04 	str.w	r2, [r3, #4]!
  407ce4:	458e      	cmp	lr, r1
  407ce6:	d8f9      	bhi.n	407cdc <__lshift+0x94>
  407ce8:	e7ec      	b.n	407cc4 <__lshift+0x7c>
  407cea:	bf00      	nop

00407cec <__mcmp>:
  407cec:	b430      	push	{r4, r5}
  407cee:	690b      	ldr	r3, [r1, #16]
  407cf0:	4605      	mov	r5, r0
  407cf2:	6900      	ldr	r0, [r0, #16]
  407cf4:	1ac0      	subs	r0, r0, r3
  407cf6:	d10f      	bne.n	407d18 <__mcmp+0x2c>
  407cf8:	009b      	lsls	r3, r3, #2
  407cfa:	3514      	adds	r5, #20
  407cfc:	3114      	adds	r1, #20
  407cfe:	4419      	add	r1, r3
  407d00:	442b      	add	r3, r5
  407d02:	e001      	b.n	407d08 <__mcmp+0x1c>
  407d04:	429d      	cmp	r5, r3
  407d06:	d207      	bcs.n	407d18 <__mcmp+0x2c>
  407d08:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  407d0c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  407d10:	4294      	cmp	r4, r2
  407d12:	d0f7      	beq.n	407d04 <__mcmp+0x18>
  407d14:	d302      	bcc.n	407d1c <__mcmp+0x30>
  407d16:	2001      	movs	r0, #1
  407d18:	bc30      	pop	{r4, r5}
  407d1a:	4770      	bx	lr
  407d1c:	f04f 30ff 	mov.w	r0, #4294967295
  407d20:	e7fa      	b.n	407d18 <__mcmp+0x2c>
  407d22:	bf00      	nop

00407d24 <__mdiff>:
  407d24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407d28:	690f      	ldr	r7, [r1, #16]
  407d2a:	460e      	mov	r6, r1
  407d2c:	6911      	ldr	r1, [r2, #16]
  407d2e:	1a7f      	subs	r7, r7, r1
  407d30:	2f00      	cmp	r7, #0
  407d32:	4690      	mov	r8, r2
  407d34:	d117      	bne.n	407d66 <__mdiff+0x42>
  407d36:	0089      	lsls	r1, r1, #2
  407d38:	f106 0514 	add.w	r5, r6, #20
  407d3c:	f102 0e14 	add.w	lr, r2, #20
  407d40:	186b      	adds	r3, r5, r1
  407d42:	4471      	add	r1, lr
  407d44:	e001      	b.n	407d4a <__mdiff+0x26>
  407d46:	429d      	cmp	r5, r3
  407d48:	d25c      	bcs.n	407e04 <__mdiff+0xe0>
  407d4a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  407d4e:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  407d52:	42a2      	cmp	r2, r4
  407d54:	d0f7      	beq.n	407d46 <__mdiff+0x22>
  407d56:	d25e      	bcs.n	407e16 <__mdiff+0xf2>
  407d58:	4633      	mov	r3, r6
  407d5a:	462c      	mov	r4, r5
  407d5c:	4646      	mov	r6, r8
  407d5e:	4675      	mov	r5, lr
  407d60:	4698      	mov	r8, r3
  407d62:	2701      	movs	r7, #1
  407d64:	e005      	b.n	407d72 <__mdiff+0x4e>
  407d66:	db58      	blt.n	407e1a <__mdiff+0xf6>
  407d68:	f106 0514 	add.w	r5, r6, #20
  407d6c:	f108 0414 	add.w	r4, r8, #20
  407d70:	2700      	movs	r7, #0
  407d72:	6871      	ldr	r1, [r6, #4]
  407d74:	f7ff fdbc 	bl	4078f0 <_Balloc>
  407d78:	f8d8 3010 	ldr.w	r3, [r8, #16]
  407d7c:	6936      	ldr	r6, [r6, #16]
  407d7e:	60c7      	str	r7, [r0, #12]
  407d80:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  407d84:	46a6      	mov	lr, r4
  407d86:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  407d8a:	f100 0414 	add.w	r4, r0, #20
  407d8e:	2300      	movs	r3, #0
  407d90:	f85e 1b04 	ldr.w	r1, [lr], #4
  407d94:	f855 8b04 	ldr.w	r8, [r5], #4
  407d98:	b28a      	uxth	r2, r1
  407d9a:	fa13 f388 	uxtah	r3, r3, r8
  407d9e:	0c09      	lsrs	r1, r1, #16
  407da0:	1a9a      	subs	r2, r3, r2
  407da2:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  407da6:	eb03 4322 	add.w	r3, r3, r2, asr #16
  407daa:	b292      	uxth	r2, r2
  407dac:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  407db0:	45f4      	cmp	ip, lr
  407db2:	f844 2b04 	str.w	r2, [r4], #4
  407db6:	ea4f 4323 	mov.w	r3, r3, asr #16
  407dba:	d8e9      	bhi.n	407d90 <__mdiff+0x6c>
  407dbc:	42af      	cmp	r7, r5
  407dbe:	d917      	bls.n	407df0 <__mdiff+0xcc>
  407dc0:	46a4      	mov	ip, r4
  407dc2:	46ae      	mov	lr, r5
  407dc4:	f85e 2b04 	ldr.w	r2, [lr], #4
  407dc8:	fa13 f382 	uxtah	r3, r3, r2
  407dcc:	1419      	asrs	r1, r3, #16
  407dce:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  407dd2:	b29b      	uxth	r3, r3
  407dd4:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  407dd8:	4577      	cmp	r7, lr
  407dda:	f84c 2b04 	str.w	r2, [ip], #4
  407dde:	ea4f 4321 	mov.w	r3, r1, asr #16
  407de2:	d8ef      	bhi.n	407dc4 <__mdiff+0xa0>
  407de4:	43ed      	mvns	r5, r5
  407de6:	442f      	add	r7, r5
  407de8:	f027 0703 	bic.w	r7, r7, #3
  407dec:	3704      	adds	r7, #4
  407dee:	443c      	add	r4, r7
  407df0:	3c04      	subs	r4, #4
  407df2:	b922      	cbnz	r2, 407dfe <__mdiff+0xda>
  407df4:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  407df8:	3e01      	subs	r6, #1
  407dfa:	2b00      	cmp	r3, #0
  407dfc:	d0fa      	beq.n	407df4 <__mdiff+0xd0>
  407dfe:	6106      	str	r6, [r0, #16]
  407e00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407e04:	2100      	movs	r1, #0
  407e06:	f7ff fd73 	bl	4078f0 <_Balloc>
  407e0a:	2201      	movs	r2, #1
  407e0c:	2300      	movs	r3, #0
  407e0e:	6102      	str	r2, [r0, #16]
  407e10:	6143      	str	r3, [r0, #20]
  407e12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407e16:	4674      	mov	r4, lr
  407e18:	e7ab      	b.n	407d72 <__mdiff+0x4e>
  407e1a:	4633      	mov	r3, r6
  407e1c:	f106 0414 	add.w	r4, r6, #20
  407e20:	f102 0514 	add.w	r5, r2, #20
  407e24:	4616      	mov	r6, r2
  407e26:	2701      	movs	r7, #1
  407e28:	4698      	mov	r8, r3
  407e2a:	e7a2      	b.n	407d72 <__mdiff+0x4e>

00407e2c <__d2b>:
  407e2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407e30:	b082      	sub	sp, #8
  407e32:	2101      	movs	r1, #1
  407e34:	461c      	mov	r4, r3
  407e36:	f3c3 570a 	ubfx	r7, r3, #20, #11
  407e3a:	4615      	mov	r5, r2
  407e3c:	9e08      	ldr	r6, [sp, #32]
  407e3e:	f7ff fd57 	bl	4078f0 <_Balloc>
  407e42:	f3c4 0413 	ubfx	r4, r4, #0, #20
  407e46:	4680      	mov	r8, r0
  407e48:	b10f      	cbz	r7, 407e4e <__d2b+0x22>
  407e4a:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  407e4e:	9401      	str	r4, [sp, #4]
  407e50:	b31d      	cbz	r5, 407e9a <__d2b+0x6e>
  407e52:	a802      	add	r0, sp, #8
  407e54:	f840 5d08 	str.w	r5, [r0, #-8]!
  407e58:	f7ff fdda 	bl	407a10 <__lo0bits>
  407e5c:	2800      	cmp	r0, #0
  407e5e:	d134      	bne.n	407eca <__d2b+0x9e>
  407e60:	e89d 000c 	ldmia.w	sp, {r2, r3}
  407e64:	f8c8 2014 	str.w	r2, [r8, #20]
  407e68:	2b00      	cmp	r3, #0
  407e6a:	bf0c      	ite	eq
  407e6c:	2101      	moveq	r1, #1
  407e6e:	2102      	movne	r1, #2
  407e70:	f8c8 3018 	str.w	r3, [r8, #24]
  407e74:	f8c8 1010 	str.w	r1, [r8, #16]
  407e78:	b9df      	cbnz	r7, 407eb2 <__d2b+0x86>
  407e7a:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  407e7e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  407e82:	6030      	str	r0, [r6, #0]
  407e84:	6918      	ldr	r0, [r3, #16]
  407e86:	f7ff fda3 	bl	4079d0 <__hi0bits>
  407e8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  407e8c:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  407e90:	6018      	str	r0, [r3, #0]
  407e92:	4640      	mov	r0, r8
  407e94:	b002      	add	sp, #8
  407e96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407e9a:	a801      	add	r0, sp, #4
  407e9c:	f7ff fdb8 	bl	407a10 <__lo0bits>
  407ea0:	9b01      	ldr	r3, [sp, #4]
  407ea2:	f8c8 3014 	str.w	r3, [r8, #20]
  407ea6:	2101      	movs	r1, #1
  407ea8:	3020      	adds	r0, #32
  407eaa:	f8c8 1010 	str.w	r1, [r8, #16]
  407eae:	2f00      	cmp	r7, #0
  407eb0:	d0e3      	beq.n	407e7a <__d2b+0x4e>
  407eb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  407eb4:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  407eb8:	4407      	add	r7, r0
  407eba:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  407ebe:	6037      	str	r7, [r6, #0]
  407ec0:	6018      	str	r0, [r3, #0]
  407ec2:	4640      	mov	r0, r8
  407ec4:	b002      	add	sp, #8
  407ec6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407eca:	e89d 000a 	ldmia.w	sp, {r1, r3}
  407ece:	f1c0 0220 	rsb	r2, r0, #32
  407ed2:	fa03 f202 	lsl.w	r2, r3, r2
  407ed6:	430a      	orrs	r2, r1
  407ed8:	40c3      	lsrs	r3, r0
  407eda:	9301      	str	r3, [sp, #4]
  407edc:	f8c8 2014 	str.w	r2, [r8, #20]
  407ee0:	e7c2      	b.n	407e68 <__d2b+0x3c>
  407ee2:	bf00      	nop

00407ee4 <_realloc_r>:
  407ee4:	2900      	cmp	r1, #0
  407ee6:	f000 8095 	beq.w	408014 <_realloc_r+0x130>
  407eea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407eee:	460d      	mov	r5, r1
  407ef0:	4616      	mov	r6, r2
  407ef2:	b083      	sub	sp, #12
  407ef4:	4680      	mov	r8, r0
  407ef6:	f106 070b 	add.w	r7, r6, #11
  407efa:	f7ff fced 	bl	4078d8 <__malloc_lock>
  407efe:	f855 ec04 	ldr.w	lr, [r5, #-4]
  407f02:	2f16      	cmp	r7, #22
  407f04:	f02e 0403 	bic.w	r4, lr, #3
  407f08:	f1a5 0908 	sub.w	r9, r5, #8
  407f0c:	d83c      	bhi.n	407f88 <_realloc_r+0xa4>
  407f0e:	2210      	movs	r2, #16
  407f10:	4617      	mov	r7, r2
  407f12:	42be      	cmp	r6, r7
  407f14:	d83d      	bhi.n	407f92 <_realloc_r+0xae>
  407f16:	4294      	cmp	r4, r2
  407f18:	da43      	bge.n	407fa2 <_realloc_r+0xbe>
  407f1a:	4bc4      	ldr	r3, [pc, #784]	; (40822c <_realloc_r+0x348>)
  407f1c:	6899      	ldr	r1, [r3, #8]
  407f1e:	eb09 0004 	add.w	r0, r9, r4
  407f22:	4288      	cmp	r0, r1
  407f24:	f000 80b4 	beq.w	408090 <_realloc_r+0x1ac>
  407f28:	6843      	ldr	r3, [r0, #4]
  407f2a:	f023 0101 	bic.w	r1, r3, #1
  407f2e:	4401      	add	r1, r0
  407f30:	6849      	ldr	r1, [r1, #4]
  407f32:	07c9      	lsls	r1, r1, #31
  407f34:	d54c      	bpl.n	407fd0 <_realloc_r+0xec>
  407f36:	f01e 0f01 	tst.w	lr, #1
  407f3a:	f000 809b 	beq.w	408074 <_realloc_r+0x190>
  407f3e:	4631      	mov	r1, r6
  407f40:	4640      	mov	r0, r8
  407f42:	f7ff f949 	bl	4071d8 <_malloc_r>
  407f46:	4606      	mov	r6, r0
  407f48:	2800      	cmp	r0, #0
  407f4a:	d03a      	beq.n	407fc2 <_realloc_r+0xde>
  407f4c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  407f50:	f023 0301 	bic.w	r3, r3, #1
  407f54:	444b      	add	r3, r9
  407f56:	f1a0 0208 	sub.w	r2, r0, #8
  407f5a:	429a      	cmp	r2, r3
  407f5c:	f000 8121 	beq.w	4081a2 <_realloc_r+0x2be>
  407f60:	1f22      	subs	r2, r4, #4
  407f62:	2a24      	cmp	r2, #36	; 0x24
  407f64:	f200 8107 	bhi.w	408176 <_realloc_r+0x292>
  407f68:	2a13      	cmp	r2, #19
  407f6a:	f200 80db 	bhi.w	408124 <_realloc_r+0x240>
  407f6e:	4603      	mov	r3, r0
  407f70:	462a      	mov	r2, r5
  407f72:	6811      	ldr	r1, [r2, #0]
  407f74:	6019      	str	r1, [r3, #0]
  407f76:	6851      	ldr	r1, [r2, #4]
  407f78:	6059      	str	r1, [r3, #4]
  407f7a:	6892      	ldr	r2, [r2, #8]
  407f7c:	609a      	str	r2, [r3, #8]
  407f7e:	4629      	mov	r1, r5
  407f80:	4640      	mov	r0, r8
  407f82:	f7ff f831 	bl	406fe8 <_free_r>
  407f86:	e01c      	b.n	407fc2 <_realloc_r+0xde>
  407f88:	f027 0707 	bic.w	r7, r7, #7
  407f8c:	2f00      	cmp	r7, #0
  407f8e:	463a      	mov	r2, r7
  407f90:	dabf      	bge.n	407f12 <_realloc_r+0x2e>
  407f92:	2600      	movs	r6, #0
  407f94:	230c      	movs	r3, #12
  407f96:	4630      	mov	r0, r6
  407f98:	f8c8 3000 	str.w	r3, [r8]
  407f9c:	b003      	add	sp, #12
  407f9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407fa2:	462e      	mov	r6, r5
  407fa4:	1be3      	subs	r3, r4, r7
  407fa6:	2b0f      	cmp	r3, #15
  407fa8:	d81e      	bhi.n	407fe8 <_realloc_r+0x104>
  407faa:	f8d9 3004 	ldr.w	r3, [r9, #4]
  407fae:	f003 0301 	and.w	r3, r3, #1
  407fb2:	4323      	orrs	r3, r4
  407fb4:	444c      	add	r4, r9
  407fb6:	f8c9 3004 	str.w	r3, [r9, #4]
  407fba:	6863      	ldr	r3, [r4, #4]
  407fbc:	f043 0301 	orr.w	r3, r3, #1
  407fc0:	6063      	str	r3, [r4, #4]
  407fc2:	4640      	mov	r0, r8
  407fc4:	f7ff fc8e 	bl	4078e4 <__malloc_unlock>
  407fc8:	4630      	mov	r0, r6
  407fca:	b003      	add	sp, #12
  407fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407fd0:	f023 0303 	bic.w	r3, r3, #3
  407fd4:	18e1      	adds	r1, r4, r3
  407fd6:	4291      	cmp	r1, r2
  407fd8:	db1f      	blt.n	40801a <_realloc_r+0x136>
  407fda:	68c3      	ldr	r3, [r0, #12]
  407fdc:	6882      	ldr	r2, [r0, #8]
  407fde:	462e      	mov	r6, r5
  407fe0:	60d3      	str	r3, [r2, #12]
  407fe2:	460c      	mov	r4, r1
  407fe4:	609a      	str	r2, [r3, #8]
  407fe6:	e7dd      	b.n	407fa4 <_realloc_r+0xc0>
  407fe8:	f8d9 2004 	ldr.w	r2, [r9, #4]
  407fec:	eb09 0107 	add.w	r1, r9, r7
  407ff0:	f002 0201 	and.w	r2, r2, #1
  407ff4:	444c      	add	r4, r9
  407ff6:	f043 0301 	orr.w	r3, r3, #1
  407ffa:	4317      	orrs	r7, r2
  407ffc:	f8c9 7004 	str.w	r7, [r9, #4]
  408000:	604b      	str	r3, [r1, #4]
  408002:	6863      	ldr	r3, [r4, #4]
  408004:	f043 0301 	orr.w	r3, r3, #1
  408008:	3108      	adds	r1, #8
  40800a:	6063      	str	r3, [r4, #4]
  40800c:	4640      	mov	r0, r8
  40800e:	f7fe ffeb 	bl	406fe8 <_free_r>
  408012:	e7d6      	b.n	407fc2 <_realloc_r+0xde>
  408014:	4611      	mov	r1, r2
  408016:	f7ff b8df 	b.w	4071d8 <_malloc_r>
  40801a:	f01e 0f01 	tst.w	lr, #1
  40801e:	d18e      	bne.n	407f3e <_realloc_r+0x5a>
  408020:	f855 1c08 	ldr.w	r1, [r5, #-8]
  408024:	eba9 0a01 	sub.w	sl, r9, r1
  408028:	f8da 1004 	ldr.w	r1, [sl, #4]
  40802c:	f021 0103 	bic.w	r1, r1, #3
  408030:	440b      	add	r3, r1
  408032:	4423      	add	r3, r4
  408034:	4293      	cmp	r3, r2
  408036:	db25      	blt.n	408084 <_realloc_r+0x1a0>
  408038:	68c2      	ldr	r2, [r0, #12]
  40803a:	6881      	ldr	r1, [r0, #8]
  40803c:	4656      	mov	r6, sl
  40803e:	60ca      	str	r2, [r1, #12]
  408040:	6091      	str	r1, [r2, #8]
  408042:	f8da 100c 	ldr.w	r1, [sl, #12]
  408046:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40804a:	1f22      	subs	r2, r4, #4
  40804c:	2a24      	cmp	r2, #36	; 0x24
  40804e:	60c1      	str	r1, [r0, #12]
  408050:	6088      	str	r0, [r1, #8]
  408052:	f200 8094 	bhi.w	40817e <_realloc_r+0x29a>
  408056:	2a13      	cmp	r2, #19
  408058:	d96f      	bls.n	40813a <_realloc_r+0x256>
  40805a:	6829      	ldr	r1, [r5, #0]
  40805c:	f8ca 1008 	str.w	r1, [sl, #8]
  408060:	6869      	ldr	r1, [r5, #4]
  408062:	f8ca 100c 	str.w	r1, [sl, #12]
  408066:	2a1b      	cmp	r2, #27
  408068:	f200 80a2 	bhi.w	4081b0 <_realloc_r+0x2cc>
  40806c:	3508      	adds	r5, #8
  40806e:	f10a 0210 	add.w	r2, sl, #16
  408072:	e063      	b.n	40813c <_realloc_r+0x258>
  408074:	f855 3c08 	ldr.w	r3, [r5, #-8]
  408078:	eba9 0a03 	sub.w	sl, r9, r3
  40807c:	f8da 1004 	ldr.w	r1, [sl, #4]
  408080:	f021 0103 	bic.w	r1, r1, #3
  408084:	1863      	adds	r3, r4, r1
  408086:	4293      	cmp	r3, r2
  408088:	f6ff af59 	blt.w	407f3e <_realloc_r+0x5a>
  40808c:	4656      	mov	r6, sl
  40808e:	e7d8      	b.n	408042 <_realloc_r+0x15e>
  408090:	6841      	ldr	r1, [r0, #4]
  408092:	f021 0b03 	bic.w	fp, r1, #3
  408096:	44a3      	add	fp, r4
  408098:	f107 0010 	add.w	r0, r7, #16
  40809c:	4583      	cmp	fp, r0
  40809e:	da56      	bge.n	40814e <_realloc_r+0x26a>
  4080a0:	f01e 0f01 	tst.w	lr, #1
  4080a4:	f47f af4b 	bne.w	407f3e <_realloc_r+0x5a>
  4080a8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4080ac:	eba9 0a01 	sub.w	sl, r9, r1
  4080b0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4080b4:	f021 0103 	bic.w	r1, r1, #3
  4080b8:	448b      	add	fp, r1
  4080ba:	4558      	cmp	r0, fp
  4080bc:	dce2      	bgt.n	408084 <_realloc_r+0x1a0>
  4080be:	4656      	mov	r6, sl
  4080c0:	f8da 100c 	ldr.w	r1, [sl, #12]
  4080c4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4080c8:	1f22      	subs	r2, r4, #4
  4080ca:	2a24      	cmp	r2, #36	; 0x24
  4080cc:	60c1      	str	r1, [r0, #12]
  4080ce:	6088      	str	r0, [r1, #8]
  4080d0:	f200 808f 	bhi.w	4081f2 <_realloc_r+0x30e>
  4080d4:	2a13      	cmp	r2, #19
  4080d6:	f240 808a 	bls.w	4081ee <_realloc_r+0x30a>
  4080da:	6829      	ldr	r1, [r5, #0]
  4080dc:	f8ca 1008 	str.w	r1, [sl, #8]
  4080e0:	6869      	ldr	r1, [r5, #4]
  4080e2:	f8ca 100c 	str.w	r1, [sl, #12]
  4080e6:	2a1b      	cmp	r2, #27
  4080e8:	f200 808a 	bhi.w	408200 <_realloc_r+0x31c>
  4080ec:	3508      	adds	r5, #8
  4080ee:	f10a 0210 	add.w	r2, sl, #16
  4080f2:	6829      	ldr	r1, [r5, #0]
  4080f4:	6011      	str	r1, [r2, #0]
  4080f6:	6869      	ldr	r1, [r5, #4]
  4080f8:	6051      	str	r1, [r2, #4]
  4080fa:	68a9      	ldr	r1, [r5, #8]
  4080fc:	6091      	str	r1, [r2, #8]
  4080fe:	eb0a 0107 	add.w	r1, sl, r7
  408102:	ebab 0207 	sub.w	r2, fp, r7
  408106:	f042 0201 	orr.w	r2, r2, #1
  40810a:	6099      	str	r1, [r3, #8]
  40810c:	604a      	str	r2, [r1, #4]
  40810e:	f8da 3004 	ldr.w	r3, [sl, #4]
  408112:	f003 0301 	and.w	r3, r3, #1
  408116:	431f      	orrs	r7, r3
  408118:	4640      	mov	r0, r8
  40811a:	f8ca 7004 	str.w	r7, [sl, #4]
  40811e:	f7ff fbe1 	bl	4078e4 <__malloc_unlock>
  408122:	e751      	b.n	407fc8 <_realloc_r+0xe4>
  408124:	682b      	ldr	r3, [r5, #0]
  408126:	6003      	str	r3, [r0, #0]
  408128:	686b      	ldr	r3, [r5, #4]
  40812a:	6043      	str	r3, [r0, #4]
  40812c:	2a1b      	cmp	r2, #27
  40812e:	d82d      	bhi.n	40818c <_realloc_r+0x2a8>
  408130:	f100 0308 	add.w	r3, r0, #8
  408134:	f105 0208 	add.w	r2, r5, #8
  408138:	e71b      	b.n	407f72 <_realloc_r+0x8e>
  40813a:	4632      	mov	r2, r6
  40813c:	6829      	ldr	r1, [r5, #0]
  40813e:	6011      	str	r1, [r2, #0]
  408140:	6869      	ldr	r1, [r5, #4]
  408142:	6051      	str	r1, [r2, #4]
  408144:	68a9      	ldr	r1, [r5, #8]
  408146:	6091      	str	r1, [r2, #8]
  408148:	461c      	mov	r4, r3
  40814a:	46d1      	mov	r9, sl
  40814c:	e72a      	b.n	407fa4 <_realloc_r+0xc0>
  40814e:	eb09 0107 	add.w	r1, r9, r7
  408152:	ebab 0b07 	sub.w	fp, fp, r7
  408156:	f04b 0201 	orr.w	r2, fp, #1
  40815a:	6099      	str	r1, [r3, #8]
  40815c:	604a      	str	r2, [r1, #4]
  40815e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  408162:	f003 0301 	and.w	r3, r3, #1
  408166:	431f      	orrs	r7, r3
  408168:	4640      	mov	r0, r8
  40816a:	f845 7c04 	str.w	r7, [r5, #-4]
  40816e:	f7ff fbb9 	bl	4078e4 <__malloc_unlock>
  408172:	462e      	mov	r6, r5
  408174:	e728      	b.n	407fc8 <_realloc_r+0xe4>
  408176:	4629      	mov	r1, r5
  408178:	f7ff fb4a 	bl	407810 <memmove>
  40817c:	e6ff      	b.n	407f7e <_realloc_r+0x9a>
  40817e:	4629      	mov	r1, r5
  408180:	4630      	mov	r0, r6
  408182:	461c      	mov	r4, r3
  408184:	46d1      	mov	r9, sl
  408186:	f7ff fb43 	bl	407810 <memmove>
  40818a:	e70b      	b.n	407fa4 <_realloc_r+0xc0>
  40818c:	68ab      	ldr	r3, [r5, #8]
  40818e:	6083      	str	r3, [r0, #8]
  408190:	68eb      	ldr	r3, [r5, #12]
  408192:	60c3      	str	r3, [r0, #12]
  408194:	2a24      	cmp	r2, #36	; 0x24
  408196:	d017      	beq.n	4081c8 <_realloc_r+0x2e4>
  408198:	f100 0310 	add.w	r3, r0, #16
  40819c:	f105 0210 	add.w	r2, r5, #16
  4081a0:	e6e7      	b.n	407f72 <_realloc_r+0x8e>
  4081a2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4081a6:	f023 0303 	bic.w	r3, r3, #3
  4081aa:	441c      	add	r4, r3
  4081ac:	462e      	mov	r6, r5
  4081ae:	e6f9      	b.n	407fa4 <_realloc_r+0xc0>
  4081b0:	68a9      	ldr	r1, [r5, #8]
  4081b2:	f8ca 1010 	str.w	r1, [sl, #16]
  4081b6:	68e9      	ldr	r1, [r5, #12]
  4081b8:	f8ca 1014 	str.w	r1, [sl, #20]
  4081bc:	2a24      	cmp	r2, #36	; 0x24
  4081be:	d00c      	beq.n	4081da <_realloc_r+0x2f6>
  4081c0:	3510      	adds	r5, #16
  4081c2:	f10a 0218 	add.w	r2, sl, #24
  4081c6:	e7b9      	b.n	40813c <_realloc_r+0x258>
  4081c8:	692b      	ldr	r3, [r5, #16]
  4081ca:	6103      	str	r3, [r0, #16]
  4081cc:	696b      	ldr	r3, [r5, #20]
  4081ce:	6143      	str	r3, [r0, #20]
  4081d0:	f105 0218 	add.w	r2, r5, #24
  4081d4:	f100 0318 	add.w	r3, r0, #24
  4081d8:	e6cb      	b.n	407f72 <_realloc_r+0x8e>
  4081da:	692a      	ldr	r2, [r5, #16]
  4081dc:	f8ca 2018 	str.w	r2, [sl, #24]
  4081e0:	696a      	ldr	r2, [r5, #20]
  4081e2:	f8ca 201c 	str.w	r2, [sl, #28]
  4081e6:	3518      	adds	r5, #24
  4081e8:	f10a 0220 	add.w	r2, sl, #32
  4081ec:	e7a6      	b.n	40813c <_realloc_r+0x258>
  4081ee:	4632      	mov	r2, r6
  4081f0:	e77f      	b.n	4080f2 <_realloc_r+0x20e>
  4081f2:	4629      	mov	r1, r5
  4081f4:	4630      	mov	r0, r6
  4081f6:	9301      	str	r3, [sp, #4]
  4081f8:	f7ff fb0a 	bl	407810 <memmove>
  4081fc:	9b01      	ldr	r3, [sp, #4]
  4081fe:	e77e      	b.n	4080fe <_realloc_r+0x21a>
  408200:	68a9      	ldr	r1, [r5, #8]
  408202:	f8ca 1010 	str.w	r1, [sl, #16]
  408206:	68e9      	ldr	r1, [r5, #12]
  408208:	f8ca 1014 	str.w	r1, [sl, #20]
  40820c:	2a24      	cmp	r2, #36	; 0x24
  40820e:	d003      	beq.n	408218 <_realloc_r+0x334>
  408210:	3510      	adds	r5, #16
  408212:	f10a 0218 	add.w	r2, sl, #24
  408216:	e76c      	b.n	4080f2 <_realloc_r+0x20e>
  408218:	692a      	ldr	r2, [r5, #16]
  40821a:	f8ca 2018 	str.w	r2, [sl, #24]
  40821e:	696a      	ldr	r2, [r5, #20]
  408220:	f8ca 201c 	str.w	r2, [sl, #28]
  408224:	3518      	adds	r5, #24
  408226:	f10a 0220 	add.w	r2, sl, #32
  40822a:	e762      	b.n	4080f2 <_realloc_r+0x20e>
  40822c:	20000648 	.word	0x20000648

00408230 <_sbrk_r>:
  408230:	b538      	push	{r3, r4, r5, lr}
  408232:	4c07      	ldr	r4, [pc, #28]	; (408250 <_sbrk_r+0x20>)
  408234:	2300      	movs	r3, #0
  408236:	4605      	mov	r5, r0
  408238:	4608      	mov	r0, r1
  40823a:	6023      	str	r3, [r4, #0]
  40823c:	f7fa fe2c 	bl	402e98 <_sbrk>
  408240:	1c43      	adds	r3, r0, #1
  408242:	d000      	beq.n	408246 <_sbrk_r+0x16>
  408244:	bd38      	pop	{r3, r4, r5, pc}
  408246:	6823      	ldr	r3, [r4, #0]
  408248:	2b00      	cmp	r3, #0
  40824a:	d0fb      	beq.n	408244 <_sbrk_r+0x14>
  40824c:	602b      	str	r3, [r5, #0]
  40824e:	bd38      	pop	{r3, r4, r5, pc}
  408250:	20000d4c 	.word	0x20000d4c

00408254 <__ssprint_r>:
  408254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  408258:	6893      	ldr	r3, [r2, #8]
  40825a:	b083      	sub	sp, #12
  40825c:	4690      	mov	r8, r2
  40825e:	2b00      	cmp	r3, #0
  408260:	d070      	beq.n	408344 <__ssprint_r+0xf0>
  408262:	4682      	mov	sl, r0
  408264:	460c      	mov	r4, r1
  408266:	6817      	ldr	r7, [r2, #0]
  408268:	688d      	ldr	r5, [r1, #8]
  40826a:	6808      	ldr	r0, [r1, #0]
  40826c:	e042      	b.n	4082f4 <__ssprint_r+0xa0>
  40826e:	89a3      	ldrh	r3, [r4, #12]
  408270:	f413 6f90 	tst.w	r3, #1152	; 0x480
  408274:	d02e      	beq.n	4082d4 <__ssprint_r+0x80>
  408276:	6965      	ldr	r5, [r4, #20]
  408278:	6921      	ldr	r1, [r4, #16]
  40827a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  40827e:	eba0 0b01 	sub.w	fp, r0, r1
  408282:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  408286:	f10b 0001 	add.w	r0, fp, #1
  40828a:	106d      	asrs	r5, r5, #1
  40828c:	4430      	add	r0, r6
  40828e:	42a8      	cmp	r0, r5
  408290:	462a      	mov	r2, r5
  408292:	bf84      	itt	hi
  408294:	4605      	movhi	r5, r0
  408296:	462a      	movhi	r2, r5
  408298:	055b      	lsls	r3, r3, #21
  40829a:	d538      	bpl.n	40830e <__ssprint_r+0xba>
  40829c:	4611      	mov	r1, r2
  40829e:	4650      	mov	r0, sl
  4082a0:	f7fe ff9a 	bl	4071d8 <_malloc_r>
  4082a4:	2800      	cmp	r0, #0
  4082a6:	d03c      	beq.n	408322 <__ssprint_r+0xce>
  4082a8:	465a      	mov	r2, fp
  4082aa:	6921      	ldr	r1, [r4, #16]
  4082ac:	9001      	str	r0, [sp, #4]
  4082ae:	f7fc faa1 	bl	4047f4 <memcpy>
  4082b2:	89a2      	ldrh	r2, [r4, #12]
  4082b4:	9b01      	ldr	r3, [sp, #4]
  4082b6:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4082ba:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4082be:	81a2      	strh	r2, [r4, #12]
  4082c0:	eba5 020b 	sub.w	r2, r5, fp
  4082c4:	eb03 000b 	add.w	r0, r3, fp
  4082c8:	6165      	str	r5, [r4, #20]
  4082ca:	6123      	str	r3, [r4, #16]
  4082cc:	6020      	str	r0, [r4, #0]
  4082ce:	60a2      	str	r2, [r4, #8]
  4082d0:	4635      	mov	r5, r6
  4082d2:	46b3      	mov	fp, r6
  4082d4:	465a      	mov	r2, fp
  4082d6:	4649      	mov	r1, r9
  4082d8:	f7ff fa9a 	bl	407810 <memmove>
  4082dc:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4082e0:	68a2      	ldr	r2, [r4, #8]
  4082e2:	6820      	ldr	r0, [r4, #0]
  4082e4:	1b55      	subs	r5, r2, r5
  4082e6:	4458      	add	r0, fp
  4082e8:	1b9e      	subs	r6, r3, r6
  4082ea:	60a5      	str	r5, [r4, #8]
  4082ec:	6020      	str	r0, [r4, #0]
  4082ee:	f8c8 6008 	str.w	r6, [r8, #8]
  4082f2:	b33e      	cbz	r6, 408344 <__ssprint_r+0xf0>
  4082f4:	687e      	ldr	r6, [r7, #4]
  4082f6:	463b      	mov	r3, r7
  4082f8:	3708      	adds	r7, #8
  4082fa:	2e00      	cmp	r6, #0
  4082fc:	d0fa      	beq.n	4082f4 <__ssprint_r+0xa0>
  4082fe:	42ae      	cmp	r6, r5
  408300:	f8d3 9000 	ldr.w	r9, [r3]
  408304:	46ab      	mov	fp, r5
  408306:	d2b2      	bcs.n	40826e <__ssprint_r+0x1a>
  408308:	4635      	mov	r5, r6
  40830a:	46b3      	mov	fp, r6
  40830c:	e7e2      	b.n	4082d4 <__ssprint_r+0x80>
  40830e:	4650      	mov	r0, sl
  408310:	f7ff fde8 	bl	407ee4 <_realloc_r>
  408314:	4603      	mov	r3, r0
  408316:	2800      	cmp	r0, #0
  408318:	d1d2      	bne.n	4082c0 <__ssprint_r+0x6c>
  40831a:	6921      	ldr	r1, [r4, #16]
  40831c:	4650      	mov	r0, sl
  40831e:	f7fe fe63 	bl	406fe8 <_free_r>
  408322:	230c      	movs	r3, #12
  408324:	f8ca 3000 	str.w	r3, [sl]
  408328:	89a3      	ldrh	r3, [r4, #12]
  40832a:	2200      	movs	r2, #0
  40832c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  408330:	f04f 30ff 	mov.w	r0, #4294967295
  408334:	81a3      	strh	r3, [r4, #12]
  408336:	f8c8 2008 	str.w	r2, [r8, #8]
  40833a:	f8c8 2004 	str.w	r2, [r8, #4]
  40833e:	b003      	add	sp, #12
  408340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  408344:	2000      	movs	r0, #0
  408346:	f8c8 0004 	str.w	r0, [r8, #4]
  40834a:	b003      	add	sp, #12
  40834c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00408350 <__ascii_wctomb>:
  408350:	b121      	cbz	r1, 40835c <__ascii_wctomb+0xc>
  408352:	2aff      	cmp	r2, #255	; 0xff
  408354:	d804      	bhi.n	408360 <__ascii_wctomb+0x10>
  408356:	700a      	strb	r2, [r1, #0]
  408358:	2001      	movs	r0, #1
  40835a:	4770      	bx	lr
  40835c:	4608      	mov	r0, r1
  40835e:	4770      	bx	lr
  408360:	238a      	movs	r3, #138	; 0x8a
  408362:	6003      	str	r3, [r0, #0]
  408364:	f04f 30ff 	mov.w	r0, #4294967295
  408368:	4770      	bx	lr
  40836a:	bf00      	nop

0040836c <__register_exitproc>:
  40836c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  408370:	4d2c      	ldr	r5, [pc, #176]	; (408424 <__register_exitproc+0xb8>)
  408372:	4606      	mov	r6, r0
  408374:	6828      	ldr	r0, [r5, #0]
  408376:	4698      	mov	r8, r3
  408378:	460f      	mov	r7, r1
  40837a:	4691      	mov	r9, r2
  40837c:	f7fe ff28 	bl	4071d0 <__retarget_lock_acquire_recursive>
  408380:	4b29      	ldr	r3, [pc, #164]	; (408428 <__register_exitproc+0xbc>)
  408382:	681c      	ldr	r4, [r3, #0]
  408384:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  408388:	2b00      	cmp	r3, #0
  40838a:	d03e      	beq.n	40840a <__register_exitproc+0x9e>
  40838c:	685a      	ldr	r2, [r3, #4]
  40838e:	2a1f      	cmp	r2, #31
  408390:	dc1c      	bgt.n	4083cc <__register_exitproc+0x60>
  408392:	f102 0e01 	add.w	lr, r2, #1
  408396:	b176      	cbz	r6, 4083b6 <__register_exitproc+0x4a>
  408398:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  40839c:	2401      	movs	r4, #1
  40839e:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4083a2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4083a6:	4094      	lsls	r4, r2
  4083a8:	4320      	orrs	r0, r4
  4083aa:	2e02      	cmp	r6, #2
  4083ac:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4083b0:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4083b4:	d023      	beq.n	4083fe <__register_exitproc+0x92>
  4083b6:	3202      	adds	r2, #2
  4083b8:	f8c3 e004 	str.w	lr, [r3, #4]
  4083bc:	6828      	ldr	r0, [r5, #0]
  4083be:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4083c2:	f7fe ff07 	bl	4071d4 <__retarget_lock_release_recursive>
  4083c6:	2000      	movs	r0, #0
  4083c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4083cc:	4b17      	ldr	r3, [pc, #92]	; (40842c <__register_exitproc+0xc0>)
  4083ce:	b30b      	cbz	r3, 408414 <__register_exitproc+0xa8>
  4083d0:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4083d4:	f3af 8000 	nop.w
  4083d8:	4603      	mov	r3, r0
  4083da:	b1d8      	cbz	r0, 408414 <__register_exitproc+0xa8>
  4083dc:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4083e0:	6002      	str	r2, [r0, #0]
  4083e2:	2100      	movs	r1, #0
  4083e4:	6041      	str	r1, [r0, #4]
  4083e6:	460a      	mov	r2, r1
  4083e8:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4083ec:	f04f 0e01 	mov.w	lr, #1
  4083f0:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4083f4:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4083f8:	2e00      	cmp	r6, #0
  4083fa:	d0dc      	beq.n	4083b6 <__register_exitproc+0x4a>
  4083fc:	e7cc      	b.n	408398 <__register_exitproc+0x2c>
  4083fe:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  408402:	430c      	orrs	r4, r1
  408404:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  408408:	e7d5      	b.n	4083b6 <__register_exitproc+0x4a>
  40840a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40840e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  408412:	e7bb      	b.n	40838c <__register_exitproc+0x20>
  408414:	6828      	ldr	r0, [r5, #0]
  408416:	f7fe fedd 	bl	4071d4 <__retarget_lock_release_recursive>
  40841a:	f04f 30ff 	mov.w	r0, #4294967295
  40841e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  408422:	bf00      	nop
  408424:	200004d8 	.word	0x200004d8
  408428:	0040883c 	.word	0x0040883c
  40842c:	00000000 	.word	0x00000000

00408430 <_calloc_r>:
  408430:	b510      	push	{r4, lr}
  408432:	fb02 f101 	mul.w	r1, r2, r1
  408436:	f7fe fecf 	bl	4071d8 <_malloc_r>
  40843a:	4604      	mov	r4, r0
  40843c:	b1d8      	cbz	r0, 408476 <_calloc_r+0x46>
  40843e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  408442:	f022 0203 	bic.w	r2, r2, #3
  408446:	3a04      	subs	r2, #4
  408448:	2a24      	cmp	r2, #36	; 0x24
  40844a:	d818      	bhi.n	40847e <_calloc_r+0x4e>
  40844c:	2a13      	cmp	r2, #19
  40844e:	d914      	bls.n	40847a <_calloc_r+0x4a>
  408450:	2300      	movs	r3, #0
  408452:	2a1b      	cmp	r2, #27
  408454:	6003      	str	r3, [r0, #0]
  408456:	6043      	str	r3, [r0, #4]
  408458:	d916      	bls.n	408488 <_calloc_r+0x58>
  40845a:	2a24      	cmp	r2, #36	; 0x24
  40845c:	6083      	str	r3, [r0, #8]
  40845e:	60c3      	str	r3, [r0, #12]
  408460:	bf11      	iteee	ne
  408462:	f100 0210 	addne.w	r2, r0, #16
  408466:	6103      	streq	r3, [r0, #16]
  408468:	6143      	streq	r3, [r0, #20]
  40846a:	f100 0218 	addeq.w	r2, r0, #24
  40846e:	2300      	movs	r3, #0
  408470:	6013      	str	r3, [r2, #0]
  408472:	6053      	str	r3, [r2, #4]
  408474:	6093      	str	r3, [r2, #8]
  408476:	4620      	mov	r0, r4
  408478:	bd10      	pop	{r4, pc}
  40847a:	4602      	mov	r2, r0
  40847c:	e7f7      	b.n	40846e <_calloc_r+0x3e>
  40847e:	2100      	movs	r1, #0
  408480:	f7fc fa52 	bl	404928 <memset>
  408484:	4620      	mov	r0, r4
  408486:	bd10      	pop	{r4, pc}
  408488:	f100 0208 	add.w	r2, r0, #8
  40848c:	e7ef      	b.n	40846e <_calloc_r+0x3e>
  40848e:	bf00      	nop

00408490 <__aeabi_d2iz>:
  408490:	ea4f 0241 	mov.w	r2, r1, lsl #1
  408494:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  408498:	d215      	bcs.n	4084c6 <__aeabi_d2iz+0x36>
  40849a:	d511      	bpl.n	4084c0 <__aeabi_d2iz+0x30>
  40849c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4084a0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4084a4:	d912      	bls.n	4084cc <__aeabi_d2iz+0x3c>
  4084a6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4084aa:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4084ae:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4084b2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4084b6:	fa23 f002 	lsr.w	r0, r3, r2
  4084ba:	bf18      	it	ne
  4084bc:	4240      	negne	r0, r0
  4084be:	4770      	bx	lr
  4084c0:	f04f 0000 	mov.w	r0, #0
  4084c4:	4770      	bx	lr
  4084c6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4084ca:	d105      	bne.n	4084d8 <__aeabi_d2iz+0x48>
  4084cc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4084d0:	bf08      	it	eq
  4084d2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4084d6:	4770      	bx	lr
  4084d8:	f04f 0000 	mov.w	r0, #0
  4084dc:	4770      	bx	lr
  4084de:	bf00      	nop

004084e0 <__aeabi_uldivmod>:
  4084e0:	b953      	cbnz	r3, 4084f8 <__aeabi_uldivmod+0x18>
  4084e2:	b94a      	cbnz	r2, 4084f8 <__aeabi_uldivmod+0x18>
  4084e4:	2900      	cmp	r1, #0
  4084e6:	bf08      	it	eq
  4084e8:	2800      	cmpeq	r0, #0
  4084ea:	bf1c      	itt	ne
  4084ec:	f04f 31ff 	movne.w	r1, #4294967295
  4084f0:	f04f 30ff 	movne.w	r0, #4294967295
  4084f4:	f000 b97a 	b.w	4087ec <__aeabi_idiv0>
  4084f8:	f1ad 0c08 	sub.w	ip, sp, #8
  4084fc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  408500:	f000 f806 	bl	408510 <__udivmoddi4>
  408504:	f8dd e004 	ldr.w	lr, [sp, #4]
  408508:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40850c:	b004      	add	sp, #16
  40850e:	4770      	bx	lr

00408510 <__udivmoddi4>:
  408510:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  408514:	468c      	mov	ip, r1
  408516:	460d      	mov	r5, r1
  408518:	4604      	mov	r4, r0
  40851a:	9e08      	ldr	r6, [sp, #32]
  40851c:	2b00      	cmp	r3, #0
  40851e:	d151      	bne.n	4085c4 <__udivmoddi4+0xb4>
  408520:	428a      	cmp	r2, r1
  408522:	4617      	mov	r7, r2
  408524:	d96d      	bls.n	408602 <__udivmoddi4+0xf2>
  408526:	fab2 fe82 	clz	lr, r2
  40852a:	f1be 0f00 	cmp.w	lr, #0
  40852e:	d00b      	beq.n	408548 <__udivmoddi4+0x38>
  408530:	f1ce 0c20 	rsb	ip, lr, #32
  408534:	fa01 f50e 	lsl.w	r5, r1, lr
  408538:	fa20 fc0c 	lsr.w	ip, r0, ip
  40853c:	fa02 f70e 	lsl.w	r7, r2, lr
  408540:	ea4c 0c05 	orr.w	ip, ip, r5
  408544:	fa00 f40e 	lsl.w	r4, r0, lr
  408548:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40854c:	0c25      	lsrs	r5, r4, #16
  40854e:	fbbc f8fa 	udiv	r8, ip, sl
  408552:	fa1f f987 	uxth.w	r9, r7
  408556:	fb0a cc18 	mls	ip, sl, r8, ip
  40855a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40855e:	fb08 f309 	mul.w	r3, r8, r9
  408562:	42ab      	cmp	r3, r5
  408564:	d90a      	bls.n	40857c <__udivmoddi4+0x6c>
  408566:	19ed      	adds	r5, r5, r7
  408568:	f108 32ff 	add.w	r2, r8, #4294967295
  40856c:	f080 8123 	bcs.w	4087b6 <__udivmoddi4+0x2a6>
  408570:	42ab      	cmp	r3, r5
  408572:	f240 8120 	bls.w	4087b6 <__udivmoddi4+0x2a6>
  408576:	f1a8 0802 	sub.w	r8, r8, #2
  40857a:	443d      	add	r5, r7
  40857c:	1aed      	subs	r5, r5, r3
  40857e:	b2a4      	uxth	r4, r4
  408580:	fbb5 f0fa 	udiv	r0, r5, sl
  408584:	fb0a 5510 	mls	r5, sl, r0, r5
  408588:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40858c:	fb00 f909 	mul.w	r9, r0, r9
  408590:	45a1      	cmp	r9, r4
  408592:	d909      	bls.n	4085a8 <__udivmoddi4+0x98>
  408594:	19e4      	adds	r4, r4, r7
  408596:	f100 33ff 	add.w	r3, r0, #4294967295
  40859a:	f080 810a 	bcs.w	4087b2 <__udivmoddi4+0x2a2>
  40859e:	45a1      	cmp	r9, r4
  4085a0:	f240 8107 	bls.w	4087b2 <__udivmoddi4+0x2a2>
  4085a4:	3802      	subs	r0, #2
  4085a6:	443c      	add	r4, r7
  4085a8:	eba4 0409 	sub.w	r4, r4, r9
  4085ac:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4085b0:	2100      	movs	r1, #0
  4085b2:	2e00      	cmp	r6, #0
  4085b4:	d061      	beq.n	40867a <__udivmoddi4+0x16a>
  4085b6:	fa24 f40e 	lsr.w	r4, r4, lr
  4085ba:	2300      	movs	r3, #0
  4085bc:	6034      	str	r4, [r6, #0]
  4085be:	6073      	str	r3, [r6, #4]
  4085c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4085c4:	428b      	cmp	r3, r1
  4085c6:	d907      	bls.n	4085d8 <__udivmoddi4+0xc8>
  4085c8:	2e00      	cmp	r6, #0
  4085ca:	d054      	beq.n	408676 <__udivmoddi4+0x166>
  4085cc:	2100      	movs	r1, #0
  4085ce:	e886 0021 	stmia.w	r6, {r0, r5}
  4085d2:	4608      	mov	r0, r1
  4085d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4085d8:	fab3 f183 	clz	r1, r3
  4085dc:	2900      	cmp	r1, #0
  4085de:	f040 808e 	bne.w	4086fe <__udivmoddi4+0x1ee>
  4085e2:	42ab      	cmp	r3, r5
  4085e4:	d302      	bcc.n	4085ec <__udivmoddi4+0xdc>
  4085e6:	4282      	cmp	r2, r0
  4085e8:	f200 80fa 	bhi.w	4087e0 <__udivmoddi4+0x2d0>
  4085ec:	1a84      	subs	r4, r0, r2
  4085ee:	eb65 0503 	sbc.w	r5, r5, r3
  4085f2:	2001      	movs	r0, #1
  4085f4:	46ac      	mov	ip, r5
  4085f6:	2e00      	cmp	r6, #0
  4085f8:	d03f      	beq.n	40867a <__udivmoddi4+0x16a>
  4085fa:	e886 1010 	stmia.w	r6, {r4, ip}
  4085fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  408602:	b912      	cbnz	r2, 40860a <__udivmoddi4+0xfa>
  408604:	2701      	movs	r7, #1
  408606:	fbb7 f7f2 	udiv	r7, r7, r2
  40860a:	fab7 fe87 	clz	lr, r7
  40860e:	f1be 0f00 	cmp.w	lr, #0
  408612:	d134      	bne.n	40867e <__udivmoddi4+0x16e>
  408614:	1beb      	subs	r3, r5, r7
  408616:	0c3a      	lsrs	r2, r7, #16
  408618:	fa1f fc87 	uxth.w	ip, r7
  40861c:	2101      	movs	r1, #1
  40861e:	fbb3 f8f2 	udiv	r8, r3, r2
  408622:	0c25      	lsrs	r5, r4, #16
  408624:	fb02 3318 	mls	r3, r2, r8, r3
  408628:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40862c:	fb0c f308 	mul.w	r3, ip, r8
  408630:	42ab      	cmp	r3, r5
  408632:	d907      	bls.n	408644 <__udivmoddi4+0x134>
  408634:	19ed      	adds	r5, r5, r7
  408636:	f108 30ff 	add.w	r0, r8, #4294967295
  40863a:	d202      	bcs.n	408642 <__udivmoddi4+0x132>
  40863c:	42ab      	cmp	r3, r5
  40863e:	f200 80d1 	bhi.w	4087e4 <__udivmoddi4+0x2d4>
  408642:	4680      	mov	r8, r0
  408644:	1aed      	subs	r5, r5, r3
  408646:	b2a3      	uxth	r3, r4
  408648:	fbb5 f0f2 	udiv	r0, r5, r2
  40864c:	fb02 5510 	mls	r5, r2, r0, r5
  408650:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  408654:	fb0c fc00 	mul.w	ip, ip, r0
  408658:	45a4      	cmp	ip, r4
  40865a:	d907      	bls.n	40866c <__udivmoddi4+0x15c>
  40865c:	19e4      	adds	r4, r4, r7
  40865e:	f100 33ff 	add.w	r3, r0, #4294967295
  408662:	d202      	bcs.n	40866a <__udivmoddi4+0x15a>
  408664:	45a4      	cmp	ip, r4
  408666:	f200 80b8 	bhi.w	4087da <__udivmoddi4+0x2ca>
  40866a:	4618      	mov	r0, r3
  40866c:	eba4 040c 	sub.w	r4, r4, ip
  408670:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  408674:	e79d      	b.n	4085b2 <__udivmoddi4+0xa2>
  408676:	4631      	mov	r1, r6
  408678:	4630      	mov	r0, r6
  40867a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40867e:	f1ce 0420 	rsb	r4, lr, #32
  408682:	fa05 f30e 	lsl.w	r3, r5, lr
  408686:	fa07 f70e 	lsl.w	r7, r7, lr
  40868a:	fa20 f804 	lsr.w	r8, r0, r4
  40868e:	0c3a      	lsrs	r2, r7, #16
  408690:	fa25 f404 	lsr.w	r4, r5, r4
  408694:	ea48 0803 	orr.w	r8, r8, r3
  408698:	fbb4 f1f2 	udiv	r1, r4, r2
  40869c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4086a0:	fb02 4411 	mls	r4, r2, r1, r4
  4086a4:	fa1f fc87 	uxth.w	ip, r7
  4086a8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4086ac:	fb01 f30c 	mul.w	r3, r1, ip
  4086b0:	42ab      	cmp	r3, r5
  4086b2:	fa00 f40e 	lsl.w	r4, r0, lr
  4086b6:	d909      	bls.n	4086cc <__udivmoddi4+0x1bc>
  4086b8:	19ed      	adds	r5, r5, r7
  4086ba:	f101 30ff 	add.w	r0, r1, #4294967295
  4086be:	f080 808a 	bcs.w	4087d6 <__udivmoddi4+0x2c6>
  4086c2:	42ab      	cmp	r3, r5
  4086c4:	f240 8087 	bls.w	4087d6 <__udivmoddi4+0x2c6>
  4086c8:	3902      	subs	r1, #2
  4086ca:	443d      	add	r5, r7
  4086cc:	1aeb      	subs	r3, r5, r3
  4086ce:	fa1f f588 	uxth.w	r5, r8
  4086d2:	fbb3 f0f2 	udiv	r0, r3, r2
  4086d6:	fb02 3310 	mls	r3, r2, r0, r3
  4086da:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4086de:	fb00 f30c 	mul.w	r3, r0, ip
  4086e2:	42ab      	cmp	r3, r5
  4086e4:	d907      	bls.n	4086f6 <__udivmoddi4+0x1e6>
  4086e6:	19ed      	adds	r5, r5, r7
  4086e8:	f100 38ff 	add.w	r8, r0, #4294967295
  4086ec:	d26f      	bcs.n	4087ce <__udivmoddi4+0x2be>
  4086ee:	42ab      	cmp	r3, r5
  4086f0:	d96d      	bls.n	4087ce <__udivmoddi4+0x2be>
  4086f2:	3802      	subs	r0, #2
  4086f4:	443d      	add	r5, r7
  4086f6:	1aeb      	subs	r3, r5, r3
  4086f8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4086fc:	e78f      	b.n	40861e <__udivmoddi4+0x10e>
  4086fe:	f1c1 0720 	rsb	r7, r1, #32
  408702:	fa22 f807 	lsr.w	r8, r2, r7
  408706:	408b      	lsls	r3, r1
  408708:	fa05 f401 	lsl.w	r4, r5, r1
  40870c:	ea48 0303 	orr.w	r3, r8, r3
  408710:	fa20 fe07 	lsr.w	lr, r0, r7
  408714:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  408718:	40fd      	lsrs	r5, r7
  40871a:	ea4e 0e04 	orr.w	lr, lr, r4
  40871e:	fbb5 f9fc 	udiv	r9, r5, ip
  408722:	ea4f 441e 	mov.w	r4, lr, lsr #16
  408726:	fb0c 5519 	mls	r5, ip, r9, r5
  40872a:	fa1f f883 	uxth.w	r8, r3
  40872e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  408732:	fb09 f408 	mul.w	r4, r9, r8
  408736:	42ac      	cmp	r4, r5
  408738:	fa02 f201 	lsl.w	r2, r2, r1
  40873c:	fa00 fa01 	lsl.w	sl, r0, r1
  408740:	d908      	bls.n	408754 <__udivmoddi4+0x244>
  408742:	18ed      	adds	r5, r5, r3
  408744:	f109 30ff 	add.w	r0, r9, #4294967295
  408748:	d243      	bcs.n	4087d2 <__udivmoddi4+0x2c2>
  40874a:	42ac      	cmp	r4, r5
  40874c:	d941      	bls.n	4087d2 <__udivmoddi4+0x2c2>
  40874e:	f1a9 0902 	sub.w	r9, r9, #2
  408752:	441d      	add	r5, r3
  408754:	1b2d      	subs	r5, r5, r4
  408756:	fa1f fe8e 	uxth.w	lr, lr
  40875a:	fbb5 f0fc 	udiv	r0, r5, ip
  40875e:	fb0c 5510 	mls	r5, ip, r0, r5
  408762:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  408766:	fb00 f808 	mul.w	r8, r0, r8
  40876a:	45a0      	cmp	r8, r4
  40876c:	d907      	bls.n	40877e <__udivmoddi4+0x26e>
  40876e:	18e4      	adds	r4, r4, r3
  408770:	f100 35ff 	add.w	r5, r0, #4294967295
  408774:	d229      	bcs.n	4087ca <__udivmoddi4+0x2ba>
  408776:	45a0      	cmp	r8, r4
  408778:	d927      	bls.n	4087ca <__udivmoddi4+0x2ba>
  40877a:	3802      	subs	r0, #2
  40877c:	441c      	add	r4, r3
  40877e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  408782:	eba4 0408 	sub.w	r4, r4, r8
  408786:	fba0 8902 	umull	r8, r9, r0, r2
  40878a:	454c      	cmp	r4, r9
  40878c:	46c6      	mov	lr, r8
  40878e:	464d      	mov	r5, r9
  408790:	d315      	bcc.n	4087be <__udivmoddi4+0x2ae>
  408792:	d012      	beq.n	4087ba <__udivmoddi4+0x2aa>
  408794:	b156      	cbz	r6, 4087ac <__udivmoddi4+0x29c>
  408796:	ebba 030e 	subs.w	r3, sl, lr
  40879a:	eb64 0405 	sbc.w	r4, r4, r5
  40879e:	fa04 f707 	lsl.w	r7, r4, r7
  4087a2:	40cb      	lsrs	r3, r1
  4087a4:	431f      	orrs	r7, r3
  4087a6:	40cc      	lsrs	r4, r1
  4087a8:	6037      	str	r7, [r6, #0]
  4087aa:	6074      	str	r4, [r6, #4]
  4087ac:	2100      	movs	r1, #0
  4087ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4087b2:	4618      	mov	r0, r3
  4087b4:	e6f8      	b.n	4085a8 <__udivmoddi4+0x98>
  4087b6:	4690      	mov	r8, r2
  4087b8:	e6e0      	b.n	40857c <__udivmoddi4+0x6c>
  4087ba:	45c2      	cmp	sl, r8
  4087bc:	d2ea      	bcs.n	408794 <__udivmoddi4+0x284>
  4087be:	ebb8 0e02 	subs.w	lr, r8, r2
  4087c2:	eb69 0503 	sbc.w	r5, r9, r3
  4087c6:	3801      	subs	r0, #1
  4087c8:	e7e4      	b.n	408794 <__udivmoddi4+0x284>
  4087ca:	4628      	mov	r0, r5
  4087cc:	e7d7      	b.n	40877e <__udivmoddi4+0x26e>
  4087ce:	4640      	mov	r0, r8
  4087d0:	e791      	b.n	4086f6 <__udivmoddi4+0x1e6>
  4087d2:	4681      	mov	r9, r0
  4087d4:	e7be      	b.n	408754 <__udivmoddi4+0x244>
  4087d6:	4601      	mov	r1, r0
  4087d8:	e778      	b.n	4086cc <__udivmoddi4+0x1bc>
  4087da:	3802      	subs	r0, #2
  4087dc:	443c      	add	r4, r7
  4087de:	e745      	b.n	40866c <__udivmoddi4+0x15c>
  4087e0:	4608      	mov	r0, r1
  4087e2:	e708      	b.n	4085f6 <__udivmoddi4+0xe6>
  4087e4:	f1a8 0802 	sub.w	r8, r8, #2
  4087e8:	443d      	add	r5, r7
  4087ea:	e72b      	b.n	408644 <__udivmoddi4+0x134>

004087ec <__aeabi_idiv0>:
  4087ec:	4770      	bx	lr
  4087ee:	bf00      	nop
  4087f0:	00000001 	.word	0x00000001
  4087f4:	00000002 	.word	0x00000002
  4087f8:	00000004 	.word	0x00000004
  4087fc:	00000008 	.word	0x00000008
  408800:	00000010 	.word	0x00000010
  408804:	00000020 	.word	0x00000020
  408808:	00000040 	.word	0x00000040
  40880c:	00000080 	.word	0x00000080
  408810:	00000100 	.word	0x00000100
  408814:	00000200 	.word	0x00000200
  408818:	00000400 	.word	0x00000400
  40881c:	000f4240 	.word	0x000f4240
  408820:	00000000 	.word	0x00000000
  408824:	07270e00 	.word	0x07270e00
  408828:	252c6625 	.word	0x252c6625
  40882c:	66252c66 	.word	0x66252c66
  408830:	0a66252c 	.word	0x0a66252c
  408834:	0000000d 	.word	0x0000000d
  408838:	00676f6c 	.word	0x00676f6c

0040883c <_global_impure_ptr>:
  40883c:	200000b0 00464e49 00666e69 004e414e     ... INF.inf.NAN.
  40884c:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  40885c:	46454443 00000000 33323130 37363534     CDEF....01234567
  40886c:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  40887c:	0000296c 00000030                       l)..0...

00408884 <blanks.7223>:
  408884:	20202020 20202020 20202020 20202020                     

00408894 <zeroes.7224>:
  408894:	30303030 30303030 30303030 30303030     0000000000000000
  4088a4:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  4088b4:	00000043 49534f50 00000058 0000002e     C...POSIX.......
  4088c4:	00000000                                ....

004088c8 <__mprec_bigtens>:
  4088c8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  4088d8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  4088e8:	7f73bf3c 75154fdd                       <.s..O.u

004088f0 <__mprec_tens>:
  4088f0:	00000000 3ff00000 00000000 40240000     .......?......$@
  408900:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  408910:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  408920:	00000000 412e8480 00000000 416312d0     .......A......cA
  408930:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  408940:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  408950:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  408960:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  408970:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  408980:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  408990:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  4089a0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  4089b0:	79d99db4 44ea7843                       ...yCx.D

004089b8 <p05.6055>:
  4089b8:	00000005 00000019 0000007d              ........}...

004089c4 <_ctype_>:
  4089c4:	20202000 20202020 28282020 20282828     .         ((((( 
  4089d4:	20202020 20202020 20202020 20202020                     
  4089e4:	10108820 10101010 10101010 10101010      ...............
  4089f4:	04040410 04040404 10040404 10101010     ................
  408a04:	41411010 41414141 01010101 01010101     ..AAAAAA........
  408a14:	01010101 01010101 01010101 10101010     ................
  408a24:	42421010 42424242 02020202 02020202     ..BBBBBB........
  408a34:	02020202 02020202 02020202 10101010     ................
  408a44:	00000020 00000000 00000000 00000000      ...............
	...

00408ac8 <_init>:
  408ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  408aca:	bf00      	nop
  408acc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  408ace:	bc08      	pop	{r3}
  408ad0:	469e      	mov	lr, r3
  408ad2:	4770      	bx	lr

00408ad4 <__init_array_start>:
  408ad4:	00405f79 	.word	0x00405f79

00408ad8 <__frame_dummy_init_array_entry>:
  408ad8:	004000f1                                ..@.

00408adc <_fini>:
  408adc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  408ade:	bf00      	nop
  408ae0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  408ae2:	bc08      	pop	{r3}
  408ae4:	469e      	mov	lr, r3
  408ae6:	4770      	bx	lr

00408ae8 <__fini_array_start>:
  408ae8:	004000cd 	.word	0x004000cd
