
Batery Characterization.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007eec  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407eec  00407eec  00017eec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000a58  20000000  00407ef4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000002c4  20000a58  0040894c  00020a58  2**2
                  ALLOC
  4 .stack        00003004  20000d1c  00408c10  00020a58  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  00020a58  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020a82  2**0
                  CONTENTS, READONLY
  7 .debug_info   000191a9  00000000  00000000  00020adb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003534  00000000  00000000  00039c84  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000b28  00000000  00000000  0003d1b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  00014633  00000000  00000000  0003dce0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000d8e3  00000000  00000000  00052313  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0005321a  00000000  00000000  0005fbf6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000691f  00000000  00000000  000b2e10  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000b48  00000000  00000000  000b972f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000026a4  00000000  00000000  000ba278  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	20 3d 00 20 49 29 40 00 45 29 40 00 45 29 40 00      =. I)@.E)@.E)@.
  400010:	45 29 40 00 45 29 40 00 45 29 40 00 00 00 00 00     E)@.E)@.E)@.....
	...
  40002c:	45 29 40 00 45 29 40 00 00 00 00 00 45 29 40 00     E)@.E)@.....E)@.
  40003c:	45 29 40 00 45 29 40 00 45 29 40 00 45 29 40 00     E)@.E)@.E)@.E)@.
  40004c:	45 29 40 00 45 29 40 00 45 29 40 00 45 29 40 00     E)@.E)@.E)@.E)@.
  40005c:	00 00 00 00 45 29 40 00 45 29 40 00 00 00 00 00     ....E)@.E)@.....
  40006c:	51 0e 40 00 65 0e 40 00 00 00 00 00 45 29 40 00     Q.@.e.@.....E)@.
	...
  40008c:	45 29 40 00 45 29 40 00 45 29 40 00 45 29 40 00     E)@.E)@.E)@.E)@.
  40009c:	45 29 40 00 35 2d 40 00 45 29 40 00 00 00 00 00     E)@.5-@.E)@.....
	...
  4000b4:	45 29 40 00 00 00 00 00 45 29 40 00 45 29 40 00     E)@.....E)@.E)@.
  4000c4:	45 29 40 00 35 14 40 00                             E)@.5.@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	20000a58 	.word	0x20000a58
  4000e8:	00000000 	.word	0x00000000
  4000ec:	00407ef4 	.word	0x00407ef4

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	00407ef4 	.word	0x00407ef4
  40012c:	20000a5c 	.word	0x20000a5c
  400130:	00407ef4 	.word	0x00407ef4
  400134:	00000000 	.word	0x00000000

00400138 <udi_cdc_comm_enable>:
	uint8_t port;
	uint8_t iface_comm_num;

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
	udi_cdc_nb_comm_enabled = 0;
  400138:	490e      	ldr	r1, [pc, #56]	; (400174 <udi_cdc_comm_enable+0x3c>)
  40013a:	2300      	movs	r3, #0
  40013c:	700b      	strb	r3, [r1, #0]
	}
	port = udi_cdc_nb_comm_enabled;
#endif

	// Initialize control signal management
	udi_cdc_state[port] = CPU_TO_LE16(0);
  40013e:	4a0e      	ldr	r2, [pc, #56]	; (400178 <udi_cdc_comm_enable+0x40>)
  400140:	8013      	strh	r3, [r2, #0]

	uid_cdc_state_msg[port].header.bmRequestType =
  400142:	4a0e      	ldr	r2, [pc, #56]	; (40017c <udi_cdc_comm_enable+0x44>)
  400144:	20a1      	movs	r0, #161	; 0xa1
  400146:	7010      	strb	r0, [r2, #0]
			USB_REQ_DIR_IN | USB_REQ_TYPE_CLASS |
			USB_REQ_RECIP_INTERFACE;
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
  400148:	2020      	movs	r0, #32
  40014a:	7050      	strb	r0, [r2, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
  40014c:	8053      	strh	r3, [r2, #2]
	default:
		iface_comm_num = UDI_CDC_COMM_IFACE_NUMBER_0;
		break;
	}

	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
  40014e:	8093      	strh	r3, [r2, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
  400150:	2002      	movs	r0, #2
  400152:	80d0      	strh	r0, [r2, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
  400154:	8113      	strh	r3, [r2, #8]

	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
  400156:	4a0a      	ldr	r2, [pc, #40]	; (400180 <udi_cdc_comm_enable+0x48>)
  400158:	f44f 5016 	mov.w	r0, #9600	; 0x2580
  40015c:	6010      	str	r0, [r2, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
  40015e:	7113      	strb	r3, [r2, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
  400160:	7153      	strb	r3, [r2, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
  400162:	2308      	movs	r3, #8
  400164:	7193      	strb	r3, [r2, #6]
	// to initialize memories or indicate that interface is enabled
	UDI_CDC_SET_CODING_EXT(port,(&udi_cdc_line_coding[port]));
	if (!UDI_CDC_ENABLE_EXT(port)) {
		return false;
	}
	udi_cdc_nb_comm_enabled++;
  400166:	780b      	ldrb	r3, [r1, #0]
  400168:	3301      	adds	r3, #1
  40016a:	b2db      	uxtb	r3, r3
  40016c:	700b      	strb	r3, [r1, #0]
	return true;
}
  40016e:	2001      	movs	r0, #1
  400170:	4770      	bx	lr
  400172:	bf00      	nop
  400174:	20000a7f 	.word	0x20000a7f
  400178:	20000b14 	.word	0x20000b14
  40017c:	20000bac 	.word	0x20000bac
  400180:	20000a78 	.word	0x20000a78

00400184 <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
  400184:	4a02      	ldr	r2, [pc, #8]	; (400190 <udi_cdc_comm_disable+0xc>)
  400186:	7813      	ldrb	r3, [r2, #0]
  400188:	3b01      	subs	r3, #1
  40018a:	b2db      	uxtb	r3, r3
  40018c:	7013      	strb	r3, [r2, #0]
  40018e:	4770      	bx	lr
  400190:	20000a7f 	.word	0x20000a7f

00400194 <udi_cdc_data_disable>:
void udi_cdc_data_disable(void)
{
	uint8_t port;

	Assert(udi_cdc_nb_data_enabled != 0);
	udi_cdc_nb_data_enabled--;
  400194:	4a04      	ldr	r2, [pc, #16]	; (4001a8 <udi_cdc_data_disable+0x14>)
  400196:	7813      	ldrb	r3, [r2, #0]
  400198:	3b01      	subs	r3, #1
  40019a:	b2db      	uxtb	r3, r3
  40019c:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
  40019e:	7813      	ldrb	r3, [r2, #0]
	UDI_CDC_DISABLE_EXT(port);
	udi_cdc_data_running = false;
  4001a0:	2200      	movs	r2, #0
  4001a2:	4b02      	ldr	r3, [pc, #8]	; (4001ac <udi_cdc_data_disable+0x18>)
  4001a4:	701a      	strb	r2, [r3, #0]
  4001a6:	4770      	bx	lr
  4001a8:	20000a80 	.word	0x20000a80
  4001ac:	20000a76 	.word	0x20000a76

004001b0 <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
  4001b0:	2000      	movs	r0, #0
  4001b2:	4770      	bx	lr

004001b4 <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
  4001b4:	2000      	movs	r0, #0
  4001b6:	4770      	bx	lr

004001b8 <udi_cdc_comm_setup>:
	if (Udd_setup_is_in()) {
  4001b8:	4b1d      	ldr	r3, [pc, #116]	; (400230 <udi_cdc_comm_setup+0x78>)
  4001ba:	781b      	ldrb	r3, [r3, #0]
  4001bc:	f013 0f80 	tst.w	r3, #128	; 0x80
  4001c0:	d105      	bne.n	4001ce <udi_cdc_comm_setup+0x16>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  4001c2:	f003 0360 	and.w	r3, r3, #96	; 0x60
  4001c6:	2b20      	cmp	r3, #32
  4001c8:	d018      	beq.n	4001fc <udi_cdc_comm_setup+0x44>
	return false;  // request Not supported
  4001ca:	2000      	movs	r0, #0
  4001cc:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
  4001ce:	f003 0360 	and.w	r3, r3, #96	; 0x60
  4001d2:	2b20      	cmp	r3, #32
  4001d4:	d001      	beq.n	4001da <udi_cdc_comm_setup+0x22>
	return false;  // request Not supported
  4001d6:	2000      	movs	r0, #0
  4001d8:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
  4001da:	4b15      	ldr	r3, [pc, #84]	; (400230 <udi_cdc_comm_setup+0x78>)
  4001dc:	785b      	ldrb	r3, [r3, #1]
  4001de:	2b21      	cmp	r3, #33	; 0x21
  4001e0:	d124      	bne.n	40022c <udi_cdc_comm_setup+0x74>
						udd_g_ctrlreq.req.wLength)
  4001e2:	4b13      	ldr	r3, [pc, #76]	; (400230 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
  4001e4:	88db      	ldrh	r3, [r3, #6]
  4001e6:	2b07      	cmp	r3, #7
  4001e8:	d001      	beq.n	4001ee <udi_cdc_comm_setup+0x36>
					return false; // Error for USB host
  4001ea:	2000      	movs	r0, #0
  4001ec:	4770      	bx	lr
				udd_g_ctrlreq.payload =
  4001ee:	4b10      	ldr	r3, [pc, #64]	; (400230 <udi_cdc_comm_setup+0x78>)
  4001f0:	4a10      	ldr	r2, [pc, #64]	; (400234 <udi_cdc_comm_setup+0x7c>)
  4001f2:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
  4001f4:	2207      	movs	r2, #7
  4001f6:	819a      	strh	r2, [r3, #12]
				return true;
  4001f8:	2001      	movs	r0, #1
  4001fa:	4770      	bx	lr
			switch (udd_g_ctrlreq.req.bRequest) {
  4001fc:	4b0c      	ldr	r3, [pc, #48]	; (400230 <udi_cdc_comm_setup+0x78>)
  4001fe:	7858      	ldrb	r0, [r3, #1]
  400200:	2820      	cmp	r0, #32
  400202:	d004      	beq.n	40020e <udi_cdc_comm_setup+0x56>
	return false;  // request Not supported
  400204:	2822      	cmp	r0, #34	; 0x22
  400206:	bf14      	ite	ne
  400208:	2000      	movne	r0, #0
  40020a:	2001      	moveq	r0, #1
  40020c:	4770      	bx	lr
						udd_g_ctrlreq.req.wLength)
  40020e:	4b08      	ldr	r3, [pc, #32]	; (400230 <udi_cdc_comm_setup+0x78>)
				if (sizeof(usb_cdc_line_coding_t) !=
  400210:	88db      	ldrh	r3, [r3, #6]
  400212:	2b07      	cmp	r3, #7
  400214:	d001      	beq.n	40021a <udi_cdc_comm_setup+0x62>
					return false; // Error for USB host
  400216:	2000      	movs	r0, #0
}
  400218:	4770      	bx	lr
				udd_g_ctrlreq.callback =
  40021a:	4b05      	ldr	r3, [pc, #20]	; (400230 <udi_cdc_comm_setup+0x78>)
  40021c:	4a06      	ldr	r2, [pc, #24]	; (400238 <udi_cdc_comm_setup+0x80>)
  40021e:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
  400220:	4a04      	ldr	r2, [pc, #16]	; (400234 <udi_cdc_comm_setup+0x7c>)
  400222:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
  400224:	2207      	movs	r2, #7
  400226:	819a      	strh	r2, [r3, #12]
				return true;
  400228:	2001      	movs	r0, #1
  40022a:	4770      	bx	lr
	return false;  // request Not supported
  40022c:	2000      	movs	r0, #0
  40022e:	4770      	bx	lr
  400230:	20000cc8 	.word	0x20000cc8
  400234:	20000a78 	.word	0x20000a78
  400238:	0040023d 	.word	0x0040023d

0040023c <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
  40023c:	4770      	bx	lr
	...

00400240 <udi_cdc_tx_send>:

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
  400240:	4b44      	ldr	r3, [pc, #272]	; (400354 <udi_cdc_tx_send+0x114>)
  400242:	781b      	ldrb	r3, [r3, #0]
  400244:	b103      	cbz	r3, 400248 <udi_cdc_tx_send+0x8>
  400246:	4770      	bx	lr
{
  400248:	b570      	push	{r4, r5, r6, lr}
  40024a:	b084      	sub	sp, #16
		return; // Already on going or wait next SOF to send next data
	}
	if (udd_is_high_speed()) {
  40024c:	4b42      	ldr	r3, [pc, #264]	; (400358 <udi_cdc_tx_send+0x118>)
  40024e:	4798      	blx	r3
  400250:	2800      	cmp	r0, #0
  400252:	d041      	beq.n	4002d8 <udi_cdc_tx_send+0x98>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
  400254:	4b41      	ldr	r3, [pc, #260]	; (40035c <udi_cdc_tx_send+0x11c>)
  400256:	881c      	ldrh	r4, [r3, #0]
  400258:	4b41      	ldr	r3, [pc, #260]	; (400360 <udi_cdc_tx_send+0x120>)
  40025a:	4798      	blx	r3
  40025c:	4284      	cmp	r4, r0
  40025e:	d076      	beq.n	40034e <udi_cdc_tx_send+0x10e>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400260:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400264:	fab3 f383 	clz	r3, r3
  400268:	095b      	lsrs	r3, r3, #5
  40026a:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  40026c:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  40026e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400272:	2200      	movs	r2, #0
  400274:	4b3b      	ldr	r3, [pc, #236]	; (400364 <udi_cdc_tx_send+0x124>)
  400276:	701a      	strb	r2, [r3, #0]
	return flags;
  400278:	9d03      	ldr	r5, [sp, #12]
			return; // Wait next SOF to send next data
		}
	}

	flags = cpu_irq_save(); // to protect udi_cdc_tx_buf_sel
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
  40027a:	4b3b      	ldr	r3, [pc, #236]	; (400368 <udi_cdc_tx_send+0x128>)
  40027c:	781c      	ldrb	r4, [r3, #0]
  40027e:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
  400280:	4b3a      	ldr	r3, [pc, #232]	; (40036c <udi_cdc_tx_send+0x12c>)
  400282:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
  400286:	2b00      	cmp	r3, #0
  400288:	d02d      	beq.n	4002e6 <udi_cdc_tx_send+0xa6>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
			cpu_irq_restore(flags);
			return;
		}
	}
	sof_zlp_counter = 0;
  40028a:	2200      	movs	r2, #0
  40028c:	4b38      	ldr	r3, [pc, #224]	; (400370 <udi_cdc_tx_send+0x130>)
  40028e:	801a      	strh	r2, [r3, #0]

	if (!udi_cdc_tx_both_buf_to_send[port]) {
  400290:	4b38      	ldr	r3, [pc, #224]	; (400374 <udi_cdc_tx_send+0x134>)
  400292:	781b      	ldrb	r3, [r3, #0]
  400294:	2b00      	cmp	r3, #0
  400296:	d142      	bne.n	40031e <udi_cdc_tx_send+0xde>
		// Send current Buffer
		// and switch the current buffer
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
  400298:	fab4 f384 	clz	r3, r4
  40029c:	095b      	lsrs	r3, r3, #5
  40029e:	4a32      	ldr	r2, [pc, #200]	; (400368 <udi_cdc_tx_send+0x128>)
  4002a0:	7013      	strb	r3, [r2, #0]
	}else{
		// Send the other Buffer
		// and no switch the current buffer
		buf_sel_trans = (buf_sel_trans==0)?1:0;
	}
	udi_cdc_tx_trans_ongoing[port] = true;
  4002a2:	2201      	movs	r2, #1
  4002a4:	4b2b      	ldr	r3, [pc, #172]	; (400354 <udi_cdc_tx_send+0x114>)
  4002a6:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4002a8:	b125      	cbz	r5, 4002b4 <udi_cdc_tx_send+0x74>
		cpu_irq_enable();
  4002aa:	4b2e      	ldr	r3, [pc, #184]	; (400364 <udi_cdc_tx_send+0x124>)
  4002ac:	701a      	strb	r2, [r3, #0]
  4002ae:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4002b2:	b662      	cpsie	i
	cpu_irq_restore(flags);

	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
  4002b4:	4626      	mov	r6, r4
  4002b6:	4b2d      	ldr	r3, [pc, #180]	; (40036c <udi_cdc_tx_send+0x12c>)
  4002b8:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
  4002bc:	2b40      	cmp	r3, #64	; 0x40
  4002be:	bf14      	ite	ne
  4002c0:	2501      	movne	r5, #1
  4002c2:	2500      	moveq	r5, #0
	if (b_short_packet) {
  4002c4:	d034      	beq.n	400330 <udi_cdc_tx_send+0xf0>
		if (udd_is_high_speed()) {
  4002c6:	4b24      	ldr	r3, [pc, #144]	; (400358 <udi_cdc_tx_send+0x118>)
  4002c8:	4798      	blx	r3
  4002ca:	2800      	cmp	r0, #0
  4002cc:	d02b      	beq.n	400326 <udi_cdc_tx_send+0xe6>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
  4002ce:	4b24      	ldr	r3, [pc, #144]	; (400360 <udi_cdc_tx_send+0x120>)
  4002d0:	4798      	blx	r3
  4002d2:	4b22      	ldr	r3, [pc, #136]	; (40035c <udi_cdc_tx_send+0x11c>)
  4002d4:	8018      	strh	r0, [r3, #0]
  4002d6:	e02e      	b.n	400336 <udi_cdc_tx_send+0xf6>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
  4002d8:	4b20      	ldr	r3, [pc, #128]	; (40035c <udi_cdc_tx_send+0x11c>)
  4002da:	881c      	ldrh	r4, [r3, #0]
  4002dc:	4b26      	ldr	r3, [pc, #152]	; (400378 <udi_cdc_tx_send+0x138>)
  4002de:	4798      	blx	r3
  4002e0:	4284      	cmp	r4, r0
  4002e2:	d1bd      	bne.n	400260 <udi_cdc_tx_send+0x20>
  4002e4:	e033      	b.n	40034e <udi_cdc_tx_send+0x10e>
		sof_zlp_counter++;
  4002e6:	4a22      	ldr	r2, [pc, #136]	; (400370 <udi_cdc_tx_send+0x130>)
  4002e8:	8813      	ldrh	r3, [r2, #0]
  4002ea:	3301      	adds	r3, #1
  4002ec:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
  4002ee:	4b1a      	ldr	r3, [pc, #104]	; (400358 <udi_cdc_tx_send+0x118>)
  4002f0:	4798      	blx	r3
  4002f2:	b918      	cbnz	r0, 4002fc <udi_cdc_tx_send+0xbc>
  4002f4:	4b1e      	ldr	r3, [pc, #120]	; (400370 <udi_cdc_tx_send+0x130>)
  4002f6:	881b      	ldrh	r3, [r3, #0]
  4002f8:	2b63      	cmp	r3, #99	; 0x63
  4002fa:	d908      	bls.n	40030e <udi_cdc_tx_send+0xce>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
  4002fc:	4b16      	ldr	r3, [pc, #88]	; (400358 <udi_cdc_tx_send+0x118>)
  4002fe:	4798      	blx	r3
  400300:	2800      	cmp	r0, #0
  400302:	d0c2      	beq.n	40028a <udi_cdc_tx_send+0x4a>
  400304:	4b1a      	ldr	r3, [pc, #104]	; (400370 <udi_cdc_tx_send+0x130>)
  400306:	881b      	ldrh	r3, [r3, #0]
  400308:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
  40030c:	d2bd      	bcs.n	40028a <udi_cdc_tx_send+0x4a>
	if (cpu_irq_is_enabled_flags(flags))
  40030e:	b1f5      	cbz	r5, 40034e <udi_cdc_tx_send+0x10e>
		cpu_irq_enable();
  400310:	2201      	movs	r2, #1
  400312:	4b14      	ldr	r3, [pc, #80]	; (400364 <udi_cdc_tx_send+0x124>)
  400314:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  400316:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40031a:	b662      	cpsie	i
  40031c:	e017      	b.n	40034e <udi_cdc_tx_send+0x10e>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
  40031e:	fab4 f484 	clz	r4, r4
  400322:	0964      	lsrs	r4, r4, #5
  400324:	e7bd      	b.n	4002a2 <udi_cdc_tx_send+0x62>
		}else{
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
  400326:	4b14      	ldr	r3, [pc, #80]	; (400378 <udi_cdc_tx_send+0x138>)
  400328:	4798      	blx	r3
  40032a:	4b0c      	ldr	r3, [pc, #48]	; (40035c <udi_cdc_tx_send+0x11c>)
  40032c:	8018      	strh	r0, [r3, #0]
  40032e:	e002      	b.n	400336 <udi_cdc_tx_send+0xf6>
		}
	}else{
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
  400330:	2200      	movs	r2, #0
  400332:	4b0a      	ldr	r3, [pc, #40]	; (40035c <udi_cdc_tx_send+0x11c>)
  400334:	801a      	strh	r2, [r3, #0]
		break;
	}
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
  400336:	4b0d      	ldr	r3, [pc, #52]	; (40036c <udi_cdc_tx_send+0x12c>)
	udd_ep_run( ep,
  400338:	f833 3016 	ldrh.w	r3, [r3, r6, lsl #1]
  40033c:	4a0f      	ldr	r2, [pc, #60]	; (40037c <udi_cdc_tx_send+0x13c>)
  40033e:	9200      	str	r2, [sp, #0]
  400340:	4a0f      	ldr	r2, [pc, #60]	; (400380 <udi_cdc_tx_send+0x140>)
  400342:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  400346:	4629      	mov	r1, r5
  400348:	2081      	movs	r0, #129	; 0x81
  40034a:	4c0e      	ldr	r4, [pc, #56]	; (400384 <udi_cdc_tx_send+0x144>)
  40034c:	47a0      	blx	r4
			udi_cdc_data_sent);
}
  40034e:	b004      	add	sp, #16
  400350:	bd70      	pop	{r4, r5, r6, pc}
  400352:	bf00      	nop
  400354:	20000ba8 	.word	0x20000ba8
  400358:	00401e95 	.word	0x00401e95
  40035c:	20000ba4 	.word	0x20000ba4
  400360:	00401f01 	.word	0x00401f01
  400364:	200000a0 	.word	0x200000a0
  400368:	20000ba0 	.word	0x20000ba0
  40036c:	20000b9c 	.word	0x20000b9c
  400370:	20000a74 	.word	0x20000a74
  400374:	20000b18 	.word	0x20000b18
  400378:	00401ef1 	.word	0x00401ef1
  40037c:	00400389 	.word	0x00400389
  400380:	20000b1c 	.word	0x20000b1c
  400384:	00402259 	.word	0x00402259

00400388 <udi_cdc_data_sent>:
	if (UDD_EP_TRANSFER_OK != status) {
  400388:	b100      	cbz	r0, 40038c <udi_cdc_data_sent+0x4>
  40038a:	4770      	bx	lr
{
  40038c:	b508      	push	{r3, lr}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
  40038e:	4b07      	ldr	r3, [pc, #28]	; (4003ac <udi_cdc_data_sent+0x24>)
  400390:	781b      	ldrb	r3, [r3, #0]
  400392:	fab3 f383 	clz	r3, r3
  400396:	095b      	lsrs	r3, r3, #5
  400398:	4a05      	ldr	r2, [pc, #20]	; (4003b0 <udi_cdc_data_sent+0x28>)
  40039a:	f822 0013 	strh.w	r0, [r2, r3, lsl #1]
	udi_cdc_tx_both_buf_to_send[port] = false;
  40039e:	4b05      	ldr	r3, [pc, #20]	; (4003b4 <udi_cdc_data_sent+0x2c>)
  4003a0:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
  4003a2:	4b05      	ldr	r3, [pc, #20]	; (4003b8 <udi_cdc_data_sent+0x30>)
  4003a4:	7018      	strb	r0, [r3, #0]
	udi_cdc_tx_send(port);
  4003a6:	4b05      	ldr	r3, [pc, #20]	; (4003bc <udi_cdc_data_sent+0x34>)
  4003a8:	4798      	blx	r3
  4003aa:	bd08      	pop	{r3, pc}
  4003ac:	20000ba0 	.word	0x20000ba0
  4003b0:	20000b9c 	.word	0x20000b9c
  4003b4:	20000b18 	.word	0x20000b18
  4003b8:	20000ba8 	.word	0x20000ba8
  4003bc:	00400241 	.word	0x00400241

004003c0 <udi_cdc_data_sof_notify>:
{
  4003c0:	b508      	push	{r3, lr}
	udi_cdc_tx_send(port_notify);
  4003c2:	2000      	movs	r0, #0
  4003c4:	4b01      	ldr	r3, [pc, #4]	; (4003cc <udi_cdc_data_sof_notify+0xc>)
  4003c6:	4798      	blx	r3
  4003c8:	bd08      	pop	{r3, pc}
  4003ca:	bf00      	nop
  4003cc:	00400241 	.word	0x00400241

004003d0 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
  4003d0:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4003d2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4003d6:	fab3 f383 	clz	r3, r3
  4003da:	095b      	lsrs	r3, r3, #5
  4003dc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4003de:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4003e0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4003e4:	2200      	movs	r2, #0
  4003e6:	4b0b      	ldr	r3, [pc, #44]	; (400414 <udi_cdc_multi_get_nb_received_data+0x44>)
  4003e8:	701a      	strb	r2, [r3, #0]
	return flags;
  4003ea:	9901      	ldr	r1, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
  4003ec:	4b0a      	ldr	r3, [pc, #40]	; (400418 <udi_cdc_multi_get_nb_received_data+0x48>)
  4003ee:	8818      	ldrh	r0, [r3, #0]
  4003f0:	b283      	uxth	r3, r0
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
  4003f2:	4a0a      	ldr	r2, [pc, #40]	; (40041c <udi_cdc_multi_get_nb_received_data+0x4c>)
  4003f4:	7812      	ldrb	r2, [r2, #0]
  4003f6:	b2d2      	uxtb	r2, r2
  4003f8:	4809      	ldr	r0, [pc, #36]	; (400420 <udi_cdc_multi_get_nb_received_data+0x50>)
  4003fa:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
  4003fe:	b280      	uxth	r0, r0
  400400:	1ac0      	subs	r0, r0, r3
	if (cpu_irq_is_enabled_flags(flags))
  400402:	b129      	cbz	r1, 400410 <udi_cdc_multi_get_nb_received_data+0x40>
		cpu_irq_enable();
  400404:	2201      	movs	r2, #1
  400406:	4b03      	ldr	r3, [pc, #12]	; (400414 <udi_cdc_multi_get_nb_received_data+0x44>)
  400408:	701a      	strb	r2, [r3, #0]
  40040a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40040e:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
  400410:	b002      	add	sp, #8
  400412:	4770      	bx	lr
  400414:	200000a0 	.word	0x200000a0
  400418:	20000b0c 	.word	0x20000b0c
  40041c:	20000b08 	.word	0x20000b08
  400420:	20000b04 	.word	0x20000b04

00400424 <udi_cdc_multi_is_rx_ready>:
{
	return udi_cdc_multi_get_nb_received_data(0);
}

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
  400424:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
  400426:	4b03      	ldr	r3, [pc, #12]	; (400434 <udi_cdc_multi_is_rx_ready+0x10>)
  400428:	4798      	blx	r3
}
  40042a:	3000      	adds	r0, #0
  40042c:	bf18      	it	ne
  40042e:	2001      	movne	r0, #1
  400430:	bd08      	pop	{r3, pc}
  400432:	bf00      	nop
  400434:	004003d1 	.word	0x004003d1

00400438 <udi_cdc_rx_start>:
{
  400438:	b510      	push	{r4, lr}
  40043a:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40043c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400440:	fab3 f383 	clz	r3, r3
  400444:	095b      	lsrs	r3, r3, #5
  400446:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
  400448:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  40044a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40044e:	2200      	movs	r2, #0
  400450:	4b1e      	ldr	r3, [pc, #120]	; (4004cc <udi_cdc_rx_start+0x94>)
  400452:	701a      	strb	r2, [r3, #0]
	return flags;
  400454:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
  400456:	4a1e      	ldr	r2, [pc, #120]	; (4004d0 <udi_cdc_rx_start+0x98>)
  400458:	7814      	ldrb	r4, [r2, #0]
	if (udi_cdc_rx_trans_ongoing[port] ||
  40045a:	4a1e      	ldr	r2, [pc, #120]	; (4004d4 <udi_cdc_rx_start+0x9c>)
  40045c:	7812      	ldrb	r2, [r2, #0]
  40045e:	b94a      	cbnz	r2, 400474 <udi_cdc_rx_start+0x3c>
  400460:	b2e4      	uxtb	r4, r4
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
  400462:	4a1d      	ldr	r2, [pc, #116]	; (4004d8 <udi_cdc_rx_start+0xa0>)
  400464:	8811      	ldrh	r1, [r2, #0]
  400466:	b289      	uxth	r1, r1
  400468:	4a1c      	ldr	r2, [pc, #112]	; (4004dc <udi_cdc_rx_start+0xa4>)
  40046a:	f832 2014 	ldrh.w	r2, [r2, r4, lsl #1]
  40046e:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
  400470:	4291      	cmp	r1, r2
  400472:	d209      	bcs.n	400488 <udi_cdc_rx_start+0x50>
	if (cpu_irq_is_enabled_flags(flags))
  400474:	b33b      	cbz	r3, 4004c6 <udi_cdc_rx_start+0x8e>
		cpu_irq_enable();
  400476:	2201      	movs	r2, #1
  400478:	4b14      	ldr	r3, [pc, #80]	; (4004cc <udi_cdc_rx_start+0x94>)
  40047a:	701a      	strb	r2, [r3, #0]
  40047c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400480:	b662      	cpsie	i
		return false;
  400482:	2000      	movs	r0, #0
}
  400484:	b004      	add	sp, #16
  400486:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
  400488:	2100      	movs	r1, #0
  40048a:	4a13      	ldr	r2, [pc, #76]	; (4004d8 <udi_cdc_rx_start+0xa0>)
  40048c:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
  40048e:	fab4 f284 	clz	r2, r4
  400492:	0952      	lsrs	r2, r2, #5
  400494:	490e      	ldr	r1, [pc, #56]	; (4004d0 <udi_cdc_rx_start+0x98>)
  400496:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
  400498:	2101      	movs	r1, #1
  40049a:	4a0e      	ldr	r2, [pc, #56]	; (4004d4 <udi_cdc_rx_start+0x9c>)
  40049c:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  40049e:	b123      	cbz	r3, 4004aa <udi_cdc_rx_start+0x72>
		cpu_irq_enable();
  4004a0:	4b0a      	ldr	r3, [pc, #40]	; (4004cc <udi_cdc_rx_start+0x94>)
  4004a2:	7019      	strb	r1, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  4004a4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4004a8:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
  4004aa:	2000      	movs	r0, #0
  4004ac:	4b0c      	ldr	r3, [pc, #48]	; (4004e0 <udi_cdc_rx_start+0xa8>)
  4004ae:	4798      	blx	r3
	return udd_ep_run(ep,
  4004b0:	4b0c      	ldr	r3, [pc, #48]	; (4004e4 <udi_cdc_rx_start+0xac>)
  4004b2:	9300      	str	r3, [sp, #0]
  4004b4:	2340      	movs	r3, #64	; 0x40
  4004b6:	4a0c      	ldr	r2, [pc, #48]	; (4004e8 <udi_cdc_rx_start+0xb0>)
  4004b8:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  4004bc:	2101      	movs	r1, #1
  4004be:	2002      	movs	r0, #2
  4004c0:	4c0a      	ldr	r4, [pc, #40]	; (4004ec <udi_cdc_rx_start+0xb4>)
  4004c2:	47a0      	blx	r4
  4004c4:	e7de      	b.n	400484 <udi_cdc_rx_start+0x4c>
		return false;
  4004c6:	2000      	movs	r0, #0
  4004c8:	e7dc      	b.n	400484 <udi_cdc_rx_start+0x4c>
  4004ca:	bf00      	nop
  4004cc:	200000a0 	.word	0x200000a0
  4004d0:	20000b08 	.word	0x20000b08
  4004d4:	20000b10 	.word	0x20000b10
  4004d8:	20000b0c 	.word	0x20000b0c
  4004dc:	20000b04 	.word	0x20000b04
  4004e0:	00400425 	.word	0x00400425
  4004e4:	00400585 	.word	0x00400585
  4004e8:	20000a84 	.word	0x20000a84
  4004ec:	00402259 	.word	0x00402259

004004f0 <udi_cdc_data_enable>:
{
  4004f0:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled = 0;
  4004f2:	2400      	movs	r4, #0
  4004f4:	4b16      	ldr	r3, [pc, #88]	; (400550 <udi_cdc_data_enable+0x60>)
  4004f6:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
  4004f8:	4b16      	ldr	r3, [pc, #88]	; (400554 <udi_cdc_data_enable+0x64>)
  4004fa:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
  4004fc:	4b16      	ldr	r3, [pc, #88]	; (400558 <udi_cdc_data_enable+0x68>)
  4004fe:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
  400500:	4b16      	ldr	r3, [pc, #88]	; (40055c <udi_cdc_data_enable+0x6c>)
  400502:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
  400504:	4b16      	ldr	r3, [pc, #88]	; (400560 <udi_cdc_data_enable+0x70>)
  400506:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
  400508:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
  40050a:	4b16      	ldr	r3, [pc, #88]	; (400564 <udi_cdc_data_enable+0x74>)
  40050c:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
  40050e:	4620      	mov	r0, r4
  400510:	4b15      	ldr	r3, [pc, #84]	; (400568 <udi_cdc_data_enable+0x78>)
  400512:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
  400514:	4b15      	ldr	r3, [pc, #84]	; (40056c <udi_cdc_data_enable+0x7c>)
  400516:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
  400518:	4b15      	ldr	r3, [pc, #84]	; (400570 <udi_cdc_data_enable+0x80>)
  40051a:	701c      	strb	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
  40051c:	4b15      	ldr	r3, [pc, #84]	; (400574 <udi_cdc_data_enable+0x84>)
  40051e:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
  400520:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
  400522:	4b15      	ldr	r3, [pc, #84]	; (400578 <udi_cdc_data_enable+0x88>)
  400524:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
  400526:	4620      	mov	r0, r4
  400528:	4b14      	ldr	r3, [pc, #80]	; (40057c <udi_cdc_data_enable+0x8c>)
  40052a:	4798      	blx	r3
  40052c:	4601      	mov	r1, r0
  40052e:	b140      	cbz	r0, 400542 <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
  400530:	4a07      	ldr	r2, [pc, #28]	; (400550 <udi_cdc_data_enable+0x60>)
  400532:	7813      	ldrb	r3, [r2, #0]
  400534:	3301      	adds	r3, #1
  400536:	b2db      	uxtb	r3, r3
  400538:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
  40053a:	7813      	ldrb	r3, [r2, #0]
  40053c:	b2db      	uxtb	r3, r3
  40053e:	2b01      	cmp	r3, #1
  400540:	d001      	beq.n	400546 <udi_cdc_data_enable+0x56>
}
  400542:	4608      	mov	r0, r1
  400544:	bd10      	pop	{r4, pc}
		udi_cdc_data_running = true;
  400546:	2201      	movs	r2, #1
  400548:	4b0d      	ldr	r3, [pc, #52]	; (400580 <udi_cdc_data_enable+0x90>)
  40054a:	701a      	strb	r2, [r3, #0]
  40054c:	e7f9      	b.n	400542 <udi_cdc_data_enable+0x52>
  40054e:	bf00      	nop
  400550:	20000a80 	.word	0x20000a80
  400554:	20000ba8 	.word	0x20000ba8
  400558:	20000b18 	.word	0x20000b18
  40055c:	20000ba0 	.word	0x20000ba0
  400560:	20000b9c 	.word	0x20000b9c
  400564:	20000ba4 	.word	0x20000ba4
  400568:	00400241 	.word	0x00400241
  40056c:	20000b10 	.word	0x20000b10
  400570:	20000b08 	.word	0x20000b08
  400574:	20000b04 	.word	0x20000b04
  400578:	20000b0c 	.word	0x20000b0c
  40057c:	00400439 	.word	0x00400439
  400580:	20000a76 	.word	0x20000a76

00400584 <udi_cdc_data_received>:
	if (UDD_EP_TRANSFER_OK != status) {
  400584:	b9e8      	cbnz	r0, 4005c2 <udi_cdc_data_received+0x3e>
{
  400586:	b510      	push	{r4, lr}
  400588:	b082      	sub	sp, #8
  40058a:	4610      	mov	r0, r2
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
  40058c:	4b0d      	ldr	r3, [pc, #52]	; (4005c4 <udi_cdc_data_received+0x40>)
  40058e:	781c      	ldrb	r4, [r3, #0]
  400590:	fab4 f484 	clz	r4, r4
  400594:	0964      	lsrs	r4, r4, #5
	if (!n) {
  400596:	b151      	cbz	r1, 4005ae <udi_cdc_data_received+0x2a>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
  400598:	b289      	uxth	r1, r1
  40059a:	4b0b      	ldr	r3, [pc, #44]	; (4005c8 <udi_cdc_data_received+0x44>)
  40059c:	f823 1014 	strh.w	r1, [r3, r4, lsl #1]
	udi_cdc_rx_trans_ongoing[port] = false;
  4005a0:	2000      	movs	r0, #0
  4005a2:	4b0a      	ldr	r3, [pc, #40]	; (4005cc <udi_cdc_data_received+0x48>)
  4005a4:	7018      	strb	r0, [r3, #0]
	udi_cdc_rx_start(port);
  4005a6:	4b0a      	ldr	r3, [pc, #40]	; (4005d0 <udi_cdc_data_received+0x4c>)
  4005a8:	4798      	blx	r3
}
  4005aa:	b002      	add	sp, #8
  4005ac:	bd10      	pop	{r4, pc}
		udd_ep_run( ep,
  4005ae:	4b09      	ldr	r3, [pc, #36]	; (4005d4 <udi_cdc_data_received+0x50>)
  4005b0:	9300      	str	r3, [sp, #0]
  4005b2:	2340      	movs	r3, #64	; 0x40
  4005b4:	4a08      	ldr	r2, [pc, #32]	; (4005d8 <udi_cdc_data_received+0x54>)
  4005b6:	eb02 1284 	add.w	r2, r2, r4, lsl #6
  4005ba:	2101      	movs	r1, #1
  4005bc:	4c07      	ldr	r4, [pc, #28]	; (4005dc <udi_cdc_data_received+0x58>)
  4005be:	47a0      	blx	r4
		return;
  4005c0:	e7f3      	b.n	4005aa <udi_cdc_data_received+0x26>
  4005c2:	4770      	bx	lr
  4005c4:	20000b08 	.word	0x20000b08
  4005c8:	20000b04 	.word	0x20000b04
  4005cc:	20000b10 	.word	0x20000b10
  4005d0:	00400439 	.word	0x00400439
  4005d4:	00400585 	.word	0x00400585
  4005d8:	20000a84 	.word	0x20000a84
  4005dc:	00402259 	.word	0x00402259

004005e0 <udi_cdc_multi_get_free_tx_buffer>:
{
	return udi_cdc_multi_read_buf(0, buf, size);
}

iram_size_t udi_cdc_multi_get_free_tx_buffer(uint8_t port)
{
  4005e0:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4005e2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4005e6:	fab3 f383 	clz	r3, r3
  4005ea:	095b      	lsrs	r3, r3, #5
  4005ec:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4005ee:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4005f0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4005f4:	2200      	movs	r2, #0
  4005f6:	4b14      	ldr	r3, [pc, #80]	; (400648 <udi_cdc_multi_get_free_tx_buffer+0x68>)
  4005f8:	701a      	strb	r2, [r3, #0]
	return flags;
  4005fa:	9a01      	ldr	r2, [sp, #4]
#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
  4005fc:	4b13      	ldr	r3, [pc, #76]	; (40064c <udi_cdc_multi_get_free_tx_buffer+0x6c>)
  4005fe:	781b      	ldrb	r3, [r3, #0]
  400600:	b2db      	uxtb	r3, r3
	buf_sel_nb = udi_cdc_tx_buf_nb[port][buf_sel];
  400602:	4913      	ldr	r1, [pc, #76]	; (400650 <udi_cdc_multi_get_free_tx_buffer+0x70>)
  400604:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
	if (buf_sel_nb == UDI_CDC_TX_BUFFERS) {
  400608:	2840      	cmp	r0, #64	; 0x40
  40060a:	d00a      	beq.n	400622 <udi_cdc_multi_get_free_tx_buffer+0x42>
			udi_cdc_tx_both_buf_to_send[port] = true;
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
			buf_sel_nb = 0;
		}
	}
	retval = UDI_CDC_TX_BUFFERS - buf_sel_nb;  
  40060c:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
	if (cpu_irq_is_enabled_flags(flags))
  400610:	b12a      	cbz	r2, 40061e <udi_cdc_multi_get_free_tx_buffer+0x3e>
		cpu_irq_enable();
  400612:	2201      	movs	r2, #1
  400614:	4b0c      	ldr	r3, [pc, #48]	; (400648 <udi_cdc_multi_get_free_tx_buffer+0x68>)
  400616:	701a      	strb	r2, [r3, #0]
  400618:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40061c:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return retval;
}
  40061e:	b002      	add	sp, #8
  400620:	4770      	bx	lr
		if ((!udi_cdc_tx_trans_ongoing[port])
  400622:	490c      	ldr	r1, [pc, #48]	; (400654 <udi_cdc_multi_get_free_tx_buffer+0x74>)
  400624:	7809      	ldrb	r1, [r1, #0]
  400626:	2900      	cmp	r1, #0
  400628:	d1f0      	bne.n	40060c <udi_cdc_multi_get_free_tx_buffer+0x2c>
			&& (!udi_cdc_tx_both_buf_to_send[port])) {
  40062a:	490b      	ldr	r1, [pc, #44]	; (400658 <udi_cdc_multi_get_free_tx_buffer+0x78>)
  40062c:	7809      	ldrb	r1, [r1, #0]
  40062e:	2900      	cmp	r1, #0
  400630:	d1ec      	bne.n	40060c <udi_cdc_multi_get_free_tx_buffer+0x2c>
			udi_cdc_tx_both_buf_to_send[port] = true;
  400632:	2001      	movs	r0, #1
  400634:	4908      	ldr	r1, [pc, #32]	; (400658 <udi_cdc_multi_get_free_tx_buffer+0x78>)
  400636:	7008      	strb	r0, [r1, #0]
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
  400638:	fab3 f383 	clz	r3, r3
  40063c:	095b      	lsrs	r3, r3, #5
  40063e:	4903      	ldr	r1, [pc, #12]	; (40064c <udi_cdc_multi_get_free_tx_buffer+0x6c>)
  400640:	700b      	strb	r3, [r1, #0]
			buf_sel_nb = 0;
  400642:	2000      	movs	r0, #0
  400644:	e7e2      	b.n	40060c <udi_cdc_multi_get_free_tx_buffer+0x2c>
  400646:	bf00      	nop
  400648:	200000a0 	.word	0x200000a0
  40064c:	20000ba0 	.word	0x20000ba0
  400650:	20000b9c 	.word	0x20000b9c
  400654:	20000ba8 	.word	0x20000ba8
  400658:	20000b18 	.word	0x20000b18

0040065c <udi_cdc_get_free_tx_buffer>:

iram_size_t udi_cdc_get_free_tx_buffer(void)
{
  40065c:	b508      	push	{r3, lr}
	return udi_cdc_multi_get_free_tx_buffer(0);
  40065e:	2000      	movs	r0, #0
  400660:	4b01      	ldr	r3, [pc, #4]	; (400668 <udi_cdc_get_free_tx_buffer+0xc>)
  400662:	4798      	blx	r3
}
  400664:	bd08      	pop	{r3, pc}
  400666:	bf00      	nop
  400668:	004005e1 	.word	0x004005e1

0040066c <udi_cdc_multi_is_tx_ready>:

bool udi_cdc_multi_is_tx_ready(uint8_t port)
{
  40066c:	b508      	push	{r3, lr}
	return (udi_cdc_multi_get_free_tx_buffer(port) != 0);
  40066e:	4b03      	ldr	r3, [pc, #12]	; (40067c <udi_cdc_multi_is_tx_ready+0x10>)
  400670:	4798      	blx	r3
}
  400672:	3000      	adds	r0, #0
  400674:	bf18      	it	ne
  400676:	2001      	movne	r0, #1
  400678:	bd08      	pop	{r3, pc}
  40067a:	bf00      	nop
  40067c:	004005e1 	.word	0x004005e1

00400680 <udi_cdc_is_tx_ready>:

bool udi_cdc_is_tx_ready(void)
{
  400680:	b508      	push	{r3, lr}
	return udi_cdc_multi_is_tx_ready(0);
  400682:	2000      	movs	r0, #0
  400684:	4b01      	ldr	r3, [pc, #4]	; (40068c <udi_cdc_is_tx_ready+0xc>)
  400686:	4798      	blx	r3
}
  400688:	bd08      	pop	{r3, pc}
  40068a:	bf00      	nop
  40068c:	0040066d 	.word	0x0040066d

00400690 <udi_cdc_multi_putc>:

int udi_cdc_multi_putc(uint8_t port, int value)
{
  400690:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400694:	b082      	sub	sp, #8
  400696:	460c      	mov	r4, r1

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
  400698:	4b1d      	ldr	r3, [pc, #116]	; (400710 <udi_cdc_multi_putc+0x80>)
  40069a:	799d      	ldrb	r5, [r3, #6]
  40069c:	2d09      	cmp	r5, #9
  40069e:	bf14      	ite	ne
  4006a0:	2500      	movne	r5, #0
  4006a2:	2501      	moveq	r5, #1

udi_cdc_putc_process_one_byte:
	// Check available space
	if (!udi_cdc_multi_is_tx_ready(port)) {
  4006a4:	4e1b      	ldr	r6, [pc, #108]	; (400714 <udi_cdc_multi_putc+0x84>)
	cpu_irq_disable();
  4006a6:	4f1c      	ldr	r7, [pc, #112]	; (400718 <udi_cdc_multi_putc+0x88>)
		goto udi_cdc_putc_process_one_byte;
	}

	// Write value
	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
  4006a8:	f8df 807c 	ldr.w	r8, [pc, #124]	; 400728 <udi_cdc_multi_putc+0x98>
  4006ac:	e022      	b.n	4006f4 <udi_cdc_multi_putc+0x64>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4006ae:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4006b2:	fab3 f383 	clz	r3, r3
  4006b6:	095b      	lsrs	r3, r3, #5
  4006b8:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4006ba:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4006bc:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4006c0:	2300      	movs	r3, #0
  4006c2:	703b      	strb	r3, [r7, #0]
	return flags;
  4006c4:	9801      	ldr	r0, [sp, #4]
  4006c6:	f898 3000 	ldrb.w	r3, [r8]
  4006ca:	b2db      	uxtb	r3, r3
	udi_cdc_tx_buf[port][buf_sel][udi_cdc_tx_buf_nb[port][buf_sel]++] = value;
  4006cc:	4a13      	ldr	r2, [pc, #76]	; (40071c <udi_cdc_multi_putc+0x8c>)
  4006ce:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
  4006d2:	f101 0e01 	add.w	lr, r1, #1
  4006d6:	f822 e013 	strh.w	lr, [r2, r3, lsl #1]
  4006da:	4a11      	ldr	r2, [pc, #68]	; (400720 <udi_cdc_multi_putc+0x90>)
  4006dc:	eb02 1383 	add.w	r3, r2, r3, lsl #6
  4006e0:	545c      	strb	r4, [r3, r1]
	if (cpu_irq_is_enabled_flags(flags))
  4006e2:	b120      	cbz	r0, 4006ee <udi_cdc_multi_putc+0x5e>
		cpu_irq_enable();
  4006e4:	2301      	movs	r3, #1
  4006e6:	703b      	strb	r3, [r7, #0]
  4006e8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4006ec:	b662      	cpsie	i
	cpu_irq_restore(flags);

	if (b_databit_9) {
  4006ee:	b165      	cbz	r5, 40070a <udi_cdc_multi_putc+0x7a>
		// Send MSB
		b_databit_9 = false;
		value = value >> 8;
  4006f0:	1224      	asrs	r4, r4, #8
		b_databit_9 = false;
  4006f2:	2500      	movs	r5, #0
	if (!udi_cdc_multi_is_tx_ready(port)) {
  4006f4:	2000      	movs	r0, #0
  4006f6:	47b0      	blx	r6
  4006f8:	2800      	cmp	r0, #0
  4006fa:	d1d8      	bne.n	4006ae <udi_cdc_multi_putc+0x1e>
		if (!udi_cdc_data_running) {
  4006fc:	4b09      	ldr	r3, [pc, #36]	; (400724 <udi_cdc_multi_putc+0x94>)
  4006fe:	781b      	ldrb	r3, [r3, #0]
  400700:	2b00      	cmp	r3, #0
  400702:	d1f7      	bne.n	4006f4 <udi_cdc_multi_putc+0x64>
		goto udi_cdc_putc_process_one_byte;
	}
	return true;
}
  400704:	b002      	add	sp, #8
  400706:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	return true;
  40070a:	2001      	movs	r0, #1
  40070c:	e7fa      	b.n	400704 <udi_cdc_multi_putc+0x74>
  40070e:	bf00      	nop
  400710:	20000a78 	.word	0x20000a78
  400714:	0040066d 	.word	0x0040066d
  400718:	200000a0 	.word	0x200000a0
  40071c:	20000b9c 	.word	0x20000b9c
  400720:	20000b1c 	.word	0x20000b1c
  400724:	20000a76 	.word	0x20000a76
  400728:	20000ba0 	.word	0x20000ba0

0040072c <udi_cdc_putc>:

int udi_cdc_putc(int value)
{
  40072c:	b508      	push	{r3, lr}
	return udi_cdc_multi_putc(0, value);
  40072e:	4601      	mov	r1, r0
  400730:	2000      	movs	r0, #0
  400732:	4b01      	ldr	r3, [pc, #4]	; (400738 <udi_cdc_putc+0xc>)
  400734:	4798      	blx	r3
}
  400736:	bd08      	pop	{r3, pc}
  400738:	00400691 	.word	0x00400691

0040073c <udc_next_desc_in_iface>:
 * \return address after the last byte of USB Configuration descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_get_eof_conf(void)
{
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
			udc_ptr_conf->desc +
  40073c:	4b10      	ldr	r3, [pc, #64]	; (400780 <udc_next_desc_in_iface+0x44>)
  40073e:	681b      	ldr	r3, [r3, #0]
  400740:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
  400742:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
  400744:	441a      	add	r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
  400746:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
  400748:	4418      	add	r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
  40074a:	4290      	cmp	r0, r2
  40074c:	d211      	bcs.n	400772 <udc_next_desc_in_iface+0x36>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
  40074e:	7843      	ldrb	r3, [r0, #1]
  400750:	2b04      	cmp	r3, #4
  400752:	d010      	beq.n	400776 <udc_next_desc_in_iface+0x3a>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
  400754:	428b      	cmp	r3, r1
  400756:	d009      	beq.n	40076c <udc_next_desc_in_iface+0x30>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
  400758:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
  40075a:	4418      	add	r0, r3
	while (ptr_eof_desc > desc) {
  40075c:	4290      	cmp	r0, r2
  40075e:	d206      	bcs.n	40076e <udc_next_desc_in_iface+0x32>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
  400760:	7843      	ldrb	r3, [r0, #1]
  400762:	2b04      	cmp	r3, #4
  400764:	d009      	beq.n	40077a <udc_next_desc_in_iface+0x3e>
		if (desc_id == desc->bDescriptorType) {
  400766:	428b      	cmp	r3, r1
  400768:	d1f6      	bne.n	400758 <udc_next_desc_in_iface+0x1c>
  40076a:	e007      	b.n	40077c <udc_next_desc_in_iface+0x40>
  40076c:	4770      	bx	lr
	}
	return NULL; // No specific descriptor found
  40076e:	2000      	movs	r0, #0
  400770:	4770      	bx	lr
  400772:	2000      	movs	r0, #0
  400774:	4770      	bx	lr
  400776:	2000      	movs	r0, #0
  400778:	4770      	bx	lr
  40077a:	2000      	movs	r0, #0
}
  40077c:	4770      	bx	lr
  40077e:	bf00      	nop
  400780:	20000bc4 	.word	0x20000bc4

00400784 <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
  400784:	b508      	push	{r3, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
  400786:	4b03      	ldr	r3, [pc, #12]	; (400794 <udc_valid_address+0x10>)
  400788:	7898      	ldrb	r0, [r3, #2]
  40078a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
  40078e:	4b02      	ldr	r3, [pc, #8]	; (400798 <udc_valid_address+0x14>)
  400790:	4798      	blx	r3
  400792:	bd08      	pop	{r3, pc}
  400794:	20000cc8 	.word	0x20000cc8
  400798:	00401e99 	.word	0x00401e99

0040079c <udc_update_iface_desc>:
	if (0 == udc_num_configuration) {
  40079c:	4b19      	ldr	r3, [pc, #100]	; (400804 <udc_update_iface_desc+0x68>)
  40079e:	781b      	ldrb	r3, [r3, #0]
  4007a0:	b34b      	cbz	r3, 4007f6 <udc_update_iface_desc+0x5a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  4007a2:	4b19      	ldr	r3, [pc, #100]	; (400808 <udc_update_iface_desc+0x6c>)
  4007a4:	681b      	ldr	r3, [r3, #0]
  4007a6:	681b      	ldr	r3, [r3, #0]
  4007a8:	791a      	ldrb	r2, [r3, #4]
  4007aa:	4282      	cmp	r2, r0
  4007ac:	d925      	bls.n	4007fa <udc_update_iface_desc+0x5e>
{
  4007ae:	b470      	push	{r4, r5, r6}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
  4007b0:	4a16      	ldr	r2, [pc, #88]	; (40080c <udc_update_iface_desc+0x70>)
  4007b2:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
  4007b4:	885c      	ldrh	r4, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
  4007b6:	441c      	add	r4, r3
	while (ptr_end_desc >
  4007b8:	42a3      	cmp	r3, r4
  4007ba:	d220      	bcs.n	4007fe <udc_update_iface_desc+0x62>
  4007bc:	2500      	movs	r5, #0
  4007be:	2601      	movs	r6, #1
  4007c0:	e007      	b.n	4007d2 <udc_update_iface_desc+0x36>
  4007c2:	4a12      	ldr	r2, [pc, #72]	; (40080c <udc_update_iface_desc+0x70>)
  4007c4:	6013      	str	r3, [r2, #0]
  4007c6:	e00f      	b.n	4007e8 <udc_update_iface_desc+0x4c>
				udc_ptr_iface->bLength);
  4007c8:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
  4007ca:	4413      	add	r3, r2
  4007cc:	4635      	mov	r5, r6
	while (ptr_end_desc >
  4007ce:	42a3      	cmp	r3, r4
  4007d0:	d20c      	bcs.n	4007ec <udc_update_iface_desc+0x50>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
  4007d2:	785a      	ldrb	r2, [r3, #1]
  4007d4:	2a04      	cmp	r2, #4
  4007d6:	d1f7      	bne.n	4007c8 <udc_update_iface_desc+0x2c>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
  4007d8:	789a      	ldrb	r2, [r3, #2]
  4007da:	4282      	cmp	r2, r0
  4007dc:	d1f4      	bne.n	4007c8 <udc_update_iface_desc+0x2c>
  4007de:	78da      	ldrb	r2, [r3, #3]
  4007e0:	428a      	cmp	r2, r1
  4007e2:	d1f1      	bne.n	4007c8 <udc_update_iface_desc+0x2c>
  4007e4:	2d00      	cmp	r5, #0
  4007e6:	d1ec      	bne.n	4007c2 <udc_update_iface_desc+0x26>
				return true; // Interface found
  4007e8:	2001      	movs	r0, #1
  4007ea:	e002      	b.n	4007f2 <udc_update_iface_desc+0x56>
  4007ec:	4a07      	ldr	r2, [pc, #28]	; (40080c <udc_update_iface_desc+0x70>)
  4007ee:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
  4007f0:	2000      	movs	r0, #0
}
  4007f2:	bc70      	pop	{r4, r5, r6}
  4007f4:	4770      	bx	lr
		return false;
  4007f6:	2000      	movs	r0, #0
  4007f8:	4770      	bx	lr
		return false;
  4007fa:	2000      	movs	r0, #0
  4007fc:	4770      	bx	lr
	return false; // Interface not found
  4007fe:	2000      	movs	r0, #0
  400800:	e7f7      	b.n	4007f2 <udc_update_iface_desc+0x56>
  400802:	bf00      	nop
  400804:	20000bc0 	.word	0x20000bc0
  400808:	20000bc4 	.word	0x20000bc4
  40080c:	20000bc8 	.word	0x20000bc8

00400810 <udc_iface_disable>:
{
  400810:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400814:	4604      	mov	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
  400816:	2100      	movs	r1, #0
  400818:	4b13      	ldr	r3, [pc, #76]	; (400868 <udc_iface_disable+0x58>)
  40081a:	4798      	blx	r3
  40081c:	4680      	mov	r8, r0
  40081e:	b910      	cbnz	r0, 400826 <udc_iface_disable+0x16>
}
  400820:	4640      	mov	r0, r8
  400822:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400826:	4b11      	ldr	r3, [pc, #68]	; (40086c <udc_iface_disable+0x5c>)
  400828:	681b      	ldr	r3, [r3, #0]
  40082a:	685b      	ldr	r3, [r3, #4]
  40082c:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400830:	f8d9 300c 	ldr.w	r3, [r9, #12]
  400834:	4798      	blx	r3
  400836:	4601      	mov	r1, r0
  400838:	4620      	mov	r0, r4
  40083a:	4b0b      	ldr	r3, [pc, #44]	; (400868 <udc_iface_disable+0x58>)
  40083c:	4798      	blx	r3
  40083e:	4680      	mov	r8, r0
  400840:	2800      	cmp	r0, #0
  400842:	d0ed      	beq.n	400820 <udc_iface_disable+0x10>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
  400844:	4b0a      	ldr	r3, [pc, #40]	; (400870 <udc_iface_disable+0x60>)
  400846:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  400848:	2605      	movs	r6, #5
  40084a:	4d0a      	ldr	r5, [pc, #40]	; (400874 <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
  40084c:	4f0a      	ldr	r7, [pc, #40]	; (400878 <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  40084e:	4631      	mov	r1, r6
  400850:	4620      	mov	r0, r4
  400852:	47a8      	blx	r5
			if (NULL == ep_desc) {
  400854:	4604      	mov	r4, r0
  400856:	b110      	cbz	r0, 40085e <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
  400858:	7880      	ldrb	r0, [r0, #2]
  40085a:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  40085c:	e7f7      	b.n	40084e <udc_iface_disable+0x3e>
	udi_api->disable();
  40085e:	f8d9 3004 	ldr.w	r3, [r9, #4]
  400862:	4798      	blx	r3
	return true;
  400864:	e7dc      	b.n	400820 <udc_iface_disable+0x10>
  400866:	bf00      	nop
  400868:	0040079d 	.word	0x0040079d
  40086c:	20000bc4 	.word	0x20000bc4
  400870:	20000bc8 	.word	0x20000bc8
  400874:	0040073d 	.word	0x0040073d
  400878:	00402009 	.word	0x00402009

0040087c <udc_iface_enable>:
{
  40087c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400880:	4680      	mov	r8, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
  400882:	4b10      	ldr	r3, [pc, #64]	; (4008c4 <udc_iface_enable+0x48>)
  400884:	4798      	blx	r3
  400886:	4603      	mov	r3, r0
  400888:	b1c8      	cbz	r0, 4008be <udc_iface_enable+0x42>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
  40088a:	4b0f      	ldr	r3, [pc, #60]	; (4008c8 <udc_iface_enable+0x4c>)
  40088c:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  40088e:	2605      	movs	r6, #5
  400890:	4d0e      	ldr	r5, [pc, #56]	; (4008cc <udc_iface_enable+0x50>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
  400892:	4f0f      	ldr	r7, [pc, #60]	; (4008d0 <udc_iface_enable+0x54>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
  400894:	4631      	mov	r1, r6
  400896:	4620      	mov	r0, r4
  400898:	47a8      	blx	r5
		if (NULL == ep_desc)
  40089a:	4604      	mov	r4, r0
  40089c:	b138      	cbz	r0, 4008ae <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
  40089e:	8882      	ldrh	r2, [r0, #4]
  4008a0:	78c1      	ldrb	r1, [r0, #3]
  4008a2:	7880      	ldrb	r0, [r0, #2]
  4008a4:	47b8      	blx	r7
  4008a6:	4603      	mov	r3, r0
  4008a8:	2800      	cmp	r0, #0
  4008aa:	d1f3      	bne.n	400894 <udc_iface_enable+0x18>
  4008ac:	e007      	b.n	4008be <udc_iface_enable+0x42>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
  4008ae:	4b09      	ldr	r3, [pc, #36]	; (4008d4 <udc_iface_enable+0x58>)
  4008b0:	681b      	ldr	r3, [r3, #0]
  4008b2:	685b      	ldr	r3, [r3, #4]
  4008b4:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
  4008b8:	681b      	ldr	r3, [r3, #0]
  4008ba:	4798      	blx	r3
  4008bc:	4603      	mov	r3, r0
}
  4008be:	4618      	mov	r0, r3
  4008c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4008c4:	0040079d 	.word	0x0040079d
  4008c8:	20000bc8 	.word	0x20000bc8
  4008cc:	0040073d 	.word	0x0040073d
  4008d0:	00401f11 	.word	0x00401f11
  4008d4:	20000bc4 	.word	0x20000bc4

004008d8 <udc_start>:
{
  4008d8:	b508      	push	{r3, lr}
	udd_enable();
  4008da:	4b01      	ldr	r3, [pc, #4]	; (4008e0 <udc_start+0x8>)
  4008dc:	4798      	blx	r3
  4008de:	bd08      	pop	{r3, pc}
  4008e0:	00401db9 	.word	0x00401db9

004008e4 <udc_reset>:
{
  4008e4:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
  4008e6:	4b0d      	ldr	r3, [pc, #52]	; (40091c <udc_reset+0x38>)
  4008e8:	781b      	ldrb	r3, [r3, #0]
  4008ea:	b183      	cbz	r3, 40090e <udc_reset+0x2a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  4008ec:	4b0c      	ldr	r3, [pc, #48]	; (400920 <udc_reset+0x3c>)
  4008ee:	681b      	ldr	r3, [r3, #0]
  4008f0:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
  4008f2:	791b      	ldrb	r3, [r3, #4]
  4008f4:	b15b      	cbz	r3, 40090e <udc_reset+0x2a>
  4008f6:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
  4008f8:	4e0a      	ldr	r6, [pc, #40]	; (400924 <udc_reset+0x40>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  4008fa:	4d09      	ldr	r5, [pc, #36]	; (400920 <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
  4008fc:	4620      	mov	r0, r4
  4008fe:	47b0      	blx	r6
				iface_num++) {
  400900:	3401      	adds	r4, #1
  400902:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400904:	682b      	ldr	r3, [r5, #0]
  400906:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
  400908:	791b      	ldrb	r3, [r3, #4]
  40090a:	42a3      	cmp	r3, r4
  40090c:	d8f6      	bhi.n	4008fc <udc_reset+0x18>
	udc_num_configuration = 0;
  40090e:	2200      	movs	r2, #0
  400910:	4b02      	ldr	r3, [pc, #8]	; (40091c <udc_reset+0x38>)
  400912:	701a      	strb	r2, [r3, #0]
	udc_device_status =
  400914:	2201      	movs	r2, #1
  400916:	4b04      	ldr	r3, [pc, #16]	; (400928 <udc_reset+0x44>)
  400918:	801a      	strh	r2, [r3, #0]
  40091a:	bd70      	pop	{r4, r5, r6, pc}
  40091c:	20000bc0 	.word	0x20000bc0
  400920:	20000bc4 	.word	0x20000bc4
  400924:	00400811 	.word	0x00400811
  400928:	20000bb6 	.word	0x20000bb6

0040092c <udc_sof_notify>:
{
  40092c:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
  40092e:	4b0d      	ldr	r3, [pc, #52]	; (400964 <udc_sof_notify+0x38>)
  400930:	781b      	ldrb	r3, [r3, #0]
  400932:	b1b3      	cbz	r3, 400962 <udc_sof_notify+0x36>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400934:	4b0c      	ldr	r3, [pc, #48]	; (400968 <udc_sof_notify+0x3c>)
  400936:	681b      	ldr	r3, [r3, #0]
  400938:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
  40093a:	7912      	ldrb	r2, [r2, #4]
  40093c:	b18a      	cbz	r2, 400962 <udc_sof_notify+0x36>
  40093e:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400940:	4d09      	ldr	r5, [pc, #36]	; (400968 <udc_sof_notify+0x3c>)
  400942:	e006      	b.n	400952 <udc_sof_notify+0x26>
				iface_num++) {
  400944:	3401      	adds	r4, #1
  400946:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400948:	682b      	ldr	r3, [r5, #0]
  40094a:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
  40094c:	7912      	ldrb	r2, [r2, #4]
  40094e:	42a2      	cmp	r2, r4
  400950:	d907      	bls.n	400962 <udc_sof_notify+0x36>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
  400952:	685b      	ldr	r3, [r3, #4]
  400954:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
  400958:	691b      	ldr	r3, [r3, #16]
  40095a:	2b00      	cmp	r3, #0
  40095c:	d0f2      	beq.n	400944 <udc_sof_notify+0x18>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
  40095e:	4798      	blx	r3
  400960:	e7f0      	b.n	400944 <udc_sof_notify+0x18>
  400962:	bd38      	pop	{r3, r4, r5, pc}
  400964:	20000bc0 	.word	0x20000bc0
  400968:	20000bc4 	.word	0x20000bc4

0040096c <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
  40096c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
  40096e:	4b96      	ldr	r3, [pc, #600]	; (400bc8 <udc_process_setup+0x25c>)
  400970:	2200      	movs	r2, #0
  400972:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
  400974:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
  400976:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
  400978:	781b      	ldrb	r3, [r3, #0]
  40097a:	f013 0f80 	tst.w	r3, #128	; 0x80
  40097e:	d114      	bne.n	4009aa <udc_process_setup+0x3e>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
  400980:	f013 0f60 	tst.w	r3, #96	; 0x60
  400984:	f000 80b8 	beq.w	400af8 <udc_process_setup+0x18c>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
  400988:	4b8f      	ldr	r3, [pc, #572]	; (400bc8 <udc_process_setup+0x25c>)
  40098a:	781b      	ldrb	r3, [r3, #0]
  40098c:	f003 031f 	and.w	r3, r3, #31
  400990:	2b01      	cmp	r3, #1
  400992:	f000 818b 	beq.w	400cac <udc_process_setup+0x340>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
  400996:	4b8c      	ldr	r3, [pc, #560]	; (400bc8 <udc_process_setup+0x25c>)
  400998:	781b      	ldrb	r3, [r3, #0]
  40099a:	f003 031f 	and.w	r3, r3, #31
  40099e:	2b02      	cmp	r3, #2
  4009a0:	f000 81ac 	beq.w	400cfc <udc_process_setup+0x390>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
  4009a4:	2300      	movs	r3, #0
#endif
}
  4009a6:	4618      	mov	r0, r3
  4009a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
  4009aa:	4a87      	ldr	r2, [pc, #540]	; (400bc8 <udc_process_setup+0x25c>)
  4009ac:	88d2      	ldrh	r2, [r2, #6]
  4009ae:	2a00      	cmp	r2, #0
  4009b0:	f000 81cd 	beq.w	400d4e <udc_process_setup+0x3e2>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
  4009b4:	f013 0f60 	tst.w	r3, #96	; 0x60
  4009b8:	d1e6      	bne.n	400988 <udc_process_setup+0x1c>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
  4009ba:	f013 031f 	ands.w	r3, r3, #31
  4009be:	d106      	bne.n	4009ce <udc_process_setup+0x62>
			switch (udd_g_ctrlreq.req.bRequest) {
  4009c0:	4981      	ldr	r1, [pc, #516]	; (400bc8 <udc_process_setup+0x25c>)
  4009c2:	7849      	ldrb	r1, [r1, #1]
  4009c4:	2906      	cmp	r1, #6
  4009c6:	d013      	beq.n	4009f0 <udc_process_setup+0x84>
  4009c8:	2908      	cmp	r1, #8
  4009ca:	d058      	beq.n	400a7e <udc_process_setup+0x112>
  4009cc:	b149      	cbz	r1, 4009e2 <udc_process_setup+0x76>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
  4009ce:	2b01      	cmp	r3, #1
  4009d0:	d05c      	beq.n	400a8c <udc_process_setup+0x120>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
  4009d2:	2b02      	cmp	r3, #2
  4009d4:	d1d8      	bne.n	400988 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
  4009d6:	4b7c      	ldr	r3, [pc, #496]	; (400bc8 <udc_process_setup+0x25c>)
  4009d8:	785b      	ldrb	r3, [r3, #1]
  4009da:	2b00      	cmp	r3, #0
  4009dc:	d07e      	beq.n	400adc <udc_process_setup+0x170>
	return false;
  4009de:	2300      	movs	r3, #0
  4009e0:	e160      	b.n	400ca4 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
  4009e2:	2a02      	cmp	r2, #2
  4009e4:	d1d0      	bne.n	400988 <udc_process_setup+0x1c>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
  4009e6:	2102      	movs	r1, #2
  4009e8:	4878      	ldr	r0, [pc, #480]	; (400bcc <udc_process_setup+0x260>)
  4009ea:	4b79      	ldr	r3, [pc, #484]	; (400bd0 <udc_process_setup+0x264>)
  4009ec:	4798      	blx	r3
  4009ee:	e09f      	b.n	400b30 <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
  4009f0:	4b75      	ldr	r3, [pc, #468]	; (400bc8 <udc_process_setup+0x25c>)
  4009f2:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
  4009f4:	0a13      	lsrs	r3, r2, #8
  4009f6:	3b01      	subs	r3, #1
  4009f8:	2b0e      	cmp	r3, #14
  4009fa:	f200 8150 	bhi.w	400c9e <udc_process_setup+0x332>
  4009fe:	e8df f013 	tbh	[pc, r3, lsl #1]
  400a02:	000f      	.short	0x000f
  400a04:	0036001c 	.word	0x0036001c
  400a08:	014e014e 	.word	0x014e014e
  400a0c:	014e014e 	.word	0x014e014e
  400a10:	014e014e 	.word	0x014e014e
  400a14:	014e014e 	.word	0x014e014e
  400a18:	014e014e 	.word	0x014e014e
  400a1c:	002e014e 	.word	0x002e014e
				(uint8_t *) udc_config.confdev_lsfs,
  400a20:	4b6c      	ldr	r3, [pc, #432]	; (400bd4 <udc_process_setup+0x268>)
  400a22:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
  400a24:	7801      	ldrb	r1, [r0, #0]
  400a26:	4b6a      	ldr	r3, [pc, #424]	; (400bd0 <udc_process_setup+0x264>)
  400a28:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
  400a2a:	4b67      	ldr	r3, [pc, #412]	; (400bc8 <udc_process_setup+0x25c>)
  400a2c:	88da      	ldrh	r2, [r3, #6]
  400a2e:	899b      	ldrh	r3, [r3, #12]
  400a30:	4293      	cmp	r3, r2
  400a32:	d97d      	bls.n	400b30 <udc_process_setup+0x1c4>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
  400a34:	4b64      	ldr	r3, [pc, #400]	; (400bc8 <udc_process_setup+0x25c>)
  400a36:	819a      	strh	r2, [r3, #12]
  400a38:	e07a      	b.n	400b30 <udc_process_setup+0x1c4>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
  400a3a:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
  400a3c:	4b65      	ldr	r3, [pc, #404]	; (400bd4 <udc_process_setup+0x268>)
  400a3e:	681b      	ldr	r3, [r3, #0]
  400a40:	7c5b      	ldrb	r3, [r3, #17]
  400a42:	4293      	cmp	r3, r2
  400a44:	d9a0      	bls.n	400988 <udc_process_setup+0x1c>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
  400a46:	4b63      	ldr	r3, [pc, #396]	; (400bd4 <udc_process_setup+0x268>)
  400a48:	685b      	ldr	r3, [r3, #4]
  400a4a:	f853 0032 	ldr.w	r0, [r3, r2, lsl #3]
			udd_set_setup_payload(
  400a4e:	8841      	ldrh	r1, [r0, #2]
  400a50:	4b5f      	ldr	r3, [pc, #380]	; (400bd0 <udc_process_setup+0x264>)
  400a52:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
  400a54:	4b5c      	ldr	r3, [pc, #368]	; (400bc8 <udc_process_setup+0x25c>)
  400a56:	689b      	ldr	r3, [r3, #8]
  400a58:	2202      	movs	r2, #2
  400a5a:	705a      	strb	r2, [r3, #1]
  400a5c:	e7e5      	b.n	400a2a <udc_process_setup+0xbe>
		if (udc_config.conf_bos == NULL) {
  400a5e:	4b5d      	ldr	r3, [pc, #372]	; (400bd4 <udc_process_setup+0x268>)
  400a60:	6898      	ldr	r0, [r3, #8]
  400a62:	2800      	cmp	r0, #0
  400a64:	d090      	beq.n	400988 <udc_process_setup+0x1c>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
  400a66:	8841      	ldrh	r1, [r0, #2]
  400a68:	4b59      	ldr	r3, [pc, #356]	; (400bd0 <udc_process_setup+0x264>)
  400a6a:	4798      	blx	r3
  400a6c:	e7dd      	b.n	400a2a <udc_process_setup+0xbe>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
  400a6e:	f012 0fff 	tst.w	r2, #255	; 0xff
  400a72:	d189      	bne.n	400988 <udc_process_setup+0x1c>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
  400a74:	2104      	movs	r1, #4
  400a76:	4858      	ldr	r0, [pc, #352]	; (400bd8 <udc_process_setup+0x26c>)
  400a78:	4b55      	ldr	r3, [pc, #340]	; (400bd0 <udc_process_setup+0x264>)
  400a7a:	4798      	blx	r3
  400a7c:	e7d5      	b.n	400a2a <udc_process_setup+0xbe>
	if (udd_g_ctrlreq.req.wLength != 1) {
  400a7e:	2a01      	cmp	r2, #1
  400a80:	d182      	bne.n	400988 <udc_process_setup+0x1c>
	udd_set_setup_payload(&udc_num_configuration,1);
  400a82:	2101      	movs	r1, #1
  400a84:	4855      	ldr	r0, [pc, #340]	; (400bdc <udc_process_setup+0x270>)
  400a86:	4b52      	ldr	r3, [pc, #328]	; (400bd0 <udc_process_setup+0x264>)
  400a88:	4798      	blx	r3
  400a8a:	e051      	b.n	400b30 <udc_process_setup+0x1c4>
			switch (udd_g_ctrlreq.req.bRequest) {
  400a8c:	494e      	ldr	r1, [pc, #312]	; (400bc8 <udc_process_setup+0x25c>)
  400a8e:	7849      	ldrb	r1, [r1, #1]
  400a90:	290a      	cmp	r1, #10
  400a92:	d19e      	bne.n	4009d2 <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wLength != 1) {
  400a94:	2a01      	cmp	r2, #1
  400a96:	f47f af77 	bne.w	400988 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
  400a9a:	4b50      	ldr	r3, [pc, #320]	; (400bdc <udc_process_setup+0x270>)
  400a9c:	781b      	ldrb	r3, [r3, #0]
  400a9e:	2b00      	cmp	r3, #0
  400aa0:	f43f af72 	beq.w	400988 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400aa4:	4b48      	ldr	r3, [pc, #288]	; (400bc8 <udc_process_setup+0x25c>)
  400aa6:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  400aa8:	4b4d      	ldr	r3, [pc, #308]	; (400be0 <udc_process_setup+0x274>)
  400aaa:	681d      	ldr	r5, [r3, #0]
  400aac:	682b      	ldr	r3, [r5, #0]
  400aae:	791b      	ldrb	r3, [r3, #4]
  400ab0:	42a3      	cmp	r3, r4
  400ab2:	f67f af69 	bls.w	400988 <udc_process_setup+0x1c>
	if (!udc_update_iface_desc(iface_num, 0)) {
  400ab6:	2100      	movs	r1, #0
  400ab8:	4620      	mov	r0, r4
  400aba:	4b4a      	ldr	r3, [pc, #296]	; (400be4 <udc_process_setup+0x278>)
  400abc:	4798      	blx	r3
  400abe:	2800      	cmp	r0, #0
  400ac0:	f43f af62 	beq.w	400988 <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400ac4:	686b      	ldr	r3, [r5, #4]
	udc_iface_setting = udi_api->getsetting();
  400ac6:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
  400aca:	68db      	ldr	r3, [r3, #12]
  400acc:	4798      	blx	r3
  400ace:	4b46      	ldr	r3, [pc, #280]	; (400be8 <udc_process_setup+0x27c>)
  400ad0:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
  400ad2:	2101      	movs	r1, #1
  400ad4:	4618      	mov	r0, r3
  400ad6:	4b3e      	ldr	r3, [pc, #248]	; (400bd0 <udc_process_setup+0x264>)
  400ad8:	4798      	blx	r3
  400ada:	e029      	b.n	400b30 <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
  400adc:	2a02      	cmp	r2, #2
  400ade:	f47f af53 	bne.w	400988 <udc_process_setup+0x1c>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
  400ae2:	4b39      	ldr	r3, [pc, #228]	; (400bc8 <udc_process_setup+0x25c>)
  400ae4:	7918      	ldrb	r0, [r3, #4]
  400ae6:	4b41      	ldr	r3, [pc, #260]	; (400bec <udc_process_setup+0x280>)
  400ae8:	4798      	blx	r3
  400aea:	4b41      	ldr	r3, [pc, #260]	; (400bf0 <udc_process_setup+0x284>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
  400aec:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
  400aee:	2102      	movs	r1, #2
  400af0:	4618      	mov	r0, r3
  400af2:	4b37      	ldr	r3, [pc, #220]	; (400bd0 <udc_process_setup+0x264>)
  400af4:	4798      	blx	r3
  400af6:	e01b      	b.n	400b30 <udc_process_setup+0x1c4>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
  400af8:	f013 031f 	ands.w	r3, r3, #31
  400afc:	f040 8082 	bne.w	400c04 <udc_process_setup+0x298>
			switch (udd_g_ctrlreq.req.bRequest) {
  400b00:	4a31      	ldr	r2, [pc, #196]	; (400bc8 <udc_process_setup+0x25c>)
  400b02:	7852      	ldrb	r2, [r2, #1]
  400b04:	3a01      	subs	r2, #1
  400b06:	2a08      	cmp	r2, #8
  400b08:	d87c      	bhi.n	400c04 <udc_process_setup+0x298>
  400b0a:	e8df f012 	tbh	[pc, r2, lsl #1]
  400b0e:	0013      	.short	0x0013
  400b10:	00ca007b 	.word	0x00ca007b
  400b14:	0009007b 	.word	0x0009007b
  400b18:	007b007b 	.word	0x007b007b
  400b1c:	0023007b 	.word	0x0023007b
	if (udd_g_ctrlreq.req.wLength) {
  400b20:	4b29      	ldr	r3, [pc, #164]	; (400bc8 <udc_process_setup+0x25c>)
  400b22:	88db      	ldrh	r3, [r3, #6]
  400b24:	2b00      	cmp	r3, #0
  400b26:	f47f af2f 	bne.w	400988 <udc_process_setup+0x1c>
	udd_g_ctrlreq.callback = udc_valid_address;
  400b2a:	4a32      	ldr	r2, [pc, #200]	; (400bf4 <udc_process_setup+0x288>)
  400b2c:	4b26      	ldr	r3, [pc, #152]	; (400bc8 <udc_process_setup+0x25c>)
  400b2e:	611a      	str	r2, [r3, #16]
			return true;
  400b30:	2301      	movs	r3, #1
  400b32:	e738      	b.n	4009a6 <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
  400b34:	4b24      	ldr	r3, [pc, #144]	; (400bc8 <udc_process_setup+0x25c>)
  400b36:	88db      	ldrh	r3, [r3, #6]
  400b38:	2b00      	cmp	r3, #0
  400b3a:	f47f af25 	bne.w	400988 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
  400b3e:	4b22      	ldr	r3, [pc, #136]	; (400bc8 <udc_process_setup+0x25c>)
  400b40:	885b      	ldrh	r3, [r3, #2]
  400b42:	2b01      	cmp	r3, #1
  400b44:	f47f af20 	bne.w	400988 <udc_process_setup+0x1c>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
  400b48:	4a20      	ldr	r2, [pc, #128]	; (400bcc <udc_process_setup+0x260>)
  400b4a:	8813      	ldrh	r3, [r2, #0]
  400b4c:	f023 0302 	bic.w	r3, r3, #2
  400b50:	8013      	strh	r3, [r2, #0]
  400b52:	e7ed      	b.n	400b30 <udc_process_setup+0x1c4>
	if (udd_g_ctrlreq.req.wLength) {
  400b54:	4b1c      	ldr	r3, [pc, #112]	; (400bc8 <udc_process_setup+0x25c>)
  400b56:	88db      	ldrh	r3, [r3, #6]
  400b58:	2b00      	cmp	r3, #0
  400b5a:	f47f af15 	bne.w	400988 <udc_process_setup+0x1c>
	if (!udd_getaddress()) {
  400b5e:	4b26      	ldr	r3, [pc, #152]	; (400bf8 <udc_process_setup+0x28c>)
  400b60:	4798      	blx	r3
  400b62:	2800      	cmp	r0, #0
  400b64:	f43f af10 	beq.w	400988 <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
  400b68:	4b17      	ldr	r3, [pc, #92]	; (400bc8 <udc_process_setup+0x25c>)
  400b6a:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
  400b6c:	4b19      	ldr	r3, [pc, #100]	; (400bd4 <udc_process_setup+0x268>)
  400b6e:	681b      	ldr	r3, [r3, #0]
  400b70:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
  400b72:	429a      	cmp	r2, r3
  400b74:	f73f af08 	bgt.w	400988 <udc_process_setup+0x1c>
	udc_reset();
  400b78:	4b20      	ldr	r3, [pc, #128]	; (400bfc <udc_process_setup+0x290>)
  400b7a:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
  400b7c:	4b12      	ldr	r3, [pc, #72]	; (400bc8 <udc_process_setup+0x25c>)
  400b7e:	789b      	ldrb	r3, [r3, #2]
  400b80:	4a16      	ldr	r2, [pc, #88]	; (400bdc <udc_process_setup+0x270>)
  400b82:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
  400b84:	2b00      	cmp	r3, #0
  400b86:	d0d3      	beq.n	400b30 <udc_process_setup+0x1c4>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
  400b88:	f103 5300 	add.w	r3, r3, #536870912	; 0x20000000
  400b8c:	3b01      	subs	r3, #1
  400b8e:	4a11      	ldr	r2, [pc, #68]	; (400bd4 <udc_process_setup+0x268>)
  400b90:	6852      	ldr	r2, [r2, #4]
  400b92:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
  400b96:	4912      	ldr	r1, [pc, #72]	; (400be0 <udc_process_setup+0x274>)
  400b98:	6008      	str	r0, [r1, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400b9a:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
  400b9e:	791b      	ldrb	r3, [r3, #4]
  400ba0:	2b00      	cmp	r3, #0
  400ba2:	d0c5      	beq.n	400b30 <udc_process_setup+0x1c4>
  400ba4:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
  400ba6:	4626      	mov	r6, r4
  400ba8:	4d15      	ldr	r5, [pc, #84]	; (400c00 <udc_process_setup+0x294>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400baa:	460f      	mov	r7, r1
		if (!udc_iface_enable(iface_num, 0)) {
  400bac:	4631      	mov	r1, r6
  400bae:	4620      	mov	r0, r4
  400bb0:	47a8      	blx	r5
  400bb2:	2800      	cmp	r0, #0
  400bb4:	f43f aee8 	beq.w	400988 <udc_process_setup+0x1c>
			iface_num++) {
  400bb8:	3401      	adds	r4, #1
  400bba:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400bbc:	683b      	ldr	r3, [r7, #0]
  400bbe:	681b      	ldr	r3, [r3, #0]
  400bc0:	791b      	ldrb	r3, [r3, #4]
  400bc2:	42a3      	cmp	r3, r4
  400bc4:	d8f2      	bhi.n	400bac <udc_process_setup+0x240>
  400bc6:	e7b3      	b.n	400b30 <udc_process_setup+0x1c4>
  400bc8:	20000cc8 	.word	0x20000cc8
  400bcc:	20000bb6 	.word	0x20000bb6
  400bd0:	00401f05 	.word	0x00401f05
  400bd4:	20000028 	.word	0x20000028
  400bd8:	2000009c 	.word	0x2000009c
  400bdc:	20000bc0 	.word	0x20000bc0
  400be0:	20000bc4 	.word	0x20000bc4
  400be4:	0040079d 	.word	0x0040079d
  400be8:	20000bbc 	.word	0x20000bbc
  400bec:	00402061 	.word	0x00402061
  400bf0:	20000bb8 	.word	0x20000bb8
  400bf4:	00400785 	.word	0x00400785
  400bf8:	00401ed5 	.word	0x00401ed5
  400bfc:	004008e5 	.word	0x004008e5
  400c00:	0040087d 	.word	0x0040087d
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
  400c04:	2b01      	cmp	r3, #1
  400c06:	d00a      	beq.n	400c1e <udc_process_setup+0x2b2>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
  400c08:	2b02      	cmp	r3, #2
  400c0a:	f47f aebd 	bne.w	400988 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
  400c0e:	4b52      	ldr	r3, [pc, #328]	; (400d58 <udc_process_setup+0x3ec>)
  400c10:	785b      	ldrb	r3, [r3, #1]
  400c12:	2b01      	cmp	r3, #1
  400c14:	d020      	beq.n	400c58 <udc_process_setup+0x2ec>
  400c16:	2b03      	cmp	r3, #3
  400c18:	d02e      	beq.n	400c78 <udc_process_setup+0x30c>
	return false;
  400c1a:	2300      	movs	r3, #0
  400c1c:	e042      	b.n	400ca4 <udc_process_setup+0x338>
			switch (udd_g_ctrlreq.req.bRequest) {
  400c1e:	4a4e      	ldr	r2, [pc, #312]	; (400d58 <udc_process_setup+0x3ec>)
  400c20:	7852      	ldrb	r2, [r2, #1]
  400c22:	2a0b      	cmp	r2, #11
  400c24:	d1f0      	bne.n	400c08 <udc_process_setup+0x29c>
	if (udd_g_ctrlreq.req.wLength) {
  400c26:	4b4c      	ldr	r3, [pc, #304]	; (400d58 <udc_process_setup+0x3ec>)
  400c28:	88db      	ldrh	r3, [r3, #6]
  400c2a:	2b00      	cmp	r3, #0
  400c2c:	f47f aeac 	bne.w	400988 <udc_process_setup+0x1c>
	if (!udc_num_configuration) {
  400c30:	4b4a      	ldr	r3, [pc, #296]	; (400d5c <udc_process_setup+0x3f0>)
  400c32:	781b      	ldrb	r3, [r3, #0]
  400c34:	2b00      	cmp	r3, #0
  400c36:	f43f aea7 	beq.w	400988 <udc_process_setup+0x1c>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400c3a:	4b47      	ldr	r3, [pc, #284]	; (400d58 <udc_process_setup+0x3ec>)
  400c3c:	791c      	ldrb	r4, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
  400c3e:	885d      	ldrh	r5, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
  400c40:	4620      	mov	r0, r4
  400c42:	4b47      	ldr	r3, [pc, #284]	; (400d60 <udc_process_setup+0x3f4>)
  400c44:	4798      	blx	r3
  400c46:	2800      	cmp	r0, #0
  400c48:	f43f ae9e 	beq.w	400988 <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
  400c4c:	b2e9      	uxtb	r1, r5
  400c4e:	4620      	mov	r0, r4
  400c50:	4b44      	ldr	r3, [pc, #272]	; (400d64 <udc_process_setup+0x3f8>)
  400c52:	4798      	blx	r3
  400c54:	4603      	mov	r3, r0
  400c56:	e025      	b.n	400ca4 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
  400c58:	4b3f      	ldr	r3, [pc, #252]	; (400d58 <udc_process_setup+0x3ec>)
  400c5a:	88db      	ldrh	r3, [r3, #6]
  400c5c:	2b00      	cmp	r3, #0
  400c5e:	f47f ae93 	bne.w	400988 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
  400c62:	4b3d      	ldr	r3, [pc, #244]	; (400d58 <udc_process_setup+0x3ec>)
  400c64:	885b      	ldrh	r3, [r3, #2]
  400c66:	2b00      	cmp	r3, #0
  400c68:	f47f ae8e 	bne.w	400988 <udc_process_setup+0x1c>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
  400c6c:	4b3a      	ldr	r3, [pc, #232]	; (400d58 <udc_process_setup+0x3ec>)
  400c6e:	7918      	ldrb	r0, [r3, #4]
  400c70:	4b3d      	ldr	r3, [pc, #244]	; (400d68 <udc_process_setup+0x3fc>)
  400c72:	4798      	blx	r3
  400c74:	4603      	mov	r3, r0
  400c76:	e015      	b.n	400ca4 <udc_process_setup+0x338>
	if (udd_g_ctrlreq.req.wLength) {
  400c78:	4b37      	ldr	r3, [pc, #220]	; (400d58 <udc_process_setup+0x3ec>)
  400c7a:	88db      	ldrh	r3, [r3, #6]
  400c7c:	2b00      	cmp	r3, #0
  400c7e:	f47f ae83 	bne.w	400988 <udc_process_setup+0x1c>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
  400c82:	4b35      	ldr	r3, [pc, #212]	; (400d58 <udc_process_setup+0x3ec>)
  400c84:	885b      	ldrh	r3, [r3, #2]
  400c86:	2b00      	cmp	r3, #0
  400c88:	f47f ae7e 	bne.w	400988 <udc_process_setup+0x1c>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
  400c8c:	4c32      	ldr	r4, [pc, #200]	; (400d58 <udc_process_setup+0x3ec>)
  400c8e:	7920      	ldrb	r0, [r4, #4]
  400c90:	4b36      	ldr	r3, [pc, #216]	; (400d6c <udc_process_setup+0x400>)
  400c92:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
  400c94:	7920      	ldrb	r0, [r4, #4]
  400c96:	4b36      	ldr	r3, [pc, #216]	; (400d70 <udc_process_setup+0x404>)
  400c98:	4798      	blx	r3
  400c9a:	4603      	mov	r3, r0
  400c9c:	e002      	b.n	400ca4 <udc_process_setup+0x338>
		return false;
  400c9e:	2300      	movs	r3, #0
  400ca0:	e000      	b.n	400ca4 <udc_process_setup+0x338>
				return udc_req_std_dev_set_feature();
  400ca2:	2300      	movs	r3, #0
		if (udc_reqstd()) {
  400ca4:	2b00      	cmp	r3, #0
  400ca6:	f47f ae7e 	bne.w	4009a6 <udc_process_setup+0x3a>
  400caa:	e66d      	b.n	400988 <udc_process_setup+0x1c>
	if (0 == udc_num_configuration) {
  400cac:	4b2b      	ldr	r3, [pc, #172]	; (400d5c <udc_process_setup+0x3f0>)
  400cae:	781b      	ldrb	r3, [r3, #0]
  400cb0:	2b00      	cmp	r3, #0
  400cb2:	d04e      	beq.n	400d52 <udc_process_setup+0x3e6>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
  400cb4:	4b28      	ldr	r3, [pc, #160]	; (400d58 <udc_process_setup+0x3ec>)
  400cb6:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
  400cb8:	4b2e      	ldr	r3, [pc, #184]	; (400d74 <udc_process_setup+0x408>)
  400cba:	681d      	ldr	r5, [r3, #0]
  400cbc:	682b      	ldr	r3, [r5, #0]
  400cbe:	791b      	ldrb	r3, [r3, #4]
  400cc0:	42a3      	cmp	r3, r4
  400cc2:	d801      	bhi.n	400cc8 <udc_process_setup+0x35c>
	return false;
  400cc4:	2300      	movs	r3, #0
  400cc6:	e66e      	b.n	4009a6 <udc_process_setup+0x3a>
	if (!udc_update_iface_desc(iface_num, 0)) {
  400cc8:	2100      	movs	r1, #0
  400cca:	4620      	mov	r0, r4
  400ccc:	4b2a      	ldr	r3, [pc, #168]	; (400d78 <udc_process_setup+0x40c>)
  400cce:	4798      	blx	r3
  400cd0:	2800      	cmp	r0, #0
  400cd2:	f43f ae60 	beq.w	400996 <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
  400cd6:	686b      	ldr	r3, [r5, #4]
  400cd8:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400cdc:	68eb      	ldr	r3, [r5, #12]
  400cde:	4798      	blx	r3
  400ce0:	4601      	mov	r1, r0
  400ce2:	4620      	mov	r0, r4
  400ce4:	4b24      	ldr	r3, [pc, #144]	; (400d78 <udc_process_setup+0x40c>)
  400ce6:	4798      	blx	r3
  400ce8:	2800      	cmp	r0, #0
  400cea:	f43f ae54 	beq.w	400996 <udc_process_setup+0x2a>
	return udi_api->setup();
  400cee:	68ab      	ldr	r3, [r5, #8]
  400cf0:	4798      	blx	r3
		if (udc_req_iface()) {
  400cf2:	4603      	mov	r3, r0
  400cf4:	2800      	cmp	r0, #0
  400cf6:	f47f ae56 	bne.w	4009a6 <udc_process_setup+0x3a>
  400cfa:	e64c      	b.n	400996 <udc_process_setup+0x2a>
	if (0 == udc_num_configuration) {
  400cfc:	4b17      	ldr	r3, [pc, #92]	; (400d5c <udc_process_setup+0x3f0>)
  400cfe:	781b      	ldrb	r3, [r3, #0]
  400d00:	b30b      	cbz	r3, 400d46 <udc_process_setup+0x3da>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400d02:	4b1c      	ldr	r3, [pc, #112]	; (400d74 <udc_process_setup+0x408>)
  400d04:	681a      	ldr	r2, [r3, #0]
  400d06:	6813      	ldr	r3, [r2, #0]
  400d08:	791b      	ldrb	r3, [r3, #4]
  400d0a:	b1f3      	cbz	r3, 400d4a <udc_process_setup+0x3de>
  400d0c:	2400      	movs	r4, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400d0e:	4e1a      	ldr	r6, [pc, #104]	; (400d78 <udc_process_setup+0x40c>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400d10:	4f18      	ldr	r7, [pc, #96]	; (400d74 <udc_process_setup+0x408>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
  400d12:	6853      	ldr	r3, [r2, #4]
  400d14:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
  400d18:	68eb      	ldr	r3, [r5, #12]
  400d1a:	4798      	blx	r3
  400d1c:	4601      	mov	r1, r0
  400d1e:	4620      	mov	r0, r4
  400d20:	47b0      	blx	r6
  400d22:	4603      	mov	r3, r0
  400d24:	2800      	cmp	r0, #0
  400d26:	f43f ae3e 	beq.w	4009a6 <udc_process_setup+0x3a>
		if (udi_api->setup()) {
  400d2a:	68ab      	ldr	r3, [r5, #8]
  400d2c:	4798      	blx	r3
  400d2e:	4603      	mov	r3, r0
  400d30:	2800      	cmp	r0, #0
  400d32:	f47f ae38 	bne.w	4009a6 <udc_process_setup+0x3a>
			iface_num++) {
  400d36:	3401      	adds	r4, #1
  400d38:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
  400d3a:	683a      	ldr	r2, [r7, #0]
  400d3c:	6811      	ldr	r1, [r2, #0]
  400d3e:	7909      	ldrb	r1, [r1, #4]
  400d40:	42a1      	cmp	r1, r4
  400d42:	d8e6      	bhi.n	400d12 <udc_process_setup+0x3a6>
  400d44:	e62f      	b.n	4009a6 <udc_process_setup+0x3a>
		return false; // The device is not is configured state yet
  400d46:	2300      	movs	r3, #0
  400d48:	e62d      	b.n	4009a6 <udc_process_setup+0x3a>
	return false;
  400d4a:	2300      	movs	r3, #0
  400d4c:	e62b      	b.n	4009a6 <udc_process_setup+0x3a>
			return false; // Error from USB host
  400d4e:	2300      	movs	r3, #0
  400d50:	e629      	b.n	4009a6 <udc_process_setup+0x3a>
	return false;
  400d52:	2300      	movs	r3, #0
  400d54:	e627      	b.n	4009a6 <udc_process_setup+0x3a>
  400d56:	bf00      	nop
  400d58:	20000cc8 	.word	0x20000cc8
  400d5c:	20000bc0 	.word	0x20000bc0
  400d60:	00400811 	.word	0x00400811
  400d64:	0040087d 	.word	0x0040087d
  400d68:	00402181 	.word	0x00402181
  400d6c:	004023d5 	.word	0x004023d5
  400d70:	004020a1 	.word	0x004020a1
  400d74:	20000bc4 	.word	0x20000bc4
  400d78:	0040079d 	.word	0x0040079d

00400d7c <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
  400d7c:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
  400d7e:	2401      	movs	r4, #1
  400d80:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
  400d82:	2400      	movs	r4, #0
  400d84:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
  400d86:	f240 2502 	movw	r5, #514	; 0x202
  400d8a:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
  400d8e:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
  400d92:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
  400d96:	6845      	ldr	r5, [r0, #4]
	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
  400d98:	0052      	lsls	r2, r2, #1
  400d9a:	fbb1 f2f2 	udiv	r2, r1, r2
  400d9e:	3a01      	subs	r2, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
  400da0:	0212      	lsls	r2, r2, #8
  400da2:	b292      	uxth	r2, r2
  400da4:	432b      	orrs	r3, r5
  400da6:	431a      	orrs	r2, r3
  400da8:	6042      	str	r2, [r0, #4]
	return 0;
}
  400daa:	4620      	mov	r0, r4
  400dac:	bc30      	pop	{r4, r5}
  400dae:	4770      	bx	lr

00400db0 <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
  400db0:	6843      	ldr	r3, [r0, #4]
  400db2:	01d2      	lsls	r2, r2, #7
  400db4:	b2d2      	uxtb	r2, r2
  400db6:	4319      	orrs	r1, r3
  400db8:	430a      	orrs	r2, r1
  400dba:	6042      	str	r2, [r0, #4]
  400dbc:	4770      	bx	lr

00400dbe <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
  400dbe:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
  400dc0:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
  400dc2:	0609      	lsls	r1, r1, #24
  400dc4:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
  400dc8:	4321      	orrs	r1, r4
  400dca:	430a      	orrs	r2, r1
  400dcc:	0719      	lsls	r1, r3, #28
  400dce:	f001 5140 	and.w	r1, r1, #805306368	; 0x30000000
  400dd2:	4311      	orrs	r1, r2
  400dd4:	6041      	str	r1, [r0, #4]
}
  400dd6:	bc10      	pop	{r4}
  400dd8:	4770      	bx	lr

00400dda <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
  400dda:	2301      	movs	r3, #1
  400ddc:	fa03 f101 	lsl.w	r1, r3, r1
  400de0:	6101      	str	r1, [r0, #16]
  400de2:	4770      	bx	lr

00400de4 <adc_get_status>:
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
	return p_adc->ADC_ISR;
  400de4:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
  400de6:	4770      	bx	lr

00400de8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400de8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400dec:	4681      	mov	r9, r0
  400dee:	460f      	mov	r7, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400df0:	4b12      	ldr	r3, [pc, #72]	; (400e3c <pio_handler_process+0x54>)
  400df2:	4798      	blx	r3
  400df4:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400df6:	4648      	mov	r0, r9
  400df8:	4b11      	ldr	r3, [pc, #68]	; (400e40 <pio_handler_process+0x58>)
  400dfa:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400dfc:	4005      	ands	r5, r0
  400dfe:	d013      	beq.n	400e28 <pio_handler_process+0x40>
  400e00:	4c10      	ldr	r4, [pc, #64]	; (400e44 <pio_handler_process+0x5c>)
  400e02:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400e06:	e003      	b.n	400e10 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400e08:	42b4      	cmp	r4, r6
  400e0a:	d00d      	beq.n	400e28 <pio_handler_process+0x40>
  400e0c:	3410      	adds	r4, #16
		while (status != 0) {
  400e0e:	b15d      	cbz	r5, 400e28 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400e10:	6820      	ldr	r0, [r4, #0]
  400e12:	42b8      	cmp	r0, r7
  400e14:	d1f8      	bne.n	400e08 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400e16:	6861      	ldr	r1, [r4, #4]
  400e18:	4229      	tst	r1, r5
  400e1a:	d0f5      	beq.n	400e08 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400e1c:	68e3      	ldr	r3, [r4, #12]
  400e1e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400e20:	6863      	ldr	r3, [r4, #4]
  400e22:	ea25 0503 	bic.w	r5, r5, r3
  400e26:	e7ef      	b.n	400e08 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  400e28:	4b07      	ldr	r3, [pc, #28]	; (400e48 <pio_handler_process+0x60>)
  400e2a:	681b      	ldr	r3, [r3, #0]
  400e2c:	b123      	cbz	r3, 400e38 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  400e2e:	4b07      	ldr	r3, [pc, #28]	; (400e4c <pio_handler_process+0x64>)
  400e30:	681b      	ldr	r3, [r3, #0]
  400e32:	b10b      	cbz	r3, 400e38 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  400e34:	4648      	mov	r0, r9
  400e36:	4798      	blx	r3
  400e38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400e3c:	00402613 	.word	0x00402613
  400e40:	00402617 	.word	0x00402617
  400e44:	20000bcc 	.word	0x20000bcc
  400e48:	20000ce0 	.word	0x20000ce0
  400e4c:	20000c3c 	.word	0x20000c3c

00400e50 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400e50:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400e52:	210b      	movs	r1, #11
  400e54:	4801      	ldr	r0, [pc, #4]	; (400e5c <PIOA_Handler+0xc>)
  400e56:	4b02      	ldr	r3, [pc, #8]	; (400e60 <PIOA_Handler+0x10>)
  400e58:	4798      	blx	r3
  400e5a:	bd08      	pop	{r3, pc}
  400e5c:	400e0e00 	.word	0x400e0e00
  400e60:	00400de9 	.word	0x00400de9

00400e64 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400e64:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400e66:	210c      	movs	r1, #12
  400e68:	4801      	ldr	r0, [pc, #4]	; (400e70 <PIOB_Handler+0xc>)
  400e6a:	4b02      	ldr	r3, [pc, #8]	; (400e74 <PIOB_Handler+0x10>)
  400e6c:	4798      	blx	r3
  400e6e:	bd08      	pop	{r3, pc}
  400e70:	400e1000 	.word	0x400e1000
  400e74:	00400de9 	.word	0x00400de9

00400e78 <udd_sleep_mode>:
/*! \brief Authorize or not the CPU powerdown mode
 *
 * \param b_enable   true to authorize idle mode
 */
static void udd_sleep_mode(bool b_idle)
{
  400e78:	b082      	sub	sp, #8
	if (!b_idle && udd_b_idle) {
  400e7a:	4601      	mov	r1, r0
  400e7c:	bb28      	cbnz	r0, 400eca <udd_sleep_mode+0x52>
  400e7e:	4b24      	ldr	r3, [pc, #144]	; (400f10 <udd_sleep_mode+0x98>)
  400e80:	781b      	ldrb	r3, [r3, #0]
  400e82:	b91b      	cbnz	r3, 400e8c <udd_sleep_mode+0x14>
		sleepmgr_unlock_mode(UDP_SLEEP_MODE_USB_IDLE);
	}
	if (b_idle && !udd_b_idle) {
		sleepmgr_lock_mode(UDP_SLEEP_MODE_USB_IDLE);
	}
	udd_b_idle = b_idle;
  400e84:	4b22      	ldr	r3, [pc, #136]	; (400f10 <udd_sleep_mode+0x98>)
  400e86:	7019      	strb	r1, [r3, #0]
}
  400e88:	b002      	add	sp, #8
  400e8a:	4770      	bx	lr
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
  400e8c:	4b21      	ldr	r3, [pc, #132]	; (400f14 <udd_sleep_mode+0x9c>)
  400e8e:	789b      	ldrb	r3, [r3, #2]
  400e90:	b903      	cbnz	r3, 400e94 <udd_sleep_mode+0x1c>
  400e92:	e7fe      	b.n	400e92 <udd_sleep_mode+0x1a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400e94:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400e98:	fab3 f383 	clz	r3, r3
  400e9c:	095b      	lsrs	r3, r3, #5
  400e9e:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  400ea0:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  400ea2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400ea6:	2200      	movs	r2, #0
  400ea8:	4b1b      	ldr	r3, [pc, #108]	; (400f18 <udd_sleep_mode+0xa0>)
  400eaa:	701a      	strb	r2, [r3, #0]
	return flags;
  400eac:	9800      	ldr	r0, [sp, #0]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
  400eae:	4a19      	ldr	r2, [pc, #100]	; (400f14 <udd_sleep_mode+0x9c>)
  400eb0:	7893      	ldrb	r3, [r2, #2]
  400eb2:	3b01      	subs	r3, #1
  400eb4:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
  400eb6:	2800      	cmp	r0, #0
  400eb8:	d0e4      	beq.n	400e84 <udd_sleep_mode+0xc>
		cpu_irq_enable();
  400eba:	2201      	movs	r2, #1
  400ebc:	4b16      	ldr	r3, [pc, #88]	; (400f18 <udd_sleep_mode+0xa0>)
  400ebe:	701a      	strb	r2, [r3, #0]
  400ec0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400ec4:	b662      	cpsie	i
  400ec6:	e7dd      	b.n	400e84 <udd_sleep_mode+0xc>
  400ec8:	e7fe      	b.n	400ec8 <udd_sleep_mode+0x50>
	if (b_idle && !udd_b_idle) {
  400eca:	4b11      	ldr	r3, [pc, #68]	; (400f10 <udd_sleep_mode+0x98>)
  400ecc:	781b      	ldrb	r3, [r3, #0]
  400ece:	2b00      	cmp	r3, #0
  400ed0:	d1d8      	bne.n	400e84 <udd_sleep_mode+0xc>
	if(sleepmgr_locks[mode] >= 0xff) {
  400ed2:	4b10      	ldr	r3, [pc, #64]	; (400f14 <udd_sleep_mode+0x9c>)
  400ed4:	789b      	ldrb	r3, [r3, #2]
  400ed6:	2bff      	cmp	r3, #255	; 0xff
  400ed8:	d0f6      	beq.n	400ec8 <udd_sleep_mode+0x50>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400eda:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  400ede:	fab3 f383 	clz	r3, r3
  400ee2:	095b      	lsrs	r3, r3, #5
  400ee4:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  400ee6:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  400ee8:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  400eec:	2200      	movs	r2, #0
  400eee:	4b0a      	ldr	r3, [pc, #40]	; (400f18 <udd_sleep_mode+0xa0>)
  400ef0:	701a      	strb	r2, [r3, #0]
	return flags;
  400ef2:	9801      	ldr	r0, [sp, #4]
	++sleepmgr_locks[mode];
  400ef4:	4a07      	ldr	r2, [pc, #28]	; (400f14 <udd_sleep_mode+0x9c>)
  400ef6:	7893      	ldrb	r3, [r2, #2]
  400ef8:	3301      	adds	r3, #1
  400efa:	7093      	strb	r3, [r2, #2]
	if (cpu_irq_is_enabled_flags(flags))
  400efc:	2800      	cmp	r0, #0
  400efe:	d0c1      	beq.n	400e84 <udd_sleep_mode+0xc>
		cpu_irq_enable();
  400f00:	2201      	movs	r2, #1
  400f02:	4b05      	ldr	r3, [pc, #20]	; (400f18 <udd_sleep_mode+0xa0>)
  400f04:	701a      	strb	r2, [r3, #0]
  400f06:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400f0a:	b662      	cpsie	i
  400f0c:	e7ba      	b.n	400e84 <udd_sleep_mode+0xc>
  400f0e:	bf00      	nop
  400f10:	20000c41 	.word	0x20000c41
  400f14:	20000cc0 	.word	0x20000cc0
  400f18:	200000a0 	.word	0x200000a0

00400f1c <udd_ctrl_init>:
	cpu_irq_restore(flags);
}

static void udd_ctrl_init(void)
{
	udd_g_ctrlreq.callback = NULL;
  400f1c:	4a03      	ldr	r2, [pc, #12]	; (400f2c <udd_ctrl_init+0x10>)
  400f1e:	2300      	movs	r3, #0
  400f20:	6113      	str	r3, [r2, #16]
	udd_g_ctrlreq.over_under_run = NULL;
  400f22:	6153      	str	r3, [r2, #20]
	udd_g_ctrlreq.payload_size = 0;
  400f24:	8193      	strh	r3, [r2, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
  400f26:	4a02      	ldr	r2, [pc, #8]	; (400f30 <udd_ctrl_init+0x14>)
  400f28:	7013      	strb	r3, [r2, #0]
  400f2a:	4770      	bx	lr
  400f2c:	20000cc8 	.word	0x20000cc8
  400f30:	20000c46 	.word	0x20000c46

00400f34 <udd_ctrl_stall_data>:
	udd_ack_bank0_received(0);
}


static void udd_ctrl_stall_data(void)
{
  400f34:	b082      	sub	sp, #8
	// Stall all packets on IN & OUT control endpoint
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
  400f36:	2205      	movs	r2, #5
  400f38:	4b0a      	ldr	r3, [pc, #40]	; (400f64 <udd_ctrl_stall_data+0x30>)
  400f3a:	701a      	strb	r2, [r3, #0]
	udd_enable_stall_handshake(0);
  400f3c:	4a0a      	ldr	r2, [pc, #40]	; (400f68 <udd_ctrl_stall_data+0x34>)
  400f3e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f40:	9301      	str	r3, [sp, #4]
  400f42:	9b01      	ldr	r3, [sp, #4]
  400f44:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  400f48:	9301      	str	r3, [sp, #4]
  400f4a:	9b01      	ldr	r3, [sp, #4]
  400f4c:	f043 0320 	orr.w	r3, r3, #32
  400f50:	9301      	str	r3, [sp, #4]
  400f52:	9b01      	ldr	r3, [sp, #4]
  400f54:	6313      	str	r3, [r2, #48]	; 0x30
  400f56:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f58:	f013 0f20 	tst.w	r3, #32
  400f5c:	d0fb      	beq.n	400f56 <udd_ctrl_stall_data+0x22>
}
  400f5e:	b002      	add	sp, #8
  400f60:	4770      	bx	lr
  400f62:	bf00      	nop
  400f64:	20000c46 	.word	0x20000c46
  400f68:	40034000 	.word	0x40034000

00400f6c <udd_ctrl_send_zlp_in>:


static void udd_ctrl_send_zlp_in(void)
{
  400f6c:	b082      	sub	sp, #8
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
  400f6e:	2203      	movs	r2, #3
  400f70:	4b0a      	ldr	r3, [pc, #40]	; (400f9c <udd_ctrl_send_zlp_in+0x30>)
  400f72:	701a      	strb	r2, [r3, #0]
	// Validate and send empty IN packet on control endpoint
	// Send ZLP on IN endpoint
	udd_set_transmit_ready(0);
  400f74:	4a0a      	ldr	r2, [pc, #40]	; (400fa0 <udd_ctrl_send_zlp_in+0x34>)
  400f76:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f78:	9301      	str	r3, [sp, #4]
  400f7a:	9b01      	ldr	r3, [sp, #4]
  400f7c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  400f80:	9301      	str	r3, [sp, #4]
  400f82:	9b01      	ldr	r3, [sp, #4]
  400f84:	f043 0310 	orr.w	r3, r3, #16
  400f88:	9301      	str	r3, [sp, #4]
  400f8a:	9b01      	ldr	r3, [sp, #4]
  400f8c:	6313      	str	r3, [r2, #48]	; 0x30
  400f8e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f90:	f013 0f10 	tst.w	r3, #16
  400f94:	d0fb      	beq.n	400f8e <udd_ctrl_send_zlp_in+0x22>
}
  400f96:	b002      	add	sp, #8
  400f98:	4770      	bx	lr
  400f9a:	bf00      	nop
  400f9c:	20000c46 	.word	0x20000c46
  400fa0:	40034000 	.word	0x40034000

00400fa4 <udd_ctrl_endofrequest>:
	// because the buffer of control endpoint is already free
}


static void udd_ctrl_endofrequest(void)
{
  400fa4:	b508      	push	{r3, lr}
	// If a callback is registered then call it
	if (udd_g_ctrlreq.callback) {
  400fa6:	4b02      	ldr	r3, [pc, #8]	; (400fb0 <udd_ctrl_endofrequest+0xc>)
  400fa8:	691b      	ldr	r3, [r3, #16]
  400faa:	b103      	cbz	r3, 400fae <udd_ctrl_endofrequest+0xa>
		udd_g_ctrlreq.callback();
  400fac:	4798      	blx	r3
  400fae:	bd08      	pop	{r3, pc}
  400fb0:	20000cc8 	.word	0x20000cc8

00400fb4 <udd_ctrl_in_sent>:
{
  400fb4:	b530      	push	{r4, r5, lr}
  400fb6:	b087      	sub	sp, #28
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
  400fb8:	4b63      	ldr	r3, [pc, #396]	; (401148 <udd_ctrl_in_sent+0x194>)
  400fba:	781b      	ldrb	r3, [r3, #0]
  400fbc:	2b03      	cmp	r3, #3
  400fbe:	d029      	beq.n	401014 <udd_ctrl_in_sent+0x60>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
  400fc0:	4b62      	ldr	r3, [pc, #392]	; (40114c <udd_ctrl_in_sent+0x198>)
  400fc2:	881b      	ldrh	r3, [r3, #0]
  400fc4:	4a62      	ldr	r2, [pc, #392]	; (401150 <udd_ctrl_in_sent+0x19c>)
  400fc6:	8994      	ldrh	r4, [r2, #12]
  400fc8:	1ae4      	subs	r4, r4, r3
  400fca:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
  400fcc:	2c00      	cmp	r4, #0
  400fce:	d144      	bne.n	40105a <udd_ctrl_in_sent+0xa6>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
  400fd0:	4a60      	ldr	r2, [pc, #384]	; (401154 <udd_ctrl_in_sent+0x1a0>)
  400fd2:	8811      	ldrh	r1, [r2, #0]
  400fd4:	440b      	add	r3, r1
  400fd6:	b29b      	uxth	r3, r3
  400fd8:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_nb_trans)
  400fda:	4a5d      	ldr	r2, [pc, #372]	; (401150 <udd_ctrl_in_sent+0x19c>)
  400fdc:	88d2      	ldrh	r2, [r2, #6]
  400fde:	429a      	cmp	r2, r3
  400fe0:	d003      	beq.n	400fea <udd_ctrl_in_sent+0x36>
				|| b_shortpacket) {
  400fe2:	4b5d      	ldr	r3, [pc, #372]	; (401158 <udd_ctrl_in_sent+0x1a4>)
  400fe4:	781b      	ldrb	r3, [r3, #0]
  400fe6:	2b00      	cmp	r3, #0
  400fe8:	d02b      	beq.n	401042 <udd_ctrl_in_sent+0x8e>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
  400fea:	2204      	movs	r2, #4
  400fec:	4b56      	ldr	r3, [pc, #344]	; (401148 <udd_ctrl_in_sent+0x194>)
  400fee:	701a      	strb	r2, [r3, #0]
			udd_ack_in_sent(0);
  400ff0:	4a5a      	ldr	r2, [pc, #360]	; (40115c <udd_ctrl_in_sent+0x1a8>)
  400ff2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400ff4:	9301      	str	r3, [sp, #4]
  400ff6:	9b01      	ldr	r3, [sp, #4]
  400ff8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  400ffc:	9301      	str	r3, [sp, #4]
  400ffe:	9b01      	ldr	r3, [sp, #4]
  401000:	f023 0301 	bic.w	r3, r3, #1
  401004:	9301      	str	r3, [sp, #4]
  401006:	9b01      	ldr	r3, [sp, #4]
  401008:	6313      	str	r3, [r2, #48]	; 0x30
  40100a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40100c:	f013 0f01 	tst.w	r3, #1
  401010:	d1fb      	bne.n	40100a <udd_ctrl_in_sent+0x56>
  401012:	e014      	b.n	40103e <udd_ctrl_in_sent+0x8a>
		udd_ack_in_sent(0);
  401014:	4a51      	ldr	r2, [pc, #324]	; (40115c <udd_ctrl_in_sent+0x1a8>)
  401016:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401018:	9300      	str	r3, [sp, #0]
  40101a:	9b00      	ldr	r3, [sp, #0]
  40101c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401020:	9300      	str	r3, [sp, #0]
  401022:	9b00      	ldr	r3, [sp, #0]
  401024:	f023 0301 	bic.w	r3, r3, #1
  401028:	9300      	str	r3, [sp, #0]
  40102a:	9b00      	ldr	r3, [sp, #0]
  40102c:	6313      	str	r3, [r2, #48]	; 0x30
  40102e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401030:	f013 0f01 	tst.w	r3, #1
  401034:	d1fb      	bne.n	40102e <udd_ctrl_in_sent+0x7a>
		udd_ctrl_endofrequest();
  401036:	4b4a      	ldr	r3, [pc, #296]	; (401160 <udd_ctrl_in_sent+0x1ac>)
  401038:	4798      	blx	r3
		udd_ctrl_init();
  40103a:	4b4a      	ldr	r3, [pc, #296]	; (401164 <udd_ctrl_in_sent+0x1b0>)
  40103c:	4798      	blx	r3
}
  40103e:	b007      	add	sp, #28
  401040:	bd30      	pop	{r4, r5, pc}
		if ((!udd_g_ctrlreq.over_under_run)
  401042:	4b43      	ldr	r3, [pc, #268]	; (401150 <udd_ctrl_in_sent+0x19c>)
  401044:	695b      	ldr	r3, [r3, #20]
  401046:	2b00      	cmp	r3, #0
  401048:	d05d      	beq.n	401106 <udd_ctrl_in_sent+0x152>
				|| (!udd_g_ctrlreq.over_under_run())) {
  40104a:	4798      	blx	r3
  40104c:	2800      	cmp	r0, #0
  40104e:	d05a      	beq.n	401106 <udd_ctrl_in_sent+0x152>
			udd_ctrl_payload_nb_trans = 0;
  401050:	2200      	movs	r2, #0
  401052:	4b3e      	ldr	r3, [pc, #248]	; (40114c <udd_ctrl_in_sent+0x198>)
  401054:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
  401056:	4b3e      	ldr	r3, [pc, #248]	; (401150 <udd_ctrl_in_sent+0x19c>)
  401058:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
  40105a:	2c3f      	cmp	r4, #63	; 0x3f
  40105c:	d953      	bls.n	401106 <udd_ctrl_in_sent+0x152>
		b_shortpacket = false;
  40105e:	2200      	movs	r2, #0
  401060:	4b3d      	ldr	r3, [pc, #244]	; (401158 <udd_ctrl_in_sent+0x1a4>)
  401062:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
  401064:	2440      	movs	r4, #64	; 0x40
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  401066:	4b3a      	ldr	r3, [pc, #232]	; (401150 <udd_ctrl_in_sent+0x19c>)
  401068:	6899      	ldr	r1, [r3, #8]
  40106a:	4b38      	ldr	r3, [pc, #224]	; (40114c <udd_ctrl_in_sent+0x198>)
  40106c:	8818      	ldrh	r0, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40106e:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401072:	fab3 f383 	clz	r3, r3
  401076:	095b      	lsrs	r3, r3, #5
  401078:	9305      	str	r3, [sp, #20]
  __ASM volatile ("cpsid i" : : : "memory");
  40107a:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  40107c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401080:	2200      	movs	r2, #0
  401082:	4b39      	ldr	r3, [pc, #228]	; (401168 <udd_ctrl_in_sent+0x1b4>)
  401084:	701a      	strb	r2, [r3, #0]
	return flags;
  401086:	9d05      	ldr	r5, [sp, #20]
	if (Is_udd_bank0_received(0)) {
  401088:	4b34      	ldr	r3, [pc, #208]	; (40115c <udd_ctrl_in_sent+0x1a8>)
  40108a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40108c:	f013 0f02 	tst.w	r3, #2
  401090:	d13d      	bne.n	40110e <udd_ctrl_in_sent+0x15a>
	for (i = 0; i < nb_remain; i++) {
  401092:	b14c      	cbz	r4, 4010a8 <udd_ctrl_in_sent+0xf4>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  401094:	4401      	add	r1, r0
  401096:	460a      	mov	r2, r1
		udd_endpoint_fifo_write(0, *ptr_src++);
  401098:	4830      	ldr	r0, [pc, #192]	; (40115c <udd_ctrl_in_sent+0x1a8>)
  40109a:	f812 3b01 	ldrb.w	r3, [r2], #1
  40109e:	6503      	str	r3, [r0, #80]	; 0x50
	for (i = 0; i < nb_remain; i++) {
  4010a0:	1a53      	subs	r3, r2, r1
  4010a2:	b2db      	uxtb	r3, r3
  4010a4:	42a3      	cmp	r3, r4
  4010a6:	d3f8      	bcc.n	40109a <udd_ctrl_in_sent+0xe6>
	udd_ctrl_payload_nb_trans += nb_remain;
  4010a8:	4b28      	ldr	r3, [pc, #160]	; (40114c <udd_ctrl_in_sent+0x198>)
  4010aa:	881a      	ldrh	r2, [r3, #0]
  4010ac:	4414      	add	r4, r2
  4010ae:	801c      	strh	r4, [r3, #0]
	udd_set_transmit_ready(0);
  4010b0:	4a2a      	ldr	r2, [pc, #168]	; (40115c <udd_ctrl_in_sent+0x1a8>)
  4010b2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010b4:	9303      	str	r3, [sp, #12]
  4010b6:	9b03      	ldr	r3, [sp, #12]
  4010b8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4010bc:	9303      	str	r3, [sp, #12]
  4010be:	9b03      	ldr	r3, [sp, #12]
  4010c0:	f043 0310 	orr.w	r3, r3, #16
  4010c4:	9303      	str	r3, [sp, #12]
  4010c6:	9b03      	ldr	r3, [sp, #12]
  4010c8:	6313      	str	r3, [r2, #48]	; 0x30
  4010ca:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010cc:	f013 0f10 	tst.w	r3, #16
  4010d0:	d0fb      	beq.n	4010ca <udd_ctrl_in_sent+0x116>
	udd_ack_in_sent(0);
  4010d2:	4a22      	ldr	r2, [pc, #136]	; (40115c <udd_ctrl_in_sent+0x1a8>)
  4010d4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010d6:	9304      	str	r3, [sp, #16]
  4010d8:	9b04      	ldr	r3, [sp, #16]
  4010da:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4010de:	9304      	str	r3, [sp, #16]
  4010e0:	9b04      	ldr	r3, [sp, #16]
  4010e2:	f023 0301 	bic.w	r3, r3, #1
  4010e6:	9304      	str	r3, [sp, #16]
  4010e8:	9b04      	ldr	r3, [sp, #16]
  4010ea:	6313      	str	r3, [r2, #48]	; 0x30
  4010ec:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010ee:	f013 0f01 	tst.w	r3, #1
  4010f2:	d1fb      	bne.n	4010ec <udd_ctrl_in_sent+0x138>
	if (cpu_irq_is_enabled_flags(flags))
  4010f4:	2d00      	cmp	r5, #0
  4010f6:	d0a2      	beq.n	40103e <udd_ctrl_in_sent+0x8a>
		cpu_irq_enable();
  4010f8:	2201      	movs	r2, #1
  4010fa:	4b1b      	ldr	r3, [pc, #108]	; (401168 <udd_ctrl_in_sent+0x1b4>)
  4010fc:	701a      	strb	r2, [r3, #0]
  4010fe:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401102:	b662      	cpsie	i
  401104:	e79b      	b.n	40103e <udd_ctrl_in_sent+0x8a>
		b_shortpacket = true;
  401106:	2201      	movs	r2, #1
  401108:	4b13      	ldr	r3, [pc, #76]	; (401158 <udd_ctrl_in_sent+0x1a4>)
  40110a:	701a      	strb	r2, [r3, #0]
  40110c:	e7ab      	b.n	401066 <udd_ctrl_in_sent+0xb2>
	if (cpu_irq_is_enabled_flags(flags))
  40110e:	b12d      	cbz	r5, 40111c <udd_ctrl_in_sent+0x168>
		cpu_irq_enable();
  401110:	2201      	movs	r2, #1
  401112:	4b15      	ldr	r3, [pc, #84]	; (401168 <udd_ctrl_in_sent+0x1b4>)
  401114:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  401116:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40111a:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
  40111c:	2204      	movs	r2, #4
  40111e:	4b0a      	ldr	r3, [pc, #40]	; (401148 <udd_ctrl_in_sent+0x194>)
  401120:	701a      	strb	r2, [r3, #0]
		udd_ack_in_sent(0);
  401122:	4a0e      	ldr	r2, [pc, #56]	; (40115c <udd_ctrl_in_sent+0x1a8>)
  401124:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401126:	9302      	str	r3, [sp, #8]
  401128:	9b02      	ldr	r3, [sp, #8]
  40112a:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40112e:	9302      	str	r3, [sp, #8]
  401130:	9b02      	ldr	r3, [sp, #8]
  401132:	f023 0301 	bic.w	r3, r3, #1
  401136:	9302      	str	r3, [sp, #8]
  401138:	9b02      	ldr	r3, [sp, #8]
  40113a:	6313      	str	r3, [r2, #48]	; 0x30
  40113c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40113e:	f013 0f01 	tst.w	r3, #1
  401142:	d1fb      	bne.n	40113c <udd_ctrl_in_sent+0x188>
  401144:	e77b      	b.n	40103e <udd_ctrl_in_sent+0x8a>
  401146:	bf00      	nop
  401148:	20000c46 	.word	0x20000c46
  40114c:	20000c42 	.word	0x20000c42
  401150:	20000cc8 	.word	0x20000cc8
  401154:	20000c44 	.word	0x20000c44
  401158:	20000c40 	.word	0x20000c40
  40115c:	40034000 	.word	0x40034000
  401160:	00400fa5 	.word	0x00400fa5
  401164:	00400f1d 	.word	0x00400f1d
  401168:	200000a0 	.word	0x200000a0

0040116c <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, int status,
		uint8_t ep_num)
{
  40116c:	b538      	push	{r3, r4, r5, lr}
	if (ptr_job->busy == false) {
  40116e:	7c43      	ldrb	r3, [r0, #17]
  401170:	f013 0f10 	tst.w	r3, #16
  401174:	d016      	beq.n	4011a4 <udd_ep_finish_job+0x38>
  401176:	460d      	mov	r5, r1
		return; // No on-going job
	}
	ptr_job->busy = false;
  401178:	7c43      	ldrb	r3, [r0, #17]
  40117a:	f36f 1304 	bfc	r3, #4, #1
  40117e:	7443      	strb	r3, [r0, #17]
	if (NULL == ptr_job->call_trans) {
  401180:	6804      	ldr	r4, [r0, #0]
  401182:	b17c      	cbz	r4, 4011a4 <udd_ep_finish_job+0x38>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_type_in(ep_num)) {
  401184:	f102 030c 	add.w	r3, r2, #12
  401188:	4907      	ldr	r1, [pc, #28]	; (4011a8 <udd_ep_finish_job+0x3c>)
  40118a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
  40118e:	f413 6f80 	tst.w	r3, #1024	; 0x400
		ep_num |= USB_EP_DIR_IN;
  401192:	bf18      	it	ne
  401194:	f042 0280 	orrne.w	r2, r2, #128	; 0x80
	}
	ptr_job->call_trans((status == UDD_EP_TRANSFER_ABORT) ?
  401198:	6881      	ldr	r1, [r0, #8]
  40119a:	2d01      	cmp	r5, #1
  40119c:	bf14      	ite	ne
  40119e:	2000      	movne	r0, #0
  4011a0:	2001      	moveq	r0, #1
  4011a2:	47a0      	blx	r4
  4011a4:	bd38      	pop	{r3, r4, r5, pc}
  4011a6:	bf00      	nop
  4011a8:	40034000 	.word	0x40034000

004011ac <udd_ep_ack_out_received>:
		UDD_EP_TRANSFER_ABORT : UDD_EP_TRANSFER_OK, ptr_job->buf_size, ep_num);
}


static void udd_ep_ack_out_received(udd_ep_id_t ep)
{
  4011ac:	b430      	push	{r4, r5}
  4011ae:	b082      	sub	sp, #8
	bool bank0_received, bank1_received;
	udd_ep_job_t *ptr_job = &udd_ep_job[ep - 1];
  4011b0:	1e41      	subs	r1, r0, #1
  4011b2:	0083      	lsls	r3, r0, #2
  4011b4:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  4011b8:	f503 3340 	add.w	r3, r3, #196608	; 0x30000

	bank0_received = Is_udd_bank0_received(ep);
  4011bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
	bank1_received = Is_udd_bank1_received(ep);
  4011be:	6b1c      	ldr	r4, [r3, #48]	; 0x30

	if (bank0_received && bank1_received) {
  4011c0:	f012 0f02 	tst.w	r2, #2
  4011c4:	d032      	beq.n	40122c <udd_ep_ack_out_received+0x80>
  4011c6:	f014 0f40 	tst.w	r4, #64	; 0x40
  4011ca:	d108      	bne.n	4011de <udd_ep_ack_out_received+0x32>
		// The only way is to use ptr_job->bank
	} else if (bank0_received) {
		// Must be bank0
		ptr_job->bank = 0;
  4011cc:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4011d0:	4c2a      	ldr	r4, [pc, #168]	; (40127c <udd_ep_ack_out_received+0xd0>)
  4011d2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  4011d6:	7c54      	ldrb	r4, [r2, #17]
  4011d8:	f36f 0483 	bfc	r4, #2, #2
  4011dc:	7454      	strb	r4, [r2, #17]
	} else {
		// Must be bank1
		ptr_job->bank = 1;
	}
	if (ptr_job->bank == 0) {
  4011de:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4011e2:	4c26      	ldr	r4, [pc, #152]	; (40127c <udd_ep_ack_out_received+0xd0>)
  4011e4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  4011e8:	7c52      	ldrb	r2, [r2, #17]
  4011ea:	f012 0f0c 	tst.w	r2, #12
  4011ee:	d128      	bne.n	401242 <udd_ep_ack_out_received+0x96>
		udd_ack_bank0_received(ep);
  4011f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4011f2:	9200      	str	r2, [sp, #0]
  4011f4:	9a00      	ldr	r2, [sp, #0]
  4011f6:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4011fa:	9200      	str	r2, [sp, #0]
  4011fc:	9a00      	ldr	r2, [sp, #0]
  4011fe:	f022 0202 	bic.w	r2, r2, #2
  401202:	9200      	str	r2, [sp, #0]
  401204:	9a00      	ldr	r2, [sp, #0]
  401206:	631a      	str	r2, [r3, #48]	; 0x30
  401208:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40120a:	f012 0f02 	tst.w	r2, #2
  40120e:	d1fb      	bne.n	401208 <udd_ep_ack_out_received+0x5c>
		if (udd_get_endpoint_bank_max_nbr(ep) > 1) {
  401210:	b380      	cbz	r0, 401274 <udd_ep_ack_out_received+0xc8>
  401212:	2803      	cmp	r0, #3
  401214:	d02e      	beq.n	401274 <udd_ep_ack_out_received+0xc8>
			ptr_job->bank = 1;
  401216:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  40121a:	4b18      	ldr	r3, [pc, #96]	; (40127c <udd_ep_ack_out_received+0xd0>)
  40121c:	eb03 0381 	add.w	r3, r3, r1, lsl #2
  401220:	7c5a      	ldrb	r2, [r3, #17]
  401222:	2101      	movs	r1, #1
  401224:	f361 0283 	bfi	r2, r1, #2, #2
  401228:	745a      	strb	r2, [r3, #17]
  40122a:	e023      	b.n	401274 <udd_ep_ack_out_received+0xc8>
		ptr_job->bank = 1;
  40122c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  401230:	4c12      	ldr	r4, [pc, #72]	; (40127c <udd_ep_ack_out_received+0xd0>)
  401232:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  401236:	7c54      	ldrb	r4, [r2, #17]
  401238:	2501      	movs	r5, #1
  40123a:	f365 0483 	bfi	r4, r5, #2, #2
  40123e:	7454      	strb	r4, [r2, #17]
  401240:	e7cd      	b.n	4011de <udd_ep_ack_out_received+0x32>
		}
	} else {
		udd_ack_bank1_received(ep);
  401242:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401244:	9201      	str	r2, [sp, #4]
  401246:	9a01      	ldr	r2, [sp, #4]
  401248:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  40124c:	9201      	str	r2, [sp, #4]
  40124e:	9a01      	ldr	r2, [sp, #4]
  401250:	f022 0240 	bic.w	r2, r2, #64	; 0x40
  401254:	9201      	str	r2, [sp, #4]
  401256:	9a01      	ldr	r2, [sp, #4]
  401258:	631a      	str	r2, [r3, #48]	; 0x30
  40125a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40125c:	f012 0f40 	tst.w	r2, #64	; 0x40
  401260:	d1fb      	bne.n	40125a <udd_ep_ack_out_received+0xae>
		ptr_job->bank = 0;
  401262:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  401266:	4b05      	ldr	r3, [pc, #20]	; (40127c <udd_ep_ack_out_received+0xd0>)
  401268:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  40126c:	7c4b      	ldrb	r3, [r1, #17]
  40126e:	f36f 0383 	bfc	r3, #2, #2
  401272:	744b      	strb	r3, [r1, #17]
	}
}
  401274:	b002      	add	sp, #8
  401276:	bc30      	pop	{r4, r5}
  401278:	4770      	bx	lr
  40127a:	bf00      	nop
  40127c:	20000c48 	.word	0x20000c48

00401280 <udd_ep_in_sent>:
	return is_short_pkt;
}


static bool udd_ep_in_sent(udd_ep_id_t ep, bool b_tx)
{
  401280:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401284:	b083      	sub	sp, #12
  401286:	4688      	mov	r8, r1
	bool b_shortpacket;
	udd_ep_job_t *ptr_job = &udd_ep_job[ep - 1];
  401288:	4681      	mov	r9, r0
  40128a:	1e46      	subs	r6, r0, #1

	// All banks are full
	if (ptr_job->bank >= udd_get_endpoint_bank_max_nbr(ep)) {
  40128c:	eb06 0286 	add.w	r2, r6, r6, lsl #2
  401290:	4b66      	ldr	r3, [pc, #408]	; (40142c <udd_ep_in_sent+0x1ac>)
  401292:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401296:	f893 c011 	ldrb.w	ip, [r3, #17]
  40129a:	f3cc 0c81 	ubfx	ip, ip, #2, #2
  40129e:	2800      	cmp	r0, #0
  4012a0:	f000 80b7 	beq.w	401412 <udd_ep_in_sent+0x192>
  4012a4:	2803      	cmp	r0, #3
  4012a6:	bf0c      	ite	eq
  4012a8:	2301      	moveq	r3, #1
  4012aa:	2302      	movne	r3, #2
  4012ac:	4563      	cmp	r3, ip
  4012ae:	f340 80b2 	ble.w	401416 <udd_ep_in_sent+0x196>
		return true; // Data pending
	}

	// No more data in buffer
	if (ptr_job->buf_cnt >= ptr_job->buf_size && !ptr_job->b_shortpacket) {
  4012b2:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4012b6:	4a5d      	ldr	r2, [pc, #372]	; (40142c <udd_ep_in_sent+0x1ac>)
  4012b8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4012bc:	68da      	ldr	r2, [r3, #12]
  4012be:	689b      	ldr	r3, [r3, #8]
  4012c0:	429a      	cmp	r2, r3
  4012c2:	d309      	bcc.n	4012d8 <udd_ep_in_sent+0x58>
  4012c4:	eb06 0186 	add.w	r1, r6, r6, lsl #2
  4012c8:	4c58      	ldr	r4, [pc, #352]	; (40142c <udd_ep_in_sent+0x1ac>)
  4012ca:	eb04 0181 	add.w	r1, r4, r1, lsl #2
  4012ce:	7c49      	ldrb	r1, [r1, #17]
  4012d0:	f011 0f40 	tst.w	r1, #64	; 0x40
  4012d4:	f000 80a3 	beq.w	40141e <udd_ep_in_sent+0x19e>
	uint8_t *ptr_src = &ptr_job->buf[ptr_job->buf_cnt];
  4012d8:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  4012dc:	4953      	ldr	r1, [pc, #332]	; (40142c <udd_ep_in_sent+0x1ac>)
  4012de:	eb01 0585 	add.w	r5, r1, r5, lsl #2
  4012e2:	686c      	ldr	r4, [r5, #4]
  4012e4:	4414      	add	r4, r2
	uint32_t nb_remain = ptr_job->buf_size - ptr_job->buf_cnt;
  4012e6:	1a99      	subs	r1, r3, r2
	uint32_t pkt_size = ptr_job->size;
  4012e8:	8a2b      	ldrh	r3, [r5, #16]
  4012ea:	f3c3 0709 	ubfx	r7, r3, #0, #10
	if (nb_remain < pkt_size) {
  4012ee:	42b9      	cmp	r1, r7
		pkt_size = nb_remain;
  4012f0:	bf3a      	itte	cc
  4012f2:	460f      	movcc	r7, r1
		is_short_pkt = true;
  4012f4:	f04f 0e01 	movcc.w	lr, #1
	bool is_short_pkt = false;
  4012f8:	f04f 0e00 	movcs.w	lr, #0
	ptr_job->buf_cnt += pkt_size;
  4012fc:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  401300:	494a      	ldr	r1, [pc, #296]	; (40142c <udd_ep_in_sent+0x1ac>)
  401302:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  401306:	443a      	add	r2, r7
  401308:	60da      	str	r2, [r3, #12]
	for (; pkt_size >= 8; pkt_size -= 8) {
  40130a:	2f07      	cmp	r7, #7
  40130c:	d92b      	bls.n	401366 <udd_ep_in_sent+0xe6>
  40130e:	f104 0308 	add.w	r3, r4, #8
  401312:	463d      	mov	r5, r7
  401314:	0082      	lsls	r2, r0, #2
  401316:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  40131a:	f502 3240 	add.w	r2, r2, #196608	; 0x30000
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40131e:	f813 1c08 	ldrb.w	r1, [r3, #-8]
  401322:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401324:	f813 1c07 	ldrb.w	r1, [r3, #-7]
  401328:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40132a:	f813 1c06 	ldrb.w	r1, [r3, #-6]
  40132e:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401330:	f813 1c05 	ldrb.w	r1, [r3, #-5]
  401334:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401336:	f813 1c04 	ldrb.w	r1, [r3, #-4]
  40133a:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40133c:	f813 1c03 	ldrb.w	r1, [r3, #-3]
  401340:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401342:	f813 1c02 	ldrb.w	r1, [r3, #-2]
  401346:	6511      	str	r1, [r2, #80]	; 0x50
		udd_endpoint_fifo_write(ep, *ptr_src++);
  401348:	f813 1c01 	ldrb.w	r1, [r3, #-1]
  40134c:	6511      	str	r1, [r2, #80]	; 0x50
	for (; pkt_size >= 8; pkt_size -= 8) {
  40134e:	3d08      	subs	r5, #8
  401350:	3308      	adds	r3, #8
  401352:	2d07      	cmp	r5, #7
  401354:	d8e3      	bhi.n	40131e <udd_ep_in_sent+0x9e>
  401356:	f1a7 0308 	sub.w	r3, r7, #8
  40135a:	f023 0307 	bic.w	r3, r3, #7
  40135e:	3308      	adds	r3, #8
  401360:	441c      	add	r4, r3
  401362:	f007 0707 	and.w	r7, r7, #7
	for (; pkt_size; pkt_size--) {
  401366:	b14f      	cbz	r7, 40137c <udd_ep_in_sent+0xfc>
  401368:	19e3      	adds	r3, r4, r7
		udd_endpoint_fifo_write(ep, *ptr_src++);
  40136a:	4931      	ldr	r1, [pc, #196]	; (401430 <udd_ep_in_sent+0x1b0>)
  40136c:	f109 0914 	add.w	r9, r9, #20
  401370:	f814 2b01 	ldrb.w	r2, [r4], #1
  401374:	f841 2029 	str.w	r2, [r1, r9, lsl #2]
	for (; pkt_size; pkt_size--) {
  401378:	429c      	cmp	r4, r3
  40137a:	d1f9      	bne.n	401370 <udd_ep_in_sent+0xf0>
	ptr_job->bank++;
  40137c:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  401380:	4a2a      	ldr	r2, [pc, #168]	; (40142c <udd_ep_in_sent+0x1ac>)
  401382:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  401386:	f10c 0c01 	add.w	ip, ip, #1
  40138a:	7c5a      	ldrb	r2, [r3, #17]
  40138c:	f36c 0283 	bfi	r2, ip, #2, #2
  401390:	745a      	strb	r2, [r3, #17]

	// Fill FIFO
	b_shortpacket = udd_ep_write_fifo(ep);

	// Data is ready to send
	if (b_tx) {
  401392:	f1b8 0f00 	cmp.w	r8, #0
  401396:	d014      	beq.n	4013c2 <udd_ep_in_sent+0x142>
  401398:	0080      	lsls	r0, r0, #2
  40139a:	f100 2040 	add.w	r0, r0, #1073758208	; 0x40004000
  40139e:	f500 3040 	add.w	r0, r0, #196608	; 0x30000
		udd_set_transmit_ready(ep);
  4013a2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4013a4:	9301      	str	r3, [sp, #4]
  4013a6:	9b01      	ldr	r3, [sp, #4]
  4013a8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4013ac:	9301      	str	r3, [sp, #4]
  4013ae:	9b01      	ldr	r3, [sp, #4]
  4013b0:	f043 0310 	orr.w	r3, r3, #16
  4013b4:	9301      	str	r3, [sp, #4]
  4013b6:	9b01      	ldr	r3, [sp, #4]
  4013b8:	6303      	str	r3, [r0, #48]	; 0x30
  4013ba:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4013bc:	f013 0f10 	tst.w	r3, #16
  4013c0:	d0fb      	beq.n	4013ba <udd_ep_in_sent+0x13a>
	}
	// Short PKT? no need to send it again.
	if (b_shortpacket) {
  4013c2:	f1be 0f00 	cmp.w	lr, #0
  4013c6:	d008      	beq.n	4013da <udd_ep_in_sent+0x15a>
		ptr_job->b_shortpacket = false;
  4013c8:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4013cc:	4a17      	ldr	r2, [pc, #92]	; (40142c <udd_ep_in_sent+0x1ac>)
  4013ce:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4013d2:	7c5a      	ldrb	r2, [r3, #17]
  4013d4:	f36f 1286 	bfc	r2, #6, #1
  4013d8:	745a      	strb	r2, [r3, #17]
	}
	// All transfer done, including ZLP, Finish Job
	if ((ptr_job->buf_cnt >= ptr_job->buf_size)
  4013da:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4013de:	4a13      	ldr	r2, [pc, #76]	; (40142c <udd_ep_in_sent+0x1ac>)
  4013e0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4013e4:	68da      	ldr	r2, [r3, #12]
  4013e6:	689b      	ldr	r3, [r3, #8]
  4013e8:	429a      	cmp	r2, r3
  4013ea:	d31a      	bcc.n	401422 <udd_ep_in_sent+0x1a2>
			&& (!ptr_job->b_shortpacket)) {
  4013ec:	eb06 0386 	add.w	r3, r6, r6, lsl #2
  4013f0:	4a0e      	ldr	r2, [pc, #56]	; (40142c <udd_ep_in_sent+0x1ac>)
  4013f2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4013f6:	7c5b      	ldrb	r3, [r3, #17]
  4013f8:	f013 0f40 	tst.w	r3, #64	; 0x40
  4013fc:	d113      	bne.n	401426 <udd_ep_in_sent+0x1a6>
		ptr_job->b_buf_end = true;
  4013fe:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  401402:	eb02 0686 	add.w	r6, r2, r6, lsl #2
  401406:	7c73      	ldrb	r3, [r6, #17]
  401408:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40140c:	7473      	strb	r3, [r6, #17]
		return false;
  40140e:	2000      	movs	r0, #0
  401410:	e002      	b.n	401418 <udd_ep_in_sent+0x198>
	if (ptr_job->bank >= udd_get_endpoint_bank_max_nbr(ep)) {
  401412:	2301      	movs	r3, #1
  401414:	e74a      	b.n	4012ac <udd_ep_in_sent+0x2c>
		return true; // Data pending
  401416:	2001      	movs	r0, #1
	}
	return true; // Pending
}
  401418:	b003      	add	sp, #12
  40141a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		return false;
  40141e:	2000      	movs	r0, #0
  401420:	e7fa      	b.n	401418 <udd_ep_in_sent+0x198>
	return true; // Pending
  401422:	2001      	movs	r0, #1
  401424:	e7f8      	b.n	401418 <udd_ep_in_sent+0x198>
  401426:	2001      	movs	r0, #1
  401428:	e7f6      	b.n	401418 <udd_ep_in_sent+0x198>
  40142a:	bf00      	nop
  40142c:	20000c48 	.word	0x20000c48
  401430:	40034000 	.word	0x40034000

00401434 <UDP_Handler>:
{
  401434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401438:	b09b      	sub	sp, #108	; 0x6c
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
  40143a:	4b86      	ldr	r3, [pc, #536]	; (401654 <UDP_Handler+0x220>)
  40143c:	4798      	blx	r3
  40143e:	b920      	cbnz	r0, 40144a <UDP_Handler+0x16>
  401440:	4b85      	ldr	r3, [pc, #532]	; (401658 <UDP_Handler+0x224>)
  401442:	69db      	ldr	r3, [r3, #28]
  401444:	f413 7f80 	tst.w	r3, #256	; 0x100
  401448:	d03b      	beq.n	4014c2 <UDP_Handler+0x8e>
	udd_enable_periph_ck();
  40144a:	2022      	movs	r0, #34	; 0x22
  40144c:	4b83      	ldr	r3, [pc, #524]	; (40165c <UDP_Handler+0x228>)
  40144e:	4798      	blx	r3
	if (Is_udd_sof_interrupt_enabled() && Is_udd_sof()) {
  401450:	4b81      	ldr	r3, [pc, #516]	; (401658 <UDP_Handler+0x224>)
  401452:	699b      	ldr	r3, [r3, #24]
  401454:	f413 6f00 	tst.w	r3, #2048	; 0x800
  401458:	d004      	beq.n	401464 <UDP_Handler+0x30>
  40145a:	4b7f      	ldr	r3, [pc, #508]	; (401658 <UDP_Handler+0x224>)
  40145c:	69db      	ldr	r3, [r3, #28]
  40145e:	f413 6f00 	tst.w	r3, #2048	; 0x800
  401462:	d137      	bne.n	4014d4 <UDP_Handler+0xa0>
	if (!Is_udd_endpoint_interrupt(0))
  401464:	4b7c      	ldr	r3, [pc, #496]	; (401658 <UDP_Handler+0x224>)
  401466:	69db      	ldr	r3, [r3, #28]
  401468:	f013 0f01 	tst.w	r3, #1
  40146c:	f000 81b6 	beq.w	4017dc <UDP_Handler+0x3a8>
	if (Is_udd_setup_received(0)) {
  401470:	4b79      	ldr	r3, [pc, #484]	; (401658 <UDP_Handler+0x224>)
  401472:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401474:	f013 0f04 	tst.w	r3, #4
  401478:	d133      	bne.n	4014e2 <UDP_Handler+0xae>
	if (Is_udd_in_sent(0)) {
  40147a:	4b77      	ldr	r3, [pc, #476]	; (401658 <UDP_Handler+0x224>)
  40147c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40147e:	f013 0f01 	tst.w	r3, #1
  401482:	f040 80c3 	bne.w	40160c <UDP_Handler+0x1d8>
	if (Is_udd_bank0_received(0)) {
  401486:	4b74      	ldr	r3, [pc, #464]	; (401658 <UDP_Handler+0x224>)
  401488:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40148a:	f013 0f02 	tst.w	r3, #2
  40148e:	f040 80c0 	bne.w	401612 <UDP_Handler+0x1de>
	if (Is_udd_stall(0)) {
  401492:	4b71      	ldr	r3, [pc, #452]	; (401658 <UDP_Handler+0x224>)
  401494:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401496:	f013 0f08 	tst.w	r3, #8
  40149a:	f000 819f 	beq.w	4017dc <UDP_Handler+0x3a8>
		udd_ack_stall(0);
  40149e:	4a6e      	ldr	r2, [pc, #440]	; (401658 <UDP_Handler+0x224>)
  4014a0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4014a2:	9300      	str	r3, [sp, #0]
  4014a4:	9b00      	ldr	r3, [sp, #0]
  4014a6:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4014aa:	9300      	str	r3, [sp, #0]
  4014ac:	9b00      	ldr	r3, [sp, #0]
  4014ae:	f023 0308 	bic.w	r3, r3, #8
  4014b2:	9300      	str	r3, [sp, #0]
  4014b4:	9b00      	ldr	r3, [sp, #0]
  4014b6:	6313      	str	r3, [r2, #48]	; 0x30
  4014b8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4014ba:	f013 0f08 	tst.w	r3, #8
  4014be:	d1fb      	bne.n	4014b8 <UDP_Handler+0x84>
  4014c0:	e005      	b.n	4014ce <UDP_Handler+0x9a>
  __ASM volatile ("cpsid i" : : : "memory");
  4014c2:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4014c4:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
  4014c8:	2200      	movs	r2, #0
  4014ca:	4b65      	ldr	r3, [pc, #404]	; (401660 <UDP_Handler+0x22c>)
  4014cc:	701a      	strb	r2, [r3, #0]
}
  4014ce:	b01b      	add	sp, #108	; 0x6c
  4014d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		udd_ack_sof();
  4014d4:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4014d8:	4b5f      	ldr	r3, [pc, #380]	; (401658 <UDP_Handler+0x224>)
  4014da:	621a      	str	r2, [r3, #32]
		udc_sof_notify();
  4014dc:	4b61      	ldr	r3, [pc, #388]	; (401664 <UDP_Handler+0x230>)
  4014de:	4798      	blx	r3
		goto udd_interrupt_sof_end;
  4014e0:	e7f5      	b.n	4014ce <UDP_Handler+0x9a>
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
  4014e2:	4b61      	ldr	r3, [pc, #388]	; (401668 <UDP_Handler+0x234>)
  4014e4:	781b      	ldrb	r3, [r3, #0]
  4014e6:	b9cb      	cbnz	r3, 40151c <UDP_Handler+0xe8>
	if (8 != udd_byte_count(0)) {
  4014e8:	4b5b      	ldr	r3, [pc, #364]	; (401658 <UDP_Handler+0x224>)
  4014ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014ec:	f3c3 430a 	ubfx	r3, r3, #16, #11
  4014f0:	2b08      	cmp	r3, #8
  4014f2:	d018      	beq.n	401526 <UDP_Handler+0xf2>
		udd_ack_setup_received(0);
  4014f4:	4a58      	ldr	r2, [pc, #352]	; (401658 <UDP_Handler+0x224>)
  4014f6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4014f8:	9301      	str	r3, [sp, #4]
  4014fa:	9b01      	ldr	r3, [sp, #4]
  4014fc:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401500:	9301      	str	r3, [sp, #4]
  401502:	9b01      	ldr	r3, [sp, #4]
  401504:	f023 0304 	bic.w	r3, r3, #4
  401508:	9301      	str	r3, [sp, #4]
  40150a:	9b01      	ldr	r3, [sp, #4]
  40150c:	6313      	str	r3, [r2, #48]	; 0x30
  40150e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401510:	f013 0f04 	tst.w	r3, #4
  401514:	d1fb      	bne.n	40150e <UDP_Handler+0xda>
		udd_ctrl_stall_data();
  401516:	4b55      	ldr	r3, [pc, #340]	; (40166c <UDP_Handler+0x238>)
  401518:	4798      	blx	r3
  40151a:	e7d8      	b.n	4014ce <UDP_Handler+0x9a>
		udd_ctrl_endofrequest();
  40151c:	4b54      	ldr	r3, [pc, #336]	; (401670 <UDP_Handler+0x23c>)
  40151e:	4798      	blx	r3
		udd_ctrl_init();
  401520:	4b54      	ldr	r3, [pc, #336]	; (401674 <UDP_Handler+0x240>)
  401522:	4798      	blx	r3
  401524:	e7e0      	b.n	4014e8 <UDP_Handler+0xb4>
  401526:	4b54      	ldr	r3, [pc, #336]	; (401678 <UDP_Handler+0x244>)
  401528:	f103 0008 	add.w	r0, r3, #8
			udd_endpoint_fifo_read(0);
  40152c:	494a      	ldr	r1, [pc, #296]	; (401658 <UDP_Handler+0x224>)
  40152e:	6d0a      	ldr	r2, [r1, #80]	; 0x50
		((uint8_t *) & udd_g_ctrlreq.req)[i] =
  401530:	f803 2f01 	strb.w	r2, [r3, #1]!
	for (i = 0; i < 8; i++) {
  401534:	4283      	cmp	r3, r0
  401536:	d1fa      	bne.n	40152e <UDP_Handler+0xfa>
	if (udc_process_setup() == false) {
  401538:	4b50      	ldr	r3, [pc, #320]	; (40167c <UDP_Handler+0x248>)
  40153a:	4798      	blx	r3
  40153c:	b998      	cbnz	r0, 401566 <UDP_Handler+0x132>
		udd_ack_setup_received(0);
  40153e:	4a46      	ldr	r2, [pc, #280]	; (401658 <UDP_Handler+0x224>)
  401540:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401542:	9302      	str	r3, [sp, #8]
  401544:	9b02      	ldr	r3, [sp, #8]
  401546:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40154a:	9302      	str	r3, [sp, #8]
  40154c:	9b02      	ldr	r3, [sp, #8]
  40154e:	f023 0304 	bic.w	r3, r3, #4
  401552:	9302      	str	r3, [sp, #8]
  401554:	9b02      	ldr	r3, [sp, #8]
  401556:	6313      	str	r3, [r2, #48]	; 0x30
  401558:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40155a:	f013 0f04 	tst.w	r3, #4
  40155e:	d1fb      	bne.n	401558 <UDP_Handler+0x124>
		udd_ctrl_stall_data();
  401560:	4b42      	ldr	r3, [pc, #264]	; (40166c <UDP_Handler+0x238>)
  401562:	4798      	blx	r3
  401564:	e7b3      	b.n	4014ce <UDP_Handler+0x9a>
	if (Udd_setup_is_in()) {
  401566:	4b46      	ldr	r3, [pc, #280]	; (401680 <UDP_Handler+0x24c>)
  401568:	f993 3000 	ldrsb.w	r3, [r3]
  40156c:	2b00      	cmp	r3, #0
  40156e:	db1d      	blt.n	4015ac <UDP_Handler+0x178>
		udd_ack_setup_received(0);
  401570:	4a39      	ldr	r2, [pc, #228]	; (401658 <UDP_Handler+0x224>)
  401572:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401574:	9305      	str	r3, [sp, #20]
  401576:	9b05      	ldr	r3, [sp, #20]
  401578:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40157c:	9305      	str	r3, [sp, #20]
  40157e:	9b05      	ldr	r3, [sp, #20]
  401580:	f023 0304 	bic.w	r3, r3, #4
  401584:	9305      	str	r3, [sp, #20]
  401586:	9b05      	ldr	r3, [sp, #20]
  401588:	6313      	str	r3, [r2, #48]	; 0x30
  40158a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40158c:	f013 0f04 	tst.w	r3, #4
  401590:	d1fb      	bne.n	40158a <UDP_Handler+0x156>
		if (0 == udd_g_ctrlreq.req.wLength) {
  401592:	4b3b      	ldr	r3, [pc, #236]	; (401680 <UDP_Handler+0x24c>)
  401594:	88db      	ldrh	r3, [r3, #6]
  401596:	2b00      	cmp	r3, #0
  401598:	d035      	beq.n	401606 <UDP_Handler+0x1d2>
		udd_ctrl_prev_payload_nb_trans = 0;
  40159a:	2300      	movs	r3, #0
  40159c:	4a39      	ldr	r2, [pc, #228]	; (401684 <UDP_Handler+0x250>)
  40159e:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_nb_trans = 0;
  4015a0:	4a39      	ldr	r2, [pc, #228]	; (401688 <UDP_Handler+0x254>)
  4015a2:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
  4015a4:	2201      	movs	r2, #1
  4015a6:	4b30      	ldr	r3, [pc, #192]	; (401668 <UDP_Handler+0x234>)
  4015a8:	701a      	strb	r2, [r3, #0]
  4015aa:	e790      	b.n	4014ce <UDP_Handler+0x9a>
		udd_set_endpoint_direction_in(0);
  4015ac:	4a2a      	ldr	r2, [pc, #168]	; (401658 <UDP_Handler+0x224>)
  4015ae:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015b0:	9303      	str	r3, [sp, #12]
  4015b2:	9b03      	ldr	r3, [sp, #12]
  4015b4:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4015b8:	9303      	str	r3, [sp, #12]
  4015ba:	9b03      	ldr	r3, [sp, #12]
  4015bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4015c0:	9303      	str	r3, [sp, #12]
  4015c2:	9b03      	ldr	r3, [sp, #12]
  4015c4:	6313      	str	r3, [r2, #48]	; 0x30
  4015c6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015c8:	f013 0f80 	tst.w	r3, #128	; 0x80
  4015cc:	d0fb      	beq.n	4015c6 <UDP_Handler+0x192>
		udd_ack_setup_received(0);
  4015ce:	4a22      	ldr	r2, [pc, #136]	; (401658 <UDP_Handler+0x224>)
  4015d0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015d2:	9304      	str	r3, [sp, #16]
  4015d4:	9b04      	ldr	r3, [sp, #16]
  4015d6:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4015da:	9304      	str	r3, [sp, #16]
  4015dc:	9b04      	ldr	r3, [sp, #16]
  4015de:	f023 0304 	bic.w	r3, r3, #4
  4015e2:	9304      	str	r3, [sp, #16]
  4015e4:	9b04      	ldr	r3, [sp, #16]
  4015e6:	6313      	str	r3, [r2, #48]	; 0x30
  4015e8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4015ea:	f013 0f04 	tst.w	r3, #4
  4015ee:	d1fb      	bne.n	4015e8 <UDP_Handler+0x1b4>
		udd_ctrl_prev_payload_nb_trans = 0;
  4015f0:	2300      	movs	r3, #0
  4015f2:	4a24      	ldr	r2, [pc, #144]	; (401684 <UDP_Handler+0x250>)
  4015f4:	8013      	strh	r3, [r2, #0]
		udd_ctrl_payload_nb_trans = 0;
  4015f6:	4a24      	ldr	r2, [pc, #144]	; (401688 <UDP_Handler+0x254>)
  4015f8:	8013      	strh	r3, [r2, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
  4015fa:	2202      	movs	r2, #2
  4015fc:	4b1a      	ldr	r3, [pc, #104]	; (401668 <UDP_Handler+0x234>)
  4015fe:	701a      	strb	r2, [r3, #0]
		udd_ctrl_in_sent(); // Send first data transfer
  401600:	4b22      	ldr	r3, [pc, #136]	; (40168c <UDP_Handler+0x258>)
  401602:	4798      	blx	r3
  401604:	e763      	b.n	4014ce <UDP_Handler+0x9a>
			udd_ctrl_send_zlp_in();
  401606:	4b22      	ldr	r3, [pc, #136]	; (401690 <UDP_Handler+0x25c>)
  401608:	4798      	blx	r3
  40160a:	e760      	b.n	4014ce <UDP_Handler+0x9a>
		udd_ctrl_in_sent();
  40160c:	4b1f      	ldr	r3, [pc, #124]	; (40168c <UDP_Handler+0x258>)
  40160e:	4798      	blx	r3
  401610:	e75d      	b.n	4014ce <UDP_Handler+0x9a>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
  401612:	4b15      	ldr	r3, [pc, #84]	; (401668 <UDP_Handler+0x234>)
  401614:	781b      	ldrb	r3, [r3, #0]
  401616:	2b01      	cmp	r3, #1
  401618:	d03c      	beq.n	401694 <UDP_Handler+0x260>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
  40161a:	2b02      	cmp	r3, #2
  40161c:	d004      	beq.n	401628 <UDP_Handler+0x1f4>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
  40161e:	2b04      	cmp	r3, #4
  401620:	d002      	beq.n	401628 <UDP_Handler+0x1f4>
			udd_ctrl_stall_data();
  401622:	4b12      	ldr	r3, [pc, #72]	; (40166c <UDP_Handler+0x238>)
  401624:	4798      	blx	r3
  401626:	e001      	b.n	40162c <UDP_Handler+0x1f8>
			udd_ctrl_endofrequest();
  401628:	4b11      	ldr	r3, [pc, #68]	; (401670 <UDP_Handler+0x23c>)
  40162a:	4798      	blx	r3
		udd_ack_bank0_received(0);
  40162c:	4a0a      	ldr	r2, [pc, #40]	; (401658 <UDP_Handler+0x224>)
  40162e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401630:	9306      	str	r3, [sp, #24]
  401632:	9b06      	ldr	r3, [sp, #24]
  401634:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401638:	9306      	str	r3, [sp, #24]
  40163a:	9b06      	ldr	r3, [sp, #24]
  40163c:	f023 0302 	bic.w	r3, r3, #2
  401640:	9306      	str	r3, [sp, #24]
  401642:	9b06      	ldr	r3, [sp, #24]
  401644:	6313      	str	r3, [r2, #48]	; 0x30
  401646:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401648:	f013 0f02 	tst.w	r3, #2
  40164c:	d1fb      	bne.n	401646 <UDP_Handler+0x212>
		udd_ctrl_init();
  40164e:	4b09      	ldr	r3, [pc, #36]	; (401674 <UDP_Handler+0x240>)
  401650:	4798      	blx	r3
  401652:	e73c      	b.n	4014ce <UDP_Handler+0x9a>
  401654:	00402825 	.word	0x00402825
  401658:	40034000 	.word	0x40034000
  40165c:	00402719 	.word	0x00402719
  401660:	200000a0 	.word	0x200000a0
  401664:	0040092d 	.word	0x0040092d
  401668:	20000c46 	.word	0x20000c46
  40166c:	00400f35 	.word	0x00400f35
  401670:	00400fa5 	.word	0x00400fa5
  401674:	00400f1d 	.word	0x00400f1d
  401678:	20000cc7 	.word	0x20000cc7
  40167c:	0040096d 	.word	0x0040096d
  401680:	20000cc8 	.word	0x20000cc8
  401684:	20000c44 	.word	0x20000c44
  401688:	20000c42 	.word	0x20000c42
  40168c:	00400fb5 	.word	0x00400fb5
  401690:	00400f6d 	.word	0x00400f6d
	nb_data = udd_byte_count(0);
  401694:	4b93      	ldr	r3, [pc, #588]	; (4018e4 <UDP_Handler+0x4b0>)
  401696:	6b19      	ldr	r1, [r3, #48]	; 0x30
  401698:	f3c1 410a 	ubfx	r1, r1, #16, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_nb_trans + nb_data)) {
  40169c:	4b92      	ldr	r3, [pc, #584]	; (4018e8 <UDP_Handler+0x4b4>)
  40169e:	899b      	ldrh	r3, [r3, #12]
  4016a0:	4a92      	ldr	r2, [pc, #584]	; (4018ec <UDP_Handler+0x4b8>)
  4016a2:	8815      	ldrh	r5, [r2, #0]
  4016a4:	186a      	adds	r2, r5, r1
  4016a6:	4293      	cmp	r3, r2
		nb_data = udd_g_ctrlreq.payload_size -
  4016a8:	bfbc      	itt	lt
  4016aa:	1b5b      	sublt	r3, r3, r5
  4016ac:	b299      	uxthlt	r1, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans;
  4016ae:	4b8e      	ldr	r3, [pc, #568]	; (4018e8 <UDP_Handler+0x4b4>)
  4016b0:	6898      	ldr	r0, [r3, #8]
  4016b2:	4428      	add	r0, r5
	for (i = 0; i < nb_data; i++) {
  4016b4:	b171      	cbz	r1, 4016d4 <UDP_Handler+0x2a0>
  4016b6:	4602      	mov	r2, r0
		*ptr_dest++ = udd_endpoint_fifo_read(0);
  4016b8:	4c8a      	ldr	r4, [pc, #552]	; (4018e4 <UDP_Handler+0x4b0>)
  4016ba:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4016bc:	f802 3b01 	strb.w	r3, [r2], #1
	for (i = 0; i < nb_data; i++) {
  4016c0:	1a13      	subs	r3, r2, r0
  4016c2:	b2db      	uxtb	r3, r3
  4016c4:	428b      	cmp	r3, r1
  4016c6:	d3f8      	bcc.n	4016ba <UDP_Handler+0x286>
	udd_ctrl_payload_nb_trans += nb_data;
  4016c8:	440d      	add	r5, r1
  4016ca:	b2ad      	uxth	r5, r5
  4016cc:	4b87      	ldr	r3, [pc, #540]	; (4018ec <UDP_Handler+0x4b8>)
  4016ce:	801d      	strh	r5, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
  4016d0:	2940      	cmp	r1, #64	; 0x40
  4016d2:	d01a      	beq.n	40170a <UDP_Handler+0x2d6>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_nb_trans;
  4016d4:	4b84      	ldr	r3, [pc, #528]	; (4018e8 <UDP_Handler+0x4b4>)
  4016d6:	819d      	strh	r5, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
  4016d8:	695b      	ldr	r3, [r3, #20]
  4016da:	b113      	cbz	r3, 4016e2 <UDP_Handler+0x2ae>
			if (!udd_g_ctrlreq.over_under_run()) {
  4016dc:	4798      	blx	r3
  4016de:	2800      	cmp	r0, #0
  4016e0:	d030      	beq.n	401744 <UDP_Handler+0x310>
		udd_ack_bank0_received(0);
  4016e2:	4a80      	ldr	r2, [pc, #512]	; (4018e4 <UDP_Handler+0x4b0>)
  4016e4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016e6:	9308      	str	r3, [sp, #32]
  4016e8:	9b08      	ldr	r3, [sp, #32]
  4016ea:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4016ee:	9308      	str	r3, [sp, #32]
  4016f0:	9b08      	ldr	r3, [sp, #32]
  4016f2:	f023 0302 	bic.w	r3, r3, #2
  4016f6:	9308      	str	r3, [sp, #32]
  4016f8:	9b08      	ldr	r3, [sp, #32]
  4016fa:	6313      	str	r3, [r2, #48]	; 0x30
  4016fc:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4016fe:	f013 0f02 	tst.w	r3, #2
  401702:	d1fb      	bne.n	4016fc <UDP_Handler+0x2c8>
		udd_ctrl_send_zlp_in();
  401704:	4b7a      	ldr	r3, [pc, #488]	; (4018f0 <UDP_Handler+0x4bc>)
  401706:	4798      	blx	r3
  401708:	e6e1      	b.n	4014ce <UDP_Handler+0x9a>
			|| (udd_g_ctrlreq.req.wLength <=
  40170a:	4b77      	ldr	r3, [pc, #476]	; (4018e8 <UDP_Handler+0x4b4>)
  40170c:	88da      	ldrh	r2, [r3, #6]
			(udd_ctrl_prev_payload_nb_trans +
  40170e:	4b79      	ldr	r3, [pc, #484]	; (4018f4 <UDP_Handler+0x4c0>)
  401710:	881b      	ldrh	r3, [r3, #0]
  401712:	442b      	add	r3, r5
			|| (udd_g_ctrlreq.req.wLength <=
  401714:	429a      	cmp	r2, r3
  401716:	dddd      	ble.n	4016d4 <UDP_Handler+0x2a0>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_nb_trans) {
  401718:	4b73      	ldr	r3, [pc, #460]	; (4018e8 <UDP_Handler+0x4b4>)
  40171a:	899b      	ldrh	r3, [r3, #12]
  40171c:	42ab      	cmp	r3, r5
  40171e:	d025      	beq.n	40176c <UDP_Handler+0x338>
	udd_ack_bank0_received(0);
  401720:	4a70      	ldr	r2, [pc, #448]	; (4018e4 <UDP_Handler+0x4b0>)
  401722:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401724:	930b      	str	r3, [sp, #44]	; 0x2c
  401726:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401728:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  40172c:	930b      	str	r3, [sp, #44]	; 0x2c
  40172e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401730:	f023 0302 	bic.w	r3, r3, #2
  401734:	930b      	str	r3, [sp, #44]	; 0x2c
  401736:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401738:	6313      	str	r3, [r2, #48]	; 0x30
  40173a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40173c:	f013 0f02 	tst.w	r3, #2
  401740:	d1fb      	bne.n	40173a <UDP_Handler+0x306>
  401742:	e6c4      	b.n	4014ce <UDP_Handler+0x9a>
				udd_ctrl_stall_data();
  401744:	4b6c      	ldr	r3, [pc, #432]	; (4018f8 <UDP_Handler+0x4c4>)
  401746:	4798      	blx	r3
				udd_ack_bank0_received(0);
  401748:	4a66      	ldr	r2, [pc, #408]	; (4018e4 <UDP_Handler+0x4b0>)
  40174a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40174c:	9307      	str	r3, [sp, #28]
  40174e:	9b07      	ldr	r3, [sp, #28]
  401750:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401754:	9307      	str	r3, [sp, #28]
  401756:	9b07      	ldr	r3, [sp, #28]
  401758:	f023 0302 	bic.w	r3, r3, #2
  40175c:	9307      	str	r3, [sp, #28]
  40175e:	9b07      	ldr	r3, [sp, #28]
  401760:	6313      	str	r3, [r2, #48]	; 0x30
  401762:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401764:	f013 0f02 	tst.w	r3, #2
  401768:	d1fb      	bne.n	401762 <UDP_Handler+0x32e>
  40176a:	e6b0      	b.n	4014ce <UDP_Handler+0x9a>
		if (!udd_g_ctrlreq.over_under_run) {
  40176c:	4b5e      	ldr	r3, [pc, #376]	; (4018e8 <UDP_Handler+0x4b4>)
  40176e:	695b      	ldr	r3, [r3, #20]
  401770:	b153      	cbz	r3, 401788 <UDP_Handler+0x354>
		if (!udd_g_ctrlreq.over_under_run()) {
  401772:	4798      	blx	r3
  401774:	b1e8      	cbz	r0, 4017b2 <UDP_Handler+0x37e>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
  401776:	495f      	ldr	r1, [pc, #380]	; (4018f4 <UDP_Handler+0x4c0>)
  401778:	4a5c      	ldr	r2, [pc, #368]	; (4018ec <UDP_Handler+0x4b8>)
  40177a:	880b      	ldrh	r3, [r1, #0]
  40177c:	8810      	ldrh	r0, [r2, #0]
  40177e:	4403      	add	r3, r0
  401780:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_nb_trans = 0;
  401782:	2300      	movs	r3, #0
  401784:	8013      	strh	r3, [r2, #0]
  401786:	e7cb      	b.n	401720 <UDP_Handler+0x2ec>
			udd_ctrl_stall_data();
  401788:	4b5b      	ldr	r3, [pc, #364]	; (4018f8 <UDP_Handler+0x4c4>)
  40178a:	4798      	blx	r3
			udd_ack_bank0_received(0);
  40178c:	4a55      	ldr	r2, [pc, #340]	; (4018e4 <UDP_Handler+0x4b0>)
  40178e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401790:	9309      	str	r3, [sp, #36]	; 0x24
  401792:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401794:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401798:	9309      	str	r3, [sp, #36]	; 0x24
  40179a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40179c:	f023 0302 	bic.w	r3, r3, #2
  4017a0:	9309      	str	r3, [sp, #36]	; 0x24
  4017a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4017a4:	6313      	str	r3, [r2, #48]	; 0x30
  4017a6:	4613      	mov	r3, r2
  4017a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4017aa:	f012 0f02 	tst.w	r2, #2
  4017ae:	d1fb      	bne.n	4017a8 <UDP_Handler+0x374>
  4017b0:	e68d      	b.n	4014ce <UDP_Handler+0x9a>
			udd_ctrl_stall_data();
  4017b2:	4b51      	ldr	r3, [pc, #324]	; (4018f8 <UDP_Handler+0x4c4>)
  4017b4:	4798      	blx	r3
			udd_ack_bank0_received(0);
  4017b6:	4a4b      	ldr	r2, [pc, #300]	; (4018e4 <UDP_Handler+0x4b0>)
  4017b8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4017ba:	930a      	str	r3, [sp, #40]	; 0x28
  4017bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4017be:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4017c2:	930a      	str	r3, [sp, #40]	; 0x28
  4017c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4017c6:	f023 0302 	bic.w	r3, r3, #2
  4017ca:	930a      	str	r3, [sp, #40]	; 0x28
  4017cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4017ce:	6313      	str	r3, [r2, #48]	; 0x30
  4017d0:	4613      	mov	r3, r2
  4017d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4017d4:	f012 0f02 	tst.w	r2, #2
  4017d8:	d1fb      	bne.n	4017d2 <UDP_Handler+0x39e>
  4017da:	e678      	b.n	4014ce <UDP_Handler+0x9a>
  4017dc:	4a47      	ldr	r2, [pc, #284]	; (4018fc <UDP_Handler+0x4c8>)
	for (i = 0; i < nb_data; i++) {
  4017de:	2301      	movs	r3, #1
	udd_ep_job_t *ptr_job;

	// For each endpoint different of control endpoint (0)
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
		// Check RXRDY and TXEMPTY event for none DMA endpoints
		if (!Is_udd_endpoint_interrupt_enabled(ep)) {
  4017e0:	f8df e100 	ldr.w	lr, [pc, #256]	; 4018e4 <UDP_Handler+0x4b0>
  4017e4:	4618      	mov	r0, r3
  4017e6:	e17f      	b.n	401ae8 <UDP_Handler+0x6b4>
	uint32_t pkt_size = ptr_job->size;
  4017e8:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  4017ec:	4b43      	ldr	r3, [pc, #268]	; (4018fc <UDP_Handler+0x4c8>)
  4017ee:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  4017f2:	f8b3 a010 	ldrh.w	sl, [r3, #16]
  4017f6:	f3ca 0a09 	ubfx	sl, sl, #0, #10
	nb_data = udd_byte_count(ep);
  4017fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4017fc:	f3c3 490a 	ubfx	r9, r3, #16, #11
	if (nb_data > 0) {
  401800:	f1b9 0f00 	cmp.w	r9, #0
  401804:	f000 81df 	beq.w	401bc6 <UDP_Handler+0x792>
	uint32_t nb_remain = ptr_job->buf_size - ptr_job->buf_cnt;
  401808:	4b3c      	ldr	r3, [pc, #240]	; (4018fc <UDP_Handler+0x4c8>)
  40180a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40180e:	f8d3 e008 	ldr.w	lr, [r3, #8]
  401812:	68da      	ldr	r2, [r3, #12]
  401814:	ebae 0002 	sub.w	r0, lr, r2
	uint8_t *ptr_dst = &ptr_job->buf[ptr_job->buf_cnt];
  401818:	6859      	ldr	r1, [r3, #4]
		if (nb_data >= nb_remain) {
  40181a:	4548      	cmp	r0, r9
  40181c:	f240 81c7 	bls.w	401bae <UDP_Handler+0x77a>
		ptr_job->buf_cnt += nb_data;
  401820:	eb07 0087 	add.w	r0, r7, r7, lsl #2
  401824:	4b35      	ldr	r3, [pc, #212]	; (4018fc <UDP_Handler+0x4c8>)
  401826:	eb03 0380 	add.w	r3, r3, r0, lsl #2
  40182a:	eb02 0009 	add.w	r0, r2, r9
  40182e:	60d8      	str	r0, [r3, #12]
	nb_data = udd_byte_count(ep);
  401830:	4648      	mov	r0, r9
	bool b_full = false, b_short;
  401832:	f04f 0b00 	mov.w	fp, #0
	uint8_t *ptr_dst = &ptr_job->buf[ptr_job->buf_cnt];
  401836:	4411      	add	r1, r2
  401838:	460b      	mov	r3, r1
			*ptr_dst++ = udd_endpoint_fifo_read(ep);
  40183a:	6d22      	ldr	r2, [r4, #80]	; 0x50
  40183c:	f803 2b01 	strb.w	r2, [r3], #1
		for (i = 0; i < nb_data; i++) {
  401840:	1a5a      	subs	r2, r3, r1
  401842:	4282      	cmp	r2, r0
  401844:	d3f9      	bcc.n	40183a <UDP_Handler+0x406>
	udd_ep_ack_out_received(ep);
  401846:	4630      	mov	r0, r6
  401848:	4b2d      	ldr	r3, [pc, #180]	; (401900 <UDP_Handler+0x4cc>)
  40184a:	4798      	blx	r3
	if ((b_full || b_short) &&
  40184c:	f1bb 0f00 	cmp.w	fp, #0
  401850:	f000 81bc 	beq.w	401bcc <UDP_Handler+0x798>
			!Is_udd_endpoint_stall_requested(ep)) {
  401854:	6b23      	ldr	r3, [r4, #48]	; 0x30
	if ((b_full || b_short) &&
  401856:	f013 0f20 	tst.w	r3, #32
  40185a:	f47f ae38 	bne.w	4014ce <UDP_Handler+0x9a>
		udd_disable_endpoint_interrupt(ep);
  40185e:	4b21      	ldr	r3, [pc, #132]	; (4018e4 <UDP_Handler+0x4b0>)
  401860:	615d      	str	r5, [r3, #20]
		ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  401862:	4b26      	ldr	r3, [pc, #152]	; (4018fc <UDP_Handler+0x4c8>)
  401864:	00ba      	lsls	r2, r7, #2
  401866:	19d1      	adds	r1, r2, r7
  401868:	eb03 0181 	add.w	r1, r3, r1, lsl #2
  40186c:	68cb      	ldr	r3, [r1, #12]
  40186e:	608b      	str	r3, [r1, #8]
		udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  401870:	4632      	mov	r2, r6
  401872:	2100      	movs	r1, #0
  401874:	4640      	mov	r0, r8
  401876:	4b23      	ldr	r3, [pc, #140]	; (401904 <UDP_Handler+0x4d0>)
  401878:	4798      	blx	r3
  40187a:	e628      	b.n	4014ce <UDP_Handler+0x9a>
			return true;
		}
		// TXIN: packet sent
		if (Is_udd_in_sent(ep)) {

			ptr_job->bank--;
  40187c:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401880:	4b1e      	ldr	r3, [pc, #120]	; (4018fc <UDP_Handler+0x4c8>)
  401882:	eb03 0282 	add.w	r2, r3, r2, lsl #2
  401886:	7c53      	ldrb	r3, [r2, #17]
  401888:	f3c3 0181 	ubfx	r1, r3, #2, #2
  40188c:	3103      	adds	r1, #3
  40188e:	f361 0383 	bfi	r3, r1, #2, #2
  401892:	7453      	strb	r3, [r2, #17]
			// Stall when all banks free
			if (ptr_job->b_stall_requested) {
  401894:	7c53      	ldrb	r3, [r2, #17]
  401896:	f013 0f20 	tst.w	r3, #32
  40189a:	d05f      	beq.n	40195c <UDP_Handler+0x528>
				if (ptr_job->bank) {
  40189c:	f013 0f0c 	tst.w	r3, #12
  4018a0:	d032      	beq.n	401908 <UDP_Handler+0x4d4>
					// Send remaining
					udd_set_transmit_ready(ep);
  4018a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4018a4:	930c      	str	r3, [sp, #48]	; 0x30
  4018a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4018a8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4018ac:	930c      	str	r3, [sp, #48]	; 0x30
  4018ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4018b0:	f043 0310 	orr.w	r3, r3, #16
  4018b4:	930c      	str	r3, [sp, #48]	; 0x30
  4018b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4018b8:	6323      	str	r3, [r4, #48]	; 0x30
  4018ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4018bc:	f013 0f10 	tst.w	r3, #16
  4018c0:	d0fb      	beq.n	4018ba <UDP_Handler+0x486>
					udd_ack_in_sent(ep);
  4018c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4018c4:	930d      	str	r3, [sp, #52]	; 0x34
  4018c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4018c8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4018cc:	930d      	str	r3, [sp, #52]	; 0x34
  4018ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4018d0:	f023 0301 	bic.w	r3, r3, #1
  4018d4:	930d      	str	r3, [sp, #52]	; 0x34
  4018d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4018d8:	6323      	str	r3, [r4, #48]	; 0x30
  4018da:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4018dc:	f013 0f01 	tst.w	r3, #1
  4018e0:	d1fb      	bne.n	4018da <UDP_Handler+0x4a6>
  4018e2:	e5f4      	b.n	4014ce <UDP_Handler+0x9a>
  4018e4:	40034000 	.word	0x40034000
  4018e8:	20000cc8 	.word	0x20000cc8
  4018ec:	20000c42 	.word	0x20000c42
  4018f0:	00400f6d 	.word	0x00400f6d
  4018f4:	20000c44 	.word	0x20000c44
  4018f8:	00400f35 	.word	0x00400f35
  4018fc:	20000c48 	.word	0x20000c48
  401900:	004011ad 	.word	0x004011ad
  401904:	0040116d 	.word	0x0040116d
				} else {
					// Ack last packet
					udd_ack_in_sent(ep);
  401908:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40190a:	930e      	str	r3, [sp, #56]	; 0x38
  40190c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40190e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401912:	930e      	str	r3, [sp, #56]	; 0x38
  401914:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  401916:	f023 0301 	bic.w	r3, r3, #1
  40191a:	930e      	str	r3, [sp, #56]	; 0x38
  40191c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40191e:	6323      	str	r3, [r4, #48]	; 0x30
  401920:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401922:	f013 0f01 	tst.w	r3, #1
  401926:	d1fb      	bne.n	401920 <UDP_Handler+0x4ec>
					// Enable stall
					udd_enable_stall_handshake(ep);
  401928:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40192a:	930f      	str	r3, [sp, #60]	; 0x3c
  40192c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40192e:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401932:	930f      	str	r3, [sp, #60]	; 0x3c
  401934:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  401936:	f043 0320 	orr.w	r3, r3, #32
  40193a:	930f      	str	r3, [sp, #60]	; 0x3c
  40193c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40193e:	6323      	str	r3, [r4, #48]	; 0x30
  401940:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401942:	f013 0f20 	tst.w	r3, #32
  401946:	d0fb      	beq.n	401940 <UDP_Handler+0x50c>
					// Halt executed
					ptr_job->b_stall_requested = false;
  401948:	eb07 0787 	add.w	r7, r7, r7, lsl #2
  40194c:	4ba1      	ldr	r3, [pc, #644]	; (401bd4 <UDP_Handler+0x7a0>)
  40194e:	eb03 0387 	add.w	r3, r3, r7, lsl #2
  401952:	7c5a      	ldrb	r2, [r3, #17]
  401954:	f36f 1245 	bfc	r2, #5, #1
  401958:	745a      	strb	r2, [r3, #17]
  40195a:	e5b8      	b.n	4014ce <UDP_Handler+0x9a>
				}
				return true;
			}
			// Finish Job when buffer end
			if (ptr_job->b_buf_end) {
  40195c:	f013 0f80 	tst.w	r3, #128	; 0x80
  401960:	d138      	bne.n	4019d4 <UDP_Handler+0x5a0>
				ptr_job->b_buf_end = false;
				ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
                udd_disable_endpoint_interrupt(ep);
                udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
			}
			if (ptr_job->buf_cnt >= ptr_job->buf_size &&
  401962:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401966:	4b9b      	ldr	r3, [pc, #620]	; (401bd4 <UDP_Handler+0x7a0>)
  401968:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40196c:	68da      	ldr	r2, [r3, #12]
  40196e:	689b      	ldr	r3, [r3, #8]
  401970:	429a      	cmp	r2, r3
  401972:	d341      	bcc.n	4019f8 <UDP_Handler+0x5c4>
					!ptr_job->b_shortpacket &&
  401974:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401978:	4b96      	ldr	r3, [pc, #600]	; (401bd4 <UDP_Handler+0x7a0>)
  40197a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40197e:	7c5b      	ldrb	r3, [r3, #17]
  401980:	f013 0f4c 	tst.w	r3, #76	; 0x4c
  401984:	d138      	bne.n	4019f8 <UDP_Handler+0x5c4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401986:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40198a:	fab3 f383 	clz	r3, r3
  40198e:	095b      	lsrs	r3, r3, #5
  401990:	9310      	str	r3, [sp, #64]	; 0x40
  __ASM volatile ("cpsid i" : : : "memory");
  401992:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401994:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401998:	2200      	movs	r2, #0
  40199a:	4b8f      	ldr	r3, [pc, #572]	; (401bd8 <UDP_Handler+0x7a4>)
  40199c:	701a      	strb	r2, [r3, #0]
	return flags;
  40199e:	9b10      	ldr	r3, [sp, #64]	; 0x40
					ptr_job->bank == 0) {
				// All transfer done, including ZLP
				irqflags_t flags = cpu_irq_save();
				udd_disable_endpoint_interrupt(ep);
  4019a0:	4a8e      	ldr	r2, [pc, #568]	; (401bdc <UDP_Handler+0x7a8>)
  4019a2:	6155      	str	r5, [r2, #20]
	if (cpu_irq_is_enabled_flags(flags))
  4019a4:	b12b      	cbz	r3, 4019b2 <UDP_Handler+0x57e>
		cpu_irq_enable();
  4019a6:	2201      	movs	r2, #1
  4019a8:	4b8b      	ldr	r3, [pc, #556]	; (401bd8 <UDP_Handler+0x7a4>)
  4019aa:	701a      	strb	r2, [r3, #0]
  4019ac:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4019b0:	b662      	cpsie	i
				cpu_irq_restore(flags);
				// Ack last packet
				udd_ack_in_sent(ep);
  4019b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019b4:	9311      	str	r3, [sp, #68]	; 0x44
  4019b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4019b8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4019bc:	9311      	str	r3, [sp, #68]	; 0x44
  4019be:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4019c0:	f023 0301 	bic.w	r3, r3, #1
  4019c4:	9311      	str	r3, [sp, #68]	; 0x44
  4019c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4019c8:	6323      	str	r3, [r4, #48]	; 0x30
  4019ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
  4019cc:	f013 0f01 	tst.w	r3, #1
  4019d0:	d1fb      	bne.n	4019ca <UDP_Handler+0x596>
  4019d2:	e57c      	b.n	4014ce <UDP_Handler+0x9a>
				ptr_job->b_buf_end = false;
  4019d4:	2314      	movs	r3, #20
  4019d6:	4a7f      	ldr	r2, [pc, #508]	; (401bd4 <UDP_Handler+0x7a0>)
  4019d8:	fb03 2307 	mla	r3, r3, r7, r2
  4019dc:	7c59      	ldrb	r1, [r3, #17]
  4019de:	f36f 11c7 	bfc	r1, #7, #1
  4019e2:	7459      	strb	r1, [r3, #17]
				ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  4019e4:	68da      	ldr	r2, [r3, #12]
  4019e6:	609a      	str	r2, [r3, #8]
                udd_disable_endpoint_interrupt(ep);
  4019e8:	4b7c      	ldr	r3, [pc, #496]	; (401bdc <UDP_Handler+0x7a8>)
  4019ea:	615d      	str	r5, [r3, #20]
                udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  4019ec:	4632      	mov	r2, r6
  4019ee:	2100      	movs	r1, #0
  4019f0:	4640      	mov	r0, r8
  4019f2:	4b7b      	ldr	r3, [pc, #492]	; (401be0 <UDP_Handler+0x7ac>)
  4019f4:	4798      	blx	r3
  4019f6:	e7b4      	b.n	401962 <UDP_Handler+0x52e>
				return true;
			} else if (udd_get_endpoint_bank_max_nbr(ep) > 1
  4019f8:	2e00      	cmp	r6, #0
  4019fa:	d05b      	beq.n	401ab4 <UDP_Handler+0x680>
  4019fc:	2e03      	cmp	r6, #3
  4019fe:	d059      	beq.n	401ab4 <UDP_Handler+0x680>
					&& ptr_job->bank > 0) {
  401a00:	eb07 0287 	add.w	r2, r7, r7, lsl #2
  401a04:	4b73      	ldr	r3, [pc, #460]	; (401bd4 <UDP_Handler+0x7a0>)
  401a06:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  401a0a:	7c5b      	ldrb	r3, [r3, #17]
  401a0c:	f013 0f0c 	tst.w	r3, #12
  401a10:	d024      	beq.n	401a5c <UDP_Handler+0x628>
				// Already banks buffered, transmit while loading
				udd_set_transmit_ready(ep);
  401a12:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a14:	9312      	str	r3, [sp, #72]	; 0x48
  401a16:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401a18:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401a1c:	9312      	str	r3, [sp, #72]	; 0x48
  401a1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401a20:	f043 0310 	orr.w	r3, r3, #16
  401a24:	9312      	str	r3, [sp, #72]	; 0x48
  401a26:	9b12      	ldr	r3, [sp, #72]	; 0x48
  401a28:	6323      	str	r3, [r4, #48]	; 0x30
  401a2a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a2c:	f013 0f10 	tst.w	r3, #16
  401a30:	d0fb      	beq.n	401a2a <UDP_Handler+0x5f6>
				udd_ack_in_sent(ep);
  401a32:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a34:	9313      	str	r3, [sp, #76]	; 0x4c
  401a36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401a38:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401a3c:	9313      	str	r3, [sp, #76]	; 0x4c
  401a3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401a40:	f023 0301 	bic.w	r3, r3, #1
  401a44:	9313      	str	r3, [sp, #76]	; 0x4c
  401a46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  401a48:	6323      	str	r3, [r4, #48]	; 0x30
  401a4a:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a4c:	f013 0f01 	tst.w	r3, #1
  401a50:	d1fb      	bne.n	401a4a <UDP_Handler+0x616>
				udd_ep_in_sent(ep, false);
  401a52:	2100      	movs	r1, #0
  401a54:	4630      	mov	r0, r6
  401a56:	4b63      	ldr	r3, [pc, #396]	; (401be4 <UDP_Handler+0x7b0>)
  401a58:	4798      	blx	r3
  401a5a:	e538      	b.n	4014ce <UDP_Handler+0x9a>
			} else if (udd_get_endpoint_bank_max_nbr(ep) > 1) {
				// Still bank free, load and transmit
				if (!udd_ep_in_sent(ep, true)) {
  401a5c:	2101      	movs	r1, #1
  401a5e:	4630      	mov	r0, r6
  401a60:	4b60      	ldr	r3, [pc, #384]	; (401be4 <UDP_Handler+0x7b0>)
  401a62:	4798      	blx	r3
  401a64:	b1a0      	cbz	r0, 401a90 <UDP_Handler+0x65c>
					ptr_job->b_buf_end = false;
					ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
                    udd_disable_endpoint_interrupt(ep);
                    udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
				}
				udd_ack_in_sent(ep);
  401a66:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a68:	9314      	str	r3, [sp, #80]	; 0x50
  401a6a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401a6c:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401a70:	9314      	str	r3, [sp, #80]	; 0x50
  401a72:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401a74:	f023 0301 	bic.w	r3, r3, #1
  401a78:	9314      	str	r3, [sp, #80]	; 0x50
  401a7a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  401a7c:	6323      	str	r3, [r4, #48]	; 0x30
  401a7e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401a80:	f013 0f01 	tst.w	r3, #1
  401a84:	d1fb      	bne.n	401a7e <UDP_Handler+0x64a>
				udd_ep_in_sent(ep, false);
  401a86:	2100      	movs	r1, #0
  401a88:	4630      	mov	r0, r6
  401a8a:	4b56      	ldr	r3, [pc, #344]	; (401be4 <UDP_Handler+0x7b0>)
  401a8c:	4798      	blx	r3
  401a8e:	e51e      	b.n	4014ce <UDP_Handler+0x9a>
					ptr_job->b_buf_end = false;
  401a90:	2314      	movs	r3, #20
  401a92:	4a50      	ldr	r2, [pc, #320]	; (401bd4 <UDP_Handler+0x7a0>)
  401a94:	fb03 2707 	mla	r7, r3, r7, r2
  401a98:	7c7a      	ldrb	r2, [r7, #17]
  401a9a:	f36f 12c7 	bfc	r2, #7, #1
  401a9e:	747a      	strb	r2, [r7, #17]
					ptr_job->buf_size = ptr_job->buf_cnt; // buf_size is passed to callback as XFR count
  401aa0:	68fb      	ldr	r3, [r7, #12]
  401aa2:	60bb      	str	r3, [r7, #8]
                    udd_disable_endpoint_interrupt(ep);
  401aa4:	4b4d      	ldr	r3, [pc, #308]	; (401bdc <UDP_Handler+0x7a8>)
  401aa6:	615d      	str	r5, [r3, #20]
                    udd_ep_finish_job(ptr_job, UDD_EP_TRANSFER_OK, ep);
  401aa8:	4632      	mov	r2, r6
  401aaa:	2100      	movs	r1, #0
  401aac:	4640      	mov	r0, r8
  401aae:	4b4c      	ldr	r3, [pc, #304]	; (401be0 <UDP_Handler+0x7ac>)
  401ab0:	4798      	blx	r3
  401ab2:	e7d8      	b.n	401a66 <UDP_Handler+0x632>
			} else {
				// Single bank transfer, ack when ready
				udd_ep_in_sent(ep, true);
  401ab4:	2101      	movs	r1, #1
  401ab6:	4630      	mov	r0, r6
  401ab8:	4b4a      	ldr	r3, [pc, #296]	; (401be4 <UDP_Handler+0x7b0>)
  401aba:	4798      	blx	r3
				udd_ack_in_sent(ep);
  401abc:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401abe:	9315      	str	r3, [sp, #84]	; 0x54
  401ac0:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401ac2:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401ac6:	9315      	str	r3, [sp, #84]	; 0x54
  401ac8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401aca:	f023 0301 	bic.w	r3, r3, #1
  401ace:	9315      	str	r3, [sp, #84]	; 0x54
  401ad0:	9b15      	ldr	r3, [sp, #84]	; 0x54
  401ad2:	6323      	str	r3, [r4, #48]	; 0x30
  401ad4:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401ad6:	f013 0f01 	tst.w	r3, #1
  401ada:	d1fb      	bne.n	401ad4 <UDP_Handler+0x6a0>
  401adc:	e4f7      	b.n	4014ce <UDP_Handler+0x9a>
  401ade:	3301      	adds	r3, #1
  401ae0:	3214      	adds	r2, #20
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
  401ae2:	2b04      	cmp	r3, #4
  401ae4:	f000 8086 	beq.w	401bf4 <UDP_Handler+0x7c0>
  401ae8:	b2de      	uxtb	r6, r3
		if (!Is_udd_endpoint_interrupt_enabled(ep)) {
  401aea:	f8de 1018 	ldr.w	r1, [lr, #24]
  401aee:	fa00 f503 	lsl.w	r5, r0, r3
  401af2:	4229      	tst	r1, r5
  401af4:	d0f3      	beq.n	401ade <UDP_Handler+0x6aa>
  401af6:	1e5f      	subs	r7, r3, #1
		ptr_job = &udd_ep_job[ep - 1];
  401af8:	4690      	mov	r8, r2
  401afa:	009c      	lsls	r4, r3, #2
  401afc:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  401b00:	f504 3440 	add.w	r4, r4, #196608	; 0x30000
		if (Is_udd_any_bank_received(ep)) {
  401b04:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401b06:	f011 0f42 	tst.w	r1, #66	; 0x42
  401b0a:	f47f ae6d 	bne.w	4017e8 <UDP_Handler+0x3b4>
		if (Is_udd_in_sent(ep)) {
  401b0e:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401b10:	f011 0f01 	tst.w	r1, #1
  401b14:	f47f aeb2 	bne.w	40187c <UDP_Handler+0x448>
			}
			return true;
		}
		// Stall sent/CRC error
		if (Is_udd_stall(ep)) {
  401b18:	6b21      	ldr	r1, [r4, #48]	; 0x30
  401b1a:	f011 0f08 	tst.w	r1, #8
  401b1e:	d0de      	beq.n	401ade <UDP_Handler+0x6aa>
			udd_ack_stall(ep);
  401b20:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b22:	9316      	str	r3, [sp, #88]	; 0x58
  401b24:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401b26:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401b2a:	9316      	str	r3, [sp, #88]	; 0x58
  401b2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401b2e:	f023 0308 	bic.w	r3, r3, #8
  401b32:	9316      	str	r3, [sp, #88]	; 0x58
  401b34:	9b16      	ldr	r3, [sp, #88]	; 0x58
  401b36:	6323      	str	r3, [r4, #48]	; 0x30
  401b38:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b3a:	f013 0f08 	tst.w	r3, #8
  401b3e:	d1fb      	bne.n	401b38 <UDP_Handler+0x704>
			if (udd_get_endpoint_type(ep) == UDP_CSR_EPTYPE_ISO_OUT ||
  401b40:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b42:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  401b46:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
  401b4a:	f43f acc0 	beq.w	4014ce <UDP_Handler+0x9a>
				udd_get_endpoint_type(ep) == UDP_CSR_EPTYPE_ISO_IN) {
  401b4e:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401b50:	e4bd      	b.n	4014ce <UDP_Handler+0x9a>
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401b52:	4b22      	ldr	r3, [pc, #136]	; (401bdc <UDP_Handler+0x7a8>)
  401b54:	69db      	ldr	r3, [r3, #28]
  401b56:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  401b5a:	d050      	beq.n	401bfe <UDP_Handler+0x7ca>
		udd_ack_wakeups();
  401b5c:	4c1f      	ldr	r4, [pc, #124]	; (401bdc <UDP_Handler+0x7a8>)
  401b5e:	f44f 5318 	mov.w	r3, #9728	; 0x2600
  401b62:	6223      	str	r3, [r4, #32]
		udd_disable_wakeups();
  401b64:	6163      	str	r3, [r4, #20]
		udd_sleep_mode(true); // Enter in IDLE mode
  401b66:	2001      	movs	r0, #1
  401b68:	4b1f      	ldr	r3, [pc, #124]	; (401be8 <UDP_Handler+0x7b4>)
  401b6a:	4798      	blx	r3
		udd_ack_suspend();
  401b6c:	f44f 7380 	mov.w	r3, #256	; 0x100
  401b70:	6223      	str	r3, [r4, #32]
		udd_enable_suspend_interrupt();
  401b72:	6123      	str	r3, [r4, #16]
		udd_enable_sof_interrupt();
  401b74:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401b78:	6123      	str	r3, [r4, #16]
		goto udd_interrupt_end;
  401b7a:	e4a8      	b.n	4014ce <UDP_Handler+0x9a>
		udd_ack_suspend();
  401b7c:	4b17      	ldr	r3, [pc, #92]	; (401bdc <UDP_Handler+0x7a8>)
  401b7e:	f44f 7280 	mov.w	r2, #256	; 0x100
  401b82:	621a      	str	r2, [r3, #32]
		udd_disable_suspend_interrupt();
  401b84:	615a      	str	r2, [r3, #20]
		udd_enable_wake_up_interrupt();
  401b86:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  401b8a:	611a      	str	r2, [r3, #16]
		udd_enable_resume_interrupt();
  401b8c:	f44f 7200 	mov.w	r2, #512	; 0x200
  401b90:	611a      	str	r2, [r3, #16]
		udd_enable_ext_resume_interrupt();
  401b92:	f44f 6280 	mov.w	r2, #1024	; 0x400
  401b96:	611a      	str	r2, [r3, #16]
		udd_disable_periph_ck();
  401b98:	2022      	movs	r0, #34	; 0x22
  401b9a:	4b14      	ldr	r3, [pc, #80]	; (401bec <UDP_Handler+0x7b8>)
  401b9c:	4798      	blx	r3
		udd_sleep_mode(false); // Enter in SUSPEND mode
  401b9e:	2000      	movs	r0, #0
  401ba0:	4b11      	ldr	r3, [pc, #68]	; (401be8 <UDP_Handler+0x7b4>)
  401ba2:	4798      	blx	r3
		goto udd_interrupt_end;
  401ba4:	e493      	b.n	4014ce <UDP_Handler+0x9a>
	udd_ep_ack_out_received(ep);
  401ba6:	4630      	mov	r0, r6
  401ba8:	4b11      	ldr	r3, [pc, #68]	; (401bf0 <UDP_Handler+0x7bc>)
  401baa:	4798      	blx	r3
  401bac:	e652      	b.n	401854 <UDP_Handler+0x420>
		ptr_job->buf_cnt += nb_data;
  401bae:	eb07 0c87 	add.w	ip, r7, r7, lsl #2
  401bb2:	4b08      	ldr	r3, [pc, #32]	; (401bd4 <UDP_Handler+0x7a0>)
  401bb4:	eb03 038c 	add.w	r3, r3, ip, lsl #2
  401bb8:	f8c3 e00c 	str.w	lr, [r3, #12]
		for (i = 0; i < nb_data; i++) {
  401bbc:	2800      	cmp	r0, #0
  401bbe:	d0f2      	beq.n	401ba6 <UDP_Handler+0x772>
			b_full = true;
  401bc0:	f04f 0b01 	mov.w	fp, #1
  401bc4:	e637      	b.n	401836 <UDP_Handler+0x402>
	udd_ep_ack_out_received(ep);
  401bc6:	4630      	mov	r0, r6
  401bc8:	4b09      	ldr	r3, [pc, #36]	; (401bf0 <UDP_Handler+0x7bc>)
  401bca:	4798      	blx	r3
	if ((b_full || b_short) &&
  401bcc:	45ca      	cmp	sl, r9
  401bce:	f63f ae41 	bhi.w	401854 <UDP_Handler+0x420>
  401bd2:	e47c      	b.n	4014ce <UDP_Handler+0x9a>
  401bd4:	20000c48 	.word	0x20000c48
  401bd8:	200000a0 	.word	0x200000a0
  401bdc:	40034000 	.word	0x40034000
  401be0:	0040116d 	.word	0x0040116d
  401be4:	00401281 	.word	0x00401281
  401be8:	00400e79 	.word	0x00400e79
  401bec:	0040276d 	.word	0x0040276d
  401bf0:	004011ad 	.word	0x004011ad
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401bf4:	4b4b      	ldr	r3, [pc, #300]	; (401d24 <UDP_Handler+0x8f0>)
  401bf6:	699b      	ldr	r3, [r3, #24]
  401bf8:	f413 5f00 	tst.w	r3, #8192	; 0x2000
  401bfc:	d1a9      	bne.n	401b52 <UDP_Handler+0x71e>
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401bfe:	4b49      	ldr	r3, [pc, #292]	; (401d24 <UDP_Handler+0x8f0>)
  401c00:	699b      	ldr	r3, [r3, #24]
	if ((Is_udd_wake_up_interrupt_enabled() && Is_udd_wake_up()) ||
  401c02:	f413 7f00 	tst.w	r3, #512	; 0x200
  401c06:	d004      	beq.n	401c12 <UDP_Handler+0x7de>
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401c08:	4b46      	ldr	r3, [pc, #280]	; (401d24 <UDP_Handler+0x8f0>)
  401c0a:	69db      	ldr	r3, [r3, #28]
  401c0c:	f413 7f00 	tst.w	r3, #512	; 0x200
  401c10:	d1a4      	bne.n	401b5c <UDP_Handler+0x728>
		(Is_udd_ext_resume_interrupt_enabled() && Is_udd_ext_resume())) {
  401c12:	4b44      	ldr	r3, [pc, #272]	; (401d24 <UDP_Handler+0x8f0>)
  401c14:	699b      	ldr	r3, [r3, #24]
		(Is_udd_resume_interrupt_enabled() && Is_udd_resume()) ||
  401c16:	f413 6f80 	tst.w	r3, #1024	; 0x400
  401c1a:	d004      	beq.n	401c26 <UDP_Handler+0x7f2>
		(Is_udd_ext_resume_interrupt_enabled() && Is_udd_ext_resume())) {
  401c1c:	4b41      	ldr	r3, [pc, #260]	; (401d24 <UDP_Handler+0x8f0>)
  401c1e:	69db      	ldr	r3, [r3, #28]
  401c20:	f413 6f80 	tst.w	r3, #1024	; 0x400
  401c24:	d19a      	bne.n	401b5c <UDP_Handler+0x728>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
  401c26:	4b3f      	ldr	r3, [pc, #252]	; (401d24 <UDP_Handler+0x8f0>)
  401c28:	699b      	ldr	r3, [r3, #24]
  401c2a:	f413 7f80 	tst.w	r3, #256	; 0x100
  401c2e:	d004      	beq.n	401c3a <UDP_Handler+0x806>
  401c30:	4b3c      	ldr	r3, [pc, #240]	; (401d24 <UDP_Handler+0x8f0>)
  401c32:	69db      	ldr	r3, [r3, #28]
  401c34:	f413 7f80 	tst.w	r3, #256	; 0x100
  401c38:	d1a0      	bne.n	401b7c <UDP_Handler+0x748>
	if (Is_udd_reset()) {
  401c3a:	4b3a      	ldr	r3, [pc, #232]	; (401d24 <UDP_Handler+0x8f0>)
  401c3c:	69db      	ldr	r3, [r3, #28]
  401c3e:	f413 5f80 	tst.w	r3, #4096	; 0x1000
  401c42:	f43f ac44 	beq.w	4014ce <UDP_Handler+0x9a>
		udd_ack_reset();
  401c46:	4c37      	ldr	r4, [pc, #220]	; (401d24 <UDP_Handler+0x8f0>)
  401c48:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401c4c:	6223      	str	r3, [r4, #32]
		udd_ep_finish_job(&udd_ep_job[i], UDD_EP_TRANSFER_ABORT, i + 1);
  401c4e:	4e36      	ldr	r6, [pc, #216]	; (401d28 <UDP_Handler+0x8f4>)
  401c50:	2201      	movs	r2, #1
  401c52:	4611      	mov	r1, r2
  401c54:	4630      	mov	r0, r6
  401c56:	4d35      	ldr	r5, [pc, #212]	; (401d2c <UDP_Handler+0x8f8>)
  401c58:	47a8      	blx	r5
  401c5a:	2202      	movs	r2, #2
  401c5c:	2101      	movs	r1, #1
  401c5e:	f106 0014 	add.w	r0, r6, #20
  401c62:	47a8      	blx	r5
  401c64:	2203      	movs	r2, #3
  401c66:	2101      	movs	r1, #1
  401c68:	f106 0028 	add.w	r0, r6, #40	; 0x28
  401c6c:	47a8      	blx	r5
		udc_reset();
  401c6e:	4b30      	ldr	r3, [pc, #192]	; (401d30 <UDP_Handler+0x8fc>)
  401c70:	4798      	blx	r3
		udd_disable_address_state();
  401c72:	6863      	ldr	r3, [r4, #4]
  401c74:	f023 0301 	bic.w	r3, r3, #1
  401c78:	6063      	str	r3, [r4, #4]
		udd_disable_configured_state();
  401c7a:	6863      	ldr	r3, [r4, #4]
  401c7c:	f023 0302 	bic.w	r3, r3, #2
  401c80:	6063      	str	r3, [r4, #4]
	udd_enable_address();
  401c82:	68a3      	ldr	r3, [r4, #8]
  401c84:	f443 7380 	orr.w	r3, r3, #256	; 0x100
  401c88:	60a3      	str	r3, [r4, #8]
	udd_configure_address(0);
  401c8a:	68a3      	ldr	r3, [r4, #8]
  401c8c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401c90:	60a3      	str	r3, [r4, #8]
	udd_configure_endpoint(0, USB_EP_TYPE_CONTROL, 0);
  401c92:	6b23      	ldr	r3, [r4, #48]	; 0x30
  401c94:	9318      	str	r3, [sp, #96]	; 0x60
  401c96:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401c98:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401c9c:	9318      	str	r3, [sp, #96]	; 0x60
  401c9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401ca0:	f423 4307 	bic.w	r3, r3, #34560	; 0x8700
  401ca4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  401ca8:	9318      	str	r3, [sp, #96]	; 0x60
  401caa:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401cac:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  401cb0:	9318      	str	r3, [sp, #96]	; 0x60
  401cb2:	9b18      	ldr	r3, [sp, #96]	; 0x60
  401cb4:	6323      	str	r3, [r4, #48]	; 0x30
  401cb6:	4622      	mov	r2, r4
  401cb8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401cba:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  401cbe:	d0fb      	beq.n	401cb8 <UDP_Handler+0x884>
	udd_enable_endpoint(0);
  401cc0:	4a18      	ldr	r2, [pc, #96]	; (401d24 <UDP_Handler+0x8f0>)
  401cc2:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401cc4:	9319      	str	r3, [sp, #100]	; 0x64
  401cc6:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401cc8:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  401ccc:	9319      	str	r3, [sp, #100]	; 0x64
  401cce:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401cd0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  401cd4:	9319      	str	r3, [sp, #100]	; 0x64
  401cd6:	9b19      	ldr	r3, [sp, #100]	; 0x64
  401cd8:	6313      	str	r3, [r2, #48]	; 0x30
  401cda:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401cdc:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  401ce0:	d0fb      	beq.n	401cda <UDP_Handler+0x8a6>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401ce2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401ce6:	fab3 f383 	clz	r3, r3
  401cea:	095b      	lsrs	r3, r3, #5
  401cec:	9317      	str	r3, [sp, #92]	; 0x5c
  __ASM volatile ("cpsid i" : : : "memory");
  401cee:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401cf0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401cf4:	2200      	movs	r2, #0
  401cf6:	4b0f      	ldr	r3, [pc, #60]	; (401d34 <UDP_Handler+0x900>)
  401cf8:	701a      	strb	r2, [r3, #0]
	return flags;
  401cfa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
	udd_enable_endpoint_interrupt(0);
  401cfc:	2101      	movs	r1, #1
  401cfe:	4a09      	ldr	r2, [pc, #36]	; (401d24 <UDP_Handler+0x8f0>)
  401d00:	6111      	str	r1, [r2, #16]
	if (cpu_irq_is_enabled_flags(flags))
  401d02:	b123      	cbz	r3, 401d0e <UDP_Handler+0x8da>
		cpu_irq_enable();
  401d04:	4b0b      	ldr	r3, [pc, #44]	; (401d34 <UDP_Handler+0x900>)
  401d06:	7019      	strb	r1, [r3, #0]
  401d08:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401d0c:	b662      	cpsie	i
		udd_ctrl_init();
  401d0e:	4b0a      	ldr	r3, [pc, #40]	; (401d38 <UDP_Handler+0x904>)
  401d10:	4798      	blx	r3
		udd_enable_suspend_interrupt();
  401d12:	4b04      	ldr	r3, [pc, #16]	; (401d24 <UDP_Handler+0x8f0>)
  401d14:	f44f 7280 	mov.w	r2, #256	; 0x100
  401d18:	611a      	str	r2, [r3, #16]
		udd_enable_sof_interrupt();
  401d1a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401d1e:	611a      	str	r2, [r3, #16]
		goto udd_interrupt_end;
  401d20:	f7ff bbd5 	b.w	4014ce <UDP_Handler+0x9a>
  401d24:	40034000 	.word	0x40034000
  401d28:	20000c48 	.word	0x20000c48
  401d2c:	0040116d 	.word	0x0040116d
  401d30:	004008e5 	.word	0x004008e5
  401d34:	200000a0 	.word	0x200000a0
  401d38:	00400f1d 	.word	0x00400f1d

00401d3c <udd_attach>:
{
  401d3c:	b510      	push	{r4, lr}
  401d3e:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401d40:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401d44:	fab3 f383 	clz	r3, r3
  401d48:	095b      	lsrs	r3, r3, #5
  401d4a:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401d4c:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401d4e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401d52:	2200      	movs	r2, #0
  401d54:	4b14      	ldr	r3, [pc, #80]	; (401da8 <udd_attach+0x6c>)
  401d56:	701a      	strb	r2, [r3, #0]
	return flags;
  401d58:	9c01      	ldr	r4, [sp, #4]
	udd_sleep_mode(true);
  401d5a:	2001      	movs	r0, #1
  401d5c:	4b13      	ldr	r3, [pc, #76]	; (401dac <udd_attach+0x70>)
  401d5e:	4798      	blx	r3
	udd_enable_periph_ck();
  401d60:	2022      	movs	r0, #34	; 0x22
  401d62:	4b13      	ldr	r3, [pc, #76]	; (401db0 <udd_attach+0x74>)
  401d64:	4798      	blx	r3
	udd_enable_transceiver();
  401d66:	4b13      	ldr	r3, [pc, #76]	; (401db4 <udd_attach+0x78>)
  401d68:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401d6a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  401d6e:	675a      	str	r2, [r3, #116]	; 0x74
	udd_attach_device();
  401d70:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  401d72:	f442 7200 	orr.w	r2, r2, #512	; 0x200
  401d76:	675a      	str	r2, [r3, #116]	; 0x74
	udd_enable_suspend_interrupt();
  401d78:	f44f 7280 	mov.w	r2, #256	; 0x100
  401d7c:	611a      	str	r2, [r3, #16]
	udd_enable_wake_up_interrupt();
  401d7e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  401d82:	611a      	str	r2, [r3, #16]
	udd_enable_resume_interrupt();
  401d84:	f44f 7200 	mov.w	r2, #512	; 0x200
  401d88:	611a      	str	r2, [r3, #16]
	udd_enable_ext_resume_interrupt();
  401d8a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  401d8e:	611a      	str	r2, [r3, #16]
	udd_enable_sof_interrupt();
  401d90:	f44f 6200 	mov.w	r2, #2048	; 0x800
  401d94:	611a      	str	r2, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  401d96:	b12c      	cbz	r4, 401da4 <udd_attach+0x68>
		cpu_irq_enable();
  401d98:	2201      	movs	r2, #1
  401d9a:	4b03      	ldr	r3, [pc, #12]	; (401da8 <udd_attach+0x6c>)
  401d9c:	701a      	strb	r2, [r3, #0]
  401d9e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401da2:	b662      	cpsie	i
}
  401da4:	b002      	add	sp, #8
  401da6:	bd10      	pop	{r4, pc}
  401da8:	200000a0 	.word	0x200000a0
  401dac:	00400e79 	.word	0x00400e79
  401db0:	00402719 	.word	0x00402719
  401db4:	40034000 	.word	0x40034000

00401db8 <udd_enable>:
{
  401db8:	b530      	push	{r4, r5, lr}
  401dba:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401dbc:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401dc0:	fab3 f383 	clz	r3, r3
  401dc4:	095b      	lsrs	r3, r3, #5
  401dc6:	9300      	str	r3, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  401dc8:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401dca:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401dce:	2400      	movs	r4, #0
  401dd0:	4b27      	ldr	r3, [pc, #156]	; (401e70 <udd_enable+0xb8>)
  401dd2:	701c      	strb	r4, [r3, #0]
	return flags;
  401dd4:	9d00      	ldr	r5, [sp, #0]
	udd_enable_periph_ck();
  401dd6:	2022      	movs	r0, #34	; 0x22
  401dd8:	4b26      	ldr	r3, [pc, #152]	; (401e74 <udd_enable+0xbc>)
  401dda:	4798      	blx	r3
	sysclk_enable_usb();
  401ddc:	4b26      	ldr	r3, [pc, #152]	; (401e78 <udd_enable+0xc0>)
  401dde:	4798      	blx	r3
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  401de0:	4b26      	ldr	r3, [pc, #152]	; (401e7c <udd_enable+0xc4>)
  401de2:	2250      	movs	r2, #80	; 0x50
  401de4:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401de8:	2204      	movs	r2, #4
  401dea:	605a      	str	r2, [r3, #4]
  401dec:	4623      	mov	r3, r4
		udd_ep_job[i].bank = 0;
  401dee:	4824      	ldr	r0, [pc, #144]	; (401e80 <udd_enable+0xc8>)
  401df0:	009a      	lsls	r2, r3, #2
  401df2:	18d1      	adds	r1, r2, r3
  401df4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  401df8:	7c49      	ldrb	r1, [r1, #17]
		udd_ep_job[i].b_buf_end = false;
  401dfa:	441a      	add	r2, r3
  401dfc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  401e00:	f001 0183 	and.w	r1, r1, #131	; 0x83
  401e04:	f36f 11c7 	bfc	r1, #7, #1
  401e08:	7451      	strb	r1, [r2, #17]
  401e0a:	3301      	adds	r3, #1
	for (i = 0; i < USB_DEVICE_MAX_EP; i++) {
  401e0c:	2b03      	cmp	r3, #3
  401e0e:	d1ef      	bne.n	401df0 <udd_enable+0x38>
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
  401e10:	f44f 2080 	mov.w	r0, #262144	; 0x40000
  401e14:	4b1b      	ldr	r3, [pc, #108]	; (401e84 <udd_enable+0xcc>)
  401e16:	4798      	blx	r3
	udd_b_idle = false;
  401e18:	2200      	movs	r2, #0
  401e1a:	4b1b      	ldr	r3, [pc, #108]	; (401e88 <udd_enable+0xd0>)
  401e1c:	701a      	strb	r2, [r3, #0]
	if(sleepmgr_locks[mode] >= 0xff) {
  401e1e:	4b1b      	ldr	r3, [pc, #108]	; (401e8c <udd_enable+0xd4>)
  401e20:	781b      	ldrb	r3, [r3, #0]
  401e22:	2bff      	cmp	r3, #255	; 0xff
  401e24:	d022      	beq.n	401e6c <udd_enable+0xb4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  401e26:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401e2a:	fab3 f383 	clz	r3, r3
  401e2e:	095b      	lsrs	r3, r3, #5
  401e30:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401e32:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  401e34:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401e38:	2200      	movs	r2, #0
  401e3a:	4b0d      	ldr	r3, [pc, #52]	; (401e70 <udd_enable+0xb8>)
  401e3c:	701a      	strb	r2, [r3, #0]
	return flags;
  401e3e:	9901      	ldr	r1, [sp, #4]
	++sleepmgr_locks[mode];
  401e40:	4a12      	ldr	r2, [pc, #72]	; (401e8c <udd_enable+0xd4>)
  401e42:	7813      	ldrb	r3, [r2, #0]
  401e44:	3301      	adds	r3, #1
  401e46:	7013      	strb	r3, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
  401e48:	b129      	cbz	r1, 401e56 <udd_enable+0x9e>
		cpu_irq_enable();
  401e4a:	2201      	movs	r2, #1
  401e4c:	4b08      	ldr	r3, [pc, #32]	; (401e70 <udd_enable+0xb8>)
  401e4e:	701a      	strb	r2, [r3, #0]
  401e50:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401e54:	b662      	cpsie	i
	udd_attach();
  401e56:	4b0e      	ldr	r3, [pc, #56]	; (401e90 <udd_enable+0xd8>)
  401e58:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
  401e5a:	b12d      	cbz	r5, 401e68 <udd_enable+0xb0>
		cpu_irq_enable();
  401e5c:	2201      	movs	r2, #1
  401e5e:	4b04      	ldr	r3, [pc, #16]	; (401e70 <udd_enable+0xb8>)
  401e60:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  401e62:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401e66:	b662      	cpsie	i
}
  401e68:	b003      	add	sp, #12
  401e6a:	bd30      	pop	{r4, r5, pc}
  401e6c:	e7fe      	b.n	401e6c <udd_enable+0xb4>
  401e6e:	bf00      	nop
  401e70:	200000a0 	.word	0x200000a0
  401e74:	00402719 	.word	0x00402719
  401e78:	00402539 	.word	0x00402539
  401e7c:	e000e100 	.word	0xe000e100
  401e80:	20000c48 	.word	0x20000c48
  401e84:	004027e1 	.word	0x004027e1
  401e88:	20000c41 	.word	0x20000c41
  401e8c:	20000cc0 	.word	0x20000cc0
  401e90:	00401d3d 	.word	0x00401d3d

00401e94 <udd_is_high_speed>:
}
  401e94:	2000      	movs	r0, #0
  401e96:	4770      	bx	lr

00401e98 <udd_set_address>:
	udd_disable_address_state();
  401e98:	4b0d      	ldr	r3, [pc, #52]	; (401ed0 <udd_set_address+0x38>)
  401e9a:	685a      	ldr	r2, [r3, #4]
  401e9c:	f022 0201 	bic.w	r2, r2, #1
  401ea0:	605a      	str	r2, [r3, #4]
	udd_disable_address();
  401ea2:	689a      	ldr	r2, [r3, #8]
  401ea4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
  401ea8:	609a      	str	r2, [r3, #8]
	if (address) {
  401eaa:	4602      	mov	r2, r0
  401eac:	b170      	cbz	r0, 401ecc <udd_set_address+0x34>
		udd_configure_address(address);
  401eae:	6898      	ldr	r0, [r3, #8]
  401eb0:	f020 007f 	bic.w	r0, r0, #127	; 0x7f
  401eb4:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  401eb8:	4310      	orrs	r0, r2
  401eba:	6098      	str	r0, [r3, #8]
		udd_enable_address();
  401ebc:	689a      	ldr	r2, [r3, #8]
  401ebe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
  401ec2:	609a      	str	r2, [r3, #8]
		udd_enable_address_state();
  401ec4:	685a      	ldr	r2, [r3, #4]
  401ec6:	f042 0201 	orr.w	r2, r2, #1
  401eca:	605a      	str	r2, [r3, #4]
  401ecc:	4770      	bx	lr
  401ece:	bf00      	nop
  401ed0:	40034000 	.word	0x40034000

00401ed4 <udd_getaddress>:
	if (Is_udd_address_state_enabled())
  401ed4:	4b05      	ldr	r3, [pc, #20]	; (401eec <udd_getaddress+0x18>)
  401ed6:	685b      	ldr	r3, [r3, #4]
  401ed8:	f013 0f01 	tst.w	r3, #1
		return udd_get_configured_address();
  401edc:	bf1d      	ittte	ne
  401ede:	4b03      	ldrne	r3, [pc, #12]	; (401eec <udd_getaddress+0x18>)
  401ee0:	6898      	ldrne	r0, [r3, #8]
  401ee2:	f000 007f 	andne.w	r0, r0, #127	; 0x7f
	return 0;
  401ee6:	2000      	moveq	r0, #0
}
  401ee8:	4770      	bx	lr
  401eea:	bf00      	nop
  401eec:	40034000 	.word	0x40034000

00401ef0 <udd_get_frame_number>:
	return udd_frame_number();
  401ef0:	4b02      	ldr	r3, [pc, #8]	; (401efc <udd_get_frame_number+0xc>)
  401ef2:	6818      	ldr	r0, [r3, #0]
}
  401ef4:	f3c0 000a 	ubfx	r0, r0, #0, #11
  401ef8:	4770      	bx	lr
  401efa:	bf00      	nop
  401efc:	40034000 	.word	0x40034000

00401f00 <udd_get_micro_frame_number>:
}
  401f00:	2000      	movs	r0, #0
  401f02:	4770      	bx	lr

00401f04 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
  401f04:	4b01      	ldr	r3, [pc, #4]	; (401f0c <udd_set_setup_payload+0x8>)
  401f06:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
  401f08:	8199      	strh	r1, [r3, #12]
  401f0a:	4770      	bx	lr
  401f0c:	20000cc8 	.word	0x20000cc8

00401f10 <udd_ep_alloc>:
{
  401f10:	b5f0      	push	{r4, r5, r6, r7, lr}
  401f12:	b083      	sub	sp, #12
	ep = ep & USB_EP_ADDR_MASK;
  401f14:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
  401f18:	2c03      	cmp	r4, #3
  401f1a:	d867      	bhi.n	401fec <udd_ep_alloc+0xdc>
  401f1c:	00a3      	lsls	r3, r4, #2
  401f1e:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  401f22:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
	if (Is_udd_endpoint_enabled(ep)) {
  401f26:	6b1d      	ldr	r5, [r3, #48]	; 0x30
  401f28:	f415 4f00 	tst.w	r5, #32768	; 0x8000
  401f2c:	d161      	bne.n	401ff2 <udd_ep_alloc+0xe2>
	if (b_iso && (!udd_is_endpoint_support_iso(ep))) {
  401f2e:	f001 0503 	and.w	r5, r1, #3
  401f32:	2d01      	cmp	r5, #1
  401f34:	d050      	beq.n	401fd8 <udd_ep_alloc+0xc8>
	if (MaxEndpointSize > udd_get_endpoint_size_max(ep)) {
  401f36:	1f25      	subs	r5, r4, #4
  401f38:	b2ed      	uxtb	r5, r5
  401f3a:	2d02      	cmp	r5, #2
  401f3c:	bf34      	ite	cc
  401f3e:	f44f 7500 	movcc.w	r5, #512	; 0x200
  401f42:	2540      	movcs	r5, #64	; 0x40
  401f44:	4295      	cmp	r5, r2
  401f46:	db58      	blt.n	401ffa <udd_ep_alloc+0xea>
  401f48:	b240      	sxtb	r0, r0
	ptr_job = &udd_ep_job[ep - 1];
  401f4a:	1e66      	subs	r6, r4, #1
	ptr_job->size = MaxEndpointSize;
  401f4c:	eb06 0786 	add.w	r7, r6, r6, lsl #2
  401f50:	4d2b      	ldr	r5, [pc, #172]	; (402000 <udd_ep_alloc+0xf0>)
  401f52:	eb05 0587 	add.w	r5, r5, r7, lsl #2
  401f56:	f105 0710 	add.w	r7, r5, #16
  401f5a:	f8b5 e010 	ldrh.w	lr, [r5, #16]
  401f5e:	f362 0e09 	bfi	lr, r2, #0, #10
  401f62:	f8a5 e010 	strh.w	lr, [r5, #16]
	ptr_job->b_buf_end = false;
  401f66:	7c6a      	ldrb	r2, [r5, #17]
	ptr_job->b_stall_requested = false;
  401f68:	f002 027f 	and.w	r2, r2, #127	; 0x7f
  401f6c:	f36f 1245 	bfc	r2, #5, #1
  401f70:	746a      	strb	r2, [r5, #17]
	if (b_dir_in) {
  401f72:	2800      	cmp	r0, #0
  401f74:	db35      	blt.n	401fe2 <udd_ep_alloc+0xd2>
	udd_reset_endpoint(ep);
  401f76:	4e23      	ldr	r6, [pc, #140]	; (402004 <udd_ep_alloc+0xf4>)
  401f78:	6ab5      	ldr	r5, [r6, #40]	; 0x28
  401f7a:	2201      	movs	r2, #1
  401f7c:	fa02 f404 	lsl.w	r4, r2, r4
  401f80:	4325      	orrs	r5, r4
  401f82:	62b5      	str	r5, [r6, #40]	; 0x28
  401f84:	4635      	mov	r5, r6
  401f86:	6aaa      	ldr	r2, [r5, #40]	; 0x28
  401f88:	4214      	tst	r4, r2
  401f8a:	d0fc      	beq.n	401f86 <udd_ep_alloc+0x76>
  401f8c:	4d1d      	ldr	r5, [pc, #116]	; (402004 <udd_ep_alloc+0xf4>)
  401f8e:	6aaa      	ldr	r2, [r5, #40]	; 0x28
  401f90:	ea22 0404 	bic.w	r4, r2, r4
  401f94:	62ac      	str	r4, [r5, #40]	; 0x28
	udd_configure_endpoint(ep,
  401f96:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401f98:	9201      	str	r2, [sp, #4]
  401f9a:	9a01      	ldr	r2, [sp, #4]
  401f9c:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  401fa0:	9201      	str	r2, [sp, #4]
  401fa2:	9a01      	ldr	r2, [sp, #4]
  401fa4:	f422 4207 	bic.w	r2, r2, #34560	; 0x8700
  401fa8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
  401fac:	9201      	str	r2, [sp, #4]
  401fae:	2800      	cmp	r0, #0
  401fb0:	ea4f 2201 	mov.w	r2, r1, lsl #8
  401fb4:	f402 7240 	and.w	r2, r2, #768	; 0x300
  401fb8:	bfb4      	ite	lt
  401fba:	f442 4204 	orrlt.w	r2, r2, #33792	; 0x8400
  401fbe:	f442 4200 	orrge.w	r2, r2, #32768	; 0x8000
  401fc2:	9901      	ldr	r1, [sp, #4]
  401fc4:	4311      	orrs	r1, r2
  401fc6:	9101      	str	r1, [sp, #4]
  401fc8:	9901      	ldr	r1, [sp, #4]
  401fca:	6319      	str	r1, [r3, #48]	; 0x30
  401fcc:	6b19      	ldr	r1, [r3, #48]	; 0x30
  401fce:	ea32 0101 	bics.w	r1, r2, r1
  401fd2:	d1fb      	bne.n	401fcc <udd_ep_alloc+0xbc>
	return true;
  401fd4:	2001      	movs	r0, #1
  401fd6:	e00a      	b.n	401fee <udd_ep_alloc+0xde>
	if (b_iso && (!udd_is_endpoint_support_iso(ep))) {
  401fd8:	b16c      	cbz	r4, 401ff6 <udd_ep_alloc+0xe6>
  401fda:	2c03      	cmp	r4, #3
  401fdc:	d1ab      	bne.n	401f36 <udd_ep_alloc+0x26>
		return false;
  401fde:	2000      	movs	r0, #0
  401fe0:	e005      	b.n	401fee <udd_ep_alloc+0xde>
		ptr_job->bank = 0;
  401fe2:	787a      	ldrb	r2, [r7, #1]
  401fe4:	f36f 0283 	bfc	r2, #2, #2
  401fe8:	707a      	strb	r2, [r7, #1]
  401fea:	e7c4      	b.n	401f76 <udd_ep_alloc+0x66>
		return false;
  401fec:	2000      	movs	r0, #0
}
  401fee:	b003      	add	sp, #12
  401ff0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false;
  401ff2:	2000      	movs	r0, #0
  401ff4:	e7fb      	b.n	401fee <udd_ep_alloc+0xde>
		return false;
  401ff6:	2000      	movs	r0, #0
  401ff8:	e7f9      	b.n	401fee <udd_ep_alloc+0xde>
		return false;
  401ffa:	2000      	movs	r0, #0
  401ffc:	e7f7      	b.n	401fee <udd_ep_alloc+0xde>
  401ffe:	bf00      	nop
  402000:	20000c48 	.word	0x20000c48
  402004:	40034000 	.word	0x40034000

00402008 <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  402008:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  40200c:	2a03      	cmp	r2, #3
  40200e:	d822      	bhi.n	402056 <udd_ep_free+0x4e>
{
  402010:	b500      	push	{lr}
  402012:	b083      	sub	sp, #12
  402014:	0091      	lsls	r1, r2, #2
  402016:	f101 2140 	add.w	r1, r1, #1073758208	; 0x40004000
  40201a:	f501 3140 	add.w	r1, r1, #196608	; 0x30000
	udd_disable_endpoint(ep_index);
  40201e:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  402020:	9301      	str	r3, [sp, #4]
  402022:	9b01      	ldr	r3, [sp, #4]
  402024:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  402028:	9301      	str	r3, [sp, #4]
  40202a:	9b01      	ldr	r3, [sp, #4]
  40202c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
  402030:	9301      	str	r3, [sp, #4]
  402032:	9b01      	ldr	r3, [sp, #4]
  402034:	630b      	str	r3, [r1, #48]	; 0x30
  402036:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  402038:	f413 4f00 	tst.w	r3, #32768	; 0x8000
  40203c:	d1fb      	bne.n	402036 <udd_ep_free+0x2e>
	udd_ep_finish_job(&udd_ep_job[ep - 1], UDD_EP_TRANSFER_ABORT, ep);
  40203e:	1e50      	subs	r0, r2, #1
  402040:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402044:	2101      	movs	r1, #1
  402046:	4b04      	ldr	r3, [pc, #16]	; (402058 <udd_ep_free+0x50>)
  402048:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  40204c:	4b03      	ldr	r3, [pc, #12]	; (40205c <udd_ep_free+0x54>)
  40204e:	4798      	blx	r3
}
  402050:	b003      	add	sp, #12
  402052:	f85d fb04 	ldr.w	pc, [sp], #4
  402056:	4770      	bx	lr
  402058:	20000c48 	.word	0x20000c48
  40205c:	0040116d 	.word	0x0040116d

00402060 <udd_ep_is_halted>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  402060:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  402064:	2803      	cmp	r0, #3
  402066:	d815      	bhi.n	402094 <udd_ep_is_halted+0x34>
	return ptr_job->b_stall_requested ||
  402068:	1e43      	subs	r3, r0, #1
  40206a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  40206e:	4a0a      	ldr	r2, [pc, #40]	; (402098 <udd_ep_is_halted+0x38>)
  402070:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  402074:	7c5b      	ldrb	r3, [r3, #17]
  402076:	f013 0f20 	tst.w	r3, #32
  40207a:	d109      	bne.n	402090 <udd_ep_is_halted+0x30>
			Is_udd_endpoint_stall_pending(ep & USB_EP_ADDR_MASK);
  40207c:	300c      	adds	r0, #12
  40207e:	4b07      	ldr	r3, [pc, #28]	; (40209c <udd_ep_is_halted+0x3c>)
  402080:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
	return ptr_job->b_stall_requested ||
  402084:	f013 0f28 	tst.w	r3, #40	; 0x28
  402088:	bf14      	ite	ne
  40208a:	2001      	movne	r0, #1
  40208c:	2000      	moveq	r0, #0
  40208e:	4770      	bx	lr
  402090:	2001      	movs	r0, #1
  402092:	4770      	bx	lr
		return false;
  402094:	2000      	movs	r0, #0
}
  402096:	4770      	bx	lr
  402098:	20000c48 	.word	0x20000c48
  40209c:	40034000 	.word	0x40034000

004020a0 <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
  4020a0:	f000 010f 	and.w	r1, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
  4020a4:	2903      	cmp	r1, #3
  4020a6:	d85f      	bhi.n	402168 <udd_ep_set_halt+0xc8>
{
  4020a8:	b410      	push	{r4}
  4020aa:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4020ac:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4020b0:	fab3 f383 	clz	r3, r3
  4020b4:	095b      	lsrs	r3, r3, #5
  4020b6:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4020b8:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4020ba:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4020be:	2200      	movs	r2, #0
  4020c0:	4b2c      	ldr	r3, [pc, #176]	; (402174 <udd_ep_set_halt+0xd4>)
  4020c2:	701a      	strb	r2, [r3, #0]
	return flags;
  4020c4:	9c01      	ldr	r4, [sp, #4]
	if (b_dir_in && (Is_udd_transmit_ready(ep_index)
  4020c6:	f010 0f80 	tst.w	r0, #128	; 0x80
  4020ca:	d124      	bne.n	402116 <udd_ep_set_halt+0x76>
  4020cc:	008a      	lsls	r2, r1, #2
  4020ce:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
  4020d2:	f502 3240 	add.w	r2, r2, #196608	; 0x30000
		udd_enable_stall_handshake(ep_index);
  4020d6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4020d8:	9300      	str	r3, [sp, #0]
  4020da:	9b00      	ldr	r3, [sp, #0]
  4020dc:	f043 034f 	orr.w	r3, r3, #79	; 0x4f
  4020e0:	9300      	str	r3, [sp, #0]
  4020e2:	9b00      	ldr	r3, [sp, #0]
  4020e4:	f043 0320 	orr.w	r3, r3, #32
  4020e8:	9300      	str	r3, [sp, #0]
  4020ea:	9b00      	ldr	r3, [sp, #0]
  4020ec:	6313      	str	r3, [r2, #48]	; 0x30
  4020ee:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4020f0:	f013 0f20 	tst.w	r3, #32
  4020f4:	d0fb      	beq.n	4020ee <udd_ep_set_halt+0x4e>
		udd_enable_endpoint_interrupt(ep_index);
  4020f6:	2301      	movs	r3, #1
  4020f8:	fa03 f101 	lsl.w	r1, r3, r1
  4020fc:	4b1e      	ldr	r3, [pc, #120]	; (402178 <udd_ep_set_halt+0xd8>)
  4020fe:	6119      	str	r1, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  402100:	2c00      	cmp	r4, #0
  402102:	d035      	beq.n	402170 <udd_ep_set_halt+0xd0>
		cpu_irq_enable();
  402104:	2001      	movs	r0, #1
  402106:	4b1b      	ldr	r3, [pc, #108]	; (402174 <udd_ep_set_halt+0xd4>)
  402108:	7018      	strb	r0, [r3, #0]
  40210a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40210e:	b662      	cpsie	i
}
  402110:	b003      	add	sp, #12
  402112:	bc10      	pop	{r4}
  402114:	4770      	bx	lr
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
  402116:	1e4b      	subs	r3, r1, #1
	if (b_dir_in && (Is_udd_transmit_ready(ep_index)
  402118:	f101 020c 	add.w	r2, r1, #12
  40211c:	4816      	ldr	r0, [pc, #88]	; (402178 <udd_ep_set_halt+0xd8>)
  40211e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  402122:	f012 0f10 	tst.w	r2, #16
  402126:	d109      	bne.n	40213c <udd_ep_set_halt+0x9c>
				|| ptr_job->bank > 1)) {
  402128:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  40212c:	4813      	ldr	r0, [pc, #76]	; (40217c <udd_ep_set_halt+0xdc>)
  40212e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
  402132:	7c52      	ldrb	r2, [r2, #17]
  402134:	f3c2 0281 	ubfx	r2, r2, #2, #2
  402138:	2a01      	cmp	r2, #1
  40213a:	ddc7      	ble.n	4020cc <udd_ep_set_halt+0x2c>
		ptr_job->b_stall_requested = true;
  40213c:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  402140:	4b0e      	ldr	r3, [pc, #56]	; (40217c <udd_ep_set_halt+0xdc>)
  402142:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  402146:	7c5a      	ldrb	r2, [r3, #17]
  402148:	f042 0220 	orr.w	r2, r2, #32
  40214c:	745a      	strb	r2, [r3, #17]
		udd_enable_endpoint_interrupt(ep_index);
  40214e:	2301      	movs	r3, #1
  402150:	fa03 f101 	lsl.w	r1, r3, r1
  402154:	4b08      	ldr	r3, [pc, #32]	; (402178 <udd_ep_set_halt+0xd8>)
  402156:	6119      	str	r1, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
  402158:	b144      	cbz	r4, 40216c <udd_ep_set_halt+0xcc>
		cpu_irq_enable();
  40215a:	2001      	movs	r0, #1
  40215c:	4b05      	ldr	r3, [pc, #20]	; (402174 <udd_ep_set_halt+0xd4>)
  40215e:	7018      	strb	r0, [r3, #0]
  __ASM volatile ("dmb 0xF":::"memory");
  402160:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402164:	b662      	cpsie	i
  402166:	e7d3      	b.n	402110 <udd_ep_set_halt+0x70>
		return false;
  402168:	2000      	movs	r0, #0
  40216a:	4770      	bx	lr
		return true;
  40216c:	2001      	movs	r0, #1
  40216e:	e7cf      	b.n	402110 <udd_ep_set_halt+0x70>
	return true;
  402170:	2001      	movs	r0, #1
  402172:	e7cd      	b.n	402110 <udd_ep_set_halt+0x70>
  402174:	200000a0 	.word	0x200000a0
  402178:	40034000 	.word	0x40034000
  40217c:	20000c48 	.word	0x20000c48

00402180 <udd_ep_clear_halt>:
	ep &= USB_EP_ADDR_MASK;
  402180:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
  402184:	2803      	cmp	r0, #3
  402186:	d85e      	bhi.n	402246 <udd_ep_clear_halt+0xc6>
{
  402188:	b530      	push	{r4, r5, lr}
  40218a:	b083      	sub	sp, #12
	ptr_job = &udd_ep_job[ep - 1];
  40218c:	1e44      	subs	r4, r0, #1
	ptr_job->b_stall_requested = false;
  40218e:	eb04 0284 	add.w	r2, r4, r4, lsl #2
  402192:	4b2f      	ldr	r3, [pc, #188]	; (402250 <udd_ep_clear_halt+0xd0>)
  402194:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  402198:	7c5a      	ldrb	r2, [r3, #17]
  40219a:	f36f 1245 	bfc	r2, #5, #1
  40219e:	745a      	strb	r2, [r3, #17]
  4021a0:	0083      	lsls	r3, r0, #2
  4021a2:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  4021a6:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
	if (Is_udd_endpoint_stall_requested(ep)) {
  4021aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4021ac:	f012 0f20 	tst.w	r2, #32
  4021b0:	d04b      	beq.n	40224a <udd_ep_clear_halt+0xca>
		udd_disable_stall_handshake(ep);
  4021b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4021b4:	9200      	str	r2, [sp, #0]
  4021b6:	9a00      	ldr	r2, [sp, #0]
  4021b8:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4021bc:	9200      	str	r2, [sp, #0]
  4021be:	9a00      	ldr	r2, [sp, #0]
  4021c0:	f022 0220 	bic.w	r2, r2, #32
  4021c4:	9200      	str	r2, [sp, #0]
  4021c6:	9a00      	ldr	r2, [sp, #0]
  4021c8:	631a      	str	r2, [r3, #48]	; 0x30
  4021ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4021cc:	f012 0f20 	tst.w	r2, #32
  4021d0:	d1fb      	bne.n	4021ca <udd_ep_clear_halt+0x4a>
		udd_reset_endpoint(ep);
  4021d2:	4d20      	ldr	r5, [pc, #128]	; (402254 <udd_ep_clear_halt+0xd4>)
  4021d4:	6aa9      	ldr	r1, [r5, #40]	; 0x28
  4021d6:	2201      	movs	r2, #1
  4021d8:	fa02 f000 	lsl.w	r0, r2, r0
  4021dc:	4301      	orrs	r1, r0
  4021de:	62a9      	str	r1, [r5, #40]	; 0x28
  4021e0:	4629      	mov	r1, r5
  4021e2:	6a8a      	ldr	r2, [r1, #40]	; 0x28
  4021e4:	4210      	tst	r0, r2
  4021e6:	d0fc      	beq.n	4021e2 <udd_ep_clear_halt+0x62>
  4021e8:	491a      	ldr	r1, [pc, #104]	; (402254 <udd_ep_clear_halt+0xd4>)
  4021ea:	6a8a      	ldr	r2, [r1, #40]	; 0x28
  4021ec:	ea22 0000 	bic.w	r0, r2, r0
  4021f0:	6288      	str	r0, [r1, #40]	; 0x28
		udd_ack_stall(ep);
  4021f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4021f4:	9201      	str	r2, [sp, #4]
  4021f6:	9a01      	ldr	r2, [sp, #4]
  4021f8:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4021fc:	9201      	str	r2, [sp, #4]
  4021fe:	9a01      	ldr	r2, [sp, #4]
  402200:	f022 0208 	bic.w	r2, r2, #8
  402204:	9201      	str	r2, [sp, #4]
  402206:	9a01      	ldr	r2, [sp, #4]
  402208:	631a      	str	r2, [r3, #48]	; 0x30
  40220a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40220c:	f012 0f08 	tst.w	r2, #8
  402210:	d1fb      	bne.n	40220a <udd_ep_clear_halt+0x8a>
		if (ptr_job->busy == true) {
  402212:	eb04 0384 	add.w	r3, r4, r4, lsl #2
  402216:	4a0e      	ldr	r2, [pc, #56]	; (402250 <udd_ep_clear_halt+0xd0>)
  402218:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40221c:	7c5b      	ldrb	r3, [r3, #17]
  40221e:	f013 0f10 	tst.w	r3, #16
  402222:	d101      	bne.n	402228 <udd_ep_clear_halt+0xa8>
	return true;
  402224:	2001      	movs	r0, #1
  402226:	e011      	b.n	40224c <udd_ep_clear_halt+0xcc>
			ptr_job->busy = false;
  402228:	4611      	mov	r1, r2
  40222a:	00a2      	lsls	r2, r4, #2
  40222c:	1913      	adds	r3, r2, r4
  40222e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  402232:	7c58      	ldrb	r0, [r3, #17]
  402234:	f36f 1004 	bfc	r0, #4, #1
  402238:	7458      	strb	r0, [r3, #17]
			ptr_job->call_nohalt();
  40223a:	4414      	add	r4, r2
  40223c:	f851 3024 	ldr.w	r3, [r1, r4, lsl #2]
  402240:	4798      	blx	r3
	return true;
  402242:	2001      	movs	r0, #1
  402244:	e002      	b.n	40224c <udd_ep_clear_halt+0xcc>
		return false;
  402246:	2000      	movs	r0, #0
  402248:	4770      	bx	lr
	return true;
  40224a:	2001      	movs	r0, #1
}
  40224c:	b003      	add	sp, #12
  40224e:	bd30      	pop	{r4, r5, pc}
  402250:	20000c48 	.word	0x20000c48
  402254:	40034000 	.word	0x40034000

00402258 <udd_ep_run>:
{
  402258:	b5f0      	push	{r4, r5, r6, r7, lr}
  40225a:	b083      	sub	sp, #12
	ep &= USB_EP_ADDR_MASK;
  40225c:	f000 070f 	and.w	r7, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
  402260:	2f03      	cmp	r7, #3
  402262:	f200 80a2 	bhi.w	4023aa <udd_ep_run+0x152>
  402266:	00bc      	lsls	r4, r7, #2
  402268:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
  40226c:	f504 3440 	add.w	r4, r4, #196608	; 0x30000
	if ((!Is_udd_endpoint_enabled(ep))
  402270:	6b25      	ldr	r5, [r4, #48]	; 0x30
  402272:	f415 4f00 	tst.w	r5, #32768	; 0x8000
  402276:	f000 809b 	beq.w	4023b0 <udd_ep_run+0x158>
	ptr_job = &udd_ep_job[ep - 1];
  40227a:	1e7d      	subs	r5, r7, #1
			|| ptr_job->b_stall_requested
  40227c:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  402280:	4e50      	ldr	r6, [pc, #320]	; (4023c4 <udd_ep_run+0x16c>)
  402282:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  402286:	7c76      	ldrb	r6, [r6, #17]
  402288:	f016 0f20 	tst.w	r6, #32
  40228c:	f040 8092 	bne.w	4023b4 <udd_ep_run+0x15c>
			|| Is_udd_endpoint_stall_requested(ep)) {
  402290:	6b26      	ldr	r6, [r4, #48]	; 0x30
  402292:	f016 0f20 	tst.w	r6, #32
  402296:	f040 808f 	bne.w	4023b8 <udd_ep_run+0x160>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  40229a:	f3ef 8610 	mrs	r6, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40229e:	fab6 f686 	clz	r6, r6
  4022a2:	0976      	lsrs	r6, r6, #5
  4022a4:	9600      	str	r6, [sp, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  4022a6:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4022a8:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4022ac:	f04f 0e00 	mov.w	lr, #0
  4022b0:	4e45      	ldr	r6, [pc, #276]	; (4023c8 <udd_ep_run+0x170>)
  4022b2:	f886 e000 	strb.w	lr, [r6]
	return flags;
  4022b6:	f8dd c000 	ldr.w	ip, [sp]
	if (ptr_job->busy == true) {
  4022ba:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  4022be:	4e41      	ldr	r6, [pc, #260]	; (4023c4 <udd_ep_run+0x16c>)
  4022c0:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  4022c4:	7c76      	ldrb	r6, [r6, #17]
  4022c6:	f016 0f10 	tst.w	r6, #16
  4022ca:	d00a      	beq.n	4022e2 <udd_ep_run+0x8a>
	if (cpu_irq_is_enabled_flags(flags))
  4022cc:	f1bc 0f00 	cmp.w	ip, #0
  4022d0:	d074      	beq.n	4023bc <udd_ep_run+0x164>
		cpu_irq_enable();
  4022d2:	2201      	movs	r2, #1
  4022d4:	4b3c      	ldr	r3, [pc, #240]	; (4023c8 <udd_ep_run+0x170>)
  4022d6:	701a      	strb	r2, [r3, #0]
  4022d8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4022dc:	b662      	cpsie	i
		return false; // Job already on going
  4022de:	2000      	movs	r0, #0
  4022e0:	e064      	b.n	4023ac <udd_ep_run+0x154>
	ptr_job->busy = true;
  4022e2:	eb05 0e85 	add.w	lr, r5, r5, lsl #2
  4022e6:	4e37      	ldr	r6, [pc, #220]	; (4023c4 <udd_ep_run+0x16c>)
  4022e8:	eb06 068e 	add.w	r6, r6, lr, lsl #2
  4022ec:	f896 e011 	ldrb.w	lr, [r6, #17]
  4022f0:	f04e 0e10 	orr.w	lr, lr, #16
  4022f4:	f886 e011 	strb.w	lr, [r6, #17]
	if (cpu_irq_is_enabled_flags(flags))
  4022f8:	f1bc 0f00 	cmp.w	ip, #0
  4022fc:	d007      	beq.n	40230e <udd_ep_run+0xb6>
		cpu_irq_enable();
  4022fe:	f04f 0e01 	mov.w	lr, #1
  402302:	4e31      	ldr	r6, [pc, #196]	; (4023c8 <udd_ep_run+0x170>)
  402304:	f886 e000 	strb.w	lr, [r6]
  __ASM volatile ("dmb 0xF":::"memory");
  402308:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40230c:	b662      	cpsie	i
	ptr_job->buf = buf;
  40230e:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 4023c4 <udd_ep_run+0x16c>
  402312:	eb05 0685 	add.w	r6, r5, r5, lsl #2
  402316:	00b6      	lsls	r6, r6, #2
  402318:	eb0c 0e06 	add.w	lr, ip, r6
  40231c:	f8ce 2004 	str.w	r2, [lr, #4]
	ptr_job->buf_size = buf_size;
  402320:	f8ce 3008 	str.w	r3, [lr, #8]
	ptr_job->buf_cnt = 0;
  402324:	2200      	movs	r2, #0
  402326:	f8ce 200c 	str.w	r2, [lr, #12]
	ptr_job->call_trans = callback;
  40232a:	9a08      	ldr	r2, [sp, #32]
  40232c:	f84c 2006 	str.w	r2, [ip, r6]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
  402330:	b911      	cbnz	r1, 402338 <udd_ep_run+0xe0>
  402332:	fab3 f183 	clz	r1, r3
  402336:	0949      	lsrs	r1, r1, #5
  402338:	4a22      	ldr	r2, [pc, #136]	; (4023c4 <udd_ep_run+0x16c>)
  40233a:	00ae      	lsls	r6, r5, #2
  40233c:	1973      	adds	r3, r6, r5
  40233e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  402342:	7c5b      	ldrb	r3, [r3, #17]
  402344:	f361 1386 	bfi	r3, r1, #6, #1
	ptr_job->b_buf_end = false;
  402348:	4435      	add	r5, r6
  40234a:	eb02 0285 	add.w	r2, r2, r5, lsl #2
  40234e:	f36f 13c7 	bfc	r3, #7, #1
  402352:	7453      	strb	r3, [r2, #17]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  402354:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  402358:	fab3 f383 	clz	r3, r3
  40235c:	095b      	lsrs	r3, r3, #5
  40235e:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  402360:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  402362:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  402366:	2200      	movs	r2, #0
  402368:	4b17      	ldr	r3, [pc, #92]	; (4023c8 <udd_ep_run+0x170>)
  40236a:	701a      	strb	r2, [r3, #0]
	return flags;
  40236c:	9d01      	ldr	r5, [sp, #4]
	udd_enable_endpoint_interrupt(ep);
  40236e:	2301      	movs	r3, #1
  402370:	40bb      	lsls	r3, r7
  402372:	4a16      	ldr	r2, [pc, #88]	; (4023cc <udd_ep_run+0x174>)
  402374:	6113      	str	r3, [r2, #16]
	if (b_dir_in) {
  402376:	f010 0f80 	tst.w	r0, #128	; 0x80
  40237a:	d107      	bne.n	40238c <udd_ep_run+0x134>
	if (cpu_irq_is_enabled_flags(flags))
  40237c:	b305      	cbz	r5, 4023c0 <udd_ep_run+0x168>
		cpu_irq_enable();
  40237e:	2001      	movs	r0, #1
  402380:	4b11      	ldr	r3, [pc, #68]	; (4023c8 <udd_ep_run+0x170>)
  402382:	7018      	strb	r0, [r3, #0]
  402384:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  402388:	b662      	cpsie	i
  40238a:	e00f      	b.n	4023ac <udd_ep_run+0x154>
		if (Is_udd_in_pending(ep)) {
  40238c:	6b23      	ldr	r3, [r4, #48]	; 0x30
  40238e:	f013 0f11 	tst.w	r3, #17
  402392:	d1f3      	bne.n	40237c <udd_ep_run+0x124>
			if (udd_ep_in_sent(ep, true)) {
  402394:	2101      	movs	r1, #1
  402396:	4638      	mov	r0, r7
  402398:	4b0d      	ldr	r3, [pc, #52]	; (4023d0 <udd_ep_run+0x178>)
  40239a:	4798      	blx	r3
  40239c:	2800      	cmp	r0, #0
  40239e:	d0ed      	beq.n	40237c <udd_ep_run+0x124>
				udd_ep_in_sent(ep, false);
  4023a0:	2100      	movs	r1, #0
  4023a2:	4638      	mov	r0, r7
  4023a4:	4b0a      	ldr	r3, [pc, #40]	; (4023d0 <udd_ep_run+0x178>)
  4023a6:	4798      	blx	r3
  4023a8:	e7e8      	b.n	40237c <udd_ep_run+0x124>
		return false;
  4023aa:	2000      	movs	r0, #0
}
  4023ac:	b003      	add	sp, #12
  4023ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return false; // Endpoint is halted
  4023b0:	2000      	movs	r0, #0
  4023b2:	e7fb      	b.n	4023ac <udd_ep_run+0x154>
  4023b4:	2000      	movs	r0, #0
  4023b6:	e7f9      	b.n	4023ac <udd_ep_run+0x154>
  4023b8:	2000      	movs	r0, #0
  4023ba:	e7f7      	b.n	4023ac <udd_ep_run+0x154>
		return false; // Job already on going
  4023bc:	2000      	movs	r0, #0
  4023be:	e7f5      	b.n	4023ac <udd_ep_run+0x154>
	return true;
  4023c0:	2001      	movs	r0, #1
  4023c2:	e7f3      	b.n	4023ac <udd_ep_run+0x154>
  4023c4:	20000c48 	.word	0x20000c48
  4023c8:	200000a0 	.word	0x200000a0
  4023cc:	40034000 	.word	0x40034000
  4023d0:	00401281 	.word	0x00401281

004023d4 <udd_ep_abort>:
{
  4023d4:	b5f0      	push	{r4, r5, r6, r7, lr}
  4023d6:	b087      	sub	sp, #28
	ep &= USB_EP_ADDR_MASK;
  4023d8:	f000 050f 	and.w	r5, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
  4023dc:	2d03      	cmp	r5, #3
  4023de:	d840      	bhi.n	402462 <udd_ep_abort+0x8e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  4023e0:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4023e4:	fab3 f383 	clz	r3, r3
  4023e8:	095b      	lsrs	r3, r3, #5
  4023ea:	9305      	str	r3, [sp, #20]
  __ASM volatile ("cpsid i" : : : "memory");
  4023ec:	b672      	cpsid	i
  __ASM volatile ("dmb 0xF":::"memory");
  4023ee:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4023f2:	2200      	movs	r2, #0
  4023f4:	4b4b      	ldr	r3, [pc, #300]	; (402524 <udd_ep_abort+0x150>)
  4023f6:	701a      	strb	r2, [r3, #0]
	return flags;
  4023f8:	9b05      	ldr	r3, [sp, #20]
	udd_disable_endpoint_interrupt(ep);
  4023fa:	2401      	movs	r4, #1
  4023fc:	40ac      	lsls	r4, r5
  4023fe:	4a4a      	ldr	r2, [pc, #296]	; (402528 <udd_ep_abort+0x154>)
  402400:	6154      	str	r4, [r2, #20]
	if (cpu_irq_is_enabled_flags(flags))
  402402:	b12b      	cbz	r3, 402410 <udd_ep_abort+0x3c>
		cpu_irq_enable();
  402404:	2201      	movs	r2, #1
  402406:	4b47      	ldr	r3, [pc, #284]	; (402524 <udd_ep_abort+0x150>)
  402408:	701a      	strb	r2, [r3, #0]
  40240a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40240e:	b662      	cpsie	i
	if (b_dir_in) {
  402410:	f010 0f80 	tst.w	r0, #128	; 0x80
  402414:	d127      	bne.n	402466 <udd_ep_abort+0x92>
  402416:	00ae      	lsls	r6, r5, #2
  402418:	f106 2640 	add.w	r6, r6, #1073758208	; 0x40004000
  40241c:	f506 3640 	add.w	r6, r6, #196608	; 0x30000
		while(Is_udd_any_bank_received(ep)) {
  402420:	6b33      	ldr	r3, [r6, #48]	; 0x30
  402422:	f013 0f42 	tst.w	r3, #66	; 0x42
  402426:	d006      	beq.n	402436 <udd_ep_abort+0x62>
			udd_ep_ack_out_received(ep);
  402428:	4f40      	ldr	r7, [pc, #256]	; (40252c <udd_ep_abort+0x158>)
  40242a:	4628      	mov	r0, r5
  40242c:	47b8      	blx	r7
		while(Is_udd_any_bank_received(ep)) {
  40242e:	6b33      	ldr	r3, [r6, #48]	; 0x30
  402430:	f013 0f42 	tst.w	r3, #66	; 0x42
  402434:	d1f9      	bne.n	40242a <udd_ep_abort+0x56>
	udd_reset_endpoint(ep);
  402436:	4a3c      	ldr	r2, [pc, #240]	; (402528 <udd_ep_abort+0x154>)
  402438:	6a93      	ldr	r3, [r2, #40]	; 0x28
  40243a:	4323      	orrs	r3, r4
  40243c:	6293      	str	r3, [r2, #40]	; 0x28
  40243e:	6a93      	ldr	r3, [r2, #40]	; 0x28
  402440:	421c      	tst	r4, r3
  402442:	d0fc      	beq.n	40243e <udd_ep_abort+0x6a>
  402444:	4a38      	ldr	r2, [pc, #224]	; (402528 <udd_ep_abort+0x154>)
  402446:	6a93      	ldr	r3, [r2, #40]	; 0x28
  402448:	ea23 0404 	bic.w	r4, r3, r4
  40244c:	6294      	str	r4, [r2, #40]	; 0x28
	udd_ep_finish_job(&udd_ep_job[ep - 1], UDD_EP_TRANSFER_ABORT, ep);
  40244e:	1e68      	subs	r0, r5, #1
  402450:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  402454:	462a      	mov	r2, r5
  402456:	2101      	movs	r1, #1
  402458:	4b35      	ldr	r3, [pc, #212]	; (402530 <udd_ep_abort+0x15c>)
  40245a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
  40245e:	4b35      	ldr	r3, [pc, #212]	; (402534 <udd_ep_abort+0x160>)
  402460:	4798      	blx	r3
}
  402462:	b007      	add	sp, #28
  402464:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402466:	00ab      	lsls	r3, r5, #2
  402468:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
  40246c:	f503 3340 	add.w	r3, r3, #196608	; 0x30000
		if (Is_udd_transmit_ready(ep)) {
  402470:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402472:	f012 0f10 	tst.w	r2, #16
  402476:	d03a      	beq.n	4024ee <udd_ep_abort+0x11a>
			udd_kill_data_in_fifo(ep,
  402478:	b34d      	cbz	r5, 4024ce <udd_ep_abort+0xfa>
  40247a:	2d03      	cmp	r5, #3
  40247c:	d027      	beq.n	4024ce <udd_ep_abort+0xfa>
  40247e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402480:	9201      	str	r2, [sp, #4]
  402482:	9a01      	ldr	r2, [sp, #4]
  402484:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  402488:	9201      	str	r2, [sp, #4]
  40248a:	9a01      	ldr	r2, [sp, #4]
  40248c:	f022 0210 	bic.w	r2, r2, #16
  402490:	9201      	str	r2, [sp, #4]
  402492:	9a01      	ldr	r2, [sp, #4]
  402494:	631a      	str	r2, [r3, #48]	; 0x30
  402496:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402498:	f012 0f10 	tst.w	r2, #16
  40249c:	d1fb      	bne.n	402496 <udd_ep_abort+0xc2>
  40249e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4024a0:	f012 0f10 	tst.w	r2, #16
  4024a4:	d1fb      	bne.n	40249e <udd_ep_abort+0xca>
  4024a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4024a8:	9202      	str	r2, [sp, #8]
  4024aa:	9a02      	ldr	r2, [sp, #8]
  4024ac:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4024b0:	9202      	str	r2, [sp, #8]
  4024b2:	9a02      	ldr	r2, [sp, #8]
  4024b4:	f042 0210 	orr.w	r2, r2, #16
  4024b8:	9202      	str	r2, [sp, #8]
  4024ba:	9a02      	ldr	r2, [sp, #8]
  4024bc:	631a      	str	r2, [r3, #48]	; 0x30
  4024be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4024c0:	f012 0f10 	tst.w	r2, #16
  4024c4:	d0fb      	beq.n	4024be <udd_ep_abort+0xea>
  4024c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4024c8:	f012 0f10 	tst.w	r2, #16
  4024cc:	d0fb      	beq.n	4024c6 <udd_ep_abort+0xf2>
  4024ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4024d0:	9203      	str	r2, [sp, #12]
  4024d2:	9a03      	ldr	r2, [sp, #12]
  4024d4:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4024d8:	9203      	str	r2, [sp, #12]
  4024da:	9a03      	ldr	r2, [sp, #12]
  4024dc:	f022 0210 	bic.w	r2, r2, #16
  4024e0:	9203      	str	r2, [sp, #12]
  4024e2:	9a03      	ldr	r2, [sp, #12]
  4024e4:	631a      	str	r2, [r3, #48]	; 0x30
  4024e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4024e8:	f012 0f10 	tst.w	r2, #16
  4024ec:	d1fb      	bne.n	4024e6 <udd_ep_abort+0x112>
		udd_ack_in_sent(ep);
  4024ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4024f0:	9204      	str	r2, [sp, #16]
  4024f2:	9a04      	ldr	r2, [sp, #16]
  4024f4:	f042 024f 	orr.w	r2, r2, #79	; 0x4f
  4024f8:	9204      	str	r2, [sp, #16]
  4024fa:	9a04      	ldr	r2, [sp, #16]
  4024fc:	f022 0201 	bic.w	r2, r2, #1
  402500:	9204      	str	r2, [sp, #16]
  402502:	9a04      	ldr	r2, [sp, #16]
  402504:	631a      	str	r2, [r3, #48]	; 0x30
  402506:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  402508:	f012 0f01 	tst.w	r2, #1
  40250c:	d1fb      	bne.n	402506 <udd_ep_abort+0x132>
		udd_ep_job[ep - 1].bank = 0;
  40250e:	1e6b      	subs	r3, r5, #1
  402510:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  402514:	4b06      	ldr	r3, [pc, #24]	; (402530 <udd_ep_abort+0x15c>)
  402516:	eb03 0382 	add.w	r3, r3, r2, lsl #2
  40251a:	7c5a      	ldrb	r2, [r3, #17]
  40251c:	f36f 0283 	bfc	r2, #2, #2
  402520:	745a      	strb	r2, [r3, #17]
  402522:	e788      	b.n	402436 <udd_ep_abort+0x62>
  402524:	200000a0 	.word	0x200000a0
  402528:	40034000 	.word	0x40034000
  40252c:	004011ad 	.word	0x004011ad
  402530:	20000c48 	.word	0x20000c48
  402534:	0040116d 	.word	0x0040116d

00402538 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
  402538:	b510      	push	{r4, lr}
	case OSC_MAINCK_8M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
		break;

	case OSC_MAINCK_12M_RC:
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  40253a:	2020      	movs	r0, #32
  40253c:	4b0a      	ldr	r3, [pc, #40]	; (402568 <sysclk_enable_usb+0x30>)
  40253e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  402540:	4c0a      	ldr	r4, [pc, #40]	; (40256c <sysclk_enable_usb+0x34>)
  402542:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  402544:	2800      	cmp	r0, #0
  402546:	d0fc      	beq.n	402542 <sysclk_enable_usb+0xa>

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
	} else {
		pmc_disable_pllbck();
  402548:	4b09      	ldr	r3, [pc, #36]	; (402570 <sysclk_enable_usb+0x38>)
  40254a:	4798      	blx	r3
		PMC->CKGR_PLLBR = p_cfg->ctrl;
  40254c:	4a09      	ldr	r2, [pc, #36]	; (402574 <sysclk_enable_usb+0x3c>)
  40254e:	4b0a      	ldr	r3, [pc, #40]	; (402578 <sysclk_enable_usb+0x40>)
  402550:	62da      	str	r2, [r3, #44]	; 0x2c
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
	} else {
		return pmc_is_locked_pllbck();
  402552:	4c0a      	ldr	r4, [pc, #40]	; (40257c <sysclk_enable_usb+0x44>)
  402554:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  402556:	2800      	cmp	r0, #0
  402558:	d0fc      	beq.n	402554 <sysclk_enable_usb+0x1c>

		pll_enable_source(CONFIG_PLL1_SOURCE);
		pll_config_defaults(&pllcfg, 1);
		pll_enable(&pllcfg, 1);
		pll_wait_for_lock(1);
		pmc_switch_udpck_to_pllbck(CONFIG_USBCLK_DIV - 1);
  40255a:	2001      	movs	r0, #1
  40255c:	4b08      	ldr	r3, [pc, #32]	; (402580 <sysclk_enable_usb+0x48>)
  40255e:	4798      	blx	r3
		pmc_enable_udpck();
  402560:	4b08      	ldr	r3, [pc, #32]	; (402584 <sysclk_enable_usb+0x4c>)
  402562:	4798      	blx	r3
  402564:	bd10      	pop	{r4, pc}
  402566:	bf00      	nop
  402568:	00402681 	.word	0x00402681
  40256c:	004026cd 	.word	0x004026cd
  402570:	004026fd 	.word	0x004026fd
  402574:	000f3f02 	.word	0x000f3f02
  402578:	400e0400 	.word	0x400e0400
  40257c:	00402709 	.word	0x00402709
  402580:	004027c1 	.word	0x004027c1
  402584:	004027d5 	.word	0x004027d5

00402588 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  402588:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40258a:	480e      	ldr	r0, [pc, #56]	; (4025c4 <sysclk_init+0x3c>)
  40258c:	4b0e      	ldr	r3, [pc, #56]	; (4025c8 <sysclk_init+0x40>)
  40258e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
  402590:	2020      	movs	r0, #32
  402592:	4b0e      	ldr	r3, [pc, #56]	; (4025cc <sysclk_init+0x44>)
  402594:	4798      	blx	r3
		return pmc_osc_is_ready_mainck();
  402596:	4c0e      	ldr	r4, [pc, #56]	; (4025d0 <sysclk_init+0x48>)
  402598:	47a0      	blx	r4
  40259a:	2800      	cmp	r0, #0
  40259c:	d0fc      	beq.n	402598 <sysclk_init+0x10>
		pmc_disable_pllack(); // Always stop PLL first!
  40259e:	4b0d      	ldr	r3, [pc, #52]	; (4025d4 <sysclk_init+0x4c>)
  4025a0:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4025a2:	4a0d      	ldr	r2, [pc, #52]	; (4025d8 <sysclk_init+0x50>)
  4025a4:	4b0d      	ldr	r3, [pc, #52]	; (4025dc <sysclk_init+0x54>)
  4025a6:	629a      	str	r2, [r3, #40]	; 0x28
		return pmc_is_locked_pllack();
  4025a8:	4c0d      	ldr	r4, [pc, #52]	; (4025e0 <sysclk_init+0x58>)
  4025aa:	47a0      	blx	r4
  4025ac:	2800      	cmp	r0, #0
  4025ae:	d0fc      	beq.n	4025aa <sysclk_init+0x22>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4025b0:	2010      	movs	r0, #16
  4025b2:	4b0c      	ldr	r3, [pc, #48]	; (4025e4 <sysclk_init+0x5c>)
  4025b4:	4798      	blx	r3
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4025b6:	4b0c      	ldr	r3, [pc, #48]	; (4025e8 <sysclk_init+0x60>)
  4025b8:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());									//Might need to add back in
  4025ba:	4802      	ldr	r0, [pc, #8]	; (4025c4 <sysclk_init+0x3c>)
  4025bc:	4b02      	ldr	r3, [pc, #8]	; (4025c8 <sysclk_init+0x40>)
  4025be:	4798      	blx	r3
  4025c0:	bd10      	pop	{r4, pc}
  4025c2:	bf00      	nop
  4025c4:	07270e00 	.word	0x07270e00
  4025c8:	00402b05 	.word	0x00402b05
  4025cc:	00402681 	.word	0x00402681
  4025d0:	004026cd 	.word	0x004026cd
  4025d4:	004026dd 	.word	0x004026dd
  4025d8:	20133f01 	.word	0x20133f01
  4025dc:	400e0400 	.word	0x400e0400
  4025e0:	004026ed 	.word	0x004026ed
  4025e4:	0040261d 	.word	0x0040261d
  4025e8:	004029f5 	.word	0x004029f5

004025ec <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  4025ec:	b410      	push	{r4}
  4025ee:	9c01      	ldr	r4, [sp, #4]
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  4025f0:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  4025f2:	b944      	cbnz	r4, 402606 <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
  4025f4:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  4025f6:	b143      	cbz	r3, 40260a <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  4025f8:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  4025fa:	b942      	cbnz	r2, 40260e <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
  4025fc:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  4025fe:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  402600:	6001      	str	r1, [r0, #0]
}
  402602:	bc10      	pop	{r4}
  402604:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  402606:	6641      	str	r1, [r0, #100]	; 0x64
  402608:	e7f5      	b.n	4025f6 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  40260a:	6541      	str	r1, [r0, #84]	; 0x54
  40260c:	e7f5      	b.n	4025fa <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  40260e:	6301      	str	r1, [r0, #48]	; 0x30
  402610:	e7f5      	b.n	4025fe <pio_set_output+0x12>

00402612 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  402612:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  402614:	4770      	bx	lr

00402616 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  402616:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  402618:	4770      	bx	lr
	...

0040261c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40261c:	4a17      	ldr	r2, [pc, #92]	; (40267c <pmc_switch_mck_to_pllack+0x60>)
  40261e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  402620:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  402624:	4318      	orrs	r0, r3
  402626:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402628:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40262a:	f013 0f08 	tst.w	r3, #8
  40262e:	d10a      	bne.n	402646 <pmc_switch_mck_to_pllack+0x2a>
  402630:	f44f 6300 	mov.w	r3, #2048	; 0x800
  402634:	4911      	ldr	r1, [pc, #68]	; (40267c <pmc_switch_mck_to_pllack+0x60>)
  402636:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  402638:	f012 0f08 	tst.w	r2, #8
  40263c:	d103      	bne.n	402646 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40263e:	3b01      	subs	r3, #1
  402640:	d1f9      	bne.n	402636 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  402642:	2001      	movs	r0, #1
  402644:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  402646:	4a0d      	ldr	r2, [pc, #52]	; (40267c <pmc_switch_mck_to_pllack+0x60>)
  402648:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40264a:	f023 0303 	bic.w	r3, r3, #3
  40264e:	f043 0302 	orr.w	r3, r3, #2
  402652:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  402654:	6e93      	ldr	r3, [r2, #104]	; 0x68
  402656:	f013 0f08 	tst.w	r3, #8
  40265a:	d10a      	bne.n	402672 <pmc_switch_mck_to_pllack+0x56>
  40265c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  402660:	4906      	ldr	r1, [pc, #24]	; (40267c <pmc_switch_mck_to_pllack+0x60>)
  402662:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  402664:	f012 0f08 	tst.w	r2, #8
  402668:	d105      	bne.n	402676 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40266a:	3b01      	subs	r3, #1
  40266c:	d1f9      	bne.n	402662 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40266e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  402670:	4770      	bx	lr
	return 0;
  402672:	2000      	movs	r0, #0
  402674:	4770      	bx	lr
  402676:	2000      	movs	r0, #0
  402678:	4770      	bx	lr
  40267a:	bf00      	nop
  40267c:	400e0400 	.word	0x400e0400

00402680 <pmc_switch_mainck_to_fastrc>:
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
  402680:	4911      	ldr	r1, [pc, #68]	; (4026c8 <pmc_switch_mainck_to_fastrc+0x48>)
  402682:	6a0a      	ldr	r2, [r1, #32]
  402684:	f442 125c 	orr.w	r2, r2, #3604480	; 0x370000
  402688:	f042 0208 	orr.w	r2, r2, #8
  40268c:	620a      	str	r2, [r1, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40268e:	460a      	mov	r2, r1
  402690:	6e93      	ldr	r3, [r2, #104]	; 0x68
  402692:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  402696:	d0fb      	beq.n	402690 <pmc_switch_mainck_to_fastrc+0x10>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  402698:	4a0b      	ldr	r2, [pc, #44]	; (4026c8 <pmc_switch_mainck_to_fastrc+0x48>)
  40269a:	6a13      	ldr	r3, [r2, #32]
  40269c:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  4026a0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
  4026a4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4026a8:	4318      	orrs	r0, r3
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
  4026aa:	6210      	str	r0, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4026ac:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4026ae:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  4026b2:	d0fb      	beq.n	4026ac <pmc_switch_mainck_to_fastrc+0x2c>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  4026b4:	4a04      	ldr	r2, [pc, #16]	; (4026c8 <pmc_switch_mainck_to_fastrc+0x48>)
  4026b6:	6a13      	ldr	r3, [r2, #32]
  4026b8:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
  4026bc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
  4026c0:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4026c4:	6213      	str	r3, [r2, #32]
  4026c6:	4770      	bx	lr
  4026c8:	400e0400 	.word	0x400e0400

004026cc <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4026cc:	4b02      	ldr	r3, [pc, #8]	; (4026d8 <pmc_osc_is_ready_mainck+0xc>)
  4026ce:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4026d0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4026d4:	4770      	bx	lr
  4026d6:	bf00      	nop
  4026d8:	400e0400 	.word	0x400e0400

004026dc <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4026dc:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4026e0:	4b01      	ldr	r3, [pc, #4]	; (4026e8 <pmc_disable_pllack+0xc>)
  4026e2:	629a      	str	r2, [r3, #40]	; 0x28
  4026e4:	4770      	bx	lr
  4026e6:	bf00      	nop
  4026e8:	400e0400 	.word	0x400e0400

004026ec <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4026ec:	4b02      	ldr	r3, [pc, #8]	; (4026f8 <pmc_is_locked_pllack+0xc>)
  4026ee:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4026f0:	f000 0002 	and.w	r0, r0, #2
  4026f4:	4770      	bx	lr
  4026f6:	bf00      	nop
  4026f8:	400e0400 	.word	0x400e0400

004026fc <pmc_disable_pllbck>:
/**
 * \brief Disable PLLB clock.
 */
void pmc_disable_pllbck(void)
{
	PMC->CKGR_PLLBR = CKGR_PLLBR_MULB(0);
  4026fc:	2200      	movs	r2, #0
  4026fe:	4b01      	ldr	r3, [pc, #4]	; (402704 <pmc_disable_pllbck+0x8>)
  402700:	62da      	str	r2, [r3, #44]	; 0x2c
  402702:	4770      	bx	lr
  402704:	400e0400 	.word	0x400e0400

00402708 <pmc_is_locked_pllbck>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllbck(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKB);
  402708:	4b02      	ldr	r3, [pc, #8]	; (402714 <pmc_is_locked_pllbck+0xc>)
  40270a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40270c:	f000 0004 	and.w	r0, r0, #4
  402710:	4770      	bx	lr
  402712:	bf00      	nop
  402714:	400e0400 	.word	0x400e0400

00402718 <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  402718:	2822      	cmp	r0, #34	; 0x22
  40271a:	d81e      	bhi.n	40275a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40271c:	281f      	cmp	r0, #31
  40271e:	d80c      	bhi.n	40273a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  402720:	4b11      	ldr	r3, [pc, #68]	; (402768 <pmc_enable_periph_clk+0x50>)
  402722:	699a      	ldr	r2, [r3, #24]
  402724:	2301      	movs	r3, #1
  402726:	4083      	lsls	r3, r0
  402728:	4393      	bics	r3, r2
  40272a:	d018      	beq.n	40275e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40272c:	2301      	movs	r3, #1
  40272e:	fa03 f000 	lsl.w	r0, r3, r0
  402732:	4b0d      	ldr	r3, [pc, #52]	; (402768 <pmc_enable_periph_clk+0x50>)
  402734:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  402736:	2000      	movs	r0, #0
  402738:	4770      	bx	lr
		ul_id -= 32;
  40273a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40273c:	4b0a      	ldr	r3, [pc, #40]	; (402768 <pmc_enable_periph_clk+0x50>)
  40273e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  402742:	2301      	movs	r3, #1
  402744:	4083      	lsls	r3, r0
  402746:	4393      	bics	r3, r2
  402748:	d00b      	beq.n	402762 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40274a:	2301      	movs	r3, #1
  40274c:	fa03 f000 	lsl.w	r0, r3, r0
  402750:	4b05      	ldr	r3, [pc, #20]	; (402768 <pmc_enable_periph_clk+0x50>)
  402752:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  402756:	2000      	movs	r0, #0
  402758:	4770      	bx	lr
		return 1;
  40275a:	2001      	movs	r0, #1
  40275c:	4770      	bx	lr
	return 0;
  40275e:	2000      	movs	r0, #0
  402760:	4770      	bx	lr
  402762:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  402764:	4770      	bx	lr
  402766:	bf00      	nop
  402768:	400e0400 	.word	0x400e0400

0040276c <pmc_disable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  40276c:	2822      	cmp	r0, #34	; 0x22
  40276e:	d822      	bhi.n	4027b6 <pmc_disable_periph_clk+0x4a>
		return 1;
	}

	if (ul_id < 32) {
  402770:	281f      	cmp	r0, #31
  402772:	d80e      	bhi.n	402792 <pmc_disable_periph_clk+0x26>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
  402774:	4b11      	ldr	r3, [pc, #68]	; (4027bc <pmc_disable_periph_clk+0x50>)
  402776:	699a      	ldr	r2, [r3, #24]
  402778:	2301      	movs	r3, #1
  40277a:	4083      	lsls	r3, r0
  40277c:	4393      	bics	r3, r2
  40277e:	d001      	beq.n	402784 <pmc_disable_periph_clk+0x18>
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
  402780:	2000      	movs	r0, #0
  402782:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
  402784:	2301      	movs	r3, #1
  402786:	fa03 f000 	lsl.w	r0, r3, r0
  40278a:	4b0c      	ldr	r3, [pc, #48]	; (4027bc <pmc_disable_periph_clk+0x50>)
  40278c:	6158      	str	r0, [r3, #20]
	return 0;
  40278e:	2000      	movs	r0, #0
  402790:	4770      	bx	lr
		ul_id -= 32;
  402792:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
  402794:	4b09      	ldr	r3, [pc, #36]	; (4027bc <pmc_disable_periph_clk+0x50>)
  402796:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40279a:	2301      	movs	r3, #1
  40279c:	4083      	lsls	r3, r0
  40279e:	4393      	bics	r3, r2
  4027a0:	d001      	beq.n	4027a6 <pmc_disable_periph_clk+0x3a>
	return 0;
  4027a2:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  4027a4:	4770      	bx	lr
			PMC->PMC_PCDR1 = 1 << ul_id;
  4027a6:	2301      	movs	r3, #1
  4027a8:	fa03 f000 	lsl.w	r0, r3, r0
  4027ac:	4b03      	ldr	r3, [pc, #12]	; (4027bc <pmc_disable_periph_clk+0x50>)
  4027ae:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
	return 0;
  4027b2:	2000      	movs	r0, #0
  4027b4:	4770      	bx	lr
		return 1;
  4027b6:	2001      	movs	r0, #1
  4027b8:	4770      	bx	lr
  4027ba:	bf00      	nop
  4027bc:	400e0400 	.word	0x400e0400

004027c0 <pmc_switch_udpck_to_pllbck>:
 *
 * \param ul_usbdiv Clock divisor.
 */
void pmc_switch_udpck_to_pllbck(uint32_t ul_usbdiv)
{
	PMC->PMC_USB = PMC_USB_USBDIV(ul_usbdiv) | PMC_USB_USBS;
  4027c0:	0200      	lsls	r0, r0, #8
  4027c2:	f400 6070 	and.w	r0, r0, #3840	; 0xf00
  4027c6:	f040 0001 	orr.w	r0, r0, #1
  4027ca:	4b01      	ldr	r3, [pc, #4]	; (4027d0 <pmc_switch_udpck_to_pllbck+0x10>)
  4027cc:	6398      	str	r0, [r3, #56]	; 0x38
  4027ce:	4770      	bx	lr
  4027d0:	400e0400 	.word	0x400e0400

004027d4 <pmc_enable_udpck>:
 * \brief Enable UDP (USB) clock.
 */
void pmc_enable_udpck(void)
{
#if (SAM3S || SAM4S || SAM4E || SAMG55)
	PMC->PMC_SCER = PMC_SCER_UDP;
  4027d4:	2280      	movs	r2, #128	; 0x80
  4027d6:	4b01      	ldr	r3, [pc, #4]	; (4027dc <pmc_enable_udpck+0x8>)
  4027d8:	601a      	str	r2, [r3, #0]
  4027da:	4770      	bx	lr
  4027dc:	400e0400 	.word	0x400e0400

004027e0 <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
  4027e0:	4b03      	ldr	r3, [pc, #12]	; (4027f0 <pmc_set_fast_startup_input+0x10>)
  4027e2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
	ul_inputs &= PMC_FAST_STARTUP_Msk;
  4027e4:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
  4027e8:	4310      	orrs	r0, r2
  4027ea:	6718      	str	r0, [r3, #112]	; 0x70
  4027ec:	4770      	bx	lr
  4027ee:	bf00      	nop
  4027f0:	400e0400 	.word	0x400e0400

004027f4 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4027f4:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4027f6:	0189      	lsls	r1, r1, #6
  4027f8:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4027fa:	2402      	movs	r4, #2
  4027fc:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4027fe:	f04f 31ff 	mov.w	r1, #4294967295
  402802:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  402804:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  402806:	605a      	str	r2, [r3, #4]
}
  402808:	bc10      	pop	{r4}
  40280a:	4770      	bx	lr

0040280c <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  40280c:	0189      	lsls	r1, r1, #6
  40280e:	2305      	movs	r3, #5
  402810:	5043      	str	r3, [r0, r1]
  402812:	4770      	bx	lr

00402814 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  402814:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  402818:	61ca      	str	r2, [r1, #28]
  40281a:	4770      	bx	lr

0040281c <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  40281c:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  402820:	624a      	str	r2, [r1, #36]	; 0x24
  402822:	4770      	bx	lr

00402824 <pmc_is_wakeup_clocks_restored>:
	}
}

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
  402824:	4b02      	ldr	r3, [pc, #8]	; (402830 <pmc_is_wakeup_clocks_restored+0xc>)
  402826:	7818      	ldrb	r0, [r3, #0]
}
  402828:	f080 0001 	eor.w	r0, r0, #1
  40282c:	4770      	bx	lr
  40282e:	bf00      	nop
  402830:	20000c84 	.word	0x20000c84

00402834 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  402834:	b5f0      	push	{r4, r5, r6, r7, lr}
  402836:	b083      	sub	sp, #12
	 * specific board configuration, found in conf_board.h.
	 */
	
	//GPIO Setup
	//ALL GPIO are on port A
	pio_set_output(PIOA,BUILT_IN_LED,LOW,DISABLE,DISABLE);
  402838:	4e31      	ldr	r6, [pc, #196]	; (402900 <board_init+0xcc>)
  40283a:	2400      	movs	r4, #0
  40283c:	9400      	str	r4, [sp, #0]
  40283e:	4623      	mov	r3, r4
  402840:	4622      	mov	r2, r4
  402842:	f44f 7180 	mov.w	r1, #256	; 0x100
  402846:	4630      	mov	r0, r6
  402848:	4d2e      	ldr	r5, [pc, #184]	; (402904 <board_init+0xd0>)
  40284a:	47a8      	blx	r5
	pio_set_output(PIOA,MUX_EN,HIGH,DISABLE,DISABLE);
  40284c:	9400      	str	r4, [sp, #0]
  40284e:	4623      	mov	r3, r4
  402850:	2201      	movs	r2, #1
  402852:	2180      	movs	r1, #128	; 0x80
  402854:	4630      	mov	r0, r6
  402856:	47a8      	blx	r5
	pio_set_output(PIOA,MUX_A0,HIGH,DISABLE,DISABLE);
  402858:	9400      	str	r4, [sp, #0]
  40285a:	4623      	mov	r3, r4
  40285c:	2201      	movs	r2, #1
  40285e:	2140      	movs	r1, #64	; 0x40
  402860:	4630      	mov	r0, r6
  402862:	47a8      	blx	r5
	pio_set_output(PIOA,MUX_A1,HIGH,DISABLE,DISABLE);
  402864:	9400      	str	r4, [sp, #0]
  402866:	4623      	mov	r3, r4
  402868:	2201      	movs	r2, #1
  40286a:	2120      	movs	r1, #32
  40286c:	4630      	mov	r0, r6
  40286e:	47a8      	blx	r5
	pio_set_output(PIOA,MUX_A2,HIGH,DISABLE,DISABLE);
  402870:	9400      	str	r4, [sp, #0]
  402872:	4623      	mov	r3, r4
  402874:	2201      	movs	r2, #1
  402876:	2110      	movs	r1, #16
  402878:	4630      	mov	r0, r6
  40287a:	47a8      	blx	r5
	

	//ADC Setup
	pmc_enable_periph_clk(ID_ADC);
  40287c:	201d      	movs	r0, #29
  40287e:	4f22      	ldr	r7, [pc, #136]	; (402908 <board_init+0xd4>)
  402880:	47b8      	blx	r7
	/* Formula:
	 *     Startup  Time = startup value / ADCClock
	 *     Startup time = 64 / 6.4MHz = 10 us
	 */
	adc_init(ADC, sysclk_get_cpu_hz(), 6400000, ADC_STARTUP_TIME_4);
  402882:	4d22      	ldr	r5, [pc, #136]	; (40290c <board_init+0xd8>)
  402884:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  402888:	4a21      	ldr	r2, [pc, #132]	; (402910 <board_init+0xdc>)
  40288a:	4922      	ldr	r1, [pc, #136]	; (402914 <board_init+0xe0>)
  40288c:	4628      	mov	r0, r5
  40288e:	4e22      	ldr	r6, [pc, #136]	; (402918 <board_init+0xe4>)
  402890:	47b0      	blx	r6
	 *
	 *     Transfer Time = (1 * 2 + 3) / 6.4MHz = 781 ns
	 *     Tracking Time = (1 + 1) / 6.4MHz = 312 ns
	 *     Settling Time = 3 / 6.4MHz = 469 ns
	 */
	adc_configure_timing(ADC, TRACKING_TIME, ADC_SETTLING_TIME_3, TRANSFER_PERIOD);
  402892:	2301      	movs	r3, #1
  402894:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
  402898:	4619      	mov	r1, r3
  40289a:	4628      	mov	r0, r5
  40289c:	4e1f      	ldr	r6, [pc, #124]	; (40291c <board_init+0xe8>)
  40289e:	47b0      	blx	r6
	//adc_set_resolution(ADC,12);
	adc_configure_trigger(ADC, ADC_TRIG_SW, 1);
  4028a0:	2201      	movs	r2, #1
  4028a2:	4621      	mov	r1, r4
  4028a4:	4628      	mov	r0, r5
  4028a6:	4b1e      	ldr	r3, [pc, #120]	; (402920 <board_init+0xec>)
  4028a8:	4798      	blx	r3
	adc_enable_channel(ADC, BOARD_TEMP1);
  4028aa:	2104      	movs	r1, #4
  4028ac:	4628      	mov	r0, r5
  4028ae:	4e1d      	ldr	r6, [pc, #116]	; (402924 <board_init+0xf0>)
  4028b0:	47b0      	blx	r6
	adc_enable_channel(ADC, BOARD_TEMP2);
  4028b2:	2105      	movs	r1, #5
  4028b4:	4628      	mov	r0, r5
  4028b6:	47b0      	blx	r6
	adc_enable_channel(ADC, BOARD_CELLV);
  4028b8:	4621      	mov	r1, r4
  4028ba:	4628      	mov	r0, r5
  4028bc:	47b0      	blx	r6
	adc_enable_channel(ADC, BOARD_SHUNT);
  4028be:	2101      	movs	r1, #1
  4028c0:	4628      	mov	r0, r5
  4028c2:	47b0      	blx	r6
	
	//USB Setup
	udc_start();
  4028c4:	4b18      	ldr	r3, [pc, #96]	; (402928 <board_init+0xf4>)
  4028c6:	4798      	blx	r3
	
	//timer counter configuration
	pmc_enable_periph_clk(ID_TC1);
  4028c8:	2018      	movs	r0, #24
  4028ca:	47b8      	blx	r7
	tc_init(TC, TC_CH, 
  4028cc:	4c17      	ldr	r4, [pc, #92]	; (40292c <board_init+0xf8>)
  4028ce:	4a18      	ldr	r2, [pc, #96]	; (402930 <board_init+0xfc>)
  4028d0:	2101      	movs	r1, #1
  4028d2:	4620      	mov	r0, r4
  4028d4:	4b17      	ldr	r3, [pc, #92]	; (402934 <board_init+0x100>)
  4028d6:	4798      	blx	r3
			  TC_CMR_WAVE
			| TC_CMR_WAVSEL_UP_RC 
			| TC_CMR_TCCLKS_TIMER_CLOCK3
			| TC_CMR_ACPC_TOGGLE);     //Sets TC to reset when output compare is reached
	tc_enable_interrupt(TC, TC_CH, TC_IER_CPCS);
  4028d8:	2210      	movs	r2, #16
  4028da:	2101      	movs	r1, #1
  4028dc:	4620      	mov	r0, r4
  4028de:	4b16      	ldr	r3, [pc, #88]	; (402938 <board_init+0x104>)
  4028e0:	4798      	blx	r3
	tc_write_rc(TC,TC_CH,37500);				  //causes timer to reset every 10ms (exactly)
  4028e2:	f249 227c 	movw	r2, #37500	; 0x927c
  4028e6:	2101      	movs	r1, #1
  4028e8:	4620      	mov	r0, r4
  4028ea:	4b14      	ldr	r3, [pc, #80]	; (40293c <board_init+0x108>)
  4028ec:	4798      	blx	r3
	TC->TC_CHANNEL[TC_CH].TC_CCR = 5;
  4028ee:	2305      	movs	r3, #5
  4028f0:	6423      	str	r3, [r4, #64]	; 0x40
	tc_start(TC,TC_CH);
  4028f2:	2101      	movs	r1, #1
  4028f4:	4620      	mov	r0, r4
  4028f6:	4b12      	ldr	r3, [pc, #72]	; (402940 <board_init+0x10c>)
  4028f8:	4798      	blx	r3
}
  4028fa:	b003      	add	sp, #12
  4028fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4028fe:	bf00      	nop
  402900:	400e0e00 	.word	0x400e0e00
  402904:	004025ed 	.word	0x004025ed
  402908:	00402719 	.word	0x00402719
  40290c:	40038000 	.word	0x40038000
  402910:	0061a800 	.word	0x0061a800
  402914:	07270e00 	.word	0x07270e00
  402918:	00400d7d 	.word	0x00400d7d
  40291c:	00400dbf 	.word	0x00400dbf
  402920:	00400db1 	.word	0x00400db1
  402924:	00400ddb 	.word	0x00400ddb
  402928:	004008d9 	.word	0x004008d9
  40292c:	40010000 	.word	0x40010000
  402930:	000cc002 	.word	0x000cc002
  402934:	004027f5 	.word	0x004027f5
  402938:	0040281d 	.word	0x0040281d
  40293c:	00402815 	.word	0x00402815
  402940:	0040280d 	.word	0x0040280d

00402944 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  402944:	e7fe      	b.n	402944 <Dummy_Handler>
	...

00402948 <Reset_Handler>:
{
  402948:	b508      	push	{r3, lr}
	if (pSrc > pDest) {
  40294a:	4b21      	ldr	r3, [pc, #132]	; (4029d0 <Reset_Handler+0x88>)
  40294c:	4a21      	ldr	r2, [pc, #132]	; (4029d4 <Reset_Handler+0x8c>)
  40294e:	429a      	cmp	r2, r3
  402950:	d928      	bls.n	4029a4 <Reset_Handler+0x5c>
		for (; pDest < &_erelocate;) {
  402952:	4b21      	ldr	r3, [pc, #132]	; (4029d8 <Reset_Handler+0x90>)
  402954:	4a1e      	ldr	r2, [pc, #120]	; (4029d0 <Reset_Handler+0x88>)
  402956:	429a      	cmp	r2, r3
  402958:	d20c      	bcs.n	402974 <Reset_Handler+0x2c>
  40295a:	3b01      	subs	r3, #1
  40295c:	1a9b      	subs	r3, r3, r2
  40295e:	f023 0303 	bic.w	r3, r3, #3
  402962:	3304      	adds	r3, #4
  402964:	4413      	add	r3, r2
  402966:	491b      	ldr	r1, [pc, #108]	; (4029d4 <Reset_Handler+0x8c>)
			*pDest++ = *pSrc++;
  402968:	f851 0b04 	ldr.w	r0, [r1], #4
  40296c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
  402970:	429a      	cmp	r2, r3
  402972:	d1f9      	bne.n	402968 <Reset_Handler+0x20>
	__NOP();
  402974:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  402976:	4b19      	ldr	r3, [pc, #100]	; (4029dc <Reset_Handler+0x94>)
  402978:	4a19      	ldr	r2, [pc, #100]	; (4029e0 <Reset_Handler+0x98>)
  40297a:	429a      	cmp	r2, r3
  40297c:	d20a      	bcs.n	402994 <Reset_Handler+0x4c>
  40297e:	3b01      	subs	r3, #1
  402980:	1a9b      	subs	r3, r3, r2
  402982:	f023 0303 	bic.w	r3, r3, #3
  402986:	3304      	adds	r3, #4
  402988:	4413      	add	r3, r2
		*pDest++ = 0;
  40298a:	2100      	movs	r1, #0
  40298c:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  402990:	429a      	cmp	r2, r3
  402992:	d1fb      	bne.n	40298c <Reset_Handler+0x44>
	SCB->VTOR = ((uint32_t) pSrc);
  402994:	4b13      	ldr	r3, [pc, #76]	; (4029e4 <Reset_Handler+0x9c>)
  402996:	4a14      	ldr	r2, [pc, #80]	; (4029e8 <Reset_Handler+0xa0>)
  402998:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  40299a:	4b14      	ldr	r3, [pc, #80]	; (4029ec <Reset_Handler+0xa4>)
  40299c:	4798      	blx	r3
	main();
  40299e:	4b14      	ldr	r3, [pc, #80]	; (4029f0 <Reset_Handler+0xa8>)
  4029a0:	4798      	blx	r3
  4029a2:	e7fe      	b.n	4029a2 <Reset_Handler+0x5a>
	} else if (pSrc < pDest) {
  4029a4:	4b0a      	ldr	r3, [pc, #40]	; (4029d0 <Reset_Handler+0x88>)
  4029a6:	4a0b      	ldr	r2, [pc, #44]	; (4029d4 <Reset_Handler+0x8c>)
  4029a8:	429a      	cmp	r2, r3
  4029aa:	d2e3      	bcs.n	402974 <Reset_Handler+0x2c>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4029ac:	4b0a      	ldr	r3, [pc, #40]	; (4029d8 <Reset_Handler+0x90>)
  4029ae:	4808      	ldr	r0, [pc, #32]	; (4029d0 <Reset_Handler+0x88>)
  4029b0:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4029b2:	4611      	mov	r1, r2
  4029b4:	3a04      	subs	r2, #4
  4029b6:	4402      	add	r2, r0
		for (;nb_bytes;nb_bytes -= 4) {
  4029b8:	2800      	cmp	r0, #0
  4029ba:	d0db      	beq.n	402974 <Reset_Handler+0x2c>
  4029bc:	f1c1 0104 	rsb	r1, r1, #4
			*pDest-- = *pSrc--;
  4029c0:	f852 0904 	ldr.w	r0, [r2], #-4
  4029c4:	f843 0d04 	str.w	r0, [r3, #-4]!
		for (;nb_bytes;nb_bytes -= 4) {
  4029c8:	42ca      	cmn	r2, r1
  4029ca:	d1f9      	bne.n	4029c0 <Reset_Handler+0x78>
  4029cc:	e7d2      	b.n	402974 <Reset_Handler+0x2c>
  4029ce:	bf00      	nop
  4029d0:	20000000 	.word	0x20000000
  4029d4:	00407ef4 	.word	0x00407ef4
  4029d8:	20000a58 	.word	0x20000a58
  4029dc:	20000d1c 	.word	0x20000d1c
  4029e0:	20000a58 	.word	0x20000a58
  4029e4:	e000ed00 	.word	0xe000ed00
  4029e8:	00400000 	.word	0x00400000
  4029ec:	00403c0d 	.word	0x00403c0d
  4029f0:	00402d85 	.word	0x00402d85

004029f4 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  4029f4:	4b3c      	ldr	r3, [pc, #240]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  4029f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4029f8:	f003 0303 	and.w	r3, r3, #3
  4029fc:	2b03      	cmp	r3, #3
  4029fe:	d80e      	bhi.n	402a1e <SystemCoreClockUpdate+0x2a>
  402a00:	e8df f003 	tbb	[pc, r3]
  402a04:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  402a08:	4b38      	ldr	r3, [pc, #224]	; (402aec <SystemCoreClockUpdate+0xf8>)
  402a0a:	695b      	ldr	r3, [r3, #20]
  402a0c:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  402a10:	bf14      	ite	ne
  402a12:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  402a16:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  402a1a:	4b35      	ldr	r3, [pc, #212]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402a1c:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  402a1e:	4b32      	ldr	r3, [pc, #200]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  402a20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402a22:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402a26:	2b70      	cmp	r3, #112	; 0x70
  402a28:	d055      	beq.n	402ad6 <SystemCoreClockUpdate+0xe2>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402a2a:	4b2f      	ldr	r3, [pc, #188]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  402a2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
		SystemCoreClock >>=
  402a2e:	4930      	ldr	r1, [pc, #192]	; (402af0 <SystemCoreClockUpdate+0xfc>)
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402a30:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  402a34:	680b      	ldr	r3, [r1, #0]
  402a36:	40d3      	lsrs	r3, r2
  402a38:	600b      	str	r3, [r1, #0]
  402a3a:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402a3c:	4b2a      	ldr	r3, [pc, #168]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  402a3e:	6a1b      	ldr	r3, [r3, #32]
  402a40:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  402a44:	d003      	beq.n	402a4e <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL;
  402a46:	4a2b      	ldr	r2, [pc, #172]	; (402af4 <SystemCoreClockUpdate+0x100>)
  402a48:	4b29      	ldr	r3, [pc, #164]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402a4a:	601a      	str	r2, [r3, #0]
  402a4c:	e7e7      	b.n	402a1e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402a4e:	4a2a      	ldr	r2, [pc, #168]	; (402af8 <SystemCoreClockUpdate+0x104>)
  402a50:	4b27      	ldr	r3, [pc, #156]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402a52:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402a54:	4b24      	ldr	r3, [pc, #144]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  402a56:	6a1b      	ldr	r3, [r3, #32]
  402a58:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402a5c:	2b10      	cmp	r3, #16
  402a5e:	d005      	beq.n	402a6c <SystemCoreClockUpdate+0x78>
  402a60:	2b20      	cmp	r3, #32
  402a62:	d1dc      	bne.n	402a1e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402a64:	4a23      	ldr	r2, [pc, #140]	; (402af4 <SystemCoreClockUpdate+0x100>)
  402a66:	4b22      	ldr	r3, [pc, #136]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402a68:	601a      	str	r2, [r3, #0]
			break;
  402a6a:	e7d8      	b.n	402a1e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402a6c:	4a23      	ldr	r2, [pc, #140]	; (402afc <SystemCoreClockUpdate+0x108>)
  402a6e:	4b20      	ldr	r3, [pc, #128]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402a70:	601a      	str	r2, [r3, #0]
			break;
  402a72:	e7d4      	b.n	402a1e <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402a74:	4b1c      	ldr	r3, [pc, #112]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  402a76:	6a1b      	ldr	r3, [r3, #32]
  402a78:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  402a7c:	d018      	beq.n	402ab0 <SystemCoreClockUpdate+0xbc>
				SystemCoreClock = CHIP_FREQ_XTAL;
  402a7e:	4a1d      	ldr	r2, [pc, #116]	; (402af4 <SystemCoreClockUpdate+0x100>)
  402a80:	4b1b      	ldr	r3, [pc, #108]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402a82:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  402a84:	4b18      	ldr	r3, [pc, #96]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  402a86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402a88:	f003 0303 	and.w	r3, r3, #3
  402a8c:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  402a8e:	4a16      	ldr	r2, [pc, #88]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  402a90:	bf07      	ittee	eq
  402a92:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  402a94:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402a96:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402a98:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  402a9a:	4815      	ldr	r0, [pc, #84]	; (402af0 <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  402a9c:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  402aa0:	6803      	ldr	r3, [r0, #0]
  402aa2:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  402aa6:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  402aa8:	fbb3 f3f2 	udiv	r3, r3, r2
  402aac:	6003      	str	r3, [r0, #0]
  402aae:	e7b6      	b.n	402a1e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  402ab0:	4a11      	ldr	r2, [pc, #68]	; (402af8 <SystemCoreClockUpdate+0x104>)
  402ab2:	4b0f      	ldr	r3, [pc, #60]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402ab4:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402ab6:	4b0c      	ldr	r3, [pc, #48]	; (402ae8 <SystemCoreClockUpdate+0xf4>)
  402ab8:	6a1b      	ldr	r3, [r3, #32]
  402aba:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402abe:	2b10      	cmp	r3, #16
  402ac0:	d005      	beq.n	402ace <SystemCoreClockUpdate+0xda>
  402ac2:	2b20      	cmp	r3, #32
  402ac4:	d1de      	bne.n	402a84 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402ac6:	4a0b      	ldr	r2, [pc, #44]	; (402af4 <SystemCoreClockUpdate+0x100>)
  402ac8:	4b09      	ldr	r3, [pc, #36]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402aca:	601a      	str	r2, [r3, #0]
					break;
  402acc:	e7da      	b.n	402a84 <SystemCoreClockUpdate+0x90>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  402ace:	4a0b      	ldr	r2, [pc, #44]	; (402afc <SystemCoreClockUpdate+0x108>)
  402ad0:	4b07      	ldr	r3, [pc, #28]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402ad2:	601a      	str	r2, [r3, #0]
					break;
  402ad4:	e7d6      	b.n	402a84 <SystemCoreClockUpdate+0x90>
		SystemCoreClock /= 3U;
  402ad6:	4a06      	ldr	r2, [pc, #24]	; (402af0 <SystemCoreClockUpdate+0xfc>)
  402ad8:	6813      	ldr	r3, [r2, #0]
  402ada:	4909      	ldr	r1, [pc, #36]	; (402b00 <SystemCoreClockUpdate+0x10c>)
  402adc:	fba1 1303 	umull	r1, r3, r1, r3
  402ae0:	085b      	lsrs	r3, r3, #1
  402ae2:	6013      	str	r3, [r2, #0]
  402ae4:	4770      	bx	lr
  402ae6:	bf00      	nop
  402ae8:	400e0400 	.word	0x400e0400
  402aec:	400e1410 	.word	0x400e1410
  402af0:	200000a4 	.word	0x200000a4
  402af4:	00b71b00 	.word	0x00b71b00
  402af8:	003d0900 	.word	0x003d0900
  402afc:	007a1200 	.word	0x007a1200
  402b00:	aaaaaaab 	.word	0xaaaaaaab

00402b04 <system_init_flash>:
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
#if !defined(ID_EFC1)
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  402b04:	4b12      	ldr	r3, [pc, #72]	; (402b50 <system_init_flash+0x4c>)
  402b06:	4298      	cmp	r0, r3
  402b08:	d911      	bls.n	402b2e <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  402b0a:	4b12      	ldr	r3, [pc, #72]	; (402b54 <system_init_flash+0x50>)
  402b0c:	4298      	cmp	r0, r3
  402b0e:	d913      	bls.n	402b38 <system_init_flash+0x34>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  402b10:	4b11      	ldr	r3, [pc, #68]	; (402b58 <system_init_flash+0x54>)
  402b12:	4298      	cmp	r0, r3
  402b14:	d914      	bls.n	402b40 <system_init_flash+0x3c>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  402b16:	4b11      	ldr	r3, [pc, #68]	; (402b5c <system_init_flash+0x58>)
  402b18:	4298      	cmp	r0, r3
  402b1a:	d915      	bls.n	402b48 <system_init_flash+0x44>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  402b1c:	4b10      	ldr	r3, [pc, #64]	; (402b60 <system_init_flash+0x5c>)
  402b1e:	4298      	cmp	r0, r3
					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  402b20:	bf94      	ite	ls
  402b22:	f04f 2204 	movls.w	r2, #67109888	; 0x4000400
					} else {
					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  402b26:	4a0f      	ldrhi	r2, [pc, #60]	; (402b64 <system_init_flash+0x60>)
  402b28:	4b0f      	ldr	r3, [pc, #60]	; (402b68 <system_init_flash+0x64>)
  402b2a:	601a      	str	r2, [r3, #0]
  402b2c:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  402b2e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  402b32:	4b0d      	ldr	r3, [pc, #52]	; (402b68 <system_init_flash+0x64>)
  402b34:	601a      	str	r2, [r3, #0]
  402b36:	4770      	bx	lr
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402b38:	4a0c      	ldr	r2, [pc, #48]	; (402b6c <system_init_flash+0x68>)
  402b3a:	4b0b      	ldr	r3, [pc, #44]	; (402b68 <system_init_flash+0x64>)
  402b3c:	601a      	str	r2, [r3, #0]
  402b3e:	4770      	bx	lr
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402b40:	4a0b      	ldr	r2, [pc, #44]	; (402b70 <system_init_flash+0x6c>)
  402b42:	4b09      	ldr	r3, [pc, #36]	; (402b68 <system_init_flash+0x64>)
  402b44:	601a      	str	r2, [r3, #0]
  402b46:	4770      	bx	lr
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402b48:	4a0a      	ldr	r2, [pc, #40]	; (402b74 <system_init_flash+0x70>)
  402b4a:	4b07      	ldr	r3, [pc, #28]	; (402b68 <system_init_flash+0x64>)
  402b4c:	601a      	str	r2, [r3, #0]
  402b4e:	4770      	bx	lr
  402b50:	01312cff 	.word	0x01312cff
  402b54:	026259ff 	.word	0x026259ff
  402b58:	039386ff 	.word	0x039386ff
  402b5c:	04c4b3ff 	.word	0x04c4b3ff
  402b60:	05f5e0ff 	.word	0x05f5e0ff
  402b64:	04000500 	.word	0x04000500
  402b68:	400e0a00 	.word	0x400e0a00
  402b6c:	04000100 	.word	0x04000100
  402b70:	04000200 	.word	0x04000200
  402b74:	04000300 	.word	0x04000300

00402b78 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  402b78:	4b0a      	ldr	r3, [pc, #40]	; (402ba4 <_sbrk+0x2c>)
  402b7a:	681b      	ldr	r3, [r3, #0]
  402b7c:	b153      	cbz	r3, 402b94 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  402b7e:	4b09      	ldr	r3, [pc, #36]	; (402ba4 <_sbrk+0x2c>)
  402b80:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  402b82:	181a      	adds	r2, r3, r0
  402b84:	4908      	ldr	r1, [pc, #32]	; (402ba8 <_sbrk+0x30>)
  402b86:	4291      	cmp	r1, r2
  402b88:	db08      	blt.n	402b9c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  402b8a:	4610      	mov	r0, r2
  402b8c:	4a05      	ldr	r2, [pc, #20]	; (402ba4 <_sbrk+0x2c>)
  402b8e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  402b90:	4618      	mov	r0, r3
  402b92:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  402b94:	4a05      	ldr	r2, [pc, #20]	; (402bac <_sbrk+0x34>)
  402b96:	4b03      	ldr	r3, [pc, #12]	; (402ba4 <_sbrk+0x2c>)
  402b98:	601a      	str	r2, [r3, #0]
  402b9a:	e7f0      	b.n	402b7e <_sbrk+0x6>
		return (caddr_t) -1;	
  402b9c:	f04f 30ff 	mov.w	r0, #4294967295
}
  402ba0:	4770      	bx	lr
  402ba2:	bf00      	nop
  402ba4:	20000c88 	.word	0x20000c88
  402ba8:	2000fffc 	.word	0x2000fffc
  402bac:	20003d20 	.word	0x20003d20

00402bb0 <calculateCellVoltage>:



float cellV, current, tempBatt, tempFet;

void calculateCellVoltage(int rawADCData){
  402bb0:	b510      	push	{r4, lr}
	cellV = (rawADCData)*((VOLT_REF/1000.0)/(4096.0*0.759));
  402bb2:	4b09      	ldr	r3, [pc, #36]	; (402bd8 <calculateCellVoltage+0x28>)
  402bb4:	4798      	blx	r3
  402bb6:	a306      	add	r3, pc, #24	; (adr r3, 402bd0 <calculateCellVoltage+0x20>)
  402bb8:	e9d3 2300 	ldrd	r2, r3, [r3]
  402bbc:	4c07      	ldr	r4, [pc, #28]	; (402bdc <calculateCellVoltage+0x2c>)
  402bbe:	47a0      	blx	r4
  402bc0:	4b07      	ldr	r3, [pc, #28]	; (402be0 <calculateCellVoltage+0x30>)
  402bc2:	4798      	blx	r3
  402bc4:	4b07      	ldr	r3, [pc, #28]	; (402be4 <calculateCellVoltage+0x34>)
  402bc6:	6018      	str	r0, [r3, #0]
  402bc8:	bd10      	pop	{r4, pc}
  402bca:	bf00      	nop
  402bcc:	f3af 8000 	nop.w
  402bd0:	8590b216 	.word	0x8590b216
  402bd4:	3f51642c 	.word	0x3f51642c
  402bd8:	00403535 	.word	0x00403535
  402bdc:	00403601 	.word	0x00403601
  402be0:	00403b61 	.word	0x00403b61
  402be4:	20000ce8 	.word	0x20000ce8

00402be8 <calculateCellCurrent>:
}

void calculateCellCurrent(int rawADCData){
  402be8:	b510      	push	{r4, lr}
	current = (rawADCData)*((VOLT_REF/1000.0)/(0.005*4096.0*22.0));
  402bea:	4b05      	ldr	r3, [pc, #20]	; (402c00 <calculateCellCurrent+0x18>)
  402bec:	4798      	blx	r3
  402bee:	2200      	movs	r2, #0
  402bf0:	4b04      	ldr	r3, [pc, #16]	; (402c04 <calculateCellCurrent+0x1c>)
  402bf2:	4c05      	ldr	r4, [pc, #20]	; (402c08 <calculateCellCurrent+0x20>)
  402bf4:	47a0      	blx	r4
  402bf6:	4b05      	ldr	r3, [pc, #20]	; (402c0c <calculateCellCurrent+0x24>)
  402bf8:	4798      	blx	r3
  402bfa:	4b05      	ldr	r3, [pc, #20]	; (402c10 <calculateCellCurrent+0x28>)
  402bfc:	6018      	str	r0, [r3, #0]
  402bfe:	bd10      	pop	{r4, pc}
  402c00:	00403535 	.word	0x00403535
  402c04:	3f7e0000 	.word	0x3f7e0000
  402c08:	00403601 	.word	0x00403601
  402c0c:	00403b61 	.word	0x00403b61
  402c10:	20000ce4 	.word	0x20000ce4
  402c14:	00000000 	.word	0x00000000

00402c18 <calculateTemp>:
}

void calculateTemp(int rawADCData, int channel){
  402c18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402c1c:	460f      	mov	r7, r1
	float voltage = (rawADCData*3.3/4096);
  402c1e:	4b28      	ldr	r3, [pc, #160]	; (402cc0 <calculateTemp+0xa8>)
  402c20:	4798      	blx	r3
  402c22:	4c28      	ldr	r4, [pc, #160]	; (402cc4 <calculateTemp+0xac>)
  402c24:	a31e      	add	r3, pc, #120	; (adr r3, 402ca0 <calculateTemp+0x88>)
  402c26:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c2a:	47a0      	blx	r4
  402c2c:	2200      	movs	r2, #0
  402c2e:	4b26      	ldr	r3, [pc, #152]	; (402cc8 <calculateTemp+0xb0>)
  402c30:	47a0      	blx	r4
  402c32:	4d26      	ldr	r5, [pc, #152]	; (402ccc <calculateTemp+0xb4>)
  402c34:	47a8      	blx	r5
	float tempCalc = (1.0/((log(voltage/((VOLT_REF/1000.0)-voltage))/THERMISTOR_BETA)+(1/(THERMISTOR_BETA_TEMP+273.15))))-273.15;
  402c36:	4b26      	ldr	r3, [pc, #152]	; (402cd0 <calculateTemp+0xb8>)
  402c38:	4798      	blx	r3
  402c3a:	4680      	mov	r8, r0
  402c3c:	4689      	mov	r9, r1
  402c3e:	4e25      	ldr	r6, [pc, #148]	; (402cd4 <calculateTemp+0xbc>)
  402c40:	4602      	mov	r2, r0
  402c42:	460b      	mov	r3, r1
  402c44:	a116      	add	r1, pc, #88	; (adr r1, 402ca0 <calculateTemp+0x88>)
  402c46:	e9d1 0100 	ldrd	r0, r1, [r1]
  402c4a:	47b0      	blx	r6
  402c4c:	4c22      	ldr	r4, [pc, #136]	; (402cd8 <calculateTemp+0xc0>)
  402c4e:	4602      	mov	r2, r0
  402c50:	460b      	mov	r3, r1
  402c52:	4640      	mov	r0, r8
  402c54:	4649      	mov	r1, r9
  402c56:	47a0      	blx	r4
  402c58:	4b20      	ldr	r3, [pc, #128]	; (402cdc <calculateTemp+0xc4>)
  402c5a:	4798      	blx	r3
  402c5c:	a312      	add	r3, pc, #72	; (adr r3, 402ca8 <calculateTemp+0x90>)
  402c5e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c62:	47a0      	blx	r4
  402c64:	a312      	add	r3, pc, #72	; (adr r3, 402cb0 <calculateTemp+0x98>)
  402c66:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c6a:	f8df 8080 	ldr.w	r8, [pc, #128]	; 402cec <calculateTemp+0xd4>
  402c6e:	47c0      	blx	r8
  402c70:	4602      	mov	r2, r0
  402c72:	460b      	mov	r3, r1
  402c74:	2000      	movs	r0, #0
  402c76:	491a      	ldr	r1, [pc, #104]	; (402ce0 <calculateTemp+0xc8>)
  402c78:	47a0      	blx	r4
  402c7a:	a30f      	add	r3, pc, #60	; (adr r3, 402cb8 <calculateTemp+0xa0>)
  402c7c:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c80:	47b0      	blx	r6
  402c82:	47a8      	blx	r5
	if(channel == 4)
  402c84:	2f04      	cmp	r7, #4
  402c86:	d005      	beq.n	402c94 <calculateTemp+0x7c>
		tempFet = tempCalc;
	else if(channel == 5)
  402c88:	2f05      	cmp	r7, #5
		tempBatt = tempCalc;
  402c8a:	bf04      	itt	eq
  402c8c:	4b15      	ldreq	r3, [pc, #84]	; (402ce4 <calculateTemp+0xcc>)
  402c8e:	6018      	streq	r0, [r3, #0]
  402c90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		tempFet = tempCalc;
  402c94:	4b14      	ldr	r3, [pc, #80]	; (402ce8 <calculateTemp+0xd0>)
  402c96:	6018      	str	r0, [r3, #0]
  402c98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402c9c:	f3af 8000 	nop.w
  402ca0:	66666666 	.word	0x66666666
  402ca4:	400a6666 	.word	0x400a6666
  402ca8:	00000000 	.word	0x00000000
  402cac:	40b25c00 	.word	0x40b25c00
  402cb0:	dcb5db83 	.word	0xdcb5db83
  402cb4:	3f6b79e1 	.word	0x3f6b79e1
  402cb8:	66666666 	.word	0x66666666
  402cbc:	40711266 	.word	0x40711266
  402cc0:	00403535 	.word	0x00403535
  402cc4:	00403601 	.word	0x00403601
  402cc8:	3f300000 	.word	0x3f300000
  402ccc:	00403b61 	.word	0x00403b61
  402cd0:	00403559 	.word	0x00403559
  402cd4:	00403299 	.word	0x00403299
  402cd8:	00403855 	.word	0x00403855
  402cdc:	00402da1 	.word	0x00402da1
  402ce0:	3ff00000 	.word	0x3ff00000
  402ce4:	20000cec 	.word	0x20000cec
  402ce8:	20000cf0 	.word	0x20000cf0
  402cec:	0040329d 	.word	0x0040329d

00402cf0 <getADCData>:
}

void getADCData(){
  402cf0:	b538      	push	{r3, r4, r5, lr}
	if((adc_get_status(ADC) & ADC_ISR_DRDY) == ADC_ISR_DRDY) {
  402cf2:	480b      	ldr	r0, [pc, #44]	; (402d20 <getADCData+0x30>)
  402cf4:	4b0b      	ldr	r3, [pc, #44]	; (402d24 <getADCData+0x34>)
  402cf6:	4798      	blx	r3
  402cf8:	f010 7f80 	tst.w	r0, #16777216	; 0x1000000
  402cfc:	d100      	bne.n	402d00 <getADCData+0x10>
  402cfe:	bd38      	pop	{r3, r4, r5, pc}
		calculateCellVoltage(ADC->ADC_CDR[0]);
  402d00:	4c07      	ldr	r4, [pc, #28]	; (402d20 <getADCData+0x30>)
  402d02:	6d20      	ldr	r0, [r4, #80]	; 0x50
  402d04:	4b08      	ldr	r3, [pc, #32]	; (402d28 <getADCData+0x38>)
  402d06:	4798      	blx	r3
		calculateCellCurrent(ADC->ADC_CDR[1]);
  402d08:	6d60      	ldr	r0, [r4, #84]	; 0x54
  402d0a:	4b08      	ldr	r3, [pc, #32]	; (402d2c <getADCData+0x3c>)
  402d0c:	4798      	blx	r3
		calculateTemp(ADC->ADC_CDR[4],4);
  402d0e:	6e20      	ldr	r0, [r4, #96]	; 0x60
  402d10:	2104      	movs	r1, #4
  402d12:	4d07      	ldr	r5, [pc, #28]	; (402d30 <getADCData+0x40>)
  402d14:	47a8      	blx	r5
		calculateTemp(ADC->ADC_CDR[5],5);
  402d16:	6e60      	ldr	r0, [r4, #100]	; 0x64
  402d18:	2105      	movs	r1, #5
  402d1a:	47a8      	blx	r5
	}
}
  402d1c:	e7ef      	b.n	402cfe <getADCData+0xe>
  402d1e:	bf00      	nop
  402d20:	40038000 	.word	0x40038000
  402d24:	00400de5 	.word	0x00400de5
  402d28:	00402bb1 	.word	0x00402bb1
  402d2c:	00402be9 	.word	0x00402be9
  402d30:	00402c19 	.word	0x00402c19

00402d34 <TC1_Handler>:


void TransmitTimerHandler(void){
  402d34:	b510      	push	{r4, lr}
  402d36:	b086      	sub	sp, #24
	if(udi_cdc_is_tx_ready() && udi_cdc_get_free_tx_buffer() >= 63){
  402d38:	4b0b      	ldr	r3, [pc, #44]	; (402d68 <TC1_Handler+0x34>)
  402d3a:	4798      	blx	r3
  402d3c:	b908      	cbnz	r0, 402d42 <TC1_Handler+0xe>
		char str[20];
		sprintf(str, "BattV: %f\n",cellV);
		udi_cdc_putc(str);
	}
}
  402d3e:	b006      	add	sp, #24
  402d40:	bd10      	pop	{r4, pc}
	if(udi_cdc_is_tx_ready() && udi_cdc_get_free_tx_buffer() >= 63){
  402d42:	4b0a      	ldr	r3, [pc, #40]	; (402d6c <TC1_Handler+0x38>)
  402d44:	4798      	blx	r3
  402d46:	283e      	cmp	r0, #62	; 0x3e
  402d48:	d9f9      	bls.n	402d3e <TC1_Handler+0xa>
		sprintf(str, "BattV: %f\n",cellV);
  402d4a:	4b09      	ldr	r3, [pc, #36]	; (402d70 <TC1_Handler+0x3c>)
  402d4c:	6818      	ldr	r0, [r3, #0]
  402d4e:	4b09      	ldr	r3, [pc, #36]	; (402d74 <TC1_Handler+0x40>)
  402d50:	4798      	blx	r3
  402d52:	4602      	mov	r2, r0
  402d54:	460b      	mov	r3, r1
  402d56:	4908      	ldr	r1, [pc, #32]	; (402d78 <TC1_Handler+0x44>)
  402d58:	a801      	add	r0, sp, #4
  402d5a:	4c08      	ldr	r4, [pc, #32]	; (402d7c <TC1_Handler+0x48>)
  402d5c:	47a0      	blx	r4
		udi_cdc_putc(str);
  402d5e:	a801      	add	r0, sp, #4
  402d60:	4b07      	ldr	r3, [pc, #28]	; (402d80 <TC1_Handler+0x4c>)
  402d62:	4798      	blx	r3
}
  402d64:	e7eb      	b.n	402d3e <TC1_Handler+0xa>
  402d66:	bf00      	nop
  402d68:	00400681 	.word	0x00400681
  402d6c:	0040065d 	.word	0x0040065d
  402d70:	20000ce8 	.word	0x20000ce8
  402d74:	00403559 	.word	0x00403559
  402d78:	00407c30 	.word	0x00407c30
  402d7c:	00403e2d 	.word	0x00403e2d
  402d80:	0040072d 	.word	0x0040072d

00402d84 <main>:

int main (void)
{
  402d84:	b508      	push	{r3, lr}
	/* Insert system clock initialization code here (sysclk_init()). */
	sysclk_init();
  402d86:	4b03      	ldr	r3, [pc, #12]	; (402d94 <main+0x10>)
  402d88:	4798      	blx	r3
	board_init();
  402d8a:	4b03      	ldr	r3, [pc, #12]	; (402d98 <main+0x14>)
  402d8c:	4798      	blx	r3

	/* Insert application code here, after the board has been initialized. */
	while(1){
		getADCData();
  402d8e:	4c03      	ldr	r4, [pc, #12]	; (402d9c <main+0x18>)
  402d90:	47a0      	blx	r4
  402d92:	e7fd      	b.n	402d90 <main+0xc>
  402d94:	00402589 	.word	0x00402589
  402d98:	00402835 	.word	0x00402835
  402d9c:	00402cf1 	.word	0x00402cf1

00402da0 <log>:
  402da0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  402da4:	b08a      	sub	sp, #40	; 0x28
  402da6:	4604      	mov	r4, r0
  402da8:	460d      	mov	r5, r1
  402daa:	f000 f875 	bl	402e98 <__ieee754_log>
  402dae:	4b35      	ldr	r3, [pc, #212]	; (402e84 <log+0xe4>)
  402db0:	f993 6000 	ldrsb.w	r6, [r3]
  402db4:	1c73      	adds	r3, r6, #1
  402db6:	4680      	mov	r8, r0
  402db8:	4689      	mov	r9, r1
  402dba:	d00d      	beq.n	402dd8 <log+0x38>
  402dbc:	4622      	mov	r2, r4
  402dbe:	462b      	mov	r3, r5
  402dc0:	4620      	mov	r0, r4
  402dc2:	4629      	mov	r1, r5
  402dc4:	f000 feb6 	bl	403b34 <__aeabi_dcmpun>
  402dc8:	b930      	cbnz	r0, 402dd8 <log+0x38>
  402dca:	2200      	movs	r2, #0
  402dcc:	2300      	movs	r3, #0
  402dce:	4620      	mov	r0, r4
  402dd0:	4629      	mov	r1, r5
  402dd2:	f000 fea5 	bl	403b20 <__aeabi_dcmpgt>
  402dd6:	b120      	cbz	r0, 402de2 <log+0x42>
  402dd8:	4640      	mov	r0, r8
  402dda:	4649      	mov	r1, r9
  402ddc:	b00a      	add	sp, #40	; 0x28
  402dde:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
  402de2:	4b29      	ldr	r3, [pc, #164]	; (402e88 <log+0xe8>)
  402de4:	9008      	str	r0, [sp, #32]
  402de6:	e9cd 4502 	strd	r4, r5, [sp, #8]
  402dea:	e9cd 4504 	strd	r4, r5, [sp, #16]
  402dee:	9301      	str	r3, [sp, #4]
  402df0:	4620      	mov	r0, r4
  402df2:	4629      	mov	r1, r5
  402df4:	b9ce      	cbnz	r6, 402e2a <log+0x8a>
  402df6:	4d25      	ldr	r5, [pc, #148]	; (402e8c <log+0xec>)
  402df8:	f04f 4460 	mov.w	r4, #3758096384	; 0xe0000000
  402dfc:	2200      	movs	r2, #0
  402dfe:	2300      	movs	r3, #0
  402e00:	e9cd 4506 	strd	r4, r5, [sp, #24]
  402e04:	f000 fe64 	bl	403ad0 <__aeabi_dcmpeq>
  402e08:	2800      	cmp	r0, #0
  402e0a:	d033      	beq.n	402e74 <log+0xd4>
  402e0c:	2302      	movs	r3, #2
  402e0e:	9300      	str	r3, [sp, #0]
  402e10:	4668      	mov	r0, sp
  402e12:	f000 fa35 	bl	403280 <matherr>
  402e16:	b1a8      	cbz	r0, 402e44 <log+0xa4>
  402e18:	9b08      	ldr	r3, [sp, #32]
  402e1a:	b9c3      	cbnz	r3, 402e4e <log+0xae>
  402e1c:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  402e20:	4640      	mov	r0, r8
  402e22:	4649      	mov	r1, r9
  402e24:	b00a      	add	sp, #40	; 0x28
  402e26:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
  402e2a:	4d19      	ldr	r5, [pc, #100]	; (402e90 <log+0xf0>)
  402e2c:	2400      	movs	r4, #0
  402e2e:	2200      	movs	r2, #0
  402e30:	2300      	movs	r3, #0
  402e32:	e9cd 4506 	strd	r4, r5, [sp, #24]
  402e36:	f000 fe4b 	bl	403ad0 <__aeabi_dcmpeq>
  402e3a:	b168      	cbz	r0, 402e58 <log+0xb8>
  402e3c:	2302      	movs	r3, #2
  402e3e:	429e      	cmp	r6, r3
  402e40:	9300      	str	r3, [sp, #0]
  402e42:	d1e5      	bne.n	402e10 <log+0x70>
  402e44:	f000 fedc 	bl	403c00 <__errno>
  402e48:	2322      	movs	r3, #34	; 0x22
  402e4a:	6003      	str	r3, [r0, #0]
  402e4c:	e7e4      	b.n	402e18 <log+0x78>
  402e4e:	f000 fed7 	bl	403c00 <__errno>
  402e52:	9b08      	ldr	r3, [sp, #32]
  402e54:	6003      	str	r3, [r0, #0]
  402e56:	e7e1      	b.n	402e1c <log+0x7c>
  402e58:	2301      	movs	r3, #1
  402e5a:	2e02      	cmp	r6, #2
  402e5c:	9300      	str	r3, [sp, #0]
  402e5e:	d10b      	bne.n	402e78 <log+0xd8>
  402e60:	f000 fece 	bl	403c00 <__errno>
  402e64:	2321      	movs	r3, #33	; 0x21
  402e66:	6003      	str	r3, [r0, #0]
  402e68:	480a      	ldr	r0, [pc, #40]	; (402e94 <log+0xf4>)
  402e6a:	f000 fa0b 	bl	403284 <nan>
  402e6e:	e9cd 0106 	strd	r0, r1, [sp, #24]
  402e72:	e7d1      	b.n	402e18 <log+0x78>
  402e74:	2301      	movs	r3, #1
  402e76:	9300      	str	r3, [sp, #0]
  402e78:	4668      	mov	r0, sp
  402e7a:	f000 fa01 	bl	403280 <matherr>
  402e7e:	2800      	cmp	r0, #0
  402e80:	d1f2      	bne.n	402e68 <log+0xc8>
  402e82:	e7ed      	b.n	402e60 <log+0xc0>
  402e84:	200000a8 	.word	0x200000a8
  402e88:	00407c3c 	.word	0x00407c3c
  402e8c:	c7efffff 	.word	0xc7efffff
  402e90:	fff00000 	.word	0xfff00000
  402e94:	00407c64 	.word	0x00407c64

00402e98 <__ieee754_log>:
  402e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402e9c:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  402ea0:	b085      	sub	sp, #20
  402ea2:	4606      	mov	r6, r0
  402ea4:	460f      	mov	r7, r1
  402ea6:	460b      	mov	r3, r1
  402ea8:	da5a      	bge.n	402f60 <__ieee754_log+0xc8>
  402eaa:	4602      	mov	r2, r0
  402eac:	f021 4400 	bic.w	r4, r1, #2147483648	; 0x80000000
  402eb0:	4322      	orrs	r2, r4
  402eb2:	f000 80f8 	beq.w	4030a6 <__ieee754_log+0x20e>
  402eb6:	2900      	cmp	r1, #0
  402eb8:	f2c0 817a 	blt.w	4031b0 <__ieee754_log+0x318>
  402ebc:	2200      	movs	r2, #0
  402ebe:	4bd6      	ldr	r3, [pc, #856]	; (403218 <__ieee754_log+0x380>)
  402ec0:	f000 fb9e 	bl	403600 <__aeabi_dmul>
  402ec4:	4ad5      	ldr	r2, [pc, #852]	; (40321c <__ieee754_log+0x384>)
  402ec6:	460b      	mov	r3, r1
  402ec8:	4293      	cmp	r3, r2
  402eca:	4606      	mov	r6, r0
  402ecc:	460f      	mov	r7, r1
  402ece:	f06f 0c35 	mvn.w	ip, #53	; 0x35
  402ed2:	dc4a      	bgt.n	402f6a <__ieee754_log+0xd2>
  402ed4:	f3c3 0513 	ubfx	r5, r3, #0, #20
  402ed8:	f505 2e15 	add.w	lr, r5, #610304	; 0x95000
  402edc:	f60e 7e64 	addw	lr, lr, #3940	; 0xf64
  402ee0:	f40e 1e80 	and.w	lr, lr, #1048576	; 0x100000
  402ee4:	f08e 527f 	eor.w	r2, lr, #1069547520	; 0x3fc00000
  402ee8:	f482 1240 	eor.w	r2, r2, #3145728	; 0x300000
  402eec:	151c      	asrs	r4, r3, #20
  402eee:	ea42 0705 	orr.w	r7, r2, r5
  402ef2:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
  402ef6:	4464      	add	r4, ip
  402ef8:	2200      	movs	r2, #0
  402efa:	4bc9      	ldr	r3, [pc, #804]	; (403220 <__ieee754_log+0x388>)
  402efc:	4630      	mov	r0, r6
  402efe:	4639      	mov	r1, r7
  402f00:	eb04 541e 	add.w	r4, r4, lr, lsr #20
  402f04:	f000 f9c8 	bl	403298 <__aeabi_dsub>
  402f08:	1cab      	adds	r3, r5, #2
  402f0a:	f3c3 0313 	ubfx	r3, r3, #0, #20
  402f0e:	2b02      	cmp	r3, #2
  402f10:	4682      	mov	sl, r0
  402f12:	468b      	mov	fp, r1
  402f14:	f04f 0200 	mov.w	r2, #0
  402f18:	dc30      	bgt.n	402f7c <__ieee754_log+0xe4>
  402f1a:	2300      	movs	r3, #0
  402f1c:	f000 fdd8 	bl	403ad0 <__aeabi_dcmpeq>
  402f20:	2800      	cmp	r0, #0
  402f22:	f000 80c9 	beq.w	4030b8 <__ieee754_log+0x220>
  402f26:	2c00      	cmp	r4, #0
  402f28:	f000 814b 	beq.w	4031c2 <__ieee754_log+0x32a>
  402f2c:	4620      	mov	r0, r4
  402f2e:	f000 fb01 	bl	403534 <__aeabi_i2d>
  402f32:	a3a5      	add	r3, pc, #660	; (adr r3, 4031c8 <__ieee754_log+0x330>)
  402f34:	e9d3 2300 	ldrd	r2, r3, [r3]
  402f38:	4606      	mov	r6, r0
  402f3a:	460f      	mov	r7, r1
  402f3c:	f000 fb60 	bl	403600 <__aeabi_dmul>
  402f40:	a3a3      	add	r3, pc, #652	; (adr r3, 4031d0 <__ieee754_log+0x338>)
  402f42:	e9d3 2300 	ldrd	r2, r3, [r3]
  402f46:	4604      	mov	r4, r0
  402f48:	460d      	mov	r5, r1
  402f4a:	4630      	mov	r0, r6
  402f4c:	4639      	mov	r1, r7
  402f4e:	f000 fb57 	bl	403600 <__aeabi_dmul>
  402f52:	4602      	mov	r2, r0
  402f54:	460b      	mov	r3, r1
  402f56:	4620      	mov	r0, r4
  402f58:	4629      	mov	r1, r5
  402f5a:	f000 f99f 	bl	40329c <__adddf3>
  402f5e:	e00a      	b.n	402f76 <__ieee754_log+0xde>
  402f60:	4aae      	ldr	r2, [pc, #696]	; (40321c <__ieee754_log+0x384>)
  402f62:	4293      	cmp	r3, r2
  402f64:	f04f 0c00 	mov.w	ip, #0
  402f68:	ddb4      	ble.n	402ed4 <__ieee754_log+0x3c>
  402f6a:	4632      	mov	r2, r6
  402f6c:	463b      	mov	r3, r7
  402f6e:	4630      	mov	r0, r6
  402f70:	4639      	mov	r1, r7
  402f72:	f000 f993 	bl	40329c <__adddf3>
  402f76:	b005      	add	sp, #20
  402f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f7c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  402f80:	f000 f98c 	bl	40329c <__adddf3>
  402f84:	4602      	mov	r2, r0
  402f86:	460b      	mov	r3, r1
  402f88:	4650      	mov	r0, sl
  402f8a:	4659      	mov	r1, fp
  402f8c:	f000 fc62 	bl	403854 <__aeabi_ddiv>
  402f90:	4606      	mov	r6, r0
  402f92:	4620      	mov	r0, r4
  402f94:	460f      	mov	r7, r1
  402f96:	f000 facd 	bl	403534 <__aeabi_i2d>
  402f9a:	4632      	mov	r2, r6
  402f9c:	e9cd 0100 	strd	r0, r1, [sp]
  402fa0:	463b      	mov	r3, r7
  402fa2:	4630      	mov	r0, r6
  402fa4:	4639      	mov	r1, r7
  402fa6:	e9cd 6702 	strd	r6, r7, [sp, #8]
  402faa:	f000 fb29 	bl	403600 <__aeabi_dmul>
  402fae:	4602      	mov	r2, r0
  402fb0:	460b      	mov	r3, r1
  402fb2:	4680      	mov	r8, r0
  402fb4:	4689      	mov	r9, r1
  402fb6:	f000 fb23 	bl	403600 <__aeabi_dmul>
  402fba:	a387      	add	r3, pc, #540	; (adr r3, 4031d8 <__ieee754_log+0x340>)
  402fbc:	e9d3 2300 	ldrd	r2, r3, [r3]
  402fc0:	4606      	mov	r6, r0
  402fc2:	460f      	mov	r7, r1
  402fc4:	f000 fb1c 	bl	403600 <__aeabi_dmul>
  402fc8:	a385      	add	r3, pc, #532	; (adr r3, 4031e0 <__ieee754_log+0x348>)
  402fca:	e9d3 2300 	ldrd	r2, r3, [r3]
  402fce:	f000 f965 	bl	40329c <__adddf3>
  402fd2:	4632      	mov	r2, r6
  402fd4:	463b      	mov	r3, r7
  402fd6:	f000 fb13 	bl	403600 <__aeabi_dmul>
  402fda:	a383      	add	r3, pc, #524	; (adr r3, 4031e8 <__ieee754_log+0x350>)
  402fdc:	e9d3 2300 	ldrd	r2, r3, [r3]
  402fe0:	f000 f95c 	bl	40329c <__adddf3>
  402fe4:	4632      	mov	r2, r6
  402fe6:	463b      	mov	r3, r7
  402fe8:	f000 fb0a 	bl	403600 <__aeabi_dmul>
  402fec:	a380      	add	r3, pc, #512	; (adr r3, 4031f0 <__ieee754_log+0x358>)
  402fee:	e9d3 2300 	ldrd	r2, r3, [r3]
  402ff2:	f000 f953 	bl	40329c <__adddf3>
  402ff6:	4642      	mov	r2, r8
  402ff8:	464b      	mov	r3, r9
  402ffa:	f000 fb01 	bl	403600 <__aeabi_dmul>
  402ffe:	a37e      	add	r3, pc, #504	; (adr r3, 4031f8 <__ieee754_log+0x360>)
  403000:	e9d3 2300 	ldrd	r2, r3, [r3]
  403004:	4680      	mov	r8, r0
  403006:	4689      	mov	r9, r1
  403008:	4630      	mov	r0, r6
  40300a:	4639      	mov	r1, r7
  40300c:	f000 faf8 	bl	403600 <__aeabi_dmul>
  403010:	a37b      	add	r3, pc, #492	; (adr r3, 403200 <__ieee754_log+0x368>)
  403012:	e9d3 2300 	ldrd	r2, r3, [r3]
  403016:	f000 f941 	bl	40329c <__adddf3>
  40301a:	4632      	mov	r2, r6
  40301c:	463b      	mov	r3, r7
  40301e:	f000 faef 	bl	403600 <__aeabi_dmul>
  403022:	a379      	add	r3, pc, #484	; (adr r3, 403208 <__ieee754_log+0x370>)
  403024:	e9d3 2300 	ldrd	r2, r3, [r3]
  403028:	f000 f938 	bl	40329c <__adddf3>
  40302c:	4632      	mov	r2, r6
  40302e:	463b      	mov	r3, r7
  403030:	f000 fae6 	bl	403600 <__aeabi_dmul>
  403034:	460b      	mov	r3, r1
  403036:	4602      	mov	r2, r0
  403038:	4649      	mov	r1, r9
  40303a:	4640      	mov	r0, r8
  40303c:	f000 f92e 	bl	40329c <__adddf3>
  403040:	f5a5 23c2 	sub.w	r3, r5, #397312	; 0x61000
  403044:	f5c5 25d7 	rsb	r5, r5, #440320	; 0x6b800
  403048:	f2a3 437a 	subw	r3, r3, #1146	; 0x47a
  40304c:	3551      	adds	r5, #81	; 0x51
  40304e:	431d      	orrs	r5, r3
  403050:	2d00      	cmp	r5, #0
  403052:	4680      	mov	r8, r0
  403054:	4689      	mov	r9, r1
  403056:	dd56      	ble.n	403106 <__ieee754_log+0x26e>
  403058:	2200      	movs	r2, #0
  40305a:	4b72      	ldr	r3, [pc, #456]	; (403224 <__ieee754_log+0x38c>)
  40305c:	4650      	mov	r0, sl
  40305e:	4659      	mov	r1, fp
  403060:	f000 face 	bl	403600 <__aeabi_dmul>
  403064:	4652      	mov	r2, sl
  403066:	465b      	mov	r3, fp
  403068:	f000 faca 	bl	403600 <__aeabi_dmul>
  40306c:	4606      	mov	r6, r0
  40306e:	460f      	mov	r7, r1
  403070:	2c00      	cmp	r4, #0
  403072:	d168      	bne.n	403146 <__ieee754_log+0x2ae>
  403074:	4632      	mov	r2, r6
  403076:	463b      	mov	r3, r7
  403078:	4640      	mov	r0, r8
  40307a:	4649      	mov	r1, r9
  40307c:	f000 f90e 	bl	40329c <__adddf3>
  403080:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403084:	f000 fabc 	bl	403600 <__aeabi_dmul>
  403088:	4602      	mov	r2, r0
  40308a:	460b      	mov	r3, r1
  40308c:	4630      	mov	r0, r6
  40308e:	4639      	mov	r1, r7
  403090:	f000 f902 	bl	403298 <__aeabi_dsub>
  403094:	4602      	mov	r2, r0
  403096:	460b      	mov	r3, r1
  403098:	4650      	mov	r0, sl
  40309a:	4659      	mov	r1, fp
  40309c:	f000 f8fc 	bl	403298 <__aeabi_dsub>
  4030a0:	b005      	add	sp, #20
  4030a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030a6:	2200      	movs	r2, #0
  4030a8:	2300      	movs	r3, #0
  4030aa:	2000      	movs	r0, #0
  4030ac:	495e      	ldr	r1, [pc, #376]	; (403228 <__ieee754_log+0x390>)
  4030ae:	f000 fbd1 	bl	403854 <__aeabi_ddiv>
  4030b2:	b005      	add	sp, #20
  4030b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4030b8:	a355      	add	r3, pc, #340	; (adr r3, 403210 <__ieee754_log+0x378>)
  4030ba:	e9d3 2300 	ldrd	r2, r3, [r3]
  4030be:	4650      	mov	r0, sl
  4030c0:	4659      	mov	r1, fp
  4030c2:	f000 fa9d 	bl	403600 <__aeabi_dmul>
  4030c6:	4602      	mov	r2, r0
  4030c8:	460b      	mov	r3, r1
  4030ca:	2000      	movs	r0, #0
  4030cc:	4955      	ldr	r1, [pc, #340]	; (403224 <__ieee754_log+0x38c>)
  4030ce:	f000 f8e3 	bl	403298 <__aeabi_dsub>
  4030d2:	4652      	mov	r2, sl
  4030d4:	4606      	mov	r6, r0
  4030d6:	460f      	mov	r7, r1
  4030d8:	465b      	mov	r3, fp
  4030da:	4650      	mov	r0, sl
  4030dc:	4659      	mov	r1, fp
  4030de:	f000 fa8f 	bl	403600 <__aeabi_dmul>
  4030e2:	4602      	mov	r2, r0
  4030e4:	460b      	mov	r3, r1
  4030e6:	4630      	mov	r0, r6
  4030e8:	4639      	mov	r1, r7
  4030ea:	f000 fa89 	bl	403600 <__aeabi_dmul>
  4030ee:	4606      	mov	r6, r0
  4030f0:	460f      	mov	r7, r1
  4030f2:	2c00      	cmp	r4, #0
  4030f4:	f040 809a 	bne.w	40322c <__ieee754_log+0x394>
  4030f8:	4602      	mov	r2, r0
  4030fa:	460b      	mov	r3, r1
  4030fc:	4650      	mov	r0, sl
  4030fe:	4659      	mov	r1, fp
  403100:	f000 f8ca 	bl	403298 <__aeabi_dsub>
  403104:	e737      	b.n	402f76 <__ieee754_log+0xde>
  403106:	2c00      	cmp	r4, #0
  403108:	f000 80a4 	beq.w	403254 <__ieee754_log+0x3bc>
  40310c:	a32e      	add	r3, pc, #184	; (adr r3, 4031c8 <__ieee754_log+0x330>)
  40310e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403112:	e9dd 0100 	ldrd	r0, r1, [sp]
  403116:	f000 fa73 	bl	403600 <__aeabi_dmul>
  40311a:	4642      	mov	r2, r8
  40311c:	464b      	mov	r3, r9
  40311e:	4604      	mov	r4, r0
  403120:	460d      	mov	r5, r1
  403122:	4650      	mov	r0, sl
  403124:	4659      	mov	r1, fp
  403126:	f000 f8b7 	bl	403298 <__aeabi_dsub>
  40312a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40312e:	f000 fa67 	bl	403600 <__aeabi_dmul>
  403132:	a327      	add	r3, pc, #156	; (adr r3, 4031d0 <__ieee754_log+0x338>)
  403134:	e9d3 2300 	ldrd	r2, r3, [r3]
  403138:	4606      	mov	r6, r0
  40313a:	460f      	mov	r7, r1
  40313c:	e9dd 0100 	ldrd	r0, r1, [sp]
  403140:	f000 fa5e 	bl	403600 <__aeabi_dmul>
  403144:	e021      	b.n	40318a <__ieee754_log+0x2f2>
  403146:	a320      	add	r3, pc, #128	; (adr r3, 4031c8 <__ieee754_log+0x330>)
  403148:	e9d3 2300 	ldrd	r2, r3, [r3]
  40314c:	e9dd 0100 	ldrd	r0, r1, [sp]
  403150:	f000 fa56 	bl	403600 <__aeabi_dmul>
  403154:	4632      	mov	r2, r6
  403156:	463b      	mov	r3, r7
  403158:	4604      	mov	r4, r0
  40315a:	460d      	mov	r5, r1
  40315c:	4640      	mov	r0, r8
  40315e:	4649      	mov	r1, r9
  403160:	f000 f89c 	bl	40329c <__adddf3>
  403164:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403168:	f000 fa4a 	bl	403600 <__aeabi_dmul>
  40316c:	a318      	add	r3, pc, #96	; (adr r3, 4031d0 <__ieee754_log+0x338>)
  40316e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403172:	4680      	mov	r8, r0
  403174:	4689      	mov	r9, r1
  403176:	e9dd 0100 	ldrd	r0, r1, [sp]
  40317a:	f000 fa41 	bl	403600 <__aeabi_dmul>
  40317e:	4602      	mov	r2, r0
  403180:	460b      	mov	r3, r1
  403182:	4640      	mov	r0, r8
  403184:	4649      	mov	r1, r9
  403186:	f000 f889 	bl	40329c <__adddf3>
  40318a:	4602      	mov	r2, r0
  40318c:	460b      	mov	r3, r1
  40318e:	4630      	mov	r0, r6
  403190:	4639      	mov	r1, r7
  403192:	f000 f881 	bl	403298 <__aeabi_dsub>
  403196:	4652      	mov	r2, sl
  403198:	465b      	mov	r3, fp
  40319a:	f000 f87d 	bl	403298 <__aeabi_dsub>
  40319e:	4602      	mov	r2, r0
  4031a0:	460b      	mov	r3, r1
  4031a2:	4620      	mov	r0, r4
  4031a4:	4629      	mov	r1, r5
  4031a6:	f000 f877 	bl	403298 <__aeabi_dsub>
  4031aa:	b005      	add	sp, #20
  4031ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4031b0:	4602      	mov	r2, r0
  4031b2:	460b      	mov	r3, r1
  4031b4:	f000 f870 	bl	403298 <__aeabi_dsub>
  4031b8:	2200      	movs	r2, #0
  4031ba:	2300      	movs	r3, #0
  4031bc:	f000 fb4a 	bl	403854 <__aeabi_ddiv>
  4031c0:	e6d9      	b.n	402f76 <__ieee754_log+0xde>
  4031c2:	2000      	movs	r0, #0
  4031c4:	2100      	movs	r1, #0
  4031c6:	e6d6      	b.n	402f76 <__ieee754_log+0xde>
  4031c8:	fee00000 	.word	0xfee00000
  4031cc:	3fe62e42 	.word	0x3fe62e42
  4031d0:	35793c76 	.word	0x35793c76
  4031d4:	3dea39ef 	.word	0x3dea39ef
  4031d8:	df3e5244 	.word	0xdf3e5244
  4031dc:	3fc2f112 	.word	0x3fc2f112
  4031e0:	96cb03de 	.word	0x96cb03de
  4031e4:	3fc74664 	.word	0x3fc74664
  4031e8:	94229359 	.word	0x94229359
  4031ec:	3fd24924 	.word	0x3fd24924
  4031f0:	55555593 	.word	0x55555593
  4031f4:	3fe55555 	.word	0x3fe55555
  4031f8:	d078c69f 	.word	0xd078c69f
  4031fc:	3fc39a09 	.word	0x3fc39a09
  403200:	1d8e78af 	.word	0x1d8e78af
  403204:	3fcc71c5 	.word	0x3fcc71c5
  403208:	9997fa04 	.word	0x9997fa04
  40320c:	3fd99999 	.word	0x3fd99999
  403210:	55555555 	.word	0x55555555
  403214:	3fd55555 	.word	0x3fd55555
  403218:	43500000 	.word	0x43500000
  40321c:	7fefffff 	.word	0x7fefffff
  403220:	3ff00000 	.word	0x3ff00000
  403224:	3fe00000 	.word	0x3fe00000
  403228:	c3500000 	.word	0xc3500000
  40322c:	4620      	mov	r0, r4
  40322e:	f000 f981 	bl	403534 <__aeabi_i2d>
  403232:	a30f      	add	r3, pc, #60	; (adr r3, 403270 <__ieee754_log+0x3d8>)
  403234:	e9d3 2300 	ldrd	r2, r3, [r3]
  403238:	4680      	mov	r8, r0
  40323a:	4689      	mov	r9, r1
  40323c:	f000 f9e0 	bl	403600 <__aeabi_dmul>
  403240:	a30d      	add	r3, pc, #52	; (adr r3, 403278 <__ieee754_log+0x3e0>)
  403242:	e9d3 2300 	ldrd	r2, r3, [r3]
  403246:	4604      	mov	r4, r0
  403248:	460d      	mov	r5, r1
  40324a:	4640      	mov	r0, r8
  40324c:	4649      	mov	r1, r9
  40324e:	f000 f9d7 	bl	403600 <__aeabi_dmul>
  403252:	e79a      	b.n	40318a <__ieee754_log+0x2f2>
  403254:	4602      	mov	r2, r0
  403256:	460b      	mov	r3, r1
  403258:	4650      	mov	r0, sl
  40325a:	4659      	mov	r1, fp
  40325c:	f000 f81c 	bl	403298 <__aeabi_dsub>
  403260:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  403264:	f000 f9cc 	bl	403600 <__aeabi_dmul>
  403268:	e714      	b.n	403094 <__ieee754_log+0x1fc>
  40326a:	bf00      	nop
  40326c:	f3af 8000 	nop.w
  403270:	fee00000 	.word	0xfee00000
  403274:	3fe62e42 	.word	0x3fe62e42
  403278:	35793c76 	.word	0x35793c76
  40327c:	3dea39ef 	.word	0x3dea39ef

00403280 <matherr>:
  403280:	2000      	movs	r0, #0
  403282:	4770      	bx	lr

00403284 <nan>:
  403284:	2000      	movs	r0, #0
  403286:	4901      	ldr	r1, [pc, #4]	; (40328c <nan+0x8>)
  403288:	4770      	bx	lr
  40328a:	bf00      	nop
  40328c:	7ff80000 	.word	0x7ff80000

00403290 <__aeabi_drsub>:
  403290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  403294:	e002      	b.n	40329c <__adddf3>
  403296:	bf00      	nop

00403298 <__aeabi_dsub>:
  403298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0040329c <__adddf3>:
  40329c:	b530      	push	{r4, r5, lr}
  40329e:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4032a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4032a6:	ea94 0f05 	teq	r4, r5
  4032aa:	bf08      	it	eq
  4032ac:	ea90 0f02 	teqeq	r0, r2
  4032b0:	bf1f      	itttt	ne
  4032b2:	ea54 0c00 	orrsne.w	ip, r4, r0
  4032b6:	ea55 0c02 	orrsne.w	ip, r5, r2
  4032ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4032be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4032c2:	f000 80e2 	beq.w	40348a <__adddf3+0x1ee>
  4032c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4032ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4032ce:	bfb8      	it	lt
  4032d0:	426d      	neglt	r5, r5
  4032d2:	dd0c      	ble.n	4032ee <__adddf3+0x52>
  4032d4:	442c      	add	r4, r5
  4032d6:	ea80 0202 	eor.w	r2, r0, r2
  4032da:	ea81 0303 	eor.w	r3, r1, r3
  4032de:	ea82 0000 	eor.w	r0, r2, r0
  4032e2:	ea83 0101 	eor.w	r1, r3, r1
  4032e6:	ea80 0202 	eor.w	r2, r0, r2
  4032ea:	ea81 0303 	eor.w	r3, r1, r3
  4032ee:	2d36      	cmp	r5, #54	; 0x36
  4032f0:	bf88      	it	hi
  4032f2:	bd30      	pophi	{r4, r5, pc}
  4032f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4032f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4032fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  403300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  403304:	d002      	beq.n	40330c <__adddf3+0x70>
  403306:	4240      	negs	r0, r0
  403308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40330c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  403310:	ea4f 3303 	mov.w	r3, r3, lsl #12
  403314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  403318:	d002      	beq.n	403320 <__adddf3+0x84>
  40331a:	4252      	negs	r2, r2
  40331c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  403320:	ea94 0f05 	teq	r4, r5
  403324:	f000 80a7 	beq.w	403476 <__adddf3+0x1da>
  403328:	f1a4 0401 	sub.w	r4, r4, #1
  40332c:	f1d5 0e20 	rsbs	lr, r5, #32
  403330:	db0d      	blt.n	40334e <__adddf3+0xb2>
  403332:	fa02 fc0e 	lsl.w	ip, r2, lr
  403336:	fa22 f205 	lsr.w	r2, r2, r5
  40333a:	1880      	adds	r0, r0, r2
  40333c:	f141 0100 	adc.w	r1, r1, #0
  403340:	fa03 f20e 	lsl.w	r2, r3, lr
  403344:	1880      	adds	r0, r0, r2
  403346:	fa43 f305 	asr.w	r3, r3, r5
  40334a:	4159      	adcs	r1, r3
  40334c:	e00e      	b.n	40336c <__adddf3+0xd0>
  40334e:	f1a5 0520 	sub.w	r5, r5, #32
  403352:	f10e 0e20 	add.w	lr, lr, #32
  403356:	2a01      	cmp	r2, #1
  403358:	fa03 fc0e 	lsl.w	ip, r3, lr
  40335c:	bf28      	it	cs
  40335e:	f04c 0c02 	orrcs.w	ip, ip, #2
  403362:	fa43 f305 	asr.w	r3, r3, r5
  403366:	18c0      	adds	r0, r0, r3
  403368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  40336c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  403370:	d507      	bpl.n	403382 <__adddf3+0xe6>
  403372:	f04f 0e00 	mov.w	lr, #0
  403376:	f1dc 0c00 	rsbs	ip, ip, #0
  40337a:	eb7e 0000 	sbcs.w	r0, lr, r0
  40337e:	eb6e 0101 	sbc.w	r1, lr, r1
  403382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  403386:	d31b      	bcc.n	4033c0 <__adddf3+0x124>
  403388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  40338c:	d30c      	bcc.n	4033a8 <__adddf3+0x10c>
  40338e:	0849      	lsrs	r1, r1, #1
  403390:	ea5f 0030 	movs.w	r0, r0, rrx
  403394:	ea4f 0c3c 	mov.w	ip, ip, rrx
  403398:	f104 0401 	add.w	r4, r4, #1
  40339c:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4033a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4033a4:	f080 809a 	bcs.w	4034dc <__adddf3+0x240>
  4033a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4033ac:	bf08      	it	eq
  4033ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4033b2:	f150 0000 	adcs.w	r0, r0, #0
  4033b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4033ba:	ea41 0105 	orr.w	r1, r1, r5
  4033be:	bd30      	pop	{r4, r5, pc}
  4033c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4033c4:	4140      	adcs	r0, r0
  4033c6:	eb41 0101 	adc.w	r1, r1, r1
  4033ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4033ce:	f1a4 0401 	sub.w	r4, r4, #1
  4033d2:	d1e9      	bne.n	4033a8 <__adddf3+0x10c>
  4033d4:	f091 0f00 	teq	r1, #0
  4033d8:	bf04      	itt	eq
  4033da:	4601      	moveq	r1, r0
  4033dc:	2000      	moveq	r0, #0
  4033de:	fab1 f381 	clz	r3, r1
  4033e2:	bf08      	it	eq
  4033e4:	3320      	addeq	r3, #32
  4033e6:	f1a3 030b 	sub.w	r3, r3, #11
  4033ea:	f1b3 0220 	subs.w	r2, r3, #32
  4033ee:	da0c      	bge.n	40340a <__adddf3+0x16e>
  4033f0:	320c      	adds	r2, #12
  4033f2:	dd08      	ble.n	403406 <__adddf3+0x16a>
  4033f4:	f102 0c14 	add.w	ip, r2, #20
  4033f8:	f1c2 020c 	rsb	r2, r2, #12
  4033fc:	fa01 f00c 	lsl.w	r0, r1, ip
  403400:	fa21 f102 	lsr.w	r1, r1, r2
  403404:	e00c      	b.n	403420 <__adddf3+0x184>
  403406:	f102 0214 	add.w	r2, r2, #20
  40340a:	bfd8      	it	le
  40340c:	f1c2 0c20 	rsble	ip, r2, #32
  403410:	fa01 f102 	lsl.w	r1, r1, r2
  403414:	fa20 fc0c 	lsr.w	ip, r0, ip
  403418:	bfdc      	itt	le
  40341a:	ea41 010c 	orrle.w	r1, r1, ip
  40341e:	4090      	lslle	r0, r2
  403420:	1ae4      	subs	r4, r4, r3
  403422:	bfa2      	ittt	ge
  403424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  403428:	4329      	orrge	r1, r5
  40342a:	bd30      	popge	{r4, r5, pc}
  40342c:	ea6f 0404 	mvn.w	r4, r4
  403430:	3c1f      	subs	r4, #31
  403432:	da1c      	bge.n	40346e <__adddf3+0x1d2>
  403434:	340c      	adds	r4, #12
  403436:	dc0e      	bgt.n	403456 <__adddf3+0x1ba>
  403438:	f104 0414 	add.w	r4, r4, #20
  40343c:	f1c4 0220 	rsb	r2, r4, #32
  403440:	fa20 f004 	lsr.w	r0, r0, r4
  403444:	fa01 f302 	lsl.w	r3, r1, r2
  403448:	ea40 0003 	orr.w	r0, r0, r3
  40344c:	fa21 f304 	lsr.w	r3, r1, r4
  403450:	ea45 0103 	orr.w	r1, r5, r3
  403454:	bd30      	pop	{r4, r5, pc}
  403456:	f1c4 040c 	rsb	r4, r4, #12
  40345a:	f1c4 0220 	rsb	r2, r4, #32
  40345e:	fa20 f002 	lsr.w	r0, r0, r2
  403462:	fa01 f304 	lsl.w	r3, r1, r4
  403466:	ea40 0003 	orr.w	r0, r0, r3
  40346a:	4629      	mov	r1, r5
  40346c:	bd30      	pop	{r4, r5, pc}
  40346e:	fa21 f004 	lsr.w	r0, r1, r4
  403472:	4629      	mov	r1, r5
  403474:	bd30      	pop	{r4, r5, pc}
  403476:	f094 0f00 	teq	r4, #0
  40347a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  40347e:	bf06      	itte	eq
  403480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  403484:	3401      	addeq	r4, #1
  403486:	3d01      	subne	r5, #1
  403488:	e74e      	b.n	403328 <__adddf3+0x8c>
  40348a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40348e:	bf18      	it	ne
  403490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  403494:	d029      	beq.n	4034ea <__adddf3+0x24e>
  403496:	ea94 0f05 	teq	r4, r5
  40349a:	bf08      	it	eq
  40349c:	ea90 0f02 	teqeq	r0, r2
  4034a0:	d005      	beq.n	4034ae <__adddf3+0x212>
  4034a2:	ea54 0c00 	orrs.w	ip, r4, r0
  4034a6:	bf04      	itt	eq
  4034a8:	4619      	moveq	r1, r3
  4034aa:	4610      	moveq	r0, r2
  4034ac:	bd30      	pop	{r4, r5, pc}
  4034ae:	ea91 0f03 	teq	r1, r3
  4034b2:	bf1e      	ittt	ne
  4034b4:	2100      	movne	r1, #0
  4034b6:	2000      	movne	r0, #0
  4034b8:	bd30      	popne	{r4, r5, pc}
  4034ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4034be:	d105      	bne.n	4034cc <__adddf3+0x230>
  4034c0:	0040      	lsls	r0, r0, #1
  4034c2:	4149      	adcs	r1, r1
  4034c4:	bf28      	it	cs
  4034c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4034ca:	bd30      	pop	{r4, r5, pc}
  4034cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4034d0:	bf3c      	itt	cc
  4034d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4034d6:	bd30      	popcc	{r4, r5, pc}
  4034d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4034dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4034e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4034e4:	f04f 0000 	mov.w	r0, #0
  4034e8:	bd30      	pop	{r4, r5, pc}
  4034ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4034ee:	bf1a      	itte	ne
  4034f0:	4619      	movne	r1, r3
  4034f2:	4610      	movne	r0, r2
  4034f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4034f8:	bf1c      	itt	ne
  4034fa:	460b      	movne	r3, r1
  4034fc:	4602      	movne	r2, r0
  4034fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  403502:	bf06      	itte	eq
  403504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  403508:	ea91 0f03 	teqeq	r1, r3
  40350c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  403510:	bd30      	pop	{r4, r5, pc}
  403512:	bf00      	nop

00403514 <__aeabi_ui2d>:
  403514:	f090 0f00 	teq	r0, #0
  403518:	bf04      	itt	eq
  40351a:	2100      	moveq	r1, #0
  40351c:	4770      	bxeq	lr
  40351e:	b530      	push	{r4, r5, lr}
  403520:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403524:	f104 0432 	add.w	r4, r4, #50	; 0x32
  403528:	f04f 0500 	mov.w	r5, #0
  40352c:	f04f 0100 	mov.w	r1, #0
  403530:	e750      	b.n	4033d4 <__adddf3+0x138>
  403532:	bf00      	nop

00403534 <__aeabi_i2d>:
  403534:	f090 0f00 	teq	r0, #0
  403538:	bf04      	itt	eq
  40353a:	2100      	moveq	r1, #0
  40353c:	4770      	bxeq	lr
  40353e:	b530      	push	{r4, r5, lr}
  403540:	f44f 6480 	mov.w	r4, #1024	; 0x400
  403544:	f104 0432 	add.w	r4, r4, #50	; 0x32
  403548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  40354c:	bf48      	it	mi
  40354e:	4240      	negmi	r0, r0
  403550:	f04f 0100 	mov.w	r1, #0
  403554:	e73e      	b.n	4033d4 <__adddf3+0x138>
  403556:	bf00      	nop

00403558 <__aeabi_f2d>:
  403558:	0042      	lsls	r2, r0, #1
  40355a:	ea4f 01e2 	mov.w	r1, r2, asr #3
  40355e:	ea4f 0131 	mov.w	r1, r1, rrx
  403562:	ea4f 7002 	mov.w	r0, r2, lsl #28
  403566:	bf1f      	itttt	ne
  403568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  40356c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  403570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  403574:	4770      	bxne	lr
  403576:	f092 0f00 	teq	r2, #0
  40357a:	bf14      	ite	ne
  40357c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  403580:	4770      	bxeq	lr
  403582:	b530      	push	{r4, r5, lr}
  403584:	f44f 7460 	mov.w	r4, #896	; 0x380
  403588:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  40358c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  403590:	e720      	b.n	4033d4 <__adddf3+0x138>
  403592:	bf00      	nop

00403594 <__aeabi_ul2d>:
  403594:	ea50 0201 	orrs.w	r2, r0, r1
  403598:	bf08      	it	eq
  40359a:	4770      	bxeq	lr
  40359c:	b530      	push	{r4, r5, lr}
  40359e:	f04f 0500 	mov.w	r5, #0
  4035a2:	e00a      	b.n	4035ba <__aeabi_l2d+0x16>

004035a4 <__aeabi_l2d>:
  4035a4:	ea50 0201 	orrs.w	r2, r0, r1
  4035a8:	bf08      	it	eq
  4035aa:	4770      	bxeq	lr
  4035ac:	b530      	push	{r4, r5, lr}
  4035ae:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4035b2:	d502      	bpl.n	4035ba <__aeabi_l2d+0x16>
  4035b4:	4240      	negs	r0, r0
  4035b6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4035ba:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4035be:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4035c2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4035c6:	f43f aedc 	beq.w	403382 <__adddf3+0xe6>
  4035ca:	f04f 0203 	mov.w	r2, #3
  4035ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4035d2:	bf18      	it	ne
  4035d4:	3203      	addne	r2, #3
  4035d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4035da:	bf18      	it	ne
  4035dc:	3203      	addne	r2, #3
  4035de:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4035e2:	f1c2 0320 	rsb	r3, r2, #32
  4035e6:	fa00 fc03 	lsl.w	ip, r0, r3
  4035ea:	fa20 f002 	lsr.w	r0, r0, r2
  4035ee:	fa01 fe03 	lsl.w	lr, r1, r3
  4035f2:	ea40 000e 	orr.w	r0, r0, lr
  4035f6:	fa21 f102 	lsr.w	r1, r1, r2
  4035fa:	4414      	add	r4, r2
  4035fc:	e6c1      	b.n	403382 <__adddf3+0xe6>
  4035fe:	bf00      	nop

00403600 <__aeabi_dmul>:
  403600:	b570      	push	{r4, r5, r6, lr}
  403602:	f04f 0cff 	mov.w	ip, #255	; 0xff
  403606:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40360a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40360e:	bf1d      	ittte	ne
  403610:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  403614:	ea94 0f0c 	teqne	r4, ip
  403618:	ea95 0f0c 	teqne	r5, ip
  40361c:	f000 f8de 	bleq	4037dc <__aeabi_dmul+0x1dc>
  403620:	442c      	add	r4, r5
  403622:	ea81 0603 	eor.w	r6, r1, r3
  403626:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40362a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40362e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  403632:	bf18      	it	ne
  403634:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  403638:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40363c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  403640:	d038      	beq.n	4036b4 <__aeabi_dmul+0xb4>
  403642:	fba0 ce02 	umull	ip, lr, r0, r2
  403646:	f04f 0500 	mov.w	r5, #0
  40364a:	fbe1 e502 	umlal	lr, r5, r1, r2
  40364e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  403652:	fbe0 e503 	umlal	lr, r5, r0, r3
  403656:	f04f 0600 	mov.w	r6, #0
  40365a:	fbe1 5603 	umlal	r5, r6, r1, r3
  40365e:	f09c 0f00 	teq	ip, #0
  403662:	bf18      	it	ne
  403664:	f04e 0e01 	orrne.w	lr, lr, #1
  403668:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  40366c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  403670:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  403674:	d204      	bcs.n	403680 <__aeabi_dmul+0x80>
  403676:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  40367a:	416d      	adcs	r5, r5
  40367c:	eb46 0606 	adc.w	r6, r6, r6
  403680:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  403684:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  403688:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  40368c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  403690:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  403694:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  403698:	bf88      	it	hi
  40369a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40369e:	d81e      	bhi.n	4036de <__aeabi_dmul+0xde>
  4036a0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4036a4:	bf08      	it	eq
  4036a6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4036aa:	f150 0000 	adcs.w	r0, r0, #0
  4036ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4036b2:	bd70      	pop	{r4, r5, r6, pc}
  4036b4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4036b8:	ea46 0101 	orr.w	r1, r6, r1
  4036bc:	ea40 0002 	orr.w	r0, r0, r2
  4036c0:	ea81 0103 	eor.w	r1, r1, r3
  4036c4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  4036c8:	bfc2      	ittt	gt
  4036ca:	ebd4 050c 	rsbsgt	r5, r4, ip
  4036ce:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4036d2:	bd70      	popgt	{r4, r5, r6, pc}
  4036d4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4036d8:	f04f 0e00 	mov.w	lr, #0
  4036dc:	3c01      	subs	r4, #1
  4036de:	f300 80ab 	bgt.w	403838 <__aeabi_dmul+0x238>
  4036e2:	f114 0f36 	cmn.w	r4, #54	; 0x36
  4036e6:	bfde      	ittt	le
  4036e8:	2000      	movle	r0, #0
  4036ea:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  4036ee:	bd70      	pople	{r4, r5, r6, pc}
  4036f0:	f1c4 0400 	rsb	r4, r4, #0
  4036f4:	3c20      	subs	r4, #32
  4036f6:	da35      	bge.n	403764 <__aeabi_dmul+0x164>
  4036f8:	340c      	adds	r4, #12
  4036fa:	dc1b      	bgt.n	403734 <__aeabi_dmul+0x134>
  4036fc:	f104 0414 	add.w	r4, r4, #20
  403700:	f1c4 0520 	rsb	r5, r4, #32
  403704:	fa00 f305 	lsl.w	r3, r0, r5
  403708:	fa20 f004 	lsr.w	r0, r0, r4
  40370c:	fa01 f205 	lsl.w	r2, r1, r5
  403710:	ea40 0002 	orr.w	r0, r0, r2
  403714:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  403718:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  40371c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403720:	fa21 f604 	lsr.w	r6, r1, r4
  403724:	eb42 0106 	adc.w	r1, r2, r6
  403728:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  40372c:	bf08      	it	eq
  40372e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403732:	bd70      	pop	{r4, r5, r6, pc}
  403734:	f1c4 040c 	rsb	r4, r4, #12
  403738:	f1c4 0520 	rsb	r5, r4, #32
  40373c:	fa00 f304 	lsl.w	r3, r0, r4
  403740:	fa20 f005 	lsr.w	r0, r0, r5
  403744:	fa01 f204 	lsl.w	r2, r1, r4
  403748:	ea40 0002 	orr.w	r0, r0, r2
  40374c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403750:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403754:	f141 0100 	adc.w	r1, r1, #0
  403758:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  40375c:	bf08      	it	eq
  40375e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  403762:	bd70      	pop	{r4, r5, r6, pc}
  403764:	f1c4 0520 	rsb	r5, r4, #32
  403768:	fa00 f205 	lsl.w	r2, r0, r5
  40376c:	ea4e 0e02 	orr.w	lr, lr, r2
  403770:	fa20 f304 	lsr.w	r3, r0, r4
  403774:	fa01 f205 	lsl.w	r2, r1, r5
  403778:	ea43 0302 	orr.w	r3, r3, r2
  40377c:	fa21 f004 	lsr.w	r0, r1, r4
  403780:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403784:	fa21 f204 	lsr.w	r2, r1, r4
  403788:	ea20 0002 	bic.w	r0, r0, r2
  40378c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  403790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403794:	bf08      	it	eq
  403796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40379a:	bd70      	pop	{r4, r5, r6, pc}
  40379c:	f094 0f00 	teq	r4, #0
  4037a0:	d10f      	bne.n	4037c2 <__aeabi_dmul+0x1c2>
  4037a2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4037a6:	0040      	lsls	r0, r0, #1
  4037a8:	eb41 0101 	adc.w	r1, r1, r1
  4037ac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4037b0:	bf08      	it	eq
  4037b2:	3c01      	subeq	r4, #1
  4037b4:	d0f7      	beq.n	4037a6 <__aeabi_dmul+0x1a6>
  4037b6:	ea41 0106 	orr.w	r1, r1, r6
  4037ba:	f095 0f00 	teq	r5, #0
  4037be:	bf18      	it	ne
  4037c0:	4770      	bxne	lr
  4037c2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4037c6:	0052      	lsls	r2, r2, #1
  4037c8:	eb43 0303 	adc.w	r3, r3, r3
  4037cc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  4037d0:	bf08      	it	eq
  4037d2:	3d01      	subeq	r5, #1
  4037d4:	d0f7      	beq.n	4037c6 <__aeabi_dmul+0x1c6>
  4037d6:	ea43 0306 	orr.w	r3, r3, r6
  4037da:	4770      	bx	lr
  4037dc:	ea94 0f0c 	teq	r4, ip
  4037e0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4037e4:	bf18      	it	ne
  4037e6:	ea95 0f0c 	teqne	r5, ip
  4037ea:	d00c      	beq.n	403806 <__aeabi_dmul+0x206>
  4037ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  4037f0:	bf18      	it	ne
  4037f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4037f6:	d1d1      	bne.n	40379c <__aeabi_dmul+0x19c>
  4037f8:	ea81 0103 	eor.w	r1, r1, r3
  4037fc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403800:	f04f 0000 	mov.w	r0, #0
  403804:	bd70      	pop	{r4, r5, r6, pc}
  403806:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40380a:	bf06      	itte	eq
  40380c:	4610      	moveq	r0, r2
  40380e:	4619      	moveq	r1, r3
  403810:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  403814:	d019      	beq.n	40384a <__aeabi_dmul+0x24a>
  403816:	ea94 0f0c 	teq	r4, ip
  40381a:	d102      	bne.n	403822 <__aeabi_dmul+0x222>
  40381c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  403820:	d113      	bne.n	40384a <__aeabi_dmul+0x24a>
  403822:	ea95 0f0c 	teq	r5, ip
  403826:	d105      	bne.n	403834 <__aeabi_dmul+0x234>
  403828:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  40382c:	bf1c      	itt	ne
  40382e:	4610      	movne	r0, r2
  403830:	4619      	movne	r1, r3
  403832:	d10a      	bne.n	40384a <__aeabi_dmul+0x24a>
  403834:	ea81 0103 	eor.w	r1, r1, r3
  403838:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40383c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  403840:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  403844:	f04f 0000 	mov.w	r0, #0
  403848:	bd70      	pop	{r4, r5, r6, pc}
  40384a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40384e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  403852:	bd70      	pop	{r4, r5, r6, pc}

00403854 <__aeabi_ddiv>:
  403854:	b570      	push	{r4, r5, r6, lr}
  403856:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40385a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40385e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  403862:	bf1d      	ittte	ne
  403864:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  403868:	ea94 0f0c 	teqne	r4, ip
  40386c:	ea95 0f0c 	teqne	r5, ip
  403870:	f000 f8a7 	bleq	4039c2 <__aeabi_ddiv+0x16e>
  403874:	eba4 0405 	sub.w	r4, r4, r5
  403878:	ea81 0e03 	eor.w	lr, r1, r3
  40387c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  403880:	ea4f 3101 	mov.w	r1, r1, lsl #12
  403884:	f000 8088 	beq.w	403998 <__aeabi_ddiv+0x144>
  403888:	ea4f 3303 	mov.w	r3, r3, lsl #12
  40388c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  403890:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  403894:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  403898:	ea4f 2202 	mov.w	r2, r2, lsl #8
  40389c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4038a0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4038a4:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4038a8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4038ac:	429d      	cmp	r5, r3
  4038ae:	bf08      	it	eq
  4038b0:	4296      	cmpeq	r6, r2
  4038b2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4038b6:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4038ba:	d202      	bcs.n	4038c2 <__aeabi_ddiv+0x6e>
  4038bc:	085b      	lsrs	r3, r3, #1
  4038be:	ea4f 0232 	mov.w	r2, r2, rrx
  4038c2:	1ab6      	subs	r6, r6, r2
  4038c4:	eb65 0503 	sbc.w	r5, r5, r3
  4038c8:	085b      	lsrs	r3, r3, #1
  4038ca:	ea4f 0232 	mov.w	r2, r2, rrx
  4038ce:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4038d2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4038d6:	ebb6 0e02 	subs.w	lr, r6, r2
  4038da:	eb75 0e03 	sbcs.w	lr, r5, r3
  4038de:	bf22      	ittt	cs
  4038e0:	1ab6      	subcs	r6, r6, r2
  4038e2:	4675      	movcs	r5, lr
  4038e4:	ea40 000c 	orrcs.w	r0, r0, ip
  4038e8:	085b      	lsrs	r3, r3, #1
  4038ea:	ea4f 0232 	mov.w	r2, r2, rrx
  4038ee:	ebb6 0e02 	subs.w	lr, r6, r2
  4038f2:	eb75 0e03 	sbcs.w	lr, r5, r3
  4038f6:	bf22      	ittt	cs
  4038f8:	1ab6      	subcs	r6, r6, r2
  4038fa:	4675      	movcs	r5, lr
  4038fc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  403900:	085b      	lsrs	r3, r3, #1
  403902:	ea4f 0232 	mov.w	r2, r2, rrx
  403906:	ebb6 0e02 	subs.w	lr, r6, r2
  40390a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40390e:	bf22      	ittt	cs
  403910:	1ab6      	subcs	r6, r6, r2
  403912:	4675      	movcs	r5, lr
  403914:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  403918:	085b      	lsrs	r3, r3, #1
  40391a:	ea4f 0232 	mov.w	r2, r2, rrx
  40391e:	ebb6 0e02 	subs.w	lr, r6, r2
  403922:	eb75 0e03 	sbcs.w	lr, r5, r3
  403926:	bf22      	ittt	cs
  403928:	1ab6      	subcs	r6, r6, r2
  40392a:	4675      	movcs	r5, lr
  40392c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  403930:	ea55 0e06 	orrs.w	lr, r5, r6
  403934:	d018      	beq.n	403968 <__aeabi_ddiv+0x114>
  403936:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40393a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40393e:	ea4f 1606 	mov.w	r6, r6, lsl #4
  403942:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  403946:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40394a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40394e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  403952:	d1c0      	bne.n	4038d6 <__aeabi_ddiv+0x82>
  403954:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403958:	d10b      	bne.n	403972 <__aeabi_ddiv+0x11e>
  40395a:	ea41 0100 	orr.w	r1, r1, r0
  40395e:	f04f 0000 	mov.w	r0, #0
  403962:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  403966:	e7b6      	b.n	4038d6 <__aeabi_ddiv+0x82>
  403968:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40396c:	bf04      	itt	eq
  40396e:	4301      	orreq	r1, r0
  403970:	2000      	moveq	r0, #0
  403972:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  403976:	bf88      	it	hi
  403978:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  40397c:	f63f aeaf 	bhi.w	4036de <__aeabi_dmul+0xde>
  403980:	ebb5 0c03 	subs.w	ip, r5, r3
  403984:	bf04      	itt	eq
  403986:	ebb6 0c02 	subseq.w	ip, r6, r2
  40398a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40398e:	f150 0000 	adcs.w	r0, r0, #0
  403992:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  403996:	bd70      	pop	{r4, r5, r6, pc}
  403998:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  40399c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4039a0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4039a4:	bfc2      	ittt	gt
  4039a6:	ebd4 050c 	rsbsgt	r5, r4, ip
  4039aa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4039ae:	bd70      	popgt	{r4, r5, r6, pc}
  4039b0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4039b4:	f04f 0e00 	mov.w	lr, #0
  4039b8:	3c01      	subs	r4, #1
  4039ba:	e690      	b.n	4036de <__aeabi_dmul+0xde>
  4039bc:	ea45 0e06 	orr.w	lr, r5, r6
  4039c0:	e68d      	b.n	4036de <__aeabi_dmul+0xde>
  4039c2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4039c6:	ea94 0f0c 	teq	r4, ip
  4039ca:	bf08      	it	eq
  4039cc:	ea95 0f0c 	teqeq	r5, ip
  4039d0:	f43f af3b 	beq.w	40384a <__aeabi_dmul+0x24a>
  4039d4:	ea94 0f0c 	teq	r4, ip
  4039d8:	d10a      	bne.n	4039f0 <__aeabi_ddiv+0x19c>
  4039da:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4039de:	f47f af34 	bne.w	40384a <__aeabi_dmul+0x24a>
  4039e2:	ea95 0f0c 	teq	r5, ip
  4039e6:	f47f af25 	bne.w	403834 <__aeabi_dmul+0x234>
  4039ea:	4610      	mov	r0, r2
  4039ec:	4619      	mov	r1, r3
  4039ee:	e72c      	b.n	40384a <__aeabi_dmul+0x24a>
  4039f0:	ea95 0f0c 	teq	r5, ip
  4039f4:	d106      	bne.n	403a04 <__aeabi_ddiv+0x1b0>
  4039f6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4039fa:	f43f aefd 	beq.w	4037f8 <__aeabi_dmul+0x1f8>
  4039fe:	4610      	mov	r0, r2
  403a00:	4619      	mov	r1, r3
  403a02:	e722      	b.n	40384a <__aeabi_dmul+0x24a>
  403a04:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  403a08:	bf18      	it	ne
  403a0a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  403a0e:	f47f aec5 	bne.w	40379c <__aeabi_dmul+0x19c>
  403a12:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  403a16:	f47f af0d 	bne.w	403834 <__aeabi_dmul+0x234>
  403a1a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  403a1e:	f47f aeeb 	bne.w	4037f8 <__aeabi_dmul+0x1f8>
  403a22:	e712      	b.n	40384a <__aeabi_dmul+0x24a>

00403a24 <__gedf2>:
  403a24:	f04f 3cff 	mov.w	ip, #4294967295
  403a28:	e006      	b.n	403a38 <__cmpdf2+0x4>
  403a2a:	bf00      	nop

00403a2c <__ledf2>:
  403a2c:	f04f 0c01 	mov.w	ip, #1
  403a30:	e002      	b.n	403a38 <__cmpdf2+0x4>
  403a32:	bf00      	nop

00403a34 <__cmpdf2>:
  403a34:	f04f 0c01 	mov.w	ip, #1
  403a38:	f84d cd04 	str.w	ip, [sp, #-4]!
  403a3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  403a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  403a44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  403a48:	bf18      	it	ne
  403a4a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  403a4e:	d01b      	beq.n	403a88 <__cmpdf2+0x54>
  403a50:	b001      	add	sp, #4
  403a52:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  403a56:	bf0c      	ite	eq
  403a58:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  403a5c:	ea91 0f03 	teqne	r1, r3
  403a60:	bf02      	ittt	eq
  403a62:	ea90 0f02 	teqeq	r0, r2
  403a66:	2000      	moveq	r0, #0
  403a68:	4770      	bxeq	lr
  403a6a:	f110 0f00 	cmn.w	r0, #0
  403a6e:	ea91 0f03 	teq	r1, r3
  403a72:	bf58      	it	pl
  403a74:	4299      	cmppl	r1, r3
  403a76:	bf08      	it	eq
  403a78:	4290      	cmpeq	r0, r2
  403a7a:	bf2c      	ite	cs
  403a7c:	17d8      	asrcs	r0, r3, #31
  403a7e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  403a82:	f040 0001 	orr.w	r0, r0, #1
  403a86:	4770      	bx	lr
  403a88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  403a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  403a90:	d102      	bne.n	403a98 <__cmpdf2+0x64>
  403a92:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  403a96:	d107      	bne.n	403aa8 <__cmpdf2+0x74>
  403a98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  403a9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  403aa0:	d1d6      	bne.n	403a50 <__cmpdf2+0x1c>
  403aa2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  403aa6:	d0d3      	beq.n	403a50 <__cmpdf2+0x1c>
  403aa8:	f85d 0b04 	ldr.w	r0, [sp], #4
  403aac:	4770      	bx	lr
  403aae:	bf00      	nop

00403ab0 <__aeabi_cdrcmple>:
  403ab0:	4684      	mov	ip, r0
  403ab2:	4610      	mov	r0, r2
  403ab4:	4662      	mov	r2, ip
  403ab6:	468c      	mov	ip, r1
  403ab8:	4619      	mov	r1, r3
  403aba:	4663      	mov	r3, ip
  403abc:	e000      	b.n	403ac0 <__aeabi_cdcmpeq>
  403abe:	bf00      	nop

00403ac0 <__aeabi_cdcmpeq>:
  403ac0:	b501      	push	{r0, lr}
  403ac2:	f7ff ffb7 	bl	403a34 <__cmpdf2>
  403ac6:	2800      	cmp	r0, #0
  403ac8:	bf48      	it	mi
  403aca:	f110 0f00 	cmnmi.w	r0, #0
  403ace:	bd01      	pop	{r0, pc}

00403ad0 <__aeabi_dcmpeq>:
  403ad0:	f84d ed08 	str.w	lr, [sp, #-8]!
  403ad4:	f7ff fff4 	bl	403ac0 <__aeabi_cdcmpeq>
  403ad8:	bf0c      	ite	eq
  403ada:	2001      	moveq	r0, #1
  403adc:	2000      	movne	r0, #0
  403ade:	f85d fb08 	ldr.w	pc, [sp], #8
  403ae2:	bf00      	nop

00403ae4 <__aeabi_dcmplt>:
  403ae4:	f84d ed08 	str.w	lr, [sp, #-8]!
  403ae8:	f7ff ffea 	bl	403ac0 <__aeabi_cdcmpeq>
  403aec:	bf34      	ite	cc
  403aee:	2001      	movcc	r0, #1
  403af0:	2000      	movcs	r0, #0
  403af2:	f85d fb08 	ldr.w	pc, [sp], #8
  403af6:	bf00      	nop

00403af8 <__aeabi_dcmple>:
  403af8:	f84d ed08 	str.w	lr, [sp, #-8]!
  403afc:	f7ff ffe0 	bl	403ac0 <__aeabi_cdcmpeq>
  403b00:	bf94      	ite	ls
  403b02:	2001      	movls	r0, #1
  403b04:	2000      	movhi	r0, #0
  403b06:	f85d fb08 	ldr.w	pc, [sp], #8
  403b0a:	bf00      	nop

00403b0c <__aeabi_dcmpge>:
  403b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
  403b10:	f7ff ffce 	bl	403ab0 <__aeabi_cdrcmple>
  403b14:	bf94      	ite	ls
  403b16:	2001      	movls	r0, #1
  403b18:	2000      	movhi	r0, #0
  403b1a:	f85d fb08 	ldr.w	pc, [sp], #8
  403b1e:	bf00      	nop

00403b20 <__aeabi_dcmpgt>:
  403b20:	f84d ed08 	str.w	lr, [sp, #-8]!
  403b24:	f7ff ffc4 	bl	403ab0 <__aeabi_cdrcmple>
  403b28:	bf34      	ite	cc
  403b2a:	2001      	movcc	r0, #1
  403b2c:	2000      	movcs	r0, #0
  403b2e:	f85d fb08 	ldr.w	pc, [sp], #8
  403b32:	bf00      	nop

00403b34 <__aeabi_dcmpun>:
  403b34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  403b38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  403b3c:	d102      	bne.n	403b44 <__aeabi_dcmpun+0x10>
  403b3e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  403b42:	d10a      	bne.n	403b5a <__aeabi_dcmpun+0x26>
  403b44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  403b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  403b4c:	d102      	bne.n	403b54 <__aeabi_dcmpun+0x20>
  403b4e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  403b52:	d102      	bne.n	403b5a <__aeabi_dcmpun+0x26>
  403b54:	f04f 0000 	mov.w	r0, #0
  403b58:	4770      	bx	lr
  403b5a:	f04f 0001 	mov.w	r0, #1
  403b5e:	4770      	bx	lr

00403b60 <__aeabi_d2f>:
  403b60:	ea4f 0241 	mov.w	r2, r1, lsl #1
  403b64:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  403b68:	bf24      	itt	cs
  403b6a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  403b6e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  403b72:	d90d      	bls.n	403b90 <__aeabi_d2f+0x30>
  403b74:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  403b78:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  403b7c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  403b80:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  403b84:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  403b88:	bf08      	it	eq
  403b8a:	f020 0001 	biceq.w	r0, r0, #1
  403b8e:	4770      	bx	lr
  403b90:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  403b94:	d121      	bne.n	403bda <__aeabi_d2f+0x7a>
  403b96:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  403b9a:	bfbc      	itt	lt
  403b9c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  403ba0:	4770      	bxlt	lr
  403ba2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403ba6:	ea4f 5252 	mov.w	r2, r2, lsr #21
  403baa:	f1c2 0218 	rsb	r2, r2, #24
  403bae:	f1c2 0c20 	rsb	ip, r2, #32
  403bb2:	fa10 f30c 	lsls.w	r3, r0, ip
  403bb6:	fa20 f002 	lsr.w	r0, r0, r2
  403bba:	bf18      	it	ne
  403bbc:	f040 0001 	orrne.w	r0, r0, #1
  403bc0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  403bc4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  403bc8:	fa03 fc0c 	lsl.w	ip, r3, ip
  403bcc:	ea40 000c 	orr.w	r0, r0, ip
  403bd0:	fa23 f302 	lsr.w	r3, r3, r2
  403bd4:	ea4f 0343 	mov.w	r3, r3, lsl #1
  403bd8:	e7cc      	b.n	403b74 <__aeabi_d2f+0x14>
  403bda:	ea7f 5362 	mvns.w	r3, r2, asr #21
  403bde:	d107      	bne.n	403bf0 <__aeabi_d2f+0x90>
  403be0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  403be4:	bf1e      	ittt	ne
  403be6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  403bea:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  403bee:	4770      	bxne	lr
  403bf0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  403bf4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  403bf8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  403bfc:	4770      	bx	lr
  403bfe:	bf00      	nop

00403c00 <__errno>:
  403c00:	4b01      	ldr	r3, [pc, #4]	; (403c08 <__errno+0x8>)
  403c02:	6818      	ldr	r0, [r3, #0]
  403c04:	4770      	bx	lr
  403c06:	bf00      	nop
  403c08:	200000ac 	.word	0x200000ac

00403c0c <__libc_init_array>:
  403c0c:	b570      	push	{r4, r5, r6, lr}
  403c0e:	4e0f      	ldr	r6, [pc, #60]	; (403c4c <__libc_init_array+0x40>)
  403c10:	4d0f      	ldr	r5, [pc, #60]	; (403c50 <__libc_init_array+0x44>)
  403c12:	1b76      	subs	r6, r6, r5
  403c14:	10b6      	asrs	r6, r6, #2
  403c16:	bf18      	it	ne
  403c18:	2400      	movne	r4, #0
  403c1a:	d005      	beq.n	403c28 <__libc_init_array+0x1c>
  403c1c:	3401      	adds	r4, #1
  403c1e:	f855 3b04 	ldr.w	r3, [r5], #4
  403c22:	4798      	blx	r3
  403c24:	42a6      	cmp	r6, r4
  403c26:	d1f9      	bne.n	403c1c <__libc_init_array+0x10>
  403c28:	4e0a      	ldr	r6, [pc, #40]	; (403c54 <__libc_init_array+0x48>)
  403c2a:	4d0b      	ldr	r5, [pc, #44]	; (403c58 <__libc_init_array+0x4c>)
  403c2c:	1b76      	subs	r6, r6, r5
  403c2e:	f004 f94b 	bl	407ec8 <_init>
  403c32:	10b6      	asrs	r6, r6, #2
  403c34:	bf18      	it	ne
  403c36:	2400      	movne	r4, #0
  403c38:	d006      	beq.n	403c48 <__libc_init_array+0x3c>
  403c3a:	3401      	adds	r4, #1
  403c3c:	f855 3b04 	ldr.w	r3, [r5], #4
  403c40:	4798      	blx	r3
  403c42:	42a6      	cmp	r6, r4
  403c44:	d1f9      	bne.n	403c3a <__libc_init_array+0x2e>
  403c46:	bd70      	pop	{r4, r5, r6, pc}
  403c48:	bd70      	pop	{r4, r5, r6, pc}
  403c4a:	bf00      	nop
  403c4c:	00407ed4 	.word	0x00407ed4
  403c50:	00407ed4 	.word	0x00407ed4
  403c54:	00407edc 	.word	0x00407edc
  403c58:	00407ed4 	.word	0x00407ed4

00403c5c <memcpy>:
  403c5c:	4684      	mov	ip, r0
  403c5e:	ea41 0300 	orr.w	r3, r1, r0
  403c62:	f013 0303 	ands.w	r3, r3, #3
  403c66:	d16d      	bne.n	403d44 <memcpy+0xe8>
  403c68:	3a40      	subs	r2, #64	; 0x40
  403c6a:	d341      	bcc.n	403cf0 <memcpy+0x94>
  403c6c:	f851 3b04 	ldr.w	r3, [r1], #4
  403c70:	f840 3b04 	str.w	r3, [r0], #4
  403c74:	f851 3b04 	ldr.w	r3, [r1], #4
  403c78:	f840 3b04 	str.w	r3, [r0], #4
  403c7c:	f851 3b04 	ldr.w	r3, [r1], #4
  403c80:	f840 3b04 	str.w	r3, [r0], #4
  403c84:	f851 3b04 	ldr.w	r3, [r1], #4
  403c88:	f840 3b04 	str.w	r3, [r0], #4
  403c8c:	f851 3b04 	ldr.w	r3, [r1], #4
  403c90:	f840 3b04 	str.w	r3, [r0], #4
  403c94:	f851 3b04 	ldr.w	r3, [r1], #4
  403c98:	f840 3b04 	str.w	r3, [r0], #4
  403c9c:	f851 3b04 	ldr.w	r3, [r1], #4
  403ca0:	f840 3b04 	str.w	r3, [r0], #4
  403ca4:	f851 3b04 	ldr.w	r3, [r1], #4
  403ca8:	f840 3b04 	str.w	r3, [r0], #4
  403cac:	f851 3b04 	ldr.w	r3, [r1], #4
  403cb0:	f840 3b04 	str.w	r3, [r0], #4
  403cb4:	f851 3b04 	ldr.w	r3, [r1], #4
  403cb8:	f840 3b04 	str.w	r3, [r0], #4
  403cbc:	f851 3b04 	ldr.w	r3, [r1], #4
  403cc0:	f840 3b04 	str.w	r3, [r0], #4
  403cc4:	f851 3b04 	ldr.w	r3, [r1], #4
  403cc8:	f840 3b04 	str.w	r3, [r0], #4
  403ccc:	f851 3b04 	ldr.w	r3, [r1], #4
  403cd0:	f840 3b04 	str.w	r3, [r0], #4
  403cd4:	f851 3b04 	ldr.w	r3, [r1], #4
  403cd8:	f840 3b04 	str.w	r3, [r0], #4
  403cdc:	f851 3b04 	ldr.w	r3, [r1], #4
  403ce0:	f840 3b04 	str.w	r3, [r0], #4
  403ce4:	f851 3b04 	ldr.w	r3, [r1], #4
  403ce8:	f840 3b04 	str.w	r3, [r0], #4
  403cec:	3a40      	subs	r2, #64	; 0x40
  403cee:	d2bd      	bcs.n	403c6c <memcpy+0x10>
  403cf0:	3230      	adds	r2, #48	; 0x30
  403cf2:	d311      	bcc.n	403d18 <memcpy+0xbc>
  403cf4:	f851 3b04 	ldr.w	r3, [r1], #4
  403cf8:	f840 3b04 	str.w	r3, [r0], #4
  403cfc:	f851 3b04 	ldr.w	r3, [r1], #4
  403d00:	f840 3b04 	str.w	r3, [r0], #4
  403d04:	f851 3b04 	ldr.w	r3, [r1], #4
  403d08:	f840 3b04 	str.w	r3, [r0], #4
  403d0c:	f851 3b04 	ldr.w	r3, [r1], #4
  403d10:	f840 3b04 	str.w	r3, [r0], #4
  403d14:	3a10      	subs	r2, #16
  403d16:	d2ed      	bcs.n	403cf4 <memcpy+0x98>
  403d18:	320c      	adds	r2, #12
  403d1a:	d305      	bcc.n	403d28 <memcpy+0xcc>
  403d1c:	f851 3b04 	ldr.w	r3, [r1], #4
  403d20:	f840 3b04 	str.w	r3, [r0], #4
  403d24:	3a04      	subs	r2, #4
  403d26:	d2f9      	bcs.n	403d1c <memcpy+0xc0>
  403d28:	3204      	adds	r2, #4
  403d2a:	d008      	beq.n	403d3e <memcpy+0xe2>
  403d2c:	07d2      	lsls	r2, r2, #31
  403d2e:	bf1c      	itt	ne
  403d30:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403d34:	f800 3b01 	strbne.w	r3, [r0], #1
  403d38:	d301      	bcc.n	403d3e <memcpy+0xe2>
  403d3a:	880b      	ldrh	r3, [r1, #0]
  403d3c:	8003      	strh	r3, [r0, #0]
  403d3e:	4660      	mov	r0, ip
  403d40:	4770      	bx	lr
  403d42:	bf00      	nop
  403d44:	2a08      	cmp	r2, #8
  403d46:	d313      	bcc.n	403d70 <memcpy+0x114>
  403d48:	078b      	lsls	r3, r1, #30
  403d4a:	d08d      	beq.n	403c68 <memcpy+0xc>
  403d4c:	f010 0303 	ands.w	r3, r0, #3
  403d50:	d08a      	beq.n	403c68 <memcpy+0xc>
  403d52:	f1c3 0304 	rsb	r3, r3, #4
  403d56:	1ad2      	subs	r2, r2, r3
  403d58:	07db      	lsls	r3, r3, #31
  403d5a:	bf1c      	itt	ne
  403d5c:	f811 3b01 	ldrbne.w	r3, [r1], #1
  403d60:	f800 3b01 	strbne.w	r3, [r0], #1
  403d64:	d380      	bcc.n	403c68 <memcpy+0xc>
  403d66:	f831 3b02 	ldrh.w	r3, [r1], #2
  403d6a:	f820 3b02 	strh.w	r3, [r0], #2
  403d6e:	e77b      	b.n	403c68 <memcpy+0xc>
  403d70:	3a04      	subs	r2, #4
  403d72:	d3d9      	bcc.n	403d28 <memcpy+0xcc>
  403d74:	3a01      	subs	r2, #1
  403d76:	f811 3b01 	ldrb.w	r3, [r1], #1
  403d7a:	f800 3b01 	strb.w	r3, [r0], #1
  403d7e:	d2f9      	bcs.n	403d74 <memcpy+0x118>
  403d80:	780b      	ldrb	r3, [r1, #0]
  403d82:	7003      	strb	r3, [r0, #0]
  403d84:	784b      	ldrb	r3, [r1, #1]
  403d86:	7043      	strb	r3, [r0, #1]
  403d88:	788b      	ldrb	r3, [r1, #2]
  403d8a:	7083      	strb	r3, [r0, #2]
  403d8c:	4660      	mov	r0, ip
  403d8e:	4770      	bx	lr

00403d90 <memset>:
  403d90:	b470      	push	{r4, r5, r6}
  403d92:	0786      	lsls	r6, r0, #30
  403d94:	d046      	beq.n	403e24 <memset+0x94>
  403d96:	1e54      	subs	r4, r2, #1
  403d98:	2a00      	cmp	r2, #0
  403d9a:	d041      	beq.n	403e20 <memset+0x90>
  403d9c:	b2ca      	uxtb	r2, r1
  403d9e:	4603      	mov	r3, r0
  403da0:	e002      	b.n	403da8 <memset+0x18>
  403da2:	f114 34ff 	adds.w	r4, r4, #4294967295
  403da6:	d33b      	bcc.n	403e20 <memset+0x90>
  403da8:	f803 2b01 	strb.w	r2, [r3], #1
  403dac:	079d      	lsls	r5, r3, #30
  403dae:	d1f8      	bne.n	403da2 <memset+0x12>
  403db0:	2c03      	cmp	r4, #3
  403db2:	d92e      	bls.n	403e12 <memset+0x82>
  403db4:	b2cd      	uxtb	r5, r1
  403db6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  403dba:	2c0f      	cmp	r4, #15
  403dbc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  403dc0:	d919      	bls.n	403df6 <memset+0x66>
  403dc2:	f103 0210 	add.w	r2, r3, #16
  403dc6:	4626      	mov	r6, r4
  403dc8:	3e10      	subs	r6, #16
  403dca:	2e0f      	cmp	r6, #15
  403dcc:	f842 5c10 	str.w	r5, [r2, #-16]
  403dd0:	f842 5c0c 	str.w	r5, [r2, #-12]
  403dd4:	f842 5c08 	str.w	r5, [r2, #-8]
  403dd8:	f842 5c04 	str.w	r5, [r2, #-4]
  403ddc:	f102 0210 	add.w	r2, r2, #16
  403de0:	d8f2      	bhi.n	403dc8 <memset+0x38>
  403de2:	f1a4 0210 	sub.w	r2, r4, #16
  403de6:	f022 020f 	bic.w	r2, r2, #15
  403dea:	f004 040f 	and.w	r4, r4, #15
  403dee:	3210      	adds	r2, #16
  403df0:	2c03      	cmp	r4, #3
  403df2:	4413      	add	r3, r2
  403df4:	d90d      	bls.n	403e12 <memset+0x82>
  403df6:	461e      	mov	r6, r3
  403df8:	4622      	mov	r2, r4
  403dfa:	3a04      	subs	r2, #4
  403dfc:	2a03      	cmp	r2, #3
  403dfe:	f846 5b04 	str.w	r5, [r6], #4
  403e02:	d8fa      	bhi.n	403dfa <memset+0x6a>
  403e04:	1f22      	subs	r2, r4, #4
  403e06:	f022 0203 	bic.w	r2, r2, #3
  403e0a:	3204      	adds	r2, #4
  403e0c:	4413      	add	r3, r2
  403e0e:	f004 0403 	and.w	r4, r4, #3
  403e12:	b12c      	cbz	r4, 403e20 <memset+0x90>
  403e14:	b2c9      	uxtb	r1, r1
  403e16:	441c      	add	r4, r3
  403e18:	f803 1b01 	strb.w	r1, [r3], #1
  403e1c:	429c      	cmp	r4, r3
  403e1e:	d1fb      	bne.n	403e18 <memset+0x88>
  403e20:	bc70      	pop	{r4, r5, r6}
  403e22:	4770      	bx	lr
  403e24:	4614      	mov	r4, r2
  403e26:	4603      	mov	r3, r0
  403e28:	e7c2      	b.n	403db0 <memset+0x20>
  403e2a:	bf00      	nop

00403e2c <sprintf>:
  403e2c:	b40e      	push	{r1, r2, r3}
  403e2e:	b5f0      	push	{r4, r5, r6, r7, lr}
  403e30:	b09c      	sub	sp, #112	; 0x70
  403e32:	ab21      	add	r3, sp, #132	; 0x84
  403e34:	490f      	ldr	r1, [pc, #60]	; (403e74 <sprintf+0x48>)
  403e36:	f853 2b04 	ldr.w	r2, [r3], #4
  403e3a:	9301      	str	r3, [sp, #4]
  403e3c:	4605      	mov	r5, r0
  403e3e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  403e42:	6808      	ldr	r0, [r1, #0]
  403e44:	9502      	str	r5, [sp, #8]
  403e46:	f44f 7702 	mov.w	r7, #520	; 0x208
  403e4a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  403e4e:	a902      	add	r1, sp, #8
  403e50:	9506      	str	r5, [sp, #24]
  403e52:	f8ad 7014 	strh.w	r7, [sp, #20]
  403e56:	9404      	str	r4, [sp, #16]
  403e58:	9407      	str	r4, [sp, #28]
  403e5a:	f8ad 6016 	strh.w	r6, [sp, #22]
  403e5e:	f000 f87d 	bl	403f5c <_svfprintf_r>
  403e62:	9b02      	ldr	r3, [sp, #8]
  403e64:	2200      	movs	r2, #0
  403e66:	701a      	strb	r2, [r3, #0]
  403e68:	b01c      	add	sp, #112	; 0x70
  403e6a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  403e6e:	b003      	add	sp, #12
  403e70:	4770      	bx	lr
  403e72:	bf00      	nop
  403e74:	200000ac 	.word	0x200000ac
	...

00403e80 <strlen>:
  403e80:	f890 f000 	pld	[r0]
  403e84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  403e88:	f020 0107 	bic.w	r1, r0, #7
  403e8c:	f06f 0c00 	mvn.w	ip, #0
  403e90:	f010 0407 	ands.w	r4, r0, #7
  403e94:	f891 f020 	pld	[r1, #32]
  403e98:	f040 8049 	bne.w	403f2e <strlen+0xae>
  403e9c:	f04f 0400 	mov.w	r4, #0
  403ea0:	f06f 0007 	mvn.w	r0, #7
  403ea4:	e9d1 2300 	ldrd	r2, r3, [r1]
  403ea8:	f891 f040 	pld	[r1, #64]	; 0x40
  403eac:	f100 0008 	add.w	r0, r0, #8
  403eb0:	fa82 f24c 	uadd8	r2, r2, ip
  403eb4:	faa4 f28c 	sel	r2, r4, ip
  403eb8:	fa83 f34c 	uadd8	r3, r3, ip
  403ebc:	faa2 f38c 	sel	r3, r2, ip
  403ec0:	bb4b      	cbnz	r3, 403f16 <strlen+0x96>
  403ec2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  403ec6:	fa82 f24c 	uadd8	r2, r2, ip
  403eca:	f100 0008 	add.w	r0, r0, #8
  403ece:	faa4 f28c 	sel	r2, r4, ip
  403ed2:	fa83 f34c 	uadd8	r3, r3, ip
  403ed6:	faa2 f38c 	sel	r3, r2, ip
  403eda:	b9e3      	cbnz	r3, 403f16 <strlen+0x96>
  403edc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  403ee0:	fa82 f24c 	uadd8	r2, r2, ip
  403ee4:	f100 0008 	add.w	r0, r0, #8
  403ee8:	faa4 f28c 	sel	r2, r4, ip
  403eec:	fa83 f34c 	uadd8	r3, r3, ip
  403ef0:	faa2 f38c 	sel	r3, r2, ip
  403ef4:	b97b      	cbnz	r3, 403f16 <strlen+0x96>
  403ef6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  403efa:	f101 0120 	add.w	r1, r1, #32
  403efe:	fa82 f24c 	uadd8	r2, r2, ip
  403f02:	f100 0008 	add.w	r0, r0, #8
  403f06:	faa4 f28c 	sel	r2, r4, ip
  403f0a:	fa83 f34c 	uadd8	r3, r3, ip
  403f0e:	faa2 f38c 	sel	r3, r2, ip
  403f12:	2b00      	cmp	r3, #0
  403f14:	d0c6      	beq.n	403ea4 <strlen+0x24>
  403f16:	2a00      	cmp	r2, #0
  403f18:	bf04      	itt	eq
  403f1a:	3004      	addeq	r0, #4
  403f1c:	461a      	moveq	r2, r3
  403f1e:	ba12      	rev	r2, r2
  403f20:	fab2 f282 	clz	r2, r2
  403f24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  403f28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  403f2c:	4770      	bx	lr
  403f2e:	e9d1 2300 	ldrd	r2, r3, [r1]
  403f32:	f004 0503 	and.w	r5, r4, #3
  403f36:	f1c4 0000 	rsb	r0, r4, #0
  403f3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  403f3e:	f014 0f04 	tst.w	r4, #4
  403f42:	f891 f040 	pld	[r1, #64]	; 0x40
  403f46:	fa0c f505 	lsl.w	r5, ip, r5
  403f4a:	ea62 0205 	orn	r2, r2, r5
  403f4e:	bf1c      	itt	ne
  403f50:	ea63 0305 	ornne	r3, r3, r5
  403f54:	4662      	movne	r2, ip
  403f56:	f04f 0400 	mov.w	r4, #0
  403f5a:	e7a9      	b.n	403eb0 <strlen+0x30>

00403f5c <_svfprintf_r>:
  403f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403f60:	b0c3      	sub	sp, #268	; 0x10c
  403f62:	460c      	mov	r4, r1
  403f64:	910b      	str	r1, [sp, #44]	; 0x2c
  403f66:	4692      	mov	sl, r2
  403f68:	930f      	str	r3, [sp, #60]	; 0x3c
  403f6a:	900c      	str	r0, [sp, #48]	; 0x30
  403f6c:	f002 fb42 	bl	4065f4 <_localeconv_r>
  403f70:	6803      	ldr	r3, [r0, #0]
  403f72:	931a      	str	r3, [sp, #104]	; 0x68
  403f74:	4618      	mov	r0, r3
  403f76:	f7ff ff83 	bl	403e80 <strlen>
  403f7a:	89a3      	ldrh	r3, [r4, #12]
  403f7c:	9019      	str	r0, [sp, #100]	; 0x64
  403f7e:	0619      	lsls	r1, r3, #24
  403f80:	d503      	bpl.n	403f8a <_svfprintf_r+0x2e>
  403f82:	6923      	ldr	r3, [r4, #16]
  403f84:	2b00      	cmp	r3, #0
  403f86:	f001 8003 	beq.w	404f90 <_svfprintf_r+0x1034>
  403f8a:	2300      	movs	r3, #0
  403f8c:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  403f90:	9313      	str	r3, [sp, #76]	; 0x4c
  403f92:	9315      	str	r3, [sp, #84]	; 0x54
  403f94:	9314      	str	r3, [sp, #80]	; 0x50
  403f96:	9327      	str	r3, [sp, #156]	; 0x9c
  403f98:	9326      	str	r3, [sp, #152]	; 0x98
  403f9a:	9318      	str	r3, [sp, #96]	; 0x60
  403f9c:	931b      	str	r3, [sp, #108]	; 0x6c
  403f9e:	9309      	str	r3, [sp, #36]	; 0x24
  403fa0:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  403fa4:	46c8      	mov	r8, r9
  403fa6:	9316      	str	r3, [sp, #88]	; 0x58
  403fa8:	9317      	str	r3, [sp, #92]	; 0x5c
  403faa:	f89a 3000 	ldrb.w	r3, [sl]
  403fae:	4654      	mov	r4, sl
  403fb0:	b1e3      	cbz	r3, 403fec <_svfprintf_r+0x90>
  403fb2:	2b25      	cmp	r3, #37	; 0x25
  403fb4:	d102      	bne.n	403fbc <_svfprintf_r+0x60>
  403fb6:	e019      	b.n	403fec <_svfprintf_r+0x90>
  403fb8:	2b25      	cmp	r3, #37	; 0x25
  403fba:	d003      	beq.n	403fc4 <_svfprintf_r+0x68>
  403fbc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  403fc0:	2b00      	cmp	r3, #0
  403fc2:	d1f9      	bne.n	403fb8 <_svfprintf_r+0x5c>
  403fc4:	eba4 050a 	sub.w	r5, r4, sl
  403fc8:	b185      	cbz	r5, 403fec <_svfprintf_r+0x90>
  403fca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403fcc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403fce:	f8c8 a000 	str.w	sl, [r8]
  403fd2:	3301      	adds	r3, #1
  403fd4:	442a      	add	r2, r5
  403fd6:	2b07      	cmp	r3, #7
  403fd8:	f8c8 5004 	str.w	r5, [r8, #4]
  403fdc:	9227      	str	r2, [sp, #156]	; 0x9c
  403fde:	9326      	str	r3, [sp, #152]	; 0x98
  403fe0:	dc7f      	bgt.n	4040e2 <_svfprintf_r+0x186>
  403fe2:	f108 0808 	add.w	r8, r8, #8
  403fe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  403fe8:	442b      	add	r3, r5
  403fea:	9309      	str	r3, [sp, #36]	; 0x24
  403fec:	7823      	ldrb	r3, [r4, #0]
  403fee:	2b00      	cmp	r3, #0
  403ff0:	d07f      	beq.n	4040f2 <_svfprintf_r+0x196>
  403ff2:	2300      	movs	r3, #0
  403ff4:	461a      	mov	r2, r3
  403ff6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  403ffa:	4619      	mov	r1, r3
  403ffc:	930d      	str	r3, [sp, #52]	; 0x34
  403ffe:	469b      	mov	fp, r3
  404000:	f04f 30ff 	mov.w	r0, #4294967295
  404004:	7863      	ldrb	r3, [r4, #1]
  404006:	900a      	str	r0, [sp, #40]	; 0x28
  404008:	f104 0a01 	add.w	sl, r4, #1
  40400c:	f10a 0a01 	add.w	sl, sl, #1
  404010:	f1a3 0020 	sub.w	r0, r3, #32
  404014:	2858      	cmp	r0, #88	; 0x58
  404016:	f200 83c1 	bhi.w	40479c <_svfprintf_r+0x840>
  40401a:	e8df f010 	tbh	[pc, r0, lsl #1]
  40401e:	0238      	.short	0x0238
  404020:	03bf03bf 	.word	0x03bf03bf
  404024:	03bf0240 	.word	0x03bf0240
  404028:	03bf03bf 	.word	0x03bf03bf
  40402c:	03bf03bf 	.word	0x03bf03bf
  404030:	024503bf 	.word	0x024503bf
  404034:	03bf0203 	.word	0x03bf0203
  404038:	026b005d 	.word	0x026b005d
  40403c:	028603bf 	.word	0x028603bf
  404040:	039d039d 	.word	0x039d039d
  404044:	039d039d 	.word	0x039d039d
  404048:	039d039d 	.word	0x039d039d
  40404c:	039d039d 	.word	0x039d039d
  404050:	03bf039d 	.word	0x03bf039d
  404054:	03bf03bf 	.word	0x03bf03bf
  404058:	03bf03bf 	.word	0x03bf03bf
  40405c:	03bf03bf 	.word	0x03bf03bf
  404060:	03bf03bf 	.word	0x03bf03bf
  404064:	033703bf 	.word	0x033703bf
  404068:	03bf0357 	.word	0x03bf0357
  40406c:	03bf0357 	.word	0x03bf0357
  404070:	03bf03bf 	.word	0x03bf03bf
  404074:	039803bf 	.word	0x039803bf
  404078:	03bf03bf 	.word	0x03bf03bf
  40407c:	03bf03ad 	.word	0x03bf03ad
  404080:	03bf03bf 	.word	0x03bf03bf
  404084:	03bf03bf 	.word	0x03bf03bf
  404088:	03bf0259 	.word	0x03bf0259
  40408c:	031e03bf 	.word	0x031e03bf
  404090:	03bf03bf 	.word	0x03bf03bf
  404094:	03bf03bf 	.word	0x03bf03bf
  404098:	03bf03bf 	.word	0x03bf03bf
  40409c:	03bf03bf 	.word	0x03bf03bf
  4040a0:	03bf03bf 	.word	0x03bf03bf
  4040a4:	02db02c6 	.word	0x02db02c6
  4040a8:	03570357 	.word	0x03570357
  4040ac:	028b0357 	.word	0x028b0357
  4040b0:	03bf02db 	.word	0x03bf02db
  4040b4:	029003bf 	.word	0x029003bf
  4040b8:	029d03bf 	.word	0x029d03bf
  4040bc:	02b401cc 	.word	0x02b401cc
  4040c0:	03bf0208 	.word	0x03bf0208
  4040c4:	03bf01e1 	.word	0x03bf01e1
  4040c8:	03bf007e 	.word	0x03bf007e
  4040cc:	020d03bf 	.word	0x020d03bf
  4040d0:	980d      	ldr	r0, [sp, #52]	; 0x34
  4040d2:	930f      	str	r3, [sp, #60]	; 0x3c
  4040d4:	4240      	negs	r0, r0
  4040d6:	900d      	str	r0, [sp, #52]	; 0x34
  4040d8:	f04b 0b04 	orr.w	fp, fp, #4
  4040dc:	f89a 3000 	ldrb.w	r3, [sl]
  4040e0:	e794      	b.n	40400c <_svfprintf_r+0xb0>
  4040e2:	aa25      	add	r2, sp, #148	; 0x94
  4040e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4040e6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4040e8:	f003 fad4 	bl	407694 <__ssprint_r>
  4040ec:	b940      	cbnz	r0, 404100 <_svfprintf_r+0x1a4>
  4040ee:	46c8      	mov	r8, r9
  4040f0:	e779      	b.n	403fe6 <_svfprintf_r+0x8a>
  4040f2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  4040f4:	b123      	cbz	r3, 404100 <_svfprintf_r+0x1a4>
  4040f6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4040f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4040fa:	aa25      	add	r2, sp, #148	; 0x94
  4040fc:	f003 faca 	bl	407694 <__ssprint_r>
  404100:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404102:	899b      	ldrh	r3, [r3, #12]
  404104:	f013 0f40 	tst.w	r3, #64	; 0x40
  404108:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40410a:	bf18      	it	ne
  40410c:	f04f 33ff 	movne.w	r3, #4294967295
  404110:	9309      	str	r3, [sp, #36]	; 0x24
  404112:	9809      	ldr	r0, [sp, #36]	; 0x24
  404114:	b043      	add	sp, #268	; 0x10c
  404116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40411a:	f01b 0f20 	tst.w	fp, #32
  40411e:	9311      	str	r3, [sp, #68]	; 0x44
  404120:	f040 81dd 	bne.w	4044de <_svfprintf_r+0x582>
  404124:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404126:	f01b 0f10 	tst.w	fp, #16
  40412a:	4613      	mov	r3, r2
  40412c:	f040 856e 	bne.w	404c0c <_svfprintf_r+0xcb0>
  404130:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404134:	f000 856a 	beq.w	404c0c <_svfprintf_r+0xcb0>
  404138:	8814      	ldrh	r4, [r2, #0]
  40413a:	3204      	adds	r2, #4
  40413c:	2500      	movs	r5, #0
  40413e:	2301      	movs	r3, #1
  404140:	920f      	str	r2, [sp, #60]	; 0x3c
  404142:	2700      	movs	r7, #0
  404144:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  404148:	990a      	ldr	r1, [sp, #40]	; 0x28
  40414a:	1c4a      	adds	r2, r1, #1
  40414c:	f000 8265 	beq.w	40461a <_svfprintf_r+0x6be>
  404150:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  404154:	9207      	str	r2, [sp, #28]
  404156:	ea54 0205 	orrs.w	r2, r4, r5
  40415a:	f040 8264 	bne.w	404626 <_svfprintf_r+0x6ca>
  40415e:	2900      	cmp	r1, #0
  404160:	f040 843c 	bne.w	4049dc <_svfprintf_r+0xa80>
  404164:	2b00      	cmp	r3, #0
  404166:	f040 84d7 	bne.w	404b18 <_svfprintf_r+0xbbc>
  40416a:	f01b 0301 	ands.w	r3, fp, #1
  40416e:	930e      	str	r3, [sp, #56]	; 0x38
  404170:	f000 8604 	beq.w	404d7c <_svfprintf_r+0xe20>
  404174:	ae42      	add	r6, sp, #264	; 0x108
  404176:	2330      	movs	r3, #48	; 0x30
  404178:	f806 3d41 	strb.w	r3, [r6, #-65]!
  40417c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40417e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404180:	4293      	cmp	r3, r2
  404182:	bfb8      	it	lt
  404184:	4613      	movlt	r3, r2
  404186:	9308      	str	r3, [sp, #32]
  404188:	2300      	movs	r3, #0
  40418a:	9312      	str	r3, [sp, #72]	; 0x48
  40418c:	b117      	cbz	r7, 404194 <_svfprintf_r+0x238>
  40418e:	9b08      	ldr	r3, [sp, #32]
  404190:	3301      	adds	r3, #1
  404192:	9308      	str	r3, [sp, #32]
  404194:	9b07      	ldr	r3, [sp, #28]
  404196:	f013 0302 	ands.w	r3, r3, #2
  40419a:	9310      	str	r3, [sp, #64]	; 0x40
  40419c:	d002      	beq.n	4041a4 <_svfprintf_r+0x248>
  40419e:	9b08      	ldr	r3, [sp, #32]
  4041a0:	3302      	adds	r3, #2
  4041a2:	9308      	str	r3, [sp, #32]
  4041a4:	9b07      	ldr	r3, [sp, #28]
  4041a6:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4041aa:	f040 830e 	bne.w	4047ca <_svfprintf_r+0x86e>
  4041ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4041b0:	9a08      	ldr	r2, [sp, #32]
  4041b2:	eba3 0b02 	sub.w	fp, r3, r2
  4041b6:	f1bb 0f00 	cmp.w	fp, #0
  4041ba:	f340 8306 	ble.w	4047ca <_svfprintf_r+0x86e>
  4041be:	f1bb 0f10 	cmp.w	fp, #16
  4041c2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4041c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4041c6:	dd29      	ble.n	40421c <_svfprintf_r+0x2c0>
  4041c8:	4643      	mov	r3, r8
  4041ca:	4621      	mov	r1, r4
  4041cc:	46a8      	mov	r8, r5
  4041ce:	2710      	movs	r7, #16
  4041d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4041d2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4041d4:	e006      	b.n	4041e4 <_svfprintf_r+0x288>
  4041d6:	f1ab 0b10 	sub.w	fp, fp, #16
  4041da:	f1bb 0f10 	cmp.w	fp, #16
  4041de:	f103 0308 	add.w	r3, r3, #8
  4041e2:	dd18      	ble.n	404216 <_svfprintf_r+0x2ba>
  4041e4:	3201      	adds	r2, #1
  4041e6:	48b7      	ldr	r0, [pc, #732]	; (4044c4 <_svfprintf_r+0x568>)
  4041e8:	9226      	str	r2, [sp, #152]	; 0x98
  4041ea:	3110      	adds	r1, #16
  4041ec:	2a07      	cmp	r2, #7
  4041ee:	9127      	str	r1, [sp, #156]	; 0x9c
  4041f0:	e883 0081 	stmia.w	r3, {r0, r7}
  4041f4:	ddef      	ble.n	4041d6 <_svfprintf_r+0x27a>
  4041f6:	aa25      	add	r2, sp, #148	; 0x94
  4041f8:	4629      	mov	r1, r5
  4041fa:	4620      	mov	r0, r4
  4041fc:	f003 fa4a 	bl	407694 <__ssprint_r>
  404200:	2800      	cmp	r0, #0
  404202:	f47f af7d 	bne.w	404100 <_svfprintf_r+0x1a4>
  404206:	f1ab 0b10 	sub.w	fp, fp, #16
  40420a:	f1bb 0f10 	cmp.w	fp, #16
  40420e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  404210:	9a26      	ldr	r2, [sp, #152]	; 0x98
  404212:	464b      	mov	r3, r9
  404214:	dce6      	bgt.n	4041e4 <_svfprintf_r+0x288>
  404216:	4645      	mov	r5, r8
  404218:	460c      	mov	r4, r1
  40421a:	4698      	mov	r8, r3
  40421c:	3201      	adds	r2, #1
  40421e:	4ba9      	ldr	r3, [pc, #676]	; (4044c4 <_svfprintf_r+0x568>)
  404220:	9226      	str	r2, [sp, #152]	; 0x98
  404222:	445c      	add	r4, fp
  404224:	2a07      	cmp	r2, #7
  404226:	9427      	str	r4, [sp, #156]	; 0x9c
  404228:	e888 0808 	stmia.w	r8, {r3, fp}
  40422c:	f300 8498 	bgt.w	404b60 <_svfprintf_r+0xc04>
  404230:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404234:	f108 0808 	add.w	r8, r8, #8
  404238:	b177      	cbz	r7, 404258 <_svfprintf_r+0x2fc>
  40423a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40423c:	3301      	adds	r3, #1
  40423e:	3401      	adds	r4, #1
  404240:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  404244:	2201      	movs	r2, #1
  404246:	2b07      	cmp	r3, #7
  404248:	9427      	str	r4, [sp, #156]	; 0x9c
  40424a:	9326      	str	r3, [sp, #152]	; 0x98
  40424c:	e888 0006 	stmia.w	r8, {r1, r2}
  404250:	f300 83db 	bgt.w	404a0a <_svfprintf_r+0xaae>
  404254:	f108 0808 	add.w	r8, r8, #8
  404258:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40425a:	b16b      	cbz	r3, 404278 <_svfprintf_r+0x31c>
  40425c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40425e:	3301      	adds	r3, #1
  404260:	3402      	adds	r4, #2
  404262:	a91e      	add	r1, sp, #120	; 0x78
  404264:	2202      	movs	r2, #2
  404266:	2b07      	cmp	r3, #7
  404268:	9427      	str	r4, [sp, #156]	; 0x9c
  40426a:	9326      	str	r3, [sp, #152]	; 0x98
  40426c:	e888 0006 	stmia.w	r8, {r1, r2}
  404270:	f300 83d6 	bgt.w	404a20 <_svfprintf_r+0xac4>
  404274:	f108 0808 	add.w	r8, r8, #8
  404278:	2d80      	cmp	r5, #128	; 0x80
  40427a:	f000 8315 	beq.w	4048a8 <_svfprintf_r+0x94c>
  40427e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404280:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404282:	1a9f      	subs	r7, r3, r2
  404284:	2f00      	cmp	r7, #0
  404286:	dd36      	ble.n	4042f6 <_svfprintf_r+0x39a>
  404288:	2f10      	cmp	r7, #16
  40428a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40428c:	4d8e      	ldr	r5, [pc, #568]	; (4044c8 <_svfprintf_r+0x56c>)
  40428e:	dd27      	ble.n	4042e0 <_svfprintf_r+0x384>
  404290:	4642      	mov	r2, r8
  404292:	4621      	mov	r1, r4
  404294:	46b0      	mov	r8, r6
  404296:	f04f 0b10 	mov.w	fp, #16
  40429a:	462e      	mov	r6, r5
  40429c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40429e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4042a0:	e004      	b.n	4042ac <_svfprintf_r+0x350>
  4042a2:	3f10      	subs	r7, #16
  4042a4:	2f10      	cmp	r7, #16
  4042a6:	f102 0208 	add.w	r2, r2, #8
  4042aa:	dd15      	ble.n	4042d8 <_svfprintf_r+0x37c>
  4042ac:	3301      	adds	r3, #1
  4042ae:	3110      	adds	r1, #16
  4042b0:	2b07      	cmp	r3, #7
  4042b2:	9127      	str	r1, [sp, #156]	; 0x9c
  4042b4:	9326      	str	r3, [sp, #152]	; 0x98
  4042b6:	e882 0840 	stmia.w	r2, {r6, fp}
  4042ba:	ddf2      	ble.n	4042a2 <_svfprintf_r+0x346>
  4042bc:	aa25      	add	r2, sp, #148	; 0x94
  4042be:	4629      	mov	r1, r5
  4042c0:	4620      	mov	r0, r4
  4042c2:	f003 f9e7 	bl	407694 <__ssprint_r>
  4042c6:	2800      	cmp	r0, #0
  4042c8:	f47f af1a 	bne.w	404100 <_svfprintf_r+0x1a4>
  4042cc:	3f10      	subs	r7, #16
  4042ce:	2f10      	cmp	r7, #16
  4042d0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4042d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4042d4:	464a      	mov	r2, r9
  4042d6:	dce9      	bgt.n	4042ac <_svfprintf_r+0x350>
  4042d8:	4635      	mov	r5, r6
  4042da:	460c      	mov	r4, r1
  4042dc:	4646      	mov	r6, r8
  4042de:	4690      	mov	r8, r2
  4042e0:	3301      	adds	r3, #1
  4042e2:	443c      	add	r4, r7
  4042e4:	2b07      	cmp	r3, #7
  4042e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4042e8:	9326      	str	r3, [sp, #152]	; 0x98
  4042ea:	e888 00a0 	stmia.w	r8, {r5, r7}
  4042ee:	f300 8381 	bgt.w	4049f4 <_svfprintf_r+0xa98>
  4042f2:	f108 0808 	add.w	r8, r8, #8
  4042f6:	9b07      	ldr	r3, [sp, #28]
  4042f8:	05df      	lsls	r7, r3, #23
  4042fa:	f100 8268 	bmi.w	4047ce <_svfprintf_r+0x872>
  4042fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404300:	990e      	ldr	r1, [sp, #56]	; 0x38
  404302:	f8c8 6000 	str.w	r6, [r8]
  404306:	3301      	adds	r3, #1
  404308:	440c      	add	r4, r1
  40430a:	2b07      	cmp	r3, #7
  40430c:	9427      	str	r4, [sp, #156]	; 0x9c
  40430e:	f8c8 1004 	str.w	r1, [r8, #4]
  404312:	9326      	str	r3, [sp, #152]	; 0x98
  404314:	f300 834d 	bgt.w	4049b2 <_svfprintf_r+0xa56>
  404318:	f108 0808 	add.w	r8, r8, #8
  40431c:	9b07      	ldr	r3, [sp, #28]
  40431e:	075b      	lsls	r3, r3, #29
  404320:	d53a      	bpl.n	404398 <_svfprintf_r+0x43c>
  404322:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404324:	9a08      	ldr	r2, [sp, #32]
  404326:	1a9d      	subs	r5, r3, r2
  404328:	2d00      	cmp	r5, #0
  40432a:	dd35      	ble.n	404398 <_svfprintf_r+0x43c>
  40432c:	2d10      	cmp	r5, #16
  40432e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404330:	dd20      	ble.n	404374 <_svfprintf_r+0x418>
  404332:	2610      	movs	r6, #16
  404334:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404336:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40433a:	e004      	b.n	404346 <_svfprintf_r+0x3ea>
  40433c:	3d10      	subs	r5, #16
  40433e:	2d10      	cmp	r5, #16
  404340:	f108 0808 	add.w	r8, r8, #8
  404344:	dd16      	ble.n	404374 <_svfprintf_r+0x418>
  404346:	3301      	adds	r3, #1
  404348:	4a5e      	ldr	r2, [pc, #376]	; (4044c4 <_svfprintf_r+0x568>)
  40434a:	9326      	str	r3, [sp, #152]	; 0x98
  40434c:	3410      	adds	r4, #16
  40434e:	2b07      	cmp	r3, #7
  404350:	9427      	str	r4, [sp, #156]	; 0x9c
  404352:	e888 0044 	stmia.w	r8, {r2, r6}
  404356:	ddf1      	ble.n	40433c <_svfprintf_r+0x3e0>
  404358:	aa25      	add	r2, sp, #148	; 0x94
  40435a:	4659      	mov	r1, fp
  40435c:	4638      	mov	r0, r7
  40435e:	f003 f999 	bl	407694 <__ssprint_r>
  404362:	2800      	cmp	r0, #0
  404364:	f47f aecc 	bne.w	404100 <_svfprintf_r+0x1a4>
  404368:	3d10      	subs	r5, #16
  40436a:	2d10      	cmp	r5, #16
  40436c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40436e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404370:	46c8      	mov	r8, r9
  404372:	dce8      	bgt.n	404346 <_svfprintf_r+0x3ea>
  404374:	3301      	adds	r3, #1
  404376:	4a53      	ldr	r2, [pc, #332]	; (4044c4 <_svfprintf_r+0x568>)
  404378:	9326      	str	r3, [sp, #152]	; 0x98
  40437a:	442c      	add	r4, r5
  40437c:	2b07      	cmp	r3, #7
  40437e:	9427      	str	r4, [sp, #156]	; 0x9c
  404380:	e888 0024 	stmia.w	r8, {r2, r5}
  404384:	dd08      	ble.n	404398 <_svfprintf_r+0x43c>
  404386:	aa25      	add	r2, sp, #148	; 0x94
  404388:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40438a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40438c:	f003 f982 	bl	407694 <__ssprint_r>
  404390:	2800      	cmp	r0, #0
  404392:	f47f aeb5 	bne.w	404100 <_svfprintf_r+0x1a4>
  404396:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404398:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40439a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40439c:	9908      	ldr	r1, [sp, #32]
  40439e:	428a      	cmp	r2, r1
  4043a0:	bfac      	ite	ge
  4043a2:	189b      	addge	r3, r3, r2
  4043a4:	185b      	addlt	r3, r3, r1
  4043a6:	9309      	str	r3, [sp, #36]	; 0x24
  4043a8:	2c00      	cmp	r4, #0
  4043aa:	f040 830d 	bne.w	4049c8 <_svfprintf_r+0xa6c>
  4043ae:	2300      	movs	r3, #0
  4043b0:	9326      	str	r3, [sp, #152]	; 0x98
  4043b2:	46c8      	mov	r8, r9
  4043b4:	e5f9      	b.n	403faa <_svfprintf_r+0x4e>
  4043b6:	9311      	str	r3, [sp, #68]	; 0x44
  4043b8:	f01b 0320 	ands.w	r3, fp, #32
  4043bc:	f040 81e3 	bne.w	404786 <_svfprintf_r+0x82a>
  4043c0:	f01b 0210 	ands.w	r2, fp, #16
  4043c4:	f040 842e 	bne.w	404c24 <_svfprintf_r+0xcc8>
  4043c8:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4043cc:	f000 842a 	beq.w	404c24 <_svfprintf_r+0xcc8>
  4043d0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4043d2:	4613      	mov	r3, r2
  4043d4:	460a      	mov	r2, r1
  4043d6:	3204      	adds	r2, #4
  4043d8:	880c      	ldrh	r4, [r1, #0]
  4043da:	920f      	str	r2, [sp, #60]	; 0x3c
  4043dc:	2500      	movs	r5, #0
  4043de:	e6b0      	b.n	404142 <_svfprintf_r+0x1e6>
  4043e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4043e2:	9311      	str	r3, [sp, #68]	; 0x44
  4043e4:	6816      	ldr	r6, [r2, #0]
  4043e6:	2400      	movs	r4, #0
  4043e8:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4043ec:	1d15      	adds	r5, r2, #4
  4043ee:	2e00      	cmp	r6, #0
  4043f0:	f000 86a7 	beq.w	405142 <_svfprintf_r+0x11e6>
  4043f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4043f6:	1c53      	adds	r3, r2, #1
  4043f8:	f000 8609 	beq.w	40500e <_svfprintf_r+0x10b2>
  4043fc:	4621      	mov	r1, r4
  4043fe:	4630      	mov	r0, r6
  404400:	f002 fbd6 	bl	406bb0 <memchr>
  404404:	2800      	cmp	r0, #0
  404406:	f000 86e1 	beq.w	4051cc <_svfprintf_r+0x1270>
  40440a:	1b83      	subs	r3, r0, r6
  40440c:	930e      	str	r3, [sp, #56]	; 0x38
  40440e:	940a      	str	r4, [sp, #40]	; 0x28
  404410:	950f      	str	r5, [sp, #60]	; 0x3c
  404412:	f8cd b01c 	str.w	fp, [sp, #28]
  404416:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40441a:	9308      	str	r3, [sp, #32]
  40441c:	9412      	str	r4, [sp, #72]	; 0x48
  40441e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404422:	e6b3      	b.n	40418c <_svfprintf_r+0x230>
  404424:	f89a 3000 	ldrb.w	r3, [sl]
  404428:	2201      	movs	r2, #1
  40442a:	212b      	movs	r1, #43	; 0x2b
  40442c:	e5ee      	b.n	40400c <_svfprintf_r+0xb0>
  40442e:	f04b 0b20 	orr.w	fp, fp, #32
  404432:	f89a 3000 	ldrb.w	r3, [sl]
  404436:	e5e9      	b.n	40400c <_svfprintf_r+0xb0>
  404438:	9311      	str	r3, [sp, #68]	; 0x44
  40443a:	2a00      	cmp	r2, #0
  40443c:	f040 8795 	bne.w	40536a <_svfprintf_r+0x140e>
  404440:	4b22      	ldr	r3, [pc, #136]	; (4044cc <_svfprintf_r+0x570>)
  404442:	9318      	str	r3, [sp, #96]	; 0x60
  404444:	f01b 0f20 	tst.w	fp, #32
  404448:	f040 8111 	bne.w	40466e <_svfprintf_r+0x712>
  40444c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40444e:	f01b 0f10 	tst.w	fp, #16
  404452:	4613      	mov	r3, r2
  404454:	f040 83e1 	bne.w	404c1a <_svfprintf_r+0xcbe>
  404458:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40445c:	f000 83dd 	beq.w	404c1a <_svfprintf_r+0xcbe>
  404460:	3304      	adds	r3, #4
  404462:	8814      	ldrh	r4, [r2, #0]
  404464:	930f      	str	r3, [sp, #60]	; 0x3c
  404466:	2500      	movs	r5, #0
  404468:	f01b 0f01 	tst.w	fp, #1
  40446c:	f000 810c 	beq.w	404688 <_svfprintf_r+0x72c>
  404470:	ea54 0305 	orrs.w	r3, r4, r5
  404474:	f000 8108 	beq.w	404688 <_svfprintf_r+0x72c>
  404478:	2330      	movs	r3, #48	; 0x30
  40447a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40447e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  404482:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  404486:	f04b 0b02 	orr.w	fp, fp, #2
  40448a:	2302      	movs	r3, #2
  40448c:	e659      	b.n	404142 <_svfprintf_r+0x1e6>
  40448e:	f89a 3000 	ldrb.w	r3, [sl]
  404492:	2900      	cmp	r1, #0
  404494:	f47f adba 	bne.w	40400c <_svfprintf_r+0xb0>
  404498:	2201      	movs	r2, #1
  40449a:	2120      	movs	r1, #32
  40449c:	e5b6      	b.n	40400c <_svfprintf_r+0xb0>
  40449e:	f04b 0b01 	orr.w	fp, fp, #1
  4044a2:	f89a 3000 	ldrb.w	r3, [sl]
  4044a6:	e5b1      	b.n	40400c <_svfprintf_r+0xb0>
  4044a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4044aa:	6823      	ldr	r3, [r4, #0]
  4044ac:	930d      	str	r3, [sp, #52]	; 0x34
  4044ae:	4618      	mov	r0, r3
  4044b0:	2800      	cmp	r0, #0
  4044b2:	4623      	mov	r3, r4
  4044b4:	f103 0304 	add.w	r3, r3, #4
  4044b8:	f6ff ae0a 	blt.w	4040d0 <_svfprintf_r+0x174>
  4044bc:	930f      	str	r3, [sp, #60]	; 0x3c
  4044be:	f89a 3000 	ldrb.w	r3, [sl]
  4044c2:	e5a3      	b.n	40400c <_svfprintf_r+0xb0>
  4044c4:	00407c88 	.word	0x00407c88
  4044c8:	00407c98 	.word	0x00407c98
  4044cc:	00407c68 	.word	0x00407c68
  4044d0:	f04b 0b10 	orr.w	fp, fp, #16
  4044d4:	f01b 0f20 	tst.w	fp, #32
  4044d8:	9311      	str	r3, [sp, #68]	; 0x44
  4044da:	f43f ae23 	beq.w	404124 <_svfprintf_r+0x1c8>
  4044de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4044e0:	3507      	adds	r5, #7
  4044e2:	f025 0307 	bic.w	r3, r5, #7
  4044e6:	f103 0208 	add.w	r2, r3, #8
  4044ea:	e9d3 4500 	ldrd	r4, r5, [r3]
  4044ee:	920f      	str	r2, [sp, #60]	; 0x3c
  4044f0:	2301      	movs	r3, #1
  4044f2:	e626      	b.n	404142 <_svfprintf_r+0x1e6>
  4044f4:	f89a 3000 	ldrb.w	r3, [sl]
  4044f8:	2b2a      	cmp	r3, #42	; 0x2a
  4044fa:	f10a 0401 	add.w	r4, sl, #1
  4044fe:	f000 8727 	beq.w	405350 <_svfprintf_r+0x13f4>
  404502:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404506:	2809      	cmp	r0, #9
  404508:	46a2      	mov	sl, r4
  40450a:	f200 86ad 	bhi.w	405268 <_svfprintf_r+0x130c>
  40450e:	2300      	movs	r3, #0
  404510:	461c      	mov	r4, r3
  404512:	f81a 3b01 	ldrb.w	r3, [sl], #1
  404516:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40451a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40451e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404522:	2809      	cmp	r0, #9
  404524:	d9f5      	bls.n	404512 <_svfprintf_r+0x5b6>
  404526:	940a      	str	r4, [sp, #40]	; 0x28
  404528:	e572      	b.n	404010 <_svfprintf_r+0xb4>
  40452a:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40452e:	f89a 3000 	ldrb.w	r3, [sl]
  404532:	e56b      	b.n	40400c <_svfprintf_r+0xb0>
  404534:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  404538:	f89a 3000 	ldrb.w	r3, [sl]
  40453c:	e566      	b.n	40400c <_svfprintf_r+0xb0>
  40453e:	f89a 3000 	ldrb.w	r3, [sl]
  404542:	2b6c      	cmp	r3, #108	; 0x6c
  404544:	bf03      	ittte	eq
  404546:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40454a:	f04b 0b20 	orreq.w	fp, fp, #32
  40454e:	f10a 0a01 	addeq.w	sl, sl, #1
  404552:	f04b 0b10 	orrne.w	fp, fp, #16
  404556:	e559      	b.n	40400c <_svfprintf_r+0xb0>
  404558:	2a00      	cmp	r2, #0
  40455a:	f040 8711 	bne.w	405380 <_svfprintf_r+0x1424>
  40455e:	f01b 0f20 	tst.w	fp, #32
  404562:	f040 84f9 	bne.w	404f58 <_svfprintf_r+0xffc>
  404566:	f01b 0f10 	tst.w	fp, #16
  40456a:	f040 84ac 	bne.w	404ec6 <_svfprintf_r+0xf6a>
  40456e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  404572:	f000 84a8 	beq.w	404ec6 <_svfprintf_r+0xf6a>
  404576:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404578:	6813      	ldr	r3, [r2, #0]
  40457a:	3204      	adds	r2, #4
  40457c:	920f      	str	r2, [sp, #60]	; 0x3c
  40457e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  404582:	801a      	strh	r2, [r3, #0]
  404584:	e511      	b.n	403faa <_svfprintf_r+0x4e>
  404586:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404588:	4bb3      	ldr	r3, [pc, #716]	; (404858 <_svfprintf_r+0x8fc>)
  40458a:	680c      	ldr	r4, [r1, #0]
  40458c:	9318      	str	r3, [sp, #96]	; 0x60
  40458e:	2230      	movs	r2, #48	; 0x30
  404590:	2378      	movs	r3, #120	; 0x78
  404592:	3104      	adds	r1, #4
  404594:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  404598:	9311      	str	r3, [sp, #68]	; 0x44
  40459a:	f04b 0b02 	orr.w	fp, fp, #2
  40459e:	910f      	str	r1, [sp, #60]	; 0x3c
  4045a0:	2500      	movs	r5, #0
  4045a2:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4045a6:	2302      	movs	r3, #2
  4045a8:	e5cb      	b.n	404142 <_svfprintf_r+0x1e6>
  4045aa:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4045ac:	9311      	str	r3, [sp, #68]	; 0x44
  4045ae:	680a      	ldr	r2, [r1, #0]
  4045b0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4045b4:	2300      	movs	r3, #0
  4045b6:	460a      	mov	r2, r1
  4045b8:	461f      	mov	r7, r3
  4045ba:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4045be:	3204      	adds	r2, #4
  4045c0:	2301      	movs	r3, #1
  4045c2:	9308      	str	r3, [sp, #32]
  4045c4:	f8cd b01c 	str.w	fp, [sp, #28]
  4045c8:	970a      	str	r7, [sp, #40]	; 0x28
  4045ca:	9712      	str	r7, [sp, #72]	; 0x48
  4045cc:	920f      	str	r2, [sp, #60]	; 0x3c
  4045ce:	930e      	str	r3, [sp, #56]	; 0x38
  4045d0:	ae28      	add	r6, sp, #160	; 0xa0
  4045d2:	e5df      	b.n	404194 <_svfprintf_r+0x238>
  4045d4:	9311      	str	r3, [sp, #68]	; 0x44
  4045d6:	2a00      	cmp	r2, #0
  4045d8:	f040 86ea 	bne.w	4053b0 <_svfprintf_r+0x1454>
  4045dc:	f01b 0f20 	tst.w	fp, #32
  4045e0:	d15d      	bne.n	40469e <_svfprintf_r+0x742>
  4045e2:	f01b 0f10 	tst.w	fp, #16
  4045e6:	f040 8308 	bne.w	404bfa <_svfprintf_r+0xc9e>
  4045ea:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4045ee:	f000 8304 	beq.w	404bfa <_svfprintf_r+0xc9e>
  4045f2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4045f4:	f9b1 4000 	ldrsh.w	r4, [r1]
  4045f8:	3104      	adds	r1, #4
  4045fa:	17e5      	asrs	r5, r4, #31
  4045fc:	4622      	mov	r2, r4
  4045fe:	462b      	mov	r3, r5
  404600:	910f      	str	r1, [sp, #60]	; 0x3c
  404602:	2a00      	cmp	r2, #0
  404604:	f173 0300 	sbcs.w	r3, r3, #0
  404608:	db58      	blt.n	4046bc <_svfprintf_r+0x760>
  40460a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40460c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404610:	1c4a      	adds	r2, r1, #1
  404612:	f04f 0301 	mov.w	r3, #1
  404616:	f47f ad9b 	bne.w	404150 <_svfprintf_r+0x1f4>
  40461a:	ea54 0205 	orrs.w	r2, r4, r5
  40461e:	f000 81df 	beq.w	4049e0 <_svfprintf_r+0xa84>
  404622:	f8cd b01c 	str.w	fp, [sp, #28]
  404626:	2b01      	cmp	r3, #1
  404628:	f000 827b 	beq.w	404b22 <_svfprintf_r+0xbc6>
  40462c:	2b02      	cmp	r3, #2
  40462e:	f040 8206 	bne.w	404a3e <_svfprintf_r+0xae2>
  404632:	9818      	ldr	r0, [sp, #96]	; 0x60
  404634:	464e      	mov	r6, r9
  404636:	0923      	lsrs	r3, r4, #4
  404638:	f004 010f 	and.w	r1, r4, #15
  40463c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  404640:	092a      	lsrs	r2, r5, #4
  404642:	461c      	mov	r4, r3
  404644:	4615      	mov	r5, r2
  404646:	5c43      	ldrb	r3, [r0, r1]
  404648:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40464c:	ea54 0305 	orrs.w	r3, r4, r5
  404650:	d1f1      	bne.n	404636 <_svfprintf_r+0x6da>
  404652:	eba9 0306 	sub.w	r3, r9, r6
  404656:	930e      	str	r3, [sp, #56]	; 0x38
  404658:	e590      	b.n	40417c <_svfprintf_r+0x220>
  40465a:	9311      	str	r3, [sp, #68]	; 0x44
  40465c:	2a00      	cmp	r2, #0
  40465e:	f040 86a3 	bne.w	4053a8 <_svfprintf_r+0x144c>
  404662:	4b7e      	ldr	r3, [pc, #504]	; (40485c <_svfprintf_r+0x900>)
  404664:	9318      	str	r3, [sp, #96]	; 0x60
  404666:	f01b 0f20 	tst.w	fp, #32
  40466a:	f43f aeef 	beq.w	40444c <_svfprintf_r+0x4f0>
  40466e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404670:	3507      	adds	r5, #7
  404672:	f025 0307 	bic.w	r3, r5, #7
  404676:	f103 0208 	add.w	r2, r3, #8
  40467a:	f01b 0f01 	tst.w	fp, #1
  40467e:	920f      	str	r2, [sp, #60]	; 0x3c
  404680:	e9d3 4500 	ldrd	r4, r5, [r3]
  404684:	f47f aef4 	bne.w	404470 <_svfprintf_r+0x514>
  404688:	2302      	movs	r3, #2
  40468a:	e55a      	b.n	404142 <_svfprintf_r+0x1e6>
  40468c:	9311      	str	r3, [sp, #68]	; 0x44
  40468e:	2a00      	cmp	r2, #0
  404690:	f040 8686 	bne.w	4053a0 <_svfprintf_r+0x1444>
  404694:	f04b 0b10 	orr.w	fp, fp, #16
  404698:	f01b 0f20 	tst.w	fp, #32
  40469c:	d0a1      	beq.n	4045e2 <_svfprintf_r+0x686>
  40469e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4046a0:	3507      	adds	r5, #7
  4046a2:	f025 0507 	bic.w	r5, r5, #7
  4046a6:	e9d5 2300 	ldrd	r2, r3, [r5]
  4046aa:	2a00      	cmp	r2, #0
  4046ac:	f105 0108 	add.w	r1, r5, #8
  4046b0:	461d      	mov	r5, r3
  4046b2:	f173 0300 	sbcs.w	r3, r3, #0
  4046b6:	910f      	str	r1, [sp, #60]	; 0x3c
  4046b8:	4614      	mov	r4, r2
  4046ba:	daa6      	bge.n	40460a <_svfprintf_r+0x6ae>
  4046bc:	272d      	movs	r7, #45	; 0x2d
  4046be:	4264      	negs	r4, r4
  4046c0:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4046c4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4046c8:	2301      	movs	r3, #1
  4046ca:	e53d      	b.n	404148 <_svfprintf_r+0x1ec>
  4046cc:	9311      	str	r3, [sp, #68]	; 0x44
  4046ce:	2a00      	cmp	r2, #0
  4046d0:	f040 8662 	bne.w	405398 <_svfprintf_r+0x143c>
  4046d4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4046d6:	3507      	adds	r5, #7
  4046d8:	f025 0307 	bic.w	r3, r5, #7
  4046dc:	f103 0208 	add.w	r2, r3, #8
  4046e0:	920f      	str	r2, [sp, #60]	; 0x3c
  4046e2:	681a      	ldr	r2, [r3, #0]
  4046e4:	9215      	str	r2, [sp, #84]	; 0x54
  4046e6:	685b      	ldr	r3, [r3, #4]
  4046e8:	9314      	str	r3, [sp, #80]	; 0x50
  4046ea:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4046ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4046ee:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4046f2:	4628      	mov	r0, r5
  4046f4:	4621      	mov	r1, r4
  4046f6:	f04f 32ff 	mov.w	r2, #4294967295
  4046fa:	4b59      	ldr	r3, [pc, #356]	; (404860 <_svfprintf_r+0x904>)
  4046fc:	f7ff fa1a 	bl	403b34 <__aeabi_dcmpun>
  404700:	2800      	cmp	r0, #0
  404702:	f040 834a 	bne.w	404d9a <_svfprintf_r+0xe3e>
  404706:	4628      	mov	r0, r5
  404708:	4621      	mov	r1, r4
  40470a:	f04f 32ff 	mov.w	r2, #4294967295
  40470e:	4b54      	ldr	r3, [pc, #336]	; (404860 <_svfprintf_r+0x904>)
  404710:	f7ff f9f2 	bl	403af8 <__aeabi_dcmple>
  404714:	2800      	cmp	r0, #0
  404716:	f040 8340 	bne.w	404d9a <_svfprintf_r+0xe3e>
  40471a:	a815      	add	r0, sp, #84	; 0x54
  40471c:	c80d      	ldmia	r0, {r0, r2, r3}
  40471e:	9914      	ldr	r1, [sp, #80]	; 0x50
  404720:	f7ff f9e0 	bl	403ae4 <__aeabi_dcmplt>
  404724:	2800      	cmp	r0, #0
  404726:	f040 8530 	bne.w	40518a <_svfprintf_r+0x122e>
  40472a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40472e:	4e4d      	ldr	r6, [pc, #308]	; (404864 <_svfprintf_r+0x908>)
  404730:	4b4d      	ldr	r3, [pc, #308]	; (404868 <_svfprintf_r+0x90c>)
  404732:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  404736:	9007      	str	r0, [sp, #28]
  404738:	9811      	ldr	r0, [sp, #68]	; 0x44
  40473a:	2203      	movs	r2, #3
  40473c:	2100      	movs	r1, #0
  40473e:	9208      	str	r2, [sp, #32]
  404740:	910a      	str	r1, [sp, #40]	; 0x28
  404742:	2847      	cmp	r0, #71	; 0x47
  404744:	bfd8      	it	le
  404746:	461e      	movle	r6, r3
  404748:	920e      	str	r2, [sp, #56]	; 0x38
  40474a:	9112      	str	r1, [sp, #72]	; 0x48
  40474c:	e51e      	b.n	40418c <_svfprintf_r+0x230>
  40474e:	f04b 0b08 	orr.w	fp, fp, #8
  404752:	f89a 3000 	ldrb.w	r3, [sl]
  404756:	e459      	b.n	40400c <_svfprintf_r+0xb0>
  404758:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40475c:	2300      	movs	r3, #0
  40475e:	461c      	mov	r4, r3
  404760:	f81a 3b01 	ldrb.w	r3, [sl], #1
  404764:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  404768:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40476c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  404770:	2809      	cmp	r0, #9
  404772:	d9f5      	bls.n	404760 <_svfprintf_r+0x804>
  404774:	940d      	str	r4, [sp, #52]	; 0x34
  404776:	e44b      	b.n	404010 <_svfprintf_r+0xb4>
  404778:	f04b 0b10 	orr.w	fp, fp, #16
  40477c:	9311      	str	r3, [sp, #68]	; 0x44
  40477e:	f01b 0320 	ands.w	r3, fp, #32
  404782:	f43f ae1d 	beq.w	4043c0 <_svfprintf_r+0x464>
  404786:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  404788:	3507      	adds	r5, #7
  40478a:	f025 0307 	bic.w	r3, r5, #7
  40478e:	f103 0208 	add.w	r2, r3, #8
  404792:	e9d3 4500 	ldrd	r4, r5, [r3]
  404796:	920f      	str	r2, [sp, #60]	; 0x3c
  404798:	2300      	movs	r3, #0
  40479a:	e4d2      	b.n	404142 <_svfprintf_r+0x1e6>
  40479c:	9311      	str	r3, [sp, #68]	; 0x44
  40479e:	2a00      	cmp	r2, #0
  4047a0:	f040 85e7 	bne.w	405372 <_svfprintf_r+0x1416>
  4047a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4047a6:	2a00      	cmp	r2, #0
  4047a8:	f43f aca3 	beq.w	4040f2 <_svfprintf_r+0x196>
  4047ac:	2300      	movs	r3, #0
  4047ae:	2101      	movs	r1, #1
  4047b0:	461f      	mov	r7, r3
  4047b2:	9108      	str	r1, [sp, #32]
  4047b4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4047b8:	f8cd b01c 	str.w	fp, [sp, #28]
  4047bc:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4047c0:	930a      	str	r3, [sp, #40]	; 0x28
  4047c2:	9312      	str	r3, [sp, #72]	; 0x48
  4047c4:	910e      	str	r1, [sp, #56]	; 0x38
  4047c6:	ae28      	add	r6, sp, #160	; 0xa0
  4047c8:	e4e4      	b.n	404194 <_svfprintf_r+0x238>
  4047ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4047cc:	e534      	b.n	404238 <_svfprintf_r+0x2dc>
  4047ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4047d0:	2b65      	cmp	r3, #101	; 0x65
  4047d2:	f340 80a7 	ble.w	404924 <_svfprintf_r+0x9c8>
  4047d6:	a815      	add	r0, sp, #84	; 0x54
  4047d8:	c80d      	ldmia	r0, {r0, r2, r3}
  4047da:	9914      	ldr	r1, [sp, #80]	; 0x50
  4047dc:	f7ff f978 	bl	403ad0 <__aeabi_dcmpeq>
  4047e0:	2800      	cmp	r0, #0
  4047e2:	f000 8150 	beq.w	404a86 <_svfprintf_r+0xb2a>
  4047e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4047e8:	4a20      	ldr	r2, [pc, #128]	; (40486c <_svfprintf_r+0x910>)
  4047ea:	f8c8 2000 	str.w	r2, [r8]
  4047ee:	3301      	adds	r3, #1
  4047f0:	3401      	adds	r4, #1
  4047f2:	2201      	movs	r2, #1
  4047f4:	2b07      	cmp	r3, #7
  4047f6:	9427      	str	r4, [sp, #156]	; 0x9c
  4047f8:	9326      	str	r3, [sp, #152]	; 0x98
  4047fa:	f8c8 2004 	str.w	r2, [r8, #4]
  4047fe:	f300 836a 	bgt.w	404ed6 <_svfprintf_r+0xf7a>
  404802:	f108 0808 	add.w	r8, r8, #8
  404806:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404808:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40480a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40480c:	4293      	cmp	r3, r2
  40480e:	db03      	blt.n	404818 <_svfprintf_r+0x8bc>
  404810:	9b07      	ldr	r3, [sp, #28]
  404812:	07dd      	lsls	r5, r3, #31
  404814:	f57f ad82 	bpl.w	40431c <_svfprintf_r+0x3c0>
  404818:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40481a:	9919      	ldr	r1, [sp, #100]	; 0x64
  40481c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40481e:	f8c8 2000 	str.w	r2, [r8]
  404822:	3301      	adds	r3, #1
  404824:	440c      	add	r4, r1
  404826:	2b07      	cmp	r3, #7
  404828:	f8c8 1004 	str.w	r1, [r8, #4]
  40482c:	9427      	str	r4, [sp, #156]	; 0x9c
  40482e:	9326      	str	r3, [sp, #152]	; 0x98
  404830:	f300 839e 	bgt.w	404f70 <_svfprintf_r+0x1014>
  404834:	f108 0808 	add.w	r8, r8, #8
  404838:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40483a:	1e5e      	subs	r6, r3, #1
  40483c:	2e00      	cmp	r6, #0
  40483e:	f77f ad6d 	ble.w	40431c <_svfprintf_r+0x3c0>
  404842:	2e10      	cmp	r6, #16
  404844:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404846:	4d0a      	ldr	r5, [pc, #40]	; (404870 <_svfprintf_r+0x914>)
  404848:	f340 81f5 	ble.w	404c36 <_svfprintf_r+0xcda>
  40484c:	4622      	mov	r2, r4
  40484e:	2710      	movs	r7, #16
  404850:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404854:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  404856:	e013      	b.n	404880 <_svfprintf_r+0x924>
  404858:	00407c68 	.word	0x00407c68
  40485c:	00407c54 	.word	0x00407c54
  404860:	7fefffff 	.word	0x7fefffff
  404864:	00407c48 	.word	0x00407c48
  404868:	00407c44 	.word	0x00407c44
  40486c:	00407c84 	.word	0x00407c84
  404870:	00407c98 	.word	0x00407c98
  404874:	f108 0808 	add.w	r8, r8, #8
  404878:	3e10      	subs	r6, #16
  40487a:	2e10      	cmp	r6, #16
  40487c:	f340 81da 	ble.w	404c34 <_svfprintf_r+0xcd8>
  404880:	3301      	adds	r3, #1
  404882:	3210      	adds	r2, #16
  404884:	2b07      	cmp	r3, #7
  404886:	9227      	str	r2, [sp, #156]	; 0x9c
  404888:	9326      	str	r3, [sp, #152]	; 0x98
  40488a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40488e:	ddf1      	ble.n	404874 <_svfprintf_r+0x918>
  404890:	aa25      	add	r2, sp, #148	; 0x94
  404892:	4621      	mov	r1, r4
  404894:	4658      	mov	r0, fp
  404896:	f002 fefd 	bl	407694 <__ssprint_r>
  40489a:	2800      	cmp	r0, #0
  40489c:	f47f ac30 	bne.w	404100 <_svfprintf_r+0x1a4>
  4048a0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4048a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4048a4:	46c8      	mov	r8, r9
  4048a6:	e7e7      	b.n	404878 <_svfprintf_r+0x91c>
  4048a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4048aa:	9a08      	ldr	r2, [sp, #32]
  4048ac:	1a9f      	subs	r7, r3, r2
  4048ae:	2f00      	cmp	r7, #0
  4048b0:	f77f ace5 	ble.w	40427e <_svfprintf_r+0x322>
  4048b4:	2f10      	cmp	r7, #16
  4048b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4048b8:	4db6      	ldr	r5, [pc, #728]	; (404b94 <_svfprintf_r+0xc38>)
  4048ba:	dd27      	ble.n	40490c <_svfprintf_r+0x9b0>
  4048bc:	4642      	mov	r2, r8
  4048be:	4621      	mov	r1, r4
  4048c0:	46b0      	mov	r8, r6
  4048c2:	f04f 0b10 	mov.w	fp, #16
  4048c6:	462e      	mov	r6, r5
  4048c8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4048ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4048cc:	e004      	b.n	4048d8 <_svfprintf_r+0x97c>
  4048ce:	3f10      	subs	r7, #16
  4048d0:	2f10      	cmp	r7, #16
  4048d2:	f102 0208 	add.w	r2, r2, #8
  4048d6:	dd15      	ble.n	404904 <_svfprintf_r+0x9a8>
  4048d8:	3301      	adds	r3, #1
  4048da:	3110      	adds	r1, #16
  4048dc:	2b07      	cmp	r3, #7
  4048de:	9127      	str	r1, [sp, #156]	; 0x9c
  4048e0:	9326      	str	r3, [sp, #152]	; 0x98
  4048e2:	e882 0840 	stmia.w	r2, {r6, fp}
  4048e6:	ddf2      	ble.n	4048ce <_svfprintf_r+0x972>
  4048e8:	aa25      	add	r2, sp, #148	; 0x94
  4048ea:	4629      	mov	r1, r5
  4048ec:	4620      	mov	r0, r4
  4048ee:	f002 fed1 	bl	407694 <__ssprint_r>
  4048f2:	2800      	cmp	r0, #0
  4048f4:	f47f ac04 	bne.w	404100 <_svfprintf_r+0x1a4>
  4048f8:	3f10      	subs	r7, #16
  4048fa:	2f10      	cmp	r7, #16
  4048fc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4048fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404900:	464a      	mov	r2, r9
  404902:	dce9      	bgt.n	4048d8 <_svfprintf_r+0x97c>
  404904:	4635      	mov	r5, r6
  404906:	460c      	mov	r4, r1
  404908:	4646      	mov	r6, r8
  40490a:	4690      	mov	r8, r2
  40490c:	3301      	adds	r3, #1
  40490e:	443c      	add	r4, r7
  404910:	2b07      	cmp	r3, #7
  404912:	9427      	str	r4, [sp, #156]	; 0x9c
  404914:	9326      	str	r3, [sp, #152]	; 0x98
  404916:	e888 00a0 	stmia.w	r8, {r5, r7}
  40491a:	f300 8232 	bgt.w	404d82 <_svfprintf_r+0xe26>
  40491e:	f108 0808 	add.w	r8, r8, #8
  404922:	e4ac      	b.n	40427e <_svfprintf_r+0x322>
  404924:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404926:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404928:	2b01      	cmp	r3, #1
  40492a:	f340 81fe 	ble.w	404d2a <_svfprintf_r+0xdce>
  40492e:	3701      	adds	r7, #1
  404930:	3401      	adds	r4, #1
  404932:	2301      	movs	r3, #1
  404934:	2f07      	cmp	r7, #7
  404936:	9427      	str	r4, [sp, #156]	; 0x9c
  404938:	9726      	str	r7, [sp, #152]	; 0x98
  40493a:	f8c8 6000 	str.w	r6, [r8]
  40493e:	f8c8 3004 	str.w	r3, [r8, #4]
  404942:	f300 8203 	bgt.w	404d4c <_svfprintf_r+0xdf0>
  404946:	f108 0808 	add.w	r8, r8, #8
  40494a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40494c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40494e:	f8c8 3000 	str.w	r3, [r8]
  404952:	3701      	adds	r7, #1
  404954:	4414      	add	r4, r2
  404956:	2f07      	cmp	r7, #7
  404958:	9427      	str	r4, [sp, #156]	; 0x9c
  40495a:	9726      	str	r7, [sp, #152]	; 0x98
  40495c:	f8c8 2004 	str.w	r2, [r8, #4]
  404960:	f300 8200 	bgt.w	404d64 <_svfprintf_r+0xe08>
  404964:	f108 0808 	add.w	r8, r8, #8
  404968:	a815      	add	r0, sp, #84	; 0x54
  40496a:	c80d      	ldmia	r0, {r0, r2, r3}
  40496c:	9914      	ldr	r1, [sp, #80]	; 0x50
  40496e:	f7ff f8af 	bl	403ad0 <__aeabi_dcmpeq>
  404972:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404974:	2800      	cmp	r0, #0
  404976:	f040 8101 	bne.w	404b7c <_svfprintf_r+0xc20>
  40497a:	3b01      	subs	r3, #1
  40497c:	3701      	adds	r7, #1
  40497e:	3601      	adds	r6, #1
  404980:	441c      	add	r4, r3
  404982:	2f07      	cmp	r7, #7
  404984:	9726      	str	r7, [sp, #152]	; 0x98
  404986:	9427      	str	r4, [sp, #156]	; 0x9c
  404988:	f8c8 6000 	str.w	r6, [r8]
  40498c:	f8c8 3004 	str.w	r3, [r8, #4]
  404990:	f300 8127 	bgt.w	404be2 <_svfprintf_r+0xc86>
  404994:	f108 0808 	add.w	r8, r8, #8
  404998:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  40499a:	f8c8 2004 	str.w	r2, [r8, #4]
  40499e:	3701      	adds	r7, #1
  4049a0:	4414      	add	r4, r2
  4049a2:	ab21      	add	r3, sp, #132	; 0x84
  4049a4:	2f07      	cmp	r7, #7
  4049a6:	9427      	str	r4, [sp, #156]	; 0x9c
  4049a8:	9726      	str	r7, [sp, #152]	; 0x98
  4049aa:	f8c8 3000 	str.w	r3, [r8]
  4049ae:	f77f acb3 	ble.w	404318 <_svfprintf_r+0x3bc>
  4049b2:	aa25      	add	r2, sp, #148	; 0x94
  4049b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4049b6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4049b8:	f002 fe6c 	bl	407694 <__ssprint_r>
  4049bc:	2800      	cmp	r0, #0
  4049be:	f47f ab9f 	bne.w	404100 <_svfprintf_r+0x1a4>
  4049c2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4049c4:	46c8      	mov	r8, r9
  4049c6:	e4a9      	b.n	40431c <_svfprintf_r+0x3c0>
  4049c8:	aa25      	add	r2, sp, #148	; 0x94
  4049ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4049cc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4049ce:	f002 fe61 	bl	407694 <__ssprint_r>
  4049d2:	2800      	cmp	r0, #0
  4049d4:	f43f aceb 	beq.w	4043ae <_svfprintf_r+0x452>
  4049d8:	f7ff bb92 	b.w	404100 <_svfprintf_r+0x1a4>
  4049dc:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4049e0:	2b01      	cmp	r3, #1
  4049e2:	f000 8134 	beq.w	404c4e <_svfprintf_r+0xcf2>
  4049e6:	2b02      	cmp	r3, #2
  4049e8:	d125      	bne.n	404a36 <_svfprintf_r+0xada>
  4049ea:	f8cd b01c 	str.w	fp, [sp, #28]
  4049ee:	2400      	movs	r4, #0
  4049f0:	2500      	movs	r5, #0
  4049f2:	e61e      	b.n	404632 <_svfprintf_r+0x6d6>
  4049f4:	aa25      	add	r2, sp, #148	; 0x94
  4049f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4049f8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4049fa:	f002 fe4b 	bl	407694 <__ssprint_r>
  4049fe:	2800      	cmp	r0, #0
  404a00:	f47f ab7e 	bne.w	404100 <_svfprintf_r+0x1a4>
  404a04:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404a06:	46c8      	mov	r8, r9
  404a08:	e475      	b.n	4042f6 <_svfprintf_r+0x39a>
  404a0a:	aa25      	add	r2, sp, #148	; 0x94
  404a0c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404a0e:	980c      	ldr	r0, [sp, #48]	; 0x30
  404a10:	f002 fe40 	bl	407694 <__ssprint_r>
  404a14:	2800      	cmp	r0, #0
  404a16:	f47f ab73 	bne.w	404100 <_svfprintf_r+0x1a4>
  404a1a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404a1c:	46c8      	mov	r8, r9
  404a1e:	e41b      	b.n	404258 <_svfprintf_r+0x2fc>
  404a20:	aa25      	add	r2, sp, #148	; 0x94
  404a22:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404a24:	980c      	ldr	r0, [sp, #48]	; 0x30
  404a26:	f002 fe35 	bl	407694 <__ssprint_r>
  404a2a:	2800      	cmp	r0, #0
  404a2c:	f47f ab68 	bne.w	404100 <_svfprintf_r+0x1a4>
  404a30:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404a32:	46c8      	mov	r8, r9
  404a34:	e420      	b.n	404278 <_svfprintf_r+0x31c>
  404a36:	f8cd b01c 	str.w	fp, [sp, #28]
  404a3a:	2400      	movs	r4, #0
  404a3c:	2500      	movs	r5, #0
  404a3e:	4649      	mov	r1, r9
  404a40:	e000      	b.n	404a44 <_svfprintf_r+0xae8>
  404a42:	4631      	mov	r1, r6
  404a44:	08e2      	lsrs	r2, r4, #3
  404a46:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  404a4a:	08e8      	lsrs	r0, r5, #3
  404a4c:	f004 0307 	and.w	r3, r4, #7
  404a50:	4605      	mov	r5, r0
  404a52:	4614      	mov	r4, r2
  404a54:	3330      	adds	r3, #48	; 0x30
  404a56:	ea54 0205 	orrs.w	r2, r4, r5
  404a5a:	f801 3c01 	strb.w	r3, [r1, #-1]
  404a5e:	f101 36ff 	add.w	r6, r1, #4294967295
  404a62:	d1ee      	bne.n	404a42 <_svfprintf_r+0xae6>
  404a64:	9a07      	ldr	r2, [sp, #28]
  404a66:	07d2      	lsls	r2, r2, #31
  404a68:	f57f adf3 	bpl.w	404652 <_svfprintf_r+0x6f6>
  404a6c:	2b30      	cmp	r3, #48	; 0x30
  404a6e:	f43f adf0 	beq.w	404652 <_svfprintf_r+0x6f6>
  404a72:	3902      	subs	r1, #2
  404a74:	2330      	movs	r3, #48	; 0x30
  404a76:	f806 3c01 	strb.w	r3, [r6, #-1]
  404a7a:	eba9 0301 	sub.w	r3, r9, r1
  404a7e:	930e      	str	r3, [sp, #56]	; 0x38
  404a80:	460e      	mov	r6, r1
  404a82:	f7ff bb7b 	b.w	40417c <_svfprintf_r+0x220>
  404a86:	991f      	ldr	r1, [sp, #124]	; 0x7c
  404a88:	2900      	cmp	r1, #0
  404a8a:	f340 822e 	ble.w	404eea <_svfprintf_r+0xf8e>
  404a8e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404a90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  404a92:	4293      	cmp	r3, r2
  404a94:	bfa8      	it	ge
  404a96:	4613      	movge	r3, r2
  404a98:	2b00      	cmp	r3, #0
  404a9a:	461f      	mov	r7, r3
  404a9c:	dd0d      	ble.n	404aba <_svfprintf_r+0xb5e>
  404a9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404aa0:	f8c8 6000 	str.w	r6, [r8]
  404aa4:	3301      	adds	r3, #1
  404aa6:	443c      	add	r4, r7
  404aa8:	2b07      	cmp	r3, #7
  404aaa:	9427      	str	r4, [sp, #156]	; 0x9c
  404aac:	f8c8 7004 	str.w	r7, [r8, #4]
  404ab0:	9326      	str	r3, [sp, #152]	; 0x98
  404ab2:	f300 831f 	bgt.w	4050f4 <_svfprintf_r+0x1198>
  404ab6:	f108 0808 	add.w	r8, r8, #8
  404aba:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404abc:	2f00      	cmp	r7, #0
  404abe:	bfa8      	it	ge
  404ac0:	1bdb      	subge	r3, r3, r7
  404ac2:	2b00      	cmp	r3, #0
  404ac4:	461f      	mov	r7, r3
  404ac6:	f340 80d6 	ble.w	404c76 <_svfprintf_r+0xd1a>
  404aca:	2f10      	cmp	r7, #16
  404acc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404ace:	4d31      	ldr	r5, [pc, #196]	; (404b94 <_svfprintf_r+0xc38>)
  404ad0:	f340 81ed 	ble.w	404eae <_svfprintf_r+0xf52>
  404ad4:	4642      	mov	r2, r8
  404ad6:	4621      	mov	r1, r4
  404ad8:	46b0      	mov	r8, r6
  404ada:	f04f 0b10 	mov.w	fp, #16
  404ade:	462e      	mov	r6, r5
  404ae0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404ae2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  404ae4:	e004      	b.n	404af0 <_svfprintf_r+0xb94>
  404ae6:	3208      	adds	r2, #8
  404ae8:	3f10      	subs	r7, #16
  404aea:	2f10      	cmp	r7, #16
  404aec:	f340 81db 	ble.w	404ea6 <_svfprintf_r+0xf4a>
  404af0:	3301      	adds	r3, #1
  404af2:	3110      	adds	r1, #16
  404af4:	2b07      	cmp	r3, #7
  404af6:	9127      	str	r1, [sp, #156]	; 0x9c
  404af8:	9326      	str	r3, [sp, #152]	; 0x98
  404afa:	e882 0840 	stmia.w	r2, {r6, fp}
  404afe:	ddf2      	ble.n	404ae6 <_svfprintf_r+0xb8a>
  404b00:	aa25      	add	r2, sp, #148	; 0x94
  404b02:	4629      	mov	r1, r5
  404b04:	4620      	mov	r0, r4
  404b06:	f002 fdc5 	bl	407694 <__ssprint_r>
  404b0a:	2800      	cmp	r0, #0
  404b0c:	f47f aaf8 	bne.w	404100 <_svfprintf_r+0x1a4>
  404b10:	9927      	ldr	r1, [sp, #156]	; 0x9c
  404b12:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404b14:	464a      	mov	r2, r9
  404b16:	e7e7      	b.n	404ae8 <_svfprintf_r+0xb8c>
  404b18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404b1a:	930e      	str	r3, [sp, #56]	; 0x38
  404b1c:	464e      	mov	r6, r9
  404b1e:	f7ff bb2d 	b.w	40417c <_svfprintf_r+0x220>
  404b22:	2d00      	cmp	r5, #0
  404b24:	bf08      	it	eq
  404b26:	2c0a      	cmpeq	r4, #10
  404b28:	f0c0 808f 	bcc.w	404c4a <_svfprintf_r+0xcee>
  404b2c:	464e      	mov	r6, r9
  404b2e:	4620      	mov	r0, r4
  404b30:	4629      	mov	r1, r5
  404b32:	220a      	movs	r2, #10
  404b34:	2300      	movs	r3, #0
  404b36:	f002 fef3 	bl	407920 <__aeabi_uldivmod>
  404b3a:	3230      	adds	r2, #48	; 0x30
  404b3c:	f806 2d01 	strb.w	r2, [r6, #-1]!
  404b40:	4620      	mov	r0, r4
  404b42:	4629      	mov	r1, r5
  404b44:	2300      	movs	r3, #0
  404b46:	220a      	movs	r2, #10
  404b48:	f002 feea 	bl	407920 <__aeabi_uldivmod>
  404b4c:	4604      	mov	r4, r0
  404b4e:	460d      	mov	r5, r1
  404b50:	ea54 0305 	orrs.w	r3, r4, r5
  404b54:	d1eb      	bne.n	404b2e <_svfprintf_r+0xbd2>
  404b56:	eba9 0306 	sub.w	r3, r9, r6
  404b5a:	930e      	str	r3, [sp, #56]	; 0x38
  404b5c:	f7ff bb0e 	b.w	40417c <_svfprintf_r+0x220>
  404b60:	aa25      	add	r2, sp, #148	; 0x94
  404b62:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404b64:	980c      	ldr	r0, [sp, #48]	; 0x30
  404b66:	f002 fd95 	bl	407694 <__ssprint_r>
  404b6a:	2800      	cmp	r0, #0
  404b6c:	f47f aac8 	bne.w	404100 <_svfprintf_r+0x1a4>
  404b70:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404b74:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404b76:	46c8      	mov	r8, r9
  404b78:	f7ff bb5e 	b.w	404238 <_svfprintf_r+0x2dc>
  404b7c:	1e5e      	subs	r6, r3, #1
  404b7e:	2e00      	cmp	r6, #0
  404b80:	f77f af0a 	ble.w	404998 <_svfprintf_r+0xa3c>
  404b84:	2e10      	cmp	r6, #16
  404b86:	4d03      	ldr	r5, [pc, #12]	; (404b94 <_svfprintf_r+0xc38>)
  404b88:	dd22      	ble.n	404bd0 <_svfprintf_r+0xc74>
  404b8a:	4622      	mov	r2, r4
  404b8c:	f04f 0b10 	mov.w	fp, #16
  404b90:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404b92:	e006      	b.n	404ba2 <_svfprintf_r+0xc46>
  404b94:	00407c98 	.word	0x00407c98
  404b98:	3e10      	subs	r6, #16
  404b9a:	2e10      	cmp	r6, #16
  404b9c:	f108 0808 	add.w	r8, r8, #8
  404ba0:	dd15      	ble.n	404bce <_svfprintf_r+0xc72>
  404ba2:	3701      	adds	r7, #1
  404ba4:	3210      	adds	r2, #16
  404ba6:	2f07      	cmp	r7, #7
  404ba8:	9227      	str	r2, [sp, #156]	; 0x9c
  404baa:	9726      	str	r7, [sp, #152]	; 0x98
  404bac:	e888 0820 	stmia.w	r8, {r5, fp}
  404bb0:	ddf2      	ble.n	404b98 <_svfprintf_r+0xc3c>
  404bb2:	aa25      	add	r2, sp, #148	; 0x94
  404bb4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404bb6:	4620      	mov	r0, r4
  404bb8:	f002 fd6c 	bl	407694 <__ssprint_r>
  404bbc:	2800      	cmp	r0, #0
  404bbe:	f47f aa9f 	bne.w	404100 <_svfprintf_r+0x1a4>
  404bc2:	3e10      	subs	r6, #16
  404bc4:	2e10      	cmp	r6, #16
  404bc6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404bc8:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404bca:	46c8      	mov	r8, r9
  404bcc:	dce9      	bgt.n	404ba2 <_svfprintf_r+0xc46>
  404bce:	4614      	mov	r4, r2
  404bd0:	3701      	adds	r7, #1
  404bd2:	4434      	add	r4, r6
  404bd4:	2f07      	cmp	r7, #7
  404bd6:	9427      	str	r4, [sp, #156]	; 0x9c
  404bd8:	9726      	str	r7, [sp, #152]	; 0x98
  404bda:	e888 0060 	stmia.w	r8, {r5, r6}
  404bde:	f77f aed9 	ble.w	404994 <_svfprintf_r+0xa38>
  404be2:	aa25      	add	r2, sp, #148	; 0x94
  404be4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404be6:	980c      	ldr	r0, [sp, #48]	; 0x30
  404be8:	f002 fd54 	bl	407694 <__ssprint_r>
  404bec:	2800      	cmp	r0, #0
  404bee:	f47f aa87 	bne.w	404100 <_svfprintf_r+0x1a4>
  404bf2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404bf4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404bf6:	46c8      	mov	r8, r9
  404bf8:	e6ce      	b.n	404998 <_svfprintf_r+0xa3c>
  404bfa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404bfc:	6814      	ldr	r4, [r2, #0]
  404bfe:	4613      	mov	r3, r2
  404c00:	3304      	adds	r3, #4
  404c02:	17e5      	asrs	r5, r4, #31
  404c04:	930f      	str	r3, [sp, #60]	; 0x3c
  404c06:	4622      	mov	r2, r4
  404c08:	462b      	mov	r3, r5
  404c0a:	e4fa      	b.n	404602 <_svfprintf_r+0x6a6>
  404c0c:	3204      	adds	r2, #4
  404c0e:	681c      	ldr	r4, [r3, #0]
  404c10:	920f      	str	r2, [sp, #60]	; 0x3c
  404c12:	2301      	movs	r3, #1
  404c14:	2500      	movs	r5, #0
  404c16:	f7ff ba94 	b.w	404142 <_svfprintf_r+0x1e6>
  404c1a:	681c      	ldr	r4, [r3, #0]
  404c1c:	3304      	adds	r3, #4
  404c1e:	930f      	str	r3, [sp, #60]	; 0x3c
  404c20:	2500      	movs	r5, #0
  404c22:	e421      	b.n	404468 <_svfprintf_r+0x50c>
  404c24:	990f      	ldr	r1, [sp, #60]	; 0x3c
  404c26:	460a      	mov	r2, r1
  404c28:	3204      	adds	r2, #4
  404c2a:	680c      	ldr	r4, [r1, #0]
  404c2c:	920f      	str	r2, [sp, #60]	; 0x3c
  404c2e:	2500      	movs	r5, #0
  404c30:	f7ff ba87 	b.w	404142 <_svfprintf_r+0x1e6>
  404c34:	4614      	mov	r4, r2
  404c36:	3301      	adds	r3, #1
  404c38:	4434      	add	r4, r6
  404c3a:	2b07      	cmp	r3, #7
  404c3c:	9427      	str	r4, [sp, #156]	; 0x9c
  404c3e:	9326      	str	r3, [sp, #152]	; 0x98
  404c40:	e888 0060 	stmia.w	r8, {r5, r6}
  404c44:	f77f ab68 	ble.w	404318 <_svfprintf_r+0x3bc>
  404c48:	e6b3      	b.n	4049b2 <_svfprintf_r+0xa56>
  404c4a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  404c4e:	f8cd b01c 	str.w	fp, [sp, #28]
  404c52:	ae42      	add	r6, sp, #264	; 0x108
  404c54:	3430      	adds	r4, #48	; 0x30
  404c56:	2301      	movs	r3, #1
  404c58:	f806 4d41 	strb.w	r4, [r6, #-65]!
  404c5c:	930e      	str	r3, [sp, #56]	; 0x38
  404c5e:	f7ff ba8d 	b.w	40417c <_svfprintf_r+0x220>
  404c62:	aa25      	add	r2, sp, #148	; 0x94
  404c64:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404c66:	980c      	ldr	r0, [sp, #48]	; 0x30
  404c68:	f002 fd14 	bl	407694 <__ssprint_r>
  404c6c:	2800      	cmp	r0, #0
  404c6e:	f47f aa47 	bne.w	404100 <_svfprintf_r+0x1a4>
  404c72:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404c74:	46c8      	mov	r8, r9
  404c76:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  404c78:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404c7a:	429a      	cmp	r2, r3
  404c7c:	db44      	blt.n	404d08 <_svfprintf_r+0xdac>
  404c7e:	9b07      	ldr	r3, [sp, #28]
  404c80:	07d9      	lsls	r1, r3, #31
  404c82:	d441      	bmi.n	404d08 <_svfprintf_r+0xdac>
  404c84:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404c86:	9812      	ldr	r0, [sp, #72]	; 0x48
  404c88:	1a9a      	subs	r2, r3, r2
  404c8a:	1a1d      	subs	r5, r3, r0
  404c8c:	4295      	cmp	r5, r2
  404c8e:	bfa8      	it	ge
  404c90:	4615      	movge	r5, r2
  404c92:	2d00      	cmp	r5, #0
  404c94:	dd0e      	ble.n	404cb4 <_svfprintf_r+0xd58>
  404c96:	9926      	ldr	r1, [sp, #152]	; 0x98
  404c98:	f8c8 5004 	str.w	r5, [r8, #4]
  404c9c:	3101      	adds	r1, #1
  404c9e:	4406      	add	r6, r0
  404ca0:	442c      	add	r4, r5
  404ca2:	2907      	cmp	r1, #7
  404ca4:	f8c8 6000 	str.w	r6, [r8]
  404ca8:	9427      	str	r4, [sp, #156]	; 0x9c
  404caa:	9126      	str	r1, [sp, #152]	; 0x98
  404cac:	f300 823b 	bgt.w	405126 <_svfprintf_r+0x11ca>
  404cb0:	f108 0808 	add.w	r8, r8, #8
  404cb4:	2d00      	cmp	r5, #0
  404cb6:	bfac      	ite	ge
  404cb8:	1b56      	subge	r6, r2, r5
  404cba:	4616      	movlt	r6, r2
  404cbc:	2e00      	cmp	r6, #0
  404cbe:	f77f ab2d 	ble.w	40431c <_svfprintf_r+0x3c0>
  404cc2:	2e10      	cmp	r6, #16
  404cc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404cc6:	4db0      	ldr	r5, [pc, #704]	; (404f88 <_svfprintf_r+0x102c>)
  404cc8:	ddb5      	ble.n	404c36 <_svfprintf_r+0xcda>
  404cca:	4622      	mov	r2, r4
  404ccc:	2710      	movs	r7, #16
  404cce:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  404cd2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  404cd4:	e004      	b.n	404ce0 <_svfprintf_r+0xd84>
  404cd6:	f108 0808 	add.w	r8, r8, #8
  404cda:	3e10      	subs	r6, #16
  404cdc:	2e10      	cmp	r6, #16
  404cde:	dda9      	ble.n	404c34 <_svfprintf_r+0xcd8>
  404ce0:	3301      	adds	r3, #1
  404ce2:	3210      	adds	r2, #16
  404ce4:	2b07      	cmp	r3, #7
  404ce6:	9227      	str	r2, [sp, #156]	; 0x9c
  404ce8:	9326      	str	r3, [sp, #152]	; 0x98
  404cea:	e888 00a0 	stmia.w	r8, {r5, r7}
  404cee:	ddf2      	ble.n	404cd6 <_svfprintf_r+0xd7a>
  404cf0:	aa25      	add	r2, sp, #148	; 0x94
  404cf2:	4621      	mov	r1, r4
  404cf4:	4658      	mov	r0, fp
  404cf6:	f002 fccd 	bl	407694 <__ssprint_r>
  404cfa:	2800      	cmp	r0, #0
  404cfc:	f47f aa00 	bne.w	404100 <_svfprintf_r+0x1a4>
  404d00:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  404d02:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404d04:	46c8      	mov	r8, r9
  404d06:	e7e8      	b.n	404cda <_svfprintf_r+0xd7e>
  404d08:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404d0a:	9819      	ldr	r0, [sp, #100]	; 0x64
  404d0c:	991a      	ldr	r1, [sp, #104]	; 0x68
  404d0e:	f8c8 1000 	str.w	r1, [r8]
  404d12:	3301      	adds	r3, #1
  404d14:	4404      	add	r4, r0
  404d16:	2b07      	cmp	r3, #7
  404d18:	9427      	str	r4, [sp, #156]	; 0x9c
  404d1a:	f8c8 0004 	str.w	r0, [r8, #4]
  404d1e:	9326      	str	r3, [sp, #152]	; 0x98
  404d20:	f300 81f5 	bgt.w	40510e <_svfprintf_r+0x11b2>
  404d24:	f108 0808 	add.w	r8, r8, #8
  404d28:	e7ac      	b.n	404c84 <_svfprintf_r+0xd28>
  404d2a:	9b07      	ldr	r3, [sp, #28]
  404d2c:	07da      	lsls	r2, r3, #31
  404d2e:	f53f adfe 	bmi.w	40492e <_svfprintf_r+0x9d2>
  404d32:	3701      	adds	r7, #1
  404d34:	3401      	adds	r4, #1
  404d36:	2301      	movs	r3, #1
  404d38:	2f07      	cmp	r7, #7
  404d3a:	9427      	str	r4, [sp, #156]	; 0x9c
  404d3c:	9726      	str	r7, [sp, #152]	; 0x98
  404d3e:	f8c8 6000 	str.w	r6, [r8]
  404d42:	f8c8 3004 	str.w	r3, [r8, #4]
  404d46:	f77f ae25 	ble.w	404994 <_svfprintf_r+0xa38>
  404d4a:	e74a      	b.n	404be2 <_svfprintf_r+0xc86>
  404d4c:	aa25      	add	r2, sp, #148	; 0x94
  404d4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404d50:	980c      	ldr	r0, [sp, #48]	; 0x30
  404d52:	f002 fc9f 	bl	407694 <__ssprint_r>
  404d56:	2800      	cmp	r0, #0
  404d58:	f47f a9d2 	bne.w	404100 <_svfprintf_r+0x1a4>
  404d5c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404d5e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404d60:	46c8      	mov	r8, r9
  404d62:	e5f2      	b.n	40494a <_svfprintf_r+0x9ee>
  404d64:	aa25      	add	r2, sp, #148	; 0x94
  404d66:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404d68:	980c      	ldr	r0, [sp, #48]	; 0x30
  404d6a:	f002 fc93 	bl	407694 <__ssprint_r>
  404d6e:	2800      	cmp	r0, #0
  404d70:	f47f a9c6 	bne.w	404100 <_svfprintf_r+0x1a4>
  404d74:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404d76:	9f26      	ldr	r7, [sp, #152]	; 0x98
  404d78:	46c8      	mov	r8, r9
  404d7a:	e5f5      	b.n	404968 <_svfprintf_r+0xa0c>
  404d7c:	464e      	mov	r6, r9
  404d7e:	f7ff b9fd 	b.w	40417c <_svfprintf_r+0x220>
  404d82:	aa25      	add	r2, sp, #148	; 0x94
  404d84:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404d86:	980c      	ldr	r0, [sp, #48]	; 0x30
  404d88:	f002 fc84 	bl	407694 <__ssprint_r>
  404d8c:	2800      	cmp	r0, #0
  404d8e:	f47f a9b7 	bne.w	404100 <_svfprintf_r+0x1a4>
  404d92:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404d94:	46c8      	mov	r8, r9
  404d96:	f7ff ba72 	b.w	40427e <_svfprintf_r+0x322>
  404d9a:	9c15      	ldr	r4, [sp, #84]	; 0x54
  404d9c:	4622      	mov	r2, r4
  404d9e:	4620      	mov	r0, r4
  404da0:	9c14      	ldr	r4, [sp, #80]	; 0x50
  404da2:	4623      	mov	r3, r4
  404da4:	4621      	mov	r1, r4
  404da6:	f7fe fec5 	bl	403b34 <__aeabi_dcmpun>
  404daa:	2800      	cmp	r0, #0
  404dac:	f040 8286 	bne.w	4052bc <_svfprintf_r+0x1360>
  404db0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404db2:	3301      	adds	r3, #1
  404db4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404db6:	f023 0320 	bic.w	r3, r3, #32
  404dba:	930e      	str	r3, [sp, #56]	; 0x38
  404dbc:	f000 81e2 	beq.w	405184 <_svfprintf_r+0x1228>
  404dc0:	2b47      	cmp	r3, #71	; 0x47
  404dc2:	f000 811e 	beq.w	405002 <_svfprintf_r+0x10a6>
  404dc6:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  404dca:	9307      	str	r3, [sp, #28]
  404dcc:	9b14      	ldr	r3, [sp, #80]	; 0x50
  404dce:	1e1f      	subs	r7, r3, #0
  404dd0:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404dd2:	9308      	str	r3, [sp, #32]
  404dd4:	bfbb      	ittet	lt
  404dd6:	463b      	movlt	r3, r7
  404dd8:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  404ddc:	2300      	movge	r3, #0
  404dde:	232d      	movlt	r3, #45	; 0x2d
  404de0:	9310      	str	r3, [sp, #64]	; 0x40
  404de2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404de4:	2b66      	cmp	r3, #102	; 0x66
  404de6:	f000 81bb 	beq.w	405160 <_svfprintf_r+0x1204>
  404dea:	2b46      	cmp	r3, #70	; 0x46
  404dec:	f000 80df 	beq.w	404fae <_svfprintf_r+0x1052>
  404df0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404df2:	9a08      	ldr	r2, [sp, #32]
  404df4:	2b45      	cmp	r3, #69	; 0x45
  404df6:	bf0c      	ite	eq
  404df8:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  404dfa:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  404dfc:	a823      	add	r0, sp, #140	; 0x8c
  404dfe:	a920      	add	r1, sp, #128	; 0x80
  404e00:	bf08      	it	eq
  404e02:	1c5d      	addeq	r5, r3, #1
  404e04:	9004      	str	r0, [sp, #16]
  404e06:	9103      	str	r1, [sp, #12]
  404e08:	a81f      	add	r0, sp, #124	; 0x7c
  404e0a:	2102      	movs	r1, #2
  404e0c:	463b      	mov	r3, r7
  404e0e:	9002      	str	r0, [sp, #8]
  404e10:	9501      	str	r5, [sp, #4]
  404e12:	9100      	str	r1, [sp, #0]
  404e14:	980c      	ldr	r0, [sp, #48]	; 0x30
  404e16:	f000 fb73 	bl	405500 <_dtoa_r>
  404e1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404e1c:	2b67      	cmp	r3, #103	; 0x67
  404e1e:	4606      	mov	r6, r0
  404e20:	f040 81e0 	bne.w	4051e4 <_svfprintf_r+0x1288>
  404e24:	f01b 0f01 	tst.w	fp, #1
  404e28:	f000 8246 	beq.w	4052b8 <_svfprintf_r+0x135c>
  404e2c:	1974      	adds	r4, r6, r5
  404e2e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  404e30:	9808      	ldr	r0, [sp, #32]
  404e32:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  404e34:	4639      	mov	r1, r7
  404e36:	f7fe fe4b 	bl	403ad0 <__aeabi_dcmpeq>
  404e3a:	2800      	cmp	r0, #0
  404e3c:	f040 8165 	bne.w	40510a <_svfprintf_r+0x11ae>
  404e40:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404e42:	42a3      	cmp	r3, r4
  404e44:	d206      	bcs.n	404e54 <_svfprintf_r+0xef8>
  404e46:	2130      	movs	r1, #48	; 0x30
  404e48:	1c5a      	adds	r2, r3, #1
  404e4a:	9223      	str	r2, [sp, #140]	; 0x8c
  404e4c:	7019      	strb	r1, [r3, #0]
  404e4e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  404e50:	429c      	cmp	r4, r3
  404e52:	d8f9      	bhi.n	404e48 <_svfprintf_r+0xeec>
  404e54:	1b9b      	subs	r3, r3, r6
  404e56:	9313      	str	r3, [sp, #76]	; 0x4c
  404e58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404e5a:	2b47      	cmp	r3, #71	; 0x47
  404e5c:	f000 80e9 	beq.w	405032 <_svfprintf_r+0x10d6>
  404e60:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404e62:	2b65      	cmp	r3, #101	; 0x65
  404e64:	f340 81cd 	ble.w	405202 <_svfprintf_r+0x12a6>
  404e68:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404e6a:	2b66      	cmp	r3, #102	; 0x66
  404e6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404e6e:	9312      	str	r3, [sp, #72]	; 0x48
  404e70:	f000 819e 	beq.w	4051b0 <_svfprintf_r+0x1254>
  404e74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404e76:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404e78:	4619      	mov	r1, r3
  404e7a:	4291      	cmp	r1, r2
  404e7c:	f300 818a 	bgt.w	405194 <_svfprintf_r+0x1238>
  404e80:	f01b 0f01 	tst.w	fp, #1
  404e84:	f040 8213 	bne.w	4052ae <_svfprintf_r+0x1352>
  404e88:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  404e8c:	9308      	str	r3, [sp, #32]
  404e8e:	2367      	movs	r3, #103	; 0x67
  404e90:	920e      	str	r2, [sp, #56]	; 0x38
  404e92:	9311      	str	r3, [sp, #68]	; 0x44
  404e94:	9b10      	ldr	r3, [sp, #64]	; 0x40
  404e96:	2b00      	cmp	r3, #0
  404e98:	f040 80c4 	bne.w	405024 <_svfprintf_r+0x10c8>
  404e9c:	930a      	str	r3, [sp, #40]	; 0x28
  404e9e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  404ea2:	f7ff b973 	b.w	40418c <_svfprintf_r+0x230>
  404ea6:	4635      	mov	r5, r6
  404ea8:	460c      	mov	r4, r1
  404eaa:	4646      	mov	r6, r8
  404eac:	4690      	mov	r8, r2
  404eae:	3301      	adds	r3, #1
  404eb0:	443c      	add	r4, r7
  404eb2:	2b07      	cmp	r3, #7
  404eb4:	9427      	str	r4, [sp, #156]	; 0x9c
  404eb6:	9326      	str	r3, [sp, #152]	; 0x98
  404eb8:	e888 00a0 	stmia.w	r8, {r5, r7}
  404ebc:	f73f aed1 	bgt.w	404c62 <_svfprintf_r+0xd06>
  404ec0:	f108 0808 	add.w	r8, r8, #8
  404ec4:	e6d7      	b.n	404c76 <_svfprintf_r+0xd1a>
  404ec6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404ec8:	6813      	ldr	r3, [r2, #0]
  404eca:	3204      	adds	r2, #4
  404ecc:	920f      	str	r2, [sp, #60]	; 0x3c
  404ece:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404ed0:	601a      	str	r2, [r3, #0]
  404ed2:	f7ff b86a 	b.w	403faa <_svfprintf_r+0x4e>
  404ed6:	aa25      	add	r2, sp, #148	; 0x94
  404ed8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404eda:	980c      	ldr	r0, [sp, #48]	; 0x30
  404edc:	f002 fbda 	bl	407694 <__ssprint_r>
  404ee0:	2800      	cmp	r0, #0
  404ee2:	f47f a90d 	bne.w	404100 <_svfprintf_r+0x1a4>
  404ee6:	46c8      	mov	r8, r9
  404ee8:	e48d      	b.n	404806 <_svfprintf_r+0x8aa>
  404eea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404eec:	4a27      	ldr	r2, [pc, #156]	; (404f8c <_svfprintf_r+0x1030>)
  404eee:	f8c8 2000 	str.w	r2, [r8]
  404ef2:	3301      	adds	r3, #1
  404ef4:	3401      	adds	r4, #1
  404ef6:	2201      	movs	r2, #1
  404ef8:	2b07      	cmp	r3, #7
  404efa:	9427      	str	r4, [sp, #156]	; 0x9c
  404efc:	9326      	str	r3, [sp, #152]	; 0x98
  404efe:	f8c8 2004 	str.w	r2, [r8, #4]
  404f02:	dc72      	bgt.n	404fea <_svfprintf_r+0x108e>
  404f04:	f108 0808 	add.w	r8, r8, #8
  404f08:	b929      	cbnz	r1, 404f16 <_svfprintf_r+0xfba>
  404f0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404f0c:	b91b      	cbnz	r3, 404f16 <_svfprintf_r+0xfba>
  404f0e:	9b07      	ldr	r3, [sp, #28]
  404f10:	07d8      	lsls	r0, r3, #31
  404f12:	f57f aa03 	bpl.w	40431c <_svfprintf_r+0x3c0>
  404f16:	9b26      	ldr	r3, [sp, #152]	; 0x98
  404f18:	9819      	ldr	r0, [sp, #100]	; 0x64
  404f1a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  404f1c:	f8c8 2000 	str.w	r2, [r8]
  404f20:	3301      	adds	r3, #1
  404f22:	4602      	mov	r2, r0
  404f24:	4422      	add	r2, r4
  404f26:	2b07      	cmp	r3, #7
  404f28:	9227      	str	r2, [sp, #156]	; 0x9c
  404f2a:	f8c8 0004 	str.w	r0, [r8, #4]
  404f2e:	9326      	str	r3, [sp, #152]	; 0x98
  404f30:	f300 818d 	bgt.w	40524e <_svfprintf_r+0x12f2>
  404f34:	f108 0808 	add.w	r8, r8, #8
  404f38:	2900      	cmp	r1, #0
  404f3a:	f2c0 8165 	blt.w	405208 <_svfprintf_r+0x12ac>
  404f3e:	9913      	ldr	r1, [sp, #76]	; 0x4c
  404f40:	f8c8 6000 	str.w	r6, [r8]
  404f44:	3301      	adds	r3, #1
  404f46:	188c      	adds	r4, r1, r2
  404f48:	2b07      	cmp	r3, #7
  404f4a:	9427      	str	r4, [sp, #156]	; 0x9c
  404f4c:	9326      	str	r3, [sp, #152]	; 0x98
  404f4e:	f8c8 1004 	str.w	r1, [r8, #4]
  404f52:	f77f a9e1 	ble.w	404318 <_svfprintf_r+0x3bc>
  404f56:	e52c      	b.n	4049b2 <_svfprintf_r+0xa56>
  404f58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  404f5a:	9909      	ldr	r1, [sp, #36]	; 0x24
  404f5c:	6813      	ldr	r3, [r2, #0]
  404f5e:	17cd      	asrs	r5, r1, #31
  404f60:	4608      	mov	r0, r1
  404f62:	3204      	adds	r2, #4
  404f64:	4629      	mov	r1, r5
  404f66:	920f      	str	r2, [sp, #60]	; 0x3c
  404f68:	e9c3 0100 	strd	r0, r1, [r3]
  404f6c:	f7ff b81d 	b.w	403faa <_svfprintf_r+0x4e>
  404f70:	aa25      	add	r2, sp, #148	; 0x94
  404f72:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404f74:	980c      	ldr	r0, [sp, #48]	; 0x30
  404f76:	f002 fb8d 	bl	407694 <__ssprint_r>
  404f7a:	2800      	cmp	r0, #0
  404f7c:	f47f a8c0 	bne.w	404100 <_svfprintf_r+0x1a4>
  404f80:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404f82:	46c8      	mov	r8, r9
  404f84:	e458      	b.n	404838 <_svfprintf_r+0x8dc>
  404f86:	bf00      	nop
  404f88:	00407c98 	.word	0x00407c98
  404f8c:	00407c84 	.word	0x00407c84
  404f90:	2140      	movs	r1, #64	; 0x40
  404f92:	980c      	ldr	r0, [sp, #48]	; 0x30
  404f94:	f001 fb40 	bl	406618 <_malloc_r>
  404f98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404f9a:	6010      	str	r0, [r2, #0]
  404f9c:	6110      	str	r0, [r2, #16]
  404f9e:	2800      	cmp	r0, #0
  404fa0:	f000 81f2 	beq.w	405388 <_svfprintf_r+0x142c>
  404fa4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  404fa6:	2340      	movs	r3, #64	; 0x40
  404fa8:	6153      	str	r3, [r2, #20]
  404faa:	f7fe bfee 	b.w	403f8a <_svfprintf_r+0x2e>
  404fae:	a823      	add	r0, sp, #140	; 0x8c
  404fb0:	a920      	add	r1, sp, #128	; 0x80
  404fb2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  404fb4:	9004      	str	r0, [sp, #16]
  404fb6:	9103      	str	r1, [sp, #12]
  404fb8:	a81f      	add	r0, sp, #124	; 0x7c
  404fba:	2103      	movs	r1, #3
  404fbc:	9002      	str	r0, [sp, #8]
  404fbe:	9a08      	ldr	r2, [sp, #32]
  404fc0:	9401      	str	r4, [sp, #4]
  404fc2:	463b      	mov	r3, r7
  404fc4:	9100      	str	r1, [sp, #0]
  404fc6:	980c      	ldr	r0, [sp, #48]	; 0x30
  404fc8:	f000 fa9a 	bl	405500 <_dtoa_r>
  404fcc:	4625      	mov	r5, r4
  404fce:	4606      	mov	r6, r0
  404fd0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404fd2:	2b46      	cmp	r3, #70	; 0x46
  404fd4:	eb06 0405 	add.w	r4, r6, r5
  404fd8:	f47f af29 	bne.w	404e2e <_svfprintf_r+0xed2>
  404fdc:	7833      	ldrb	r3, [r6, #0]
  404fde:	2b30      	cmp	r3, #48	; 0x30
  404fe0:	f000 8178 	beq.w	4052d4 <_svfprintf_r+0x1378>
  404fe4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  404fe6:	442c      	add	r4, r5
  404fe8:	e721      	b.n	404e2e <_svfprintf_r+0xed2>
  404fea:	aa25      	add	r2, sp, #148	; 0x94
  404fec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  404fee:	980c      	ldr	r0, [sp, #48]	; 0x30
  404ff0:	f002 fb50 	bl	407694 <__ssprint_r>
  404ff4:	2800      	cmp	r0, #0
  404ff6:	f47f a883 	bne.w	404100 <_svfprintf_r+0x1a4>
  404ffa:	991f      	ldr	r1, [sp, #124]	; 0x7c
  404ffc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  404ffe:	46c8      	mov	r8, r9
  405000:	e782      	b.n	404f08 <_svfprintf_r+0xfac>
  405002:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405004:	2b00      	cmp	r3, #0
  405006:	bf08      	it	eq
  405008:	2301      	moveq	r3, #1
  40500a:	930a      	str	r3, [sp, #40]	; 0x28
  40500c:	e6db      	b.n	404dc6 <_svfprintf_r+0xe6a>
  40500e:	4630      	mov	r0, r6
  405010:	940a      	str	r4, [sp, #40]	; 0x28
  405012:	f7fe ff35 	bl	403e80 <strlen>
  405016:	950f      	str	r5, [sp, #60]	; 0x3c
  405018:	900e      	str	r0, [sp, #56]	; 0x38
  40501a:	f8cd b01c 	str.w	fp, [sp, #28]
  40501e:	4603      	mov	r3, r0
  405020:	f7ff b9f9 	b.w	404416 <_svfprintf_r+0x4ba>
  405024:	272d      	movs	r7, #45	; 0x2d
  405026:	2300      	movs	r3, #0
  405028:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40502c:	930a      	str	r3, [sp, #40]	; 0x28
  40502e:	f7ff b8ae 	b.w	40418e <_svfprintf_r+0x232>
  405032:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405034:	9312      	str	r3, [sp, #72]	; 0x48
  405036:	461a      	mov	r2, r3
  405038:	3303      	adds	r3, #3
  40503a:	db04      	blt.n	405046 <_svfprintf_r+0x10ea>
  40503c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40503e:	4619      	mov	r1, r3
  405040:	4291      	cmp	r1, r2
  405042:	f6bf af17 	bge.w	404e74 <_svfprintf_r+0xf18>
  405046:	9b11      	ldr	r3, [sp, #68]	; 0x44
  405048:	3b02      	subs	r3, #2
  40504a:	9311      	str	r3, [sp, #68]	; 0x44
  40504c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  405050:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  405054:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405056:	3b01      	subs	r3, #1
  405058:	2b00      	cmp	r3, #0
  40505a:	931f      	str	r3, [sp, #124]	; 0x7c
  40505c:	bfbd      	ittte	lt
  40505e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  405060:	f1c3 0301 	rsblt	r3, r3, #1
  405064:	222d      	movlt	r2, #45	; 0x2d
  405066:	222b      	movge	r2, #43	; 0x2b
  405068:	2b09      	cmp	r3, #9
  40506a:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40506e:	f340 8116 	ble.w	40529e <_svfprintf_r+0x1342>
  405072:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  405076:	4620      	mov	r0, r4
  405078:	4dab      	ldr	r5, [pc, #684]	; (405328 <_svfprintf_r+0x13cc>)
  40507a:	e000      	b.n	40507e <_svfprintf_r+0x1122>
  40507c:	4610      	mov	r0, r2
  40507e:	fb85 1203 	smull	r1, r2, r5, r3
  405082:	17d9      	asrs	r1, r3, #31
  405084:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  405088:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  40508c:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  405090:	3230      	adds	r2, #48	; 0x30
  405092:	2909      	cmp	r1, #9
  405094:	f800 2c01 	strb.w	r2, [r0, #-1]
  405098:	460b      	mov	r3, r1
  40509a:	f100 32ff 	add.w	r2, r0, #4294967295
  40509e:	dced      	bgt.n	40507c <_svfprintf_r+0x1120>
  4050a0:	3330      	adds	r3, #48	; 0x30
  4050a2:	3802      	subs	r0, #2
  4050a4:	b2d9      	uxtb	r1, r3
  4050a6:	4284      	cmp	r4, r0
  4050a8:	f802 1c01 	strb.w	r1, [r2, #-1]
  4050ac:	f240 8165 	bls.w	40537a <_svfprintf_r+0x141e>
  4050b0:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4050b4:	4613      	mov	r3, r2
  4050b6:	e001      	b.n	4050bc <_svfprintf_r+0x1160>
  4050b8:	f813 1b01 	ldrb.w	r1, [r3], #1
  4050bc:	f800 1b01 	strb.w	r1, [r0], #1
  4050c0:	42a3      	cmp	r3, r4
  4050c2:	d1f9      	bne.n	4050b8 <_svfprintf_r+0x115c>
  4050c4:	3301      	adds	r3, #1
  4050c6:	1a9b      	subs	r3, r3, r2
  4050c8:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  4050cc:	4413      	add	r3, r2
  4050ce:	aa21      	add	r2, sp, #132	; 0x84
  4050d0:	1a9b      	subs	r3, r3, r2
  4050d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4050d4:	931b      	str	r3, [sp, #108]	; 0x6c
  4050d6:	2a01      	cmp	r2, #1
  4050d8:	4413      	add	r3, r2
  4050da:	930e      	str	r3, [sp, #56]	; 0x38
  4050dc:	f340 8119 	ble.w	405312 <_svfprintf_r+0x13b6>
  4050e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4050e2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4050e4:	4413      	add	r3, r2
  4050e6:	930e      	str	r3, [sp, #56]	; 0x38
  4050e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4050ec:	9308      	str	r3, [sp, #32]
  4050ee:	2300      	movs	r3, #0
  4050f0:	9312      	str	r3, [sp, #72]	; 0x48
  4050f2:	e6cf      	b.n	404e94 <_svfprintf_r+0xf38>
  4050f4:	aa25      	add	r2, sp, #148	; 0x94
  4050f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4050f8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4050fa:	f002 facb 	bl	407694 <__ssprint_r>
  4050fe:	2800      	cmp	r0, #0
  405100:	f47e affe 	bne.w	404100 <_svfprintf_r+0x1a4>
  405104:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405106:	46c8      	mov	r8, r9
  405108:	e4d7      	b.n	404aba <_svfprintf_r+0xb5e>
  40510a:	4623      	mov	r3, r4
  40510c:	e6a2      	b.n	404e54 <_svfprintf_r+0xef8>
  40510e:	aa25      	add	r2, sp, #148	; 0x94
  405110:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405112:	980c      	ldr	r0, [sp, #48]	; 0x30
  405114:	f002 fabe 	bl	407694 <__ssprint_r>
  405118:	2800      	cmp	r0, #0
  40511a:	f47e aff1 	bne.w	404100 <_svfprintf_r+0x1a4>
  40511e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  405120:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  405122:	46c8      	mov	r8, r9
  405124:	e5ae      	b.n	404c84 <_svfprintf_r+0xd28>
  405126:	aa25      	add	r2, sp, #148	; 0x94
  405128:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40512a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40512c:	f002 fab2 	bl	407694 <__ssprint_r>
  405130:	2800      	cmp	r0, #0
  405132:	f47e afe5 	bne.w	404100 <_svfprintf_r+0x1a4>
  405136:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  405138:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40513a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40513c:	1a9a      	subs	r2, r3, r2
  40513e:	46c8      	mov	r8, r9
  405140:	e5b8      	b.n	404cb4 <_svfprintf_r+0xd58>
  405142:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405144:	9612      	str	r6, [sp, #72]	; 0x48
  405146:	2b06      	cmp	r3, #6
  405148:	bf28      	it	cs
  40514a:	2306      	movcs	r3, #6
  40514c:	960a      	str	r6, [sp, #40]	; 0x28
  40514e:	4637      	mov	r7, r6
  405150:	9308      	str	r3, [sp, #32]
  405152:	950f      	str	r5, [sp, #60]	; 0x3c
  405154:	f8cd b01c 	str.w	fp, [sp, #28]
  405158:	930e      	str	r3, [sp, #56]	; 0x38
  40515a:	4e74      	ldr	r6, [pc, #464]	; (40532c <_svfprintf_r+0x13d0>)
  40515c:	f7ff b816 	b.w	40418c <_svfprintf_r+0x230>
  405160:	a823      	add	r0, sp, #140	; 0x8c
  405162:	a920      	add	r1, sp, #128	; 0x80
  405164:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  405166:	9004      	str	r0, [sp, #16]
  405168:	9103      	str	r1, [sp, #12]
  40516a:	a81f      	add	r0, sp, #124	; 0x7c
  40516c:	2103      	movs	r1, #3
  40516e:	9002      	str	r0, [sp, #8]
  405170:	9a08      	ldr	r2, [sp, #32]
  405172:	9501      	str	r5, [sp, #4]
  405174:	463b      	mov	r3, r7
  405176:	9100      	str	r1, [sp, #0]
  405178:	980c      	ldr	r0, [sp, #48]	; 0x30
  40517a:	f000 f9c1 	bl	405500 <_dtoa_r>
  40517e:	4606      	mov	r6, r0
  405180:	1944      	adds	r4, r0, r5
  405182:	e72b      	b.n	404fdc <_svfprintf_r+0x1080>
  405184:	2306      	movs	r3, #6
  405186:	930a      	str	r3, [sp, #40]	; 0x28
  405188:	e61d      	b.n	404dc6 <_svfprintf_r+0xe6a>
  40518a:	272d      	movs	r7, #45	; 0x2d
  40518c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  405190:	f7ff bacd 	b.w	40472e <_svfprintf_r+0x7d2>
  405194:	9a19      	ldr	r2, [sp, #100]	; 0x64
  405196:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  405198:	4413      	add	r3, r2
  40519a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40519c:	930e      	str	r3, [sp, #56]	; 0x38
  40519e:	2a00      	cmp	r2, #0
  4051a0:	f340 80b0 	ble.w	405304 <_svfprintf_r+0x13a8>
  4051a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4051a8:	9308      	str	r3, [sp, #32]
  4051aa:	2367      	movs	r3, #103	; 0x67
  4051ac:	9311      	str	r3, [sp, #68]	; 0x44
  4051ae:	e671      	b.n	404e94 <_svfprintf_r+0xf38>
  4051b0:	2b00      	cmp	r3, #0
  4051b2:	f340 80c3 	ble.w	40533c <_svfprintf_r+0x13e0>
  4051b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4051b8:	2a00      	cmp	r2, #0
  4051ba:	f040 8099 	bne.w	4052f0 <_svfprintf_r+0x1394>
  4051be:	f01b 0f01 	tst.w	fp, #1
  4051c2:	f040 8095 	bne.w	4052f0 <_svfprintf_r+0x1394>
  4051c6:	9308      	str	r3, [sp, #32]
  4051c8:	930e      	str	r3, [sp, #56]	; 0x38
  4051ca:	e663      	b.n	404e94 <_svfprintf_r+0xf38>
  4051cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4051ce:	9308      	str	r3, [sp, #32]
  4051d0:	930e      	str	r3, [sp, #56]	; 0x38
  4051d2:	900a      	str	r0, [sp, #40]	; 0x28
  4051d4:	950f      	str	r5, [sp, #60]	; 0x3c
  4051d6:	f8cd b01c 	str.w	fp, [sp, #28]
  4051da:	9012      	str	r0, [sp, #72]	; 0x48
  4051dc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4051e0:	f7fe bfd4 	b.w	40418c <_svfprintf_r+0x230>
  4051e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4051e6:	2b47      	cmp	r3, #71	; 0x47
  4051e8:	f47f ae20 	bne.w	404e2c <_svfprintf_r+0xed0>
  4051ec:	f01b 0f01 	tst.w	fp, #1
  4051f0:	f47f aeee 	bne.w	404fd0 <_svfprintf_r+0x1074>
  4051f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4051f6:	1b9b      	subs	r3, r3, r6
  4051f8:	9313      	str	r3, [sp, #76]	; 0x4c
  4051fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4051fc:	2b47      	cmp	r3, #71	; 0x47
  4051fe:	f43f af18 	beq.w	405032 <_svfprintf_r+0x10d6>
  405202:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  405204:	9312      	str	r3, [sp, #72]	; 0x48
  405206:	e721      	b.n	40504c <_svfprintf_r+0x10f0>
  405208:	424f      	negs	r7, r1
  40520a:	3110      	adds	r1, #16
  40520c:	4d48      	ldr	r5, [pc, #288]	; (405330 <_svfprintf_r+0x13d4>)
  40520e:	da2f      	bge.n	405270 <_svfprintf_r+0x1314>
  405210:	2410      	movs	r4, #16
  405212:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  405216:	e004      	b.n	405222 <_svfprintf_r+0x12c6>
  405218:	f108 0808 	add.w	r8, r8, #8
  40521c:	3f10      	subs	r7, #16
  40521e:	2f10      	cmp	r7, #16
  405220:	dd26      	ble.n	405270 <_svfprintf_r+0x1314>
  405222:	3301      	adds	r3, #1
  405224:	3210      	adds	r2, #16
  405226:	2b07      	cmp	r3, #7
  405228:	9227      	str	r2, [sp, #156]	; 0x9c
  40522a:	9326      	str	r3, [sp, #152]	; 0x98
  40522c:	f8c8 5000 	str.w	r5, [r8]
  405230:	f8c8 4004 	str.w	r4, [r8, #4]
  405234:	ddf0      	ble.n	405218 <_svfprintf_r+0x12bc>
  405236:	aa25      	add	r2, sp, #148	; 0x94
  405238:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40523a:	4658      	mov	r0, fp
  40523c:	f002 fa2a 	bl	407694 <__ssprint_r>
  405240:	2800      	cmp	r0, #0
  405242:	f47e af5d 	bne.w	404100 <_svfprintf_r+0x1a4>
  405246:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405248:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40524a:	46c8      	mov	r8, r9
  40524c:	e7e6      	b.n	40521c <_svfprintf_r+0x12c0>
  40524e:	aa25      	add	r2, sp, #148	; 0x94
  405250:	990b      	ldr	r1, [sp, #44]	; 0x2c
  405252:	980c      	ldr	r0, [sp, #48]	; 0x30
  405254:	f002 fa1e 	bl	407694 <__ssprint_r>
  405258:	2800      	cmp	r0, #0
  40525a:	f47e af51 	bne.w	404100 <_svfprintf_r+0x1a4>
  40525e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  405260:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405262:	9b26      	ldr	r3, [sp, #152]	; 0x98
  405264:	46c8      	mov	r8, r9
  405266:	e667      	b.n	404f38 <_svfprintf_r+0xfdc>
  405268:	2000      	movs	r0, #0
  40526a:	900a      	str	r0, [sp, #40]	; 0x28
  40526c:	f7fe bed0 	b.w	404010 <_svfprintf_r+0xb4>
  405270:	3301      	adds	r3, #1
  405272:	443a      	add	r2, r7
  405274:	2b07      	cmp	r3, #7
  405276:	e888 00a0 	stmia.w	r8, {r5, r7}
  40527a:	9227      	str	r2, [sp, #156]	; 0x9c
  40527c:	9326      	str	r3, [sp, #152]	; 0x98
  40527e:	f108 0808 	add.w	r8, r8, #8
  405282:	f77f ae5c 	ble.w	404f3e <_svfprintf_r+0xfe2>
  405286:	aa25      	add	r2, sp, #148	; 0x94
  405288:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40528a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40528c:	f002 fa02 	bl	407694 <__ssprint_r>
  405290:	2800      	cmp	r0, #0
  405292:	f47e af35 	bne.w	404100 <_svfprintf_r+0x1a4>
  405296:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  405298:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40529a:	46c8      	mov	r8, r9
  40529c:	e64f      	b.n	404f3e <_svfprintf_r+0xfe2>
  40529e:	3330      	adds	r3, #48	; 0x30
  4052a0:	2230      	movs	r2, #48	; 0x30
  4052a2:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4052a6:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4052aa:	ab22      	add	r3, sp, #136	; 0x88
  4052ac:	e70f      	b.n	4050ce <_svfprintf_r+0x1172>
  4052ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4052b0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4052b2:	4413      	add	r3, r2
  4052b4:	930e      	str	r3, [sp, #56]	; 0x38
  4052b6:	e775      	b.n	4051a4 <_svfprintf_r+0x1248>
  4052b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4052ba:	e5cb      	b.n	404e54 <_svfprintf_r+0xef8>
  4052bc:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4052be:	4e1d      	ldr	r6, [pc, #116]	; (405334 <_svfprintf_r+0x13d8>)
  4052c0:	2b00      	cmp	r3, #0
  4052c2:	bfb6      	itet	lt
  4052c4:	272d      	movlt	r7, #45	; 0x2d
  4052c6:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4052ca:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4052ce:	4b1a      	ldr	r3, [pc, #104]	; (405338 <_svfprintf_r+0x13dc>)
  4052d0:	f7ff ba2f 	b.w	404732 <_svfprintf_r+0x7d6>
  4052d4:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4052d6:	9808      	ldr	r0, [sp, #32]
  4052d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4052da:	4639      	mov	r1, r7
  4052dc:	f7fe fbf8 	bl	403ad0 <__aeabi_dcmpeq>
  4052e0:	2800      	cmp	r0, #0
  4052e2:	f47f ae7f 	bne.w	404fe4 <_svfprintf_r+0x1088>
  4052e6:	f1c5 0501 	rsb	r5, r5, #1
  4052ea:	951f      	str	r5, [sp, #124]	; 0x7c
  4052ec:	442c      	add	r4, r5
  4052ee:	e59e      	b.n	404e2e <_svfprintf_r+0xed2>
  4052f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4052f2:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4052f4:	4413      	add	r3, r2
  4052f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4052f8:	441a      	add	r2, r3
  4052fa:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4052fe:	920e      	str	r2, [sp, #56]	; 0x38
  405300:	9308      	str	r3, [sp, #32]
  405302:	e5c7      	b.n	404e94 <_svfprintf_r+0xf38>
  405304:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405306:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  405308:	f1c3 0301 	rsb	r3, r3, #1
  40530c:	441a      	add	r2, r3
  40530e:	4613      	mov	r3, r2
  405310:	e7d0      	b.n	4052b4 <_svfprintf_r+0x1358>
  405312:	f01b 0301 	ands.w	r3, fp, #1
  405316:	9312      	str	r3, [sp, #72]	; 0x48
  405318:	f47f aee2 	bne.w	4050e0 <_svfprintf_r+0x1184>
  40531c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40531e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  405322:	9308      	str	r3, [sp, #32]
  405324:	e5b6      	b.n	404e94 <_svfprintf_r+0xf38>
  405326:	bf00      	nop
  405328:	66666667 	.word	0x66666667
  40532c:	00407c7c 	.word	0x00407c7c
  405330:	00407c98 	.word	0x00407c98
  405334:	00407c50 	.word	0x00407c50
  405338:	00407c4c 	.word	0x00407c4c
  40533c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40533e:	b913      	cbnz	r3, 405346 <_svfprintf_r+0x13ea>
  405340:	f01b 0f01 	tst.w	fp, #1
  405344:	d002      	beq.n	40534c <_svfprintf_r+0x13f0>
  405346:	9b19      	ldr	r3, [sp, #100]	; 0x64
  405348:	3301      	adds	r3, #1
  40534a:	e7d4      	b.n	4052f6 <_svfprintf_r+0x139a>
  40534c:	2301      	movs	r3, #1
  40534e:	e73a      	b.n	4051c6 <_svfprintf_r+0x126a>
  405350:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  405352:	f89a 3001 	ldrb.w	r3, [sl, #1]
  405356:	6828      	ldr	r0, [r5, #0]
  405358:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  40535c:	900a      	str	r0, [sp, #40]	; 0x28
  40535e:	4628      	mov	r0, r5
  405360:	3004      	adds	r0, #4
  405362:	46a2      	mov	sl, r4
  405364:	900f      	str	r0, [sp, #60]	; 0x3c
  405366:	f7fe be51 	b.w	40400c <_svfprintf_r+0xb0>
  40536a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40536e:	f7ff b867 	b.w	404440 <_svfprintf_r+0x4e4>
  405372:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405376:	f7ff ba15 	b.w	4047a4 <_svfprintf_r+0x848>
  40537a:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40537e:	e6a6      	b.n	4050ce <_svfprintf_r+0x1172>
  405380:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  405384:	f7ff b8eb 	b.w	40455e <_svfprintf_r+0x602>
  405388:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40538a:	230c      	movs	r3, #12
  40538c:	6013      	str	r3, [r2, #0]
  40538e:	f04f 33ff 	mov.w	r3, #4294967295
  405392:	9309      	str	r3, [sp, #36]	; 0x24
  405394:	f7fe bebd 	b.w	404112 <_svfprintf_r+0x1b6>
  405398:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40539c:	f7ff b99a 	b.w	4046d4 <_svfprintf_r+0x778>
  4053a0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4053a4:	f7ff b976 	b.w	404694 <_svfprintf_r+0x738>
  4053a8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4053ac:	f7ff b959 	b.w	404662 <_svfprintf_r+0x706>
  4053b0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4053b4:	f7ff b912 	b.w	4045dc <_svfprintf_r+0x680>

004053b8 <register_fini>:
  4053b8:	4b02      	ldr	r3, [pc, #8]	; (4053c4 <register_fini+0xc>)
  4053ba:	b113      	cbz	r3, 4053c2 <register_fini+0xa>
  4053bc:	4802      	ldr	r0, [pc, #8]	; (4053c8 <register_fini+0x10>)
  4053be:	f000 b805 	b.w	4053cc <atexit>
  4053c2:	4770      	bx	lr
  4053c4:	00000000 	.word	0x00000000
  4053c8:	00406355 	.word	0x00406355

004053cc <atexit>:
  4053cc:	2300      	movs	r3, #0
  4053ce:	4601      	mov	r1, r0
  4053d0:	461a      	mov	r2, r3
  4053d2:	4618      	mov	r0, r3
  4053d4:	f002 b9ea 	b.w	4077ac <__register_exitproc>

004053d8 <quorem>:
  4053d8:	6902      	ldr	r2, [r0, #16]
  4053da:	690b      	ldr	r3, [r1, #16]
  4053dc:	4293      	cmp	r3, r2
  4053de:	f300 808d 	bgt.w	4054fc <quorem+0x124>
  4053e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4053e6:	f103 38ff 	add.w	r8, r3, #4294967295
  4053ea:	f101 0714 	add.w	r7, r1, #20
  4053ee:	f100 0b14 	add.w	fp, r0, #20
  4053f2:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4053f6:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4053fa:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4053fe:	b083      	sub	sp, #12
  405400:	3201      	adds	r2, #1
  405402:	fbb3 f9f2 	udiv	r9, r3, r2
  405406:	eb0b 0304 	add.w	r3, fp, r4
  40540a:	9400      	str	r4, [sp, #0]
  40540c:	eb07 0a04 	add.w	sl, r7, r4
  405410:	9301      	str	r3, [sp, #4]
  405412:	f1b9 0f00 	cmp.w	r9, #0
  405416:	d039      	beq.n	40548c <quorem+0xb4>
  405418:	2500      	movs	r5, #0
  40541a:	462e      	mov	r6, r5
  40541c:	46bc      	mov	ip, r7
  40541e:	46de      	mov	lr, fp
  405420:	f85c 4b04 	ldr.w	r4, [ip], #4
  405424:	f8de 3000 	ldr.w	r3, [lr]
  405428:	b2a2      	uxth	r2, r4
  40542a:	fb09 5502 	mla	r5, r9, r2, r5
  40542e:	0c22      	lsrs	r2, r4, #16
  405430:	0c2c      	lsrs	r4, r5, #16
  405432:	fb09 4202 	mla	r2, r9, r2, r4
  405436:	b2ad      	uxth	r5, r5
  405438:	1b75      	subs	r5, r6, r5
  40543a:	b296      	uxth	r6, r2
  40543c:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  405440:	fa15 f383 	uxtah	r3, r5, r3
  405444:	eb06 4623 	add.w	r6, r6, r3, asr #16
  405448:	b29b      	uxth	r3, r3
  40544a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40544e:	45e2      	cmp	sl, ip
  405450:	ea4f 4512 	mov.w	r5, r2, lsr #16
  405454:	f84e 3b04 	str.w	r3, [lr], #4
  405458:	ea4f 4626 	mov.w	r6, r6, asr #16
  40545c:	d2e0      	bcs.n	405420 <quorem+0x48>
  40545e:	9b00      	ldr	r3, [sp, #0]
  405460:	f85b 3003 	ldr.w	r3, [fp, r3]
  405464:	b993      	cbnz	r3, 40548c <quorem+0xb4>
  405466:	9c01      	ldr	r4, [sp, #4]
  405468:	1f23      	subs	r3, r4, #4
  40546a:	459b      	cmp	fp, r3
  40546c:	d20c      	bcs.n	405488 <quorem+0xb0>
  40546e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  405472:	b94b      	cbnz	r3, 405488 <quorem+0xb0>
  405474:	f1a4 0308 	sub.w	r3, r4, #8
  405478:	e002      	b.n	405480 <quorem+0xa8>
  40547a:	681a      	ldr	r2, [r3, #0]
  40547c:	3b04      	subs	r3, #4
  40547e:	b91a      	cbnz	r2, 405488 <quorem+0xb0>
  405480:	459b      	cmp	fp, r3
  405482:	f108 38ff 	add.w	r8, r8, #4294967295
  405486:	d3f8      	bcc.n	40547a <quorem+0xa2>
  405488:	f8c0 8010 	str.w	r8, [r0, #16]
  40548c:	4604      	mov	r4, r0
  40548e:	f001 fe4d 	bl	40712c <__mcmp>
  405492:	2800      	cmp	r0, #0
  405494:	db2e      	blt.n	4054f4 <quorem+0x11c>
  405496:	f109 0901 	add.w	r9, r9, #1
  40549a:	465d      	mov	r5, fp
  40549c:	2300      	movs	r3, #0
  40549e:	f857 1b04 	ldr.w	r1, [r7], #4
  4054a2:	6828      	ldr	r0, [r5, #0]
  4054a4:	b28a      	uxth	r2, r1
  4054a6:	1a9a      	subs	r2, r3, r2
  4054a8:	0c0b      	lsrs	r3, r1, #16
  4054aa:	fa12 f280 	uxtah	r2, r2, r0
  4054ae:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4054b2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4054b6:	b292      	uxth	r2, r2
  4054b8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4054bc:	45ba      	cmp	sl, r7
  4054be:	f845 2b04 	str.w	r2, [r5], #4
  4054c2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4054c6:	d2ea      	bcs.n	40549e <quorem+0xc6>
  4054c8:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4054cc:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4054d0:	b982      	cbnz	r2, 4054f4 <quorem+0x11c>
  4054d2:	1f1a      	subs	r2, r3, #4
  4054d4:	4593      	cmp	fp, r2
  4054d6:	d20b      	bcs.n	4054f0 <quorem+0x118>
  4054d8:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4054dc:	b942      	cbnz	r2, 4054f0 <quorem+0x118>
  4054de:	3b08      	subs	r3, #8
  4054e0:	e002      	b.n	4054e8 <quorem+0x110>
  4054e2:	681a      	ldr	r2, [r3, #0]
  4054e4:	3b04      	subs	r3, #4
  4054e6:	b91a      	cbnz	r2, 4054f0 <quorem+0x118>
  4054e8:	459b      	cmp	fp, r3
  4054ea:	f108 38ff 	add.w	r8, r8, #4294967295
  4054ee:	d3f8      	bcc.n	4054e2 <quorem+0x10a>
  4054f0:	f8c4 8010 	str.w	r8, [r4, #16]
  4054f4:	4648      	mov	r0, r9
  4054f6:	b003      	add	sp, #12
  4054f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054fc:	2000      	movs	r0, #0
  4054fe:	4770      	bx	lr

00405500 <_dtoa_r>:
  405500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405504:	6c01      	ldr	r1, [r0, #64]	; 0x40
  405506:	b09b      	sub	sp, #108	; 0x6c
  405508:	4604      	mov	r4, r0
  40550a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40550c:	4692      	mov	sl, r2
  40550e:	469b      	mov	fp, r3
  405510:	b141      	cbz	r1, 405524 <_dtoa_r+0x24>
  405512:	6c42      	ldr	r2, [r0, #68]	; 0x44
  405514:	604a      	str	r2, [r1, #4]
  405516:	2301      	movs	r3, #1
  405518:	4093      	lsls	r3, r2
  40551a:	608b      	str	r3, [r1, #8]
  40551c:	f001 fc2e 	bl	406d7c <_Bfree>
  405520:	2300      	movs	r3, #0
  405522:	6423      	str	r3, [r4, #64]	; 0x40
  405524:	f1bb 0f00 	cmp.w	fp, #0
  405528:	465d      	mov	r5, fp
  40552a:	db35      	blt.n	405598 <_dtoa_r+0x98>
  40552c:	2300      	movs	r3, #0
  40552e:	6033      	str	r3, [r6, #0]
  405530:	4b9d      	ldr	r3, [pc, #628]	; (4057a8 <_dtoa_r+0x2a8>)
  405532:	43ab      	bics	r3, r5
  405534:	d015      	beq.n	405562 <_dtoa_r+0x62>
  405536:	4650      	mov	r0, sl
  405538:	4659      	mov	r1, fp
  40553a:	2200      	movs	r2, #0
  40553c:	2300      	movs	r3, #0
  40553e:	f7fe fac7 	bl	403ad0 <__aeabi_dcmpeq>
  405542:	4680      	mov	r8, r0
  405544:	2800      	cmp	r0, #0
  405546:	d02d      	beq.n	4055a4 <_dtoa_r+0xa4>
  405548:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40554a:	2301      	movs	r3, #1
  40554c:	6013      	str	r3, [r2, #0]
  40554e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405550:	2b00      	cmp	r3, #0
  405552:	f000 80bd 	beq.w	4056d0 <_dtoa_r+0x1d0>
  405556:	4895      	ldr	r0, [pc, #596]	; (4057ac <_dtoa_r+0x2ac>)
  405558:	6018      	str	r0, [r3, #0]
  40555a:	3801      	subs	r0, #1
  40555c:	b01b      	add	sp, #108	; 0x6c
  40555e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405562:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405564:	f242 730f 	movw	r3, #9999	; 0x270f
  405568:	6013      	str	r3, [r2, #0]
  40556a:	f1ba 0f00 	cmp.w	sl, #0
  40556e:	d10d      	bne.n	40558c <_dtoa_r+0x8c>
  405570:	f3c5 0513 	ubfx	r5, r5, #0, #20
  405574:	b955      	cbnz	r5, 40558c <_dtoa_r+0x8c>
  405576:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  405578:	488d      	ldr	r0, [pc, #564]	; (4057b0 <_dtoa_r+0x2b0>)
  40557a:	2b00      	cmp	r3, #0
  40557c:	d0ee      	beq.n	40555c <_dtoa_r+0x5c>
  40557e:	f100 0308 	add.w	r3, r0, #8
  405582:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  405584:	6013      	str	r3, [r2, #0]
  405586:	b01b      	add	sp, #108	; 0x6c
  405588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40558c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40558e:	4889      	ldr	r0, [pc, #548]	; (4057b4 <_dtoa_r+0x2b4>)
  405590:	2b00      	cmp	r3, #0
  405592:	d0e3      	beq.n	40555c <_dtoa_r+0x5c>
  405594:	1cc3      	adds	r3, r0, #3
  405596:	e7f4      	b.n	405582 <_dtoa_r+0x82>
  405598:	2301      	movs	r3, #1
  40559a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40559e:	6033      	str	r3, [r6, #0]
  4055a0:	46ab      	mov	fp, r5
  4055a2:	e7c5      	b.n	405530 <_dtoa_r+0x30>
  4055a4:	aa18      	add	r2, sp, #96	; 0x60
  4055a6:	ab19      	add	r3, sp, #100	; 0x64
  4055a8:	9201      	str	r2, [sp, #4]
  4055aa:	9300      	str	r3, [sp, #0]
  4055ac:	4652      	mov	r2, sl
  4055ae:	465b      	mov	r3, fp
  4055b0:	4620      	mov	r0, r4
  4055b2:	f001 fe5b 	bl	40726c <__d2b>
  4055b6:	0d2b      	lsrs	r3, r5, #20
  4055b8:	4681      	mov	r9, r0
  4055ba:	d071      	beq.n	4056a0 <_dtoa_r+0x1a0>
  4055bc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4055c0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4055c4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4055c6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4055ca:	4650      	mov	r0, sl
  4055cc:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4055d0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4055d4:	2200      	movs	r2, #0
  4055d6:	4b78      	ldr	r3, [pc, #480]	; (4057b8 <_dtoa_r+0x2b8>)
  4055d8:	f7fd fe5e 	bl	403298 <__aeabi_dsub>
  4055dc:	a36c      	add	r3, pc, #432	; (adr r3, 405790 <_dtoa_r+0x290>)
  4055de:	e9d3 2300 	ldrd	r2, r3, [r3]
  4055e2:	f7fe f80d 	bl	403600 <__aeabi_dmul>
  4055e6:	a36c      	add	r3, pc, #432	; (adr r3, 405798 <_dtoa_r+0x298>)
  4055e8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4055ec:	f7fd fe56 	bl	40329c <__adddf3>
  4055f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4055f4:	4630      	mov	r0, r6
  4055f6:	f7fd ff9d 	bl	403534 <__aeabi_i2d>
  4055fa:	a369      	add	r3, pc, #420	; (adr r3, 4057a0 <_dtoa_r+0x2a0>)
  4055fc:	e9d3 2300 	ldrd	r2, r3, [r3]
  405600:	f7fd fffe 	bl	403600 <__aeabi_dmul>
  405604:	4602      	mov	r2, r0
  405606:	460b      	mov	r3, r1
  405608:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40560c:	f7fd fe46 	bl	40329c <__adddf3>
  405610:	e9cd 0104 	strd	r0, r1, [sp, #16]
  405614:	f002 f95c 	bl	4078d0 <__aeabi_d2iz>
  405618:	2200      	movs	r2, #0
  40561a:	9002      	str	r0, [sp, #8]
  40561c:	2300      	movs	r3, #0
  40561e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405622:	f7fe fa5f 	bl	403ae4 <__aeabi_dcmplt>
  405626:	2800      	cmp	r0, #0
  405628:	f040 8173 	bne.w	405912 <_dtoa_r+0x412>
  40562c:	9d02      	ldr	r5, [sp, #8]
  40562e:	2d16      	cmp	r5, #22
  405630:	f200 815d 	bhi.w	4058ee <_dtoa_r+0x3ee>
  405634:	4b61      	ldr	r3, [pc, #388]	; (4057bc <_dtoa_r+0x2bc>)
  405636:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40563a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40563e:	4652      	mov	r2, sl
  405640:	465b      	mov	r3, fp
  405642:	f7fe fa6d 	bl	403b20 <__aeabi_dcmpgt>
  405646:	2800      	cmp	r0, #0
  405648:	f000 81c5 	beq.w	4059d6 <_dtoa_r+0x4d6>
  40564c:	1e6b      	subs	r3, r5, #1
  40564e:	9302      	str	r3, [sp, #8]
  405650:	2300      	movs	r3, #0
  405652:	930e      	str	r3, [sp, #56]	; 0x38
  405654:	1bbf      	subs	r7, r7, r6
  405656:	1e7b      	subs	r3, r7, #1
  405658:	9306      	str	r3, [sp, #24]
  40565a:	f100 8154 	bmi.w	405906 <_dtoa_r+0x406>
  40565e:	2300      	movs	r3, #0
  405660:	9308      	str	r3, [sp, #32]
  405662:	9b02      	ldr	r3, [sp, #8]
  405664:	2b00      	cmp	r3, #0
  405666:	f2c0 8145 	blt.w	4058f4 <_dtoa_r+0x3f4>
  40566a:	9a06      	ldr	r2, [sp, #24]
  40566c:	930d      	str	r3, [sp, #52]	; 0x34
  40566e:	4611      	mov	r1, r2
  405670:	4419      	add	r1, r3
  405672:	2300      	movs	r3, #0
  405674:	9106      	str	r1, [sp, #24]
  405676:	930c      	str	r3, [sp, #48]	; 0x30
  405678:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40567a:	2b09      	cmp	r3, #9
  40567c:	d82a      	bhi.n	4056d4 <_dtoa_r+0x1d4>
  40567e:	2b05      	cmp	r3, #5
  405680:	f340 865b 	ble.w	40633a <_dtoa_r+0xe3a>
  405684:	3b04      	subs	r3, #4
  405686:	9324      	str	r3, [sp, #144]	; 0x90
  405688:	2500      	movs	r5, #0
  40568a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40568c:	3b02      	subs	r3, #2
  40568e:	2b03      	cmp	r3, #3
  405690:	f200 8642 	bhi.w	406318 <_dtoa_r+0xe18>
  405694:	e8df f013 	tbh	[pc, r3, lsl #1]
  405698:	02c903d4 	.word	0x02c903d4
  40569c:	046103df 	.word	0x046103df
  4056a0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4056a2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4056a4:	443e      	add	r6, r7
  4056a6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4056aa:	2b20      	cmp	r3, #32
  4056ac:	f340 818e 	ble.w	4059cc <_dtoa_r+0x4cc>
  4056b0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4056b4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4056b8:	409d      	lsls	r5, r3
  4056ba:	fa2a f000 	lsr.w	r0, sl, r0
  4056be:	4328      	orrs	r0, r5
  4056c0:	f7fd ff28 	bl	403514 <__aeabi_ui2d>
  4056c4:	2301      	movs	r3, #1
  4056c6:	3e01      	subs	r6, #1
  4056c8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4056cc:	9314      	str	r3, [sp, #80]	; 0x50
  4056ce:	e781      	b.n	4055d4 <_dtoa_r+0xd4>
  4056d0:	483b      	ldr	r0, [pc, #236]	; (4057c0 <_dtoa_r+0x2c0>)
  4056d2:	e743      	b.n	40555c <_dtoa_r+0x5c>
  4056d4:	2100      	movs	r1, #0
  4056d6:	6461      	str	r1, [r4, #68]	; 0x44
  4056d8:	4620      	mov	r0, r4
  4056da:	9125      	str	r1, [sp, #148]	; 0x94
  4056dc:	f001 fb28 	bl	406d30 <_Balloc>
  4056e0:	f04f 33ff 	mov.w	r3, #4294967295
  4056e4:	930a      	str	r3, [sp, #40]	; 0x28
  4056e6:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4056e8:	930f      	str	r3, [sp, #60]	; 0x3c
  4056ea:	2301      	movs	r3, #1
  4056ec:	9004      	str	r0, [sp, #16]
  4056ee:	6420      	str	r0, [r4, #64]	; 0x40
  4056f0:	9224      	str	r2, [sp, #144]	; 0x90
  4056f2:	930b      	str	r3, [sp, #44]	; 0x2c
  4056f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4056f6:	2b00      	cmp	r3, #0
  4056f8:	f2c0 80d9 	blt.w	4058ae <_dtoa_r+0x3ae>
  4056fc:	9a02      	ldr	r2, [sp, #8]
  4056fe:	2a0e      	cmp	r2, #14
  405700:	f300 80d5 	bgt.w	4058ae <_dtoa_r+0x3ae>
  405704:	4b2d      	ldr	r3, [pc, #180]	; (4057bc <_dtoa_r+0x2bc>)
  405706:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40570a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40570e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  405712:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405714:	2b00      	cmp	r3, #0
  405716:	f2c0 83ba 	blt.w	405e8e <_dtoa_r+0x98e>
  40571a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40571e:	4650      	mov	r0, sl
  405720:	462a      	mov	r2, r5
  405722:	4633      	mov	r3, r6
  405724:	4659      	mov	r1, fp
  405726:	f7fe f895 	bl	403854 <__aeabi_ddiv>
  40572a:	f002 f8d1 	bl	4078d0 <__aeabi_d2iz>
  40572e:	4680      	mov	r8, r0
  405730:	f7fd ff00 	bl	403534 <__aeabi_i2d>
  405734:	462a      	mov	r2, r5
  405736:	4633      	mov	r3, r6
  405738:	f7fd ff62 	bl	403600 <__aeabi_dmul>
  40573c:	460b      	mov	r3, r1
  40573e:	4602      	mov	r2, r0
  405740:	4659      	mov	r1, fp
  405742:	4650      	mov	r0, sl
  405744:	f7fd fda8 	bl	403298 <__aeabi_dsub>
  405748:	9d04      	ldr	r5, [sp, #16]
  40574a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40574e:	702b      	strb	r3, [r5, #0]
  405750:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405752:	2b01      	cmp	r3, #1
  405754:	4606      	mov	r6, r0
  405756:	460f      	mov	r7, r1
  405758:	f105 0501 	add.w	r5, r5, #1
  40575c:	d068      	beq.n	405830 <_dtoa_r+0x330>
  40575e:	2200      	movs	r2, #0
  405760:	4b18      	ldr	r3, [pc, #96]	; (4057c4 <_dtoa_r+0x2c4>)
  405762:	f7fd ff4d 	bl	403600 <__aeabi_dmul>
  405766:	2200      	movs	r2, #0
  405768:	2300      	movs	r3, #0
  40576a:	4606      	mov	r6, r0
  40576c:	460f      	mov	r7, r1
  40576e:	f7fe f9af 	bl	403ad0 <__aeabi_dcmpeq>
  405772:	2800      	cmp	r0, #0
  405774:	f040 8088 	bne.w	405888 <_dtoa_r+0x388>
  405778:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40577c:	f04f 0a00 	mov.w	sl, #0
  405780:	f8df b040 	ldr.w	fp, [pc, #64]	; 4057c4 <_dtoa_r+0x2c4>
  405784:	940c      	str	r4, [sp, #48]	; 0x30
  405786:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40578a:	e028      	b.n	4057de <_dtoa_r+0x2de>
  40578c:	f3af 8000 	nop.w
  405790:	636f4361 	.word	0x636f4361
  405794:	3fd287a7 	.word	0x3fd287a7
  405798:	8b60c8b3 	.word	0x8b60c8b3
  40579c:	3fc68a28 	.word	0x3fc68a28
  4057a0:	509f79fb 	.word	0x509f79fb
  4057a4:	3fd34413 	.word	0x3fd34413
  4057a8:	7ff00000 	.word	0x7ff00000
  4057ac:	00407c85 	.word	0x00407c85
  4057b0:	00407ca8 	.word	0x00407ca8
  4057b4:	00407cb4 	.word	0x00407cb4
  4057b8:	3ff80000 	.word	0x3ff80000
  4057bc:	00407cf0 	.word	0x00407cf0
  4057c0:	00407c84 	.word	0x00407c84
  4057c4:	40240000 	.word	0x40240000
  4057c8:	f7fd ff1a 	bl	403600 <__aeabi_dmul>
  4057cc:	2200      	movs	r2, #0
  4057ce:	2300      	movs	r3, #0
  4057d0:	4606      	mov	r6, r0
  4057d2:	460f      	mov	r7, r1
  4057d4:	f7fe f97c 	bl	403ad0 <__aeabi_dcmpeq>
  4057d8:	2800      	cmp	r0, #0
  4057da:	f040 83c1 	bne.w	405f60 <_dtoa_r+0xa60>
  4057de:	4642      	mov	r2, r8
  4057e0:	464b      	mov	r3, r9
  4057e2:	4630      	mov	r0, r6
  4057e4:	4639      	mov	r1, r7
  4057e6:	f7fe f835 	bl	403854 <__aeabi_ddiv>
  4057ea:	f002 f871 	bl	4078d0 <__aeabi_d2iz>
  4057ee:	4604      	mov	r4, r0
  4057f0:	f7fd fea0 	bl	403534 <__aeabi_i2d>
  4057f4:	4642      	mov	r2, r8
  4057f6:	464b      	mov	r3, r9
  4057f8:	f7fd ff02 	bl	403600 <__aeabi_dmul>
  4057fc:	4602      	mov	r2, r0
  4057fe:	460b      	mov	r3, r1
  405800:	4630      	mov	r0, r6
  405802:	4639      	mov	r1, r7
  405804:	f7fd fd48 	bl	403298 <__aeabi_dsub>
  405808:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40580c:	9e04      	ldr	r6, [sp, #16]
  40580e:	f805 eb01 	strb.w	lr, [r5], #1
  405812:	eba5 0e06 	sub.w	lr, r5, r6
  405816:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  405818:	45b6      	cmp	lr, r6
  40581a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40581e:	4652      	mov	r2, sl
  405820:	465b      	mov	r3, fp
  405822:	d1d1      	bne.n	4057c8 <_dtoa_r+0x2c8>
  405824:	46a0      	mov	r8, r4
  405826:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40582a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40582c:	4606      	mov	r6, r0
  40582e:	460f      	mov	r7, r1
  405830:	4632      	mov	r2, r6
  405832:	463b      	mov	r3, r7
  405834:	4630      	mov	r0, r6
  405836:	4639      	mov	r1, r7
  405838:	f7fd fd30 	bl	40329c <__adddf3>
  40583c:	4606      	mov	r6, r0
  40583e:	460f      	mov	r7, r1
  405840:	4602      	mov	r2, r0
  405842:	460b      	mov	r3, r1
  405844:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405848:	f7fe f94c 	bl	403ae4 <__aeabi_dcmplt>
  40584c:	b948      	cbnz	r0, 405862 <_dtoa_r+0x362>
  40584e:	4632      	mov	r2, r6
  405850:	463b      	mov	r3, r7
  405852:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405856:	f7fe f93b 	bl	403ad0 <__aeabi_dcmpeq>
  40585a:	b1a8      	cbz	r0, 405888 <_dtoa_r+0x388>
  40585c:	f018 0f01 	tst.w	r8, #1
  405860:	d012      	beq.n	405888 <_dtoa_r+0x388>
  405862:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  405866:	9a04      	ldr	r2, [sp, #16]
  405868:	1e6b      	subs	r3, r5, #1
  40586a:	e004      	b.n	405876 <_dtoa_r+0x376>
  40586c:	429a      	cmp	r2, r3
  40586e:	f000 8401 	beq.w	406074 <_dtoa_r+0xb74>
  405872:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  405876:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40587a:	f103 0501 	add.w	r5, r3, #1
  40587e:	d0f5      	beq.n	40586c <_dtoa_r+0x36c>
  405880:	f108 0801 	add.w	r8, r8, #1
  405884:	f883 8000 	strb.w	r8, [r3]
  405888:	4649      	mov	r1, r9
  40588a:	4620      	mov	r0, r4
  40588c:	f001 fa76 	bl	406d7c <_Bfree>
  405890:	2200      	movs	r2, #0
  405892:	9b02      	ldr	r3, [sp, #8]
  405894:	702a      	strb	r2, [r5, #0]
  405896:	9a26      	ldr	r2, [sp, #152]	; 0x98
  405898:	3301      	adds	r3, #1
  40589a:	6013      	str	r3, [r2, #0]
  40589c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40589e:	2b00      	cmp	r3, #0
  4058a0:	f000 839e 	beq.w	405fe0 <_dtoa_r+0xae0>
  4058a4:	9804      	ldr	r0, [sp, #16]
  4058a6:	601d      	str	r5, [r3, #0]
  4058a8:	b01b      	add	sp, #108	; 0x6c
  4058aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4058ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4058b0:	2a00      	cmp	r2, #0
  4058b2:	d03e      	beq.n	405932 <_dtoa_r+0x432>
  4058b4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4058b6:	2a01      	cmp	r2, #1
  4058b8:	f340 8311 	ble.w	405ede <_dtoa_r+0x9de>
  4058bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4058be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4058c0:	1e5f      	subs	r7, r3, #1
  4058c2:	42ba      	cmp	r2, r7
  4058c4:	f2c0 838f 	blt.w	405fe6 <_dtoa_r+0xae6>
  4058c8:	1bd7      	subs	r7, r2, r7
  4058ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4058cc:	2b00      	cmp	r3, #0
  4058ce:	f2c0 848b 	blt.w	4061e8 <_dtoa_r+0xce8>
  4058d2:	9d08      	ldr	r5, [sp, #32]
  4058d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4058d6:	9a08      	ldr	r2, [sp, #32]
  4058d8:	441a      	add	r2, r3
  4058da:	9208      	str	r2, [sp, #32]
  4058dc:	9a06      	ldr	r2, [sp, #24]
  4058de:	2101      	movs	r1, #1
  4058e0:	441a      	add	r2, r3
  4058e2:	4620      	mov	r0, r4
  4058e4:	9206      	str	r2, [sp, #24]
  4058e6:	f001 fae3 	bl	406eb0 <__i2b>
  4058ea:	4606      	mov	r6, r0
  4058ec:	e024      	b.n	405938 <_dtoa_r+0x438>
  4058ee:	2301      	movs	r3, #1
  4058f0:	930e      	str	r3, [sp, #56]	; 0x38
  4058f2:	e6af      	b.n	405654 <_dtoa_r+0x154>
  4058f4:	9a08      	ldr	r2, [sp, #32]
  4058f6:	9b02      	ldr	r3, [sp, #8]
  4058f8:	1ad2      	subs	r2, r2, r3
  4058fa:	425b      	negs	r3, r3
  4058fc:	930c      	str	r3, [sp, #48]	; 0x30
  4058fe:	2300      	movs	r3, #0
  405900:	9208      	str	r2, [sp, #32]
  405902:	930d      	str	r3, [sp, #52]	; 0x34
  405904:	e6b8      	b.n	405678 <_dtoa_r+0x178>
  405906:	f1c7 0301 	rsb	r3, r7, #1
  40590a:	9308      	str	r3, [sp, #32]
  40590c:	2300      	movs	r3, #0
  40590e:	9306      	str	r3, [sp, #24]
  405910:	e6a7      	b.n	405662 <_dtoa_r+0x162>
  405912:	9d02      	ldr	r5, [sp, #8]
  405914:	4628      	mov	r0, r5
  405916:	f7fd fe0d 	bl	403534 <__aeabi_i2d>
  40591a:	4602      	mov	r2, r0
  40591c:	460b      	mov	r3, r1
  40591e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  405922:	f7fe f8d5 	bl	403ad0 <__aeabi_dcmpeq>
  405926:	2800      	cmp	r0, #0
  405928:	f47f ae80 	bne.w	40562c <_dtoa_r+0x12c>
  40592c:	1e6b      	subs	r3, r5, #1
  40592e:	9302      	str	r3, [sp, #8]
  405930:	e67c      	b.n	40562c <_dtoa_r+0x12c>
  405932:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405934:	9d08      	ldr	r5, [sp, #32]
  405936:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  405938:	2d00      	cmp	r5, #0
  40593a:	dd0c      	ble.n	405956 <_dtoa_r+0x456>
  40593c:	9906      	ldr	r1, [sp, #24]
  40593e:	2900      	cmp	r1, #0
  405940:	460b      	mov	r3, r1
  405942:	dd08      	ble.n	405956 <_dtoa_r+0x456>
  405944:	42a9      	cmp	r1, r5
  405946:	9a08      	ldr	r2, [sp, #32]
  405948:	bfa8      	it	ge
  40594a:	462b      	movge	r3, r5
  40594c:	1ad2      	subs	r2, r2, r3
  40594e:	1aed      	subs	r5, r5, r3
  405950:	1acb      	subs	r3, r1, r3
  405952:	9208      	str	r2, [sp, #32]
  405954:	9306      	str	r3, [sp, #24]
  405956:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405958:	b1d3      	cbz	r3, 405990 <_dtoa_r+0x490>
  40595a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40595c:	2b00      	cmp	r3, #0
  40595e:	f000 82b7 	beq.w	405ed0 <_dtoa_r+0x9d0>
  405962:	2f00      	cmp	r7, #0
  405964:	dd10      	ble.n	405988 <_dtoa_r+0x488>
  405966:	4631      	mov	r1, r6
  405968:	463a      	mov	r2, r7
  40596a:	4620      	mov	r0, r4
  40596c:	f001 fb3c 	bl	406fe8 <__pow5mult>
  405970:	464a      	mov	r2, r9
  405972:	4601      	mov	r1, r0
  405974:	4606      	mov	r6, r0
  405976:	4620      	mov	r0, r4
  405978:	f001 faa4 	bl	406ec4 <__multiply>
  40597c:	4649      	mov	r1, r9
  40597e:	4680      	mov	r8, r0
  405980:	4620      	mov	r0, r4
  405982:	f001 f9fb 	bl	406d7c <_Bfree>
  405986:	46c1      	mov	r9, r8
  405988:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40598a:	1bda      	subs	r2, r3, r7
  40598c:	f040 82a1 	bne.w	405ed2 <_dtoa_r+0x9d2>
  405990:	2101      	movs	r1, #1
  405992:	4620      	mov	r0, r4
  405994:	f001 fa8c 	bl	406eb0 <__i2b>
  405998:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40599a:	2b00      	cmp	r3, #0
  40599c:	4680      	mov	r8, r0
  40599e:	dd1c      	ble.n	4059da <_dtoa_r+0x4da>
  4059a0:	4601      	mov	r1, r0
  4059a2:	461a      	mov	r2, r3
  4059a4:	4620      	mov	r0, r4
  4059a6:	f001 fb1f 	bl	406fe8 <__pow5mult>
  4059aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4059ac:	2b01      	cmp	r3, #1
  4059ae:	4680      	mov	r8, r0
  4059b0:	f340 8254 	ble.w	405e5c <_dtoa_r+0x95c>
  4059b4:	2300      	movs	r3, #0
  4059b6:	930c      	str	r3, [sp, #48]	; 0x30
  4059b8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4059bc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4059c0:	6918      	ldr	r0, [r3, #16]
  4059c2:	f001 fa25 	bl	406e10 <__hi0bits>
  4059c6:	f1c0 0020 	rsb	r0, r0, #32
  4059ca:	e010      	b.n	4059ee <_dtoa_r+0x4ee>
  4059cc:	f1c3 0520 	rsb	r5, r3, #32
  4059d0:	fa0a f005 	lsl.w	r0, sl, r5
  4059d4:	e674      	b.n	4056c0 <_dtoa_r+0x1c0>
  4059d6:	900e      	str	r0, [sp, #56]	; 0x38
  4059d8:	e63c      	b.n	405654 <_dtoa_r+0x154>
  4059da:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4059dc:	2b01      	cmp	r3, #1
  4059de:	f340 8287 	ble.w	405ef0 <_dtoa_r+0x9f0>
  4059e2:	2300      	movs	r3, #0
  4059e4:	930c      	str	r3, [sp, #48]	; 0x30
  4059e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4059e8:	2001      	movs	r0, #1
  4059ea:	2b00      	cmp	r3, #0
  4059ec:	d1e4      	bne.n	4059b8 <_dtoa_r+0x4b8>
  4059ee:	9a06      	ldr	r2, [sp, #24]
  4059f0:	4410      	add	r0, r2
  4059f2:	f010 001f 	ands.w	r0, r0, #31
  4059f6:	f000 80a1 	beq.w	405b3c <_dtoa_r+0x63c>
  4059fa:	f1c0 0320 	rsb	r3, r0, #32
  4059fe:	2b04      	cmp	r3, #4
  405a00:	f340 849e 	ble.w	406340 <_dtoa_r+0xe40>
  405a04:	9b08      	ldr	r3, [sp, #32]
  405a06:	f1c0 001c 	rsb	r0, r0, #28
  405a0a:	4403      	add	r3, r0
  405a0c:	9308      	str	r3, [sp, #32]
  405a0e:	4613      	mov	r3, r2
  405a10:	4403      	add	r3, r0
  405a12:	4405      	add	r5, r0
  405a14:	9306      	str	r3, [sp, #24]
  405a16:	9b08      	ldr	r3, [sp, #32]
  405a18:	2b00      	cmp	r3, #0
  405a1a:	dd05      	ble.n	405a28 <_dtoa_r+0x528>
  405a1c:	4649      	mov	r1, r9
  405a1e:	461a      	mov	r2, r3
  405a20:	4620      	mov	r0, r4
  405a22:	f001 fb31 	bl	407088 <__lshift>
  405a26:	4681      	mov	r9, r0
  405a28:	9b06      	ldr	r3, [sp, #24]
  405a2a:	2b00      	cmp	r3, #0
  405a2c:	dd05      	ble.n	405a3a <_dtoa_r+0x53a>
  405a2e:	4641      	mov	r1, r8
  405a30:	461a      	mov	r2, r3
  405a32:	4620      	mov	r0, r4
  405a34:	f001 fb28 	bl	407088 <__lshift>
  405a38:	4680      	mov	r8, r0
  405a3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405a3c:	2b00      	cmp	r3, #0
  405a3e:	f040 8086 	bne.w	405b4e <_dtoa_r+0x64e>
  405a42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a44:	2b00      	cmp	r3, #0
  405a46:	f340 8266 	ble.w	405f16 <_dtoa_r+0xa16>
  405a4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405a4c:	2b00      	cmp	r3, #0
  405a4e:	f000 8098 	beq.w	405b82 <_dtoa_r+0x682>
  405a52:	2d00      	cmp	r5, #0
  405a54:	dd05      	ble.n	405a62 <_dtoa_r+0x562>
  405a56:	4631      	mov	r1, r6
  405a58:	462a      	mov	r2, r5
  405a5a:	4620      	mov	r0, r4
  405a5c:	f001 fb14 	bl	407088 <__lshift>
  405a60:	4606      	mov	r6, r0
  405a62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405a64:	2b00      	cmp	r3, #0
  405a66:	f040 8337 	bne.w	4060d8 <_dtoa_r+0xbd8>
  405a6a:	9606      	str	r6, [sp, #24]
  405a6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405a6e:	9a04      	ldr	r2, [sp, #16]
  405a70:	f8dd b018 	ldr.w	fp, [sp, #24]
  405a74:	3b01      	subs	r3, #1
  405a76:	18d3      	adds	r3, r2, r3
  405a78:	930b      	str	r3, [sp, #44]	; 0x2c
  405a7a:	f00a 0301 	and.w	r3, sl, #1
  405a7e:	930c      	str	r3, [sp, #48]	; 0x30
  405a80:	4617      	mov	r7, r2
  405a82:	46c2      	mov	sl, r8
  405a84:	4651      	mov	r1, sl
  405a86:	4648      	mov	r0, r9
  405a88:	f7ff fca6 	bl	4053d8 <quorem>
  405a8c:	4631      	mov	r1, r6
  405a8e:	4605      	mov	r5, r0
  405a90:	4648      	mov	r0, r9
  405a92:	f001 fb4b 	bl	40712c <__mcmp>
  405a96:	465a      	mov	r2, fp
  405a98:	900a      	str	r0, [sp, #40]	; 0x28
  405a9a:	4651      	mov	r1, sl
  405a9c:	4620      	mov	r0, r4
  405a9e:	f001 fb61 	bl	407164 <__mdiff>
  405aa2:	68c2      	ldr	r2, [r0, #12]
  405aa4:	4680      	mov	r8, r0
  405aa6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  405aaa:	2a00      	cmp	r2, #0
  405aac:	f040 822b 	bne.w	405f06 <_dtoa_r+0xa06>
  405ab0:	4601      	mov	r1, r0
  405ab2:	4648      	mov	r0, r9
  405ab4:	9308      	str	r3, [sp, #32]
  405ab6:	f001 fb39 	bl	40712c <__mcmp>
  405aba:	4641      	mov	r1, r8
  405abc:	9006      	str	r0, [sp, #24]
  405abe:	4620      	mov	r0, r4
  405ac0:	f001 f95c 	bl	406d7c <_Bfree>
  405ac4:	9a06      	ldr	r2, [sp, #24]
  405ac6:	9b08      	ldr	r3, [sp, #32]
  405ac8:	b932      	cbnz	r2, 405ad8 <_dtoa_r+0x5d8>
  405aca:	9924      	ldr	r1, [sp, #144]	; 0x90
  405acc:	b921      	cbnz	r1, 405ad8 <_dtoa_r+0x5d8>
  405ace:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405ad0:	2a00      	cmp	r2, #0
  405ad2:	f000 83ef 	beq.w	4062b4 <_dtoa_r+0xdb4>
  405ad6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  405ad8:	990a      	ldr	r1, [sp, #40]	; 0x28
  405ada:	2900      	cmp	r1, #0
  405adc:	f2c0 829f 	blt.w	40601e <_dtoa_r+0xb1e>
  405ae0:	d105      	bne.n	405aee <_dtoa_r+0x5ee>
  405ae2:	9924      	ldr	r1, [sp, #144]	; 0x90
  405ae4:	b919      	cbnz	r1, 405aee <_dtoa_r+0x5ee>
  405ae6:	990c      	ldr	r1, [sp, #48]	; 0x30
  405ae8:	2900      	cmp	r1, #0
  405aea:	f000 8298 	beq.w	40601e <_dtoa_r+0xb1e>
  405aee:	2a00      	cmp	r2, #0
  405af0:	f300 8306 	bgt.w	406100 <_dtoa_r+0xc00>
  405af4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405af6:	703b      	strb	r3, [r7, #0]
  405af8:	f107 0801 	add.w	r8, r7, #1
  405afc:	4297      	cmp	r7, r2
  405afe:	4645      	mov	r5, r8
  405b00:	f000 830c 	beq.w	40611c <_dtoa_r+0xc1c>
  405b04:	4649      	mov	r1, r9
  405b06:	2300      	movs	r3, #0
  405b08:	220a      	movs	r2, #10
  405b0a:	4620      	mov	r0, r4
  405b0c:	f001 f940 	bl	406d90 <__multadd>
  405b10:	455e      	cmp	r6, fp
  405b12:	4681      	mov	r9, r0
  405b14:	4631      	mov	r1, r6
  405b16:	f04f 0300 	mov.w	r3, #0
  405b1a:	f04f 020a 	mov.w	r2, #10
  405b1e:	4620      	mov	r0, r4
  405b20:	f000 81eb 	beq.w	405efa <_dtoa_r+0x9fa>
  405b24:	f001 f934 	bl	406d90 <__multadd>
  405b28:	4659      	mov	r1, fp
  405b2a:	4606      	mov	r6, r0
  405b2c:	2300      	movs	r3, #0
  405b2e:	220a      	movs	r2, #10
  405b30:	4620      	mov	r0, r4
  405b32:	f001 f92d 	bl	406d90 <__multadd>
  405b36:	4647      	mov	r7, r8
  405b38:	4683      	mov	fp, r0
  405b3a:	e7a3      	b.n	405a84 <_dtoa_r+0x584>
  405b3c:	201c      	movs	r0, #28
  405b3e:	9b08      	ldr	r3, [sp, #32]
  405b40:	4403      	add	r3, r0
  405b42:	9308      	str	r3, [sp, #32]
  405b44:	9b06      	ldr	r3, [sp, #24]
  405b46:	4403      	add	r3, r0
  405b48:	4405      	add	r5, r0
  405b4a:	9306      	str	r3, [sp, #24]
  405b4c:	e763      	b.n	405a16 <_dtoa_r+0x516>
  405b4e:	4641      	mov	r1, r8
  405b50:	4648      	mov	r0, r9
  405b52:	f001 faeb 	bl	40712c <__mcmp>
  405b56:	2800      	cmp	r0, #0
  405b58:	f6bf af73 	bge.w	405a42 <_dtoa_r+0x542>
  405b5c:	9f02      	ldr	r7, [sp, #8]
  405b5e:	4649      	mov	r1, r9
  405b60:	2300      	movs	r3, #0
  405b62:	220a      	movs	r2, #10
  405b64:	4620      	mov	r0, r4
  405b66:	3f01      	subs	r7, #1
  405b68:	9702      	str	r7, [sp, #8]
  405b6a:	f001 f911 	bl	406d90 <__multadd>
  405b6e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405b70:	4681      	mov	r9, r0
  405b72:	2b00      	cmp	r3, #0
  405b74:	f040 83b6 	bne.w	4062e4 <_dtoa_r+0xde4>
  405b78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  405b7a:	2b00      	cmp	r3, #0
  405b7c:	f340 83bf 	ble.w	4062fe <_dtoa_r+0xdfe>
  405b80:	930a      	str	r3, [sp, #40]	; 0x28
  405b82:	f8dd b010 	ldr.w	fp, [sp, #16]
  405b86:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  405b88:	465d      	mov	r5, fp
  405b8a:	e002      	b.n	405b92 <_dtoa_r+0x692>
  405b8c:	f001 f900 	bl	406d90 <__multadd>
  405b90:	4681      	mov	r9, r0
  405b92:	4641      	mov	r1, r8
  405b94:	4648      	mov	r0, r9
  405b96:	f7ff fc1f 	bl	4053d8 <quorem>
  405b9a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  405b9e:	f805 ab01 	strb.w	sl, [r5], #1
  405ba2:	eba5 030b 	sub.w	r3, r5, fp
  405ba6:	42bb      	cmp	r3, r7
  405ba8:	f04f 020a 	mov.w	r2, #10
  405bac:	f04f 0300 	mov.w	r3, #0
  405bb0:	4649      	mov	r1, r9
  405bb2:	4620      	mov	r0, r4
  405bb4:	dbea      	blt.n	405b8c <_dtoa_r+0x68c>
  405bb6:	9b04      	ldr	r3, [sp, #16]
  405bb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  405bba:	2a01      	cmp	r2, #1
  405bbc:	bfac      	ite	ge
  405bbe:	189b      	addge	r3, r3, r2
  405bc0:	3301      	addlt	r3, #1
  405bc2:	461d      	mov	r5, r3
  405bc4:	f04f 0b00 	mov.w	fp, #0
  405bc8:	4649      	mov	r1, r9
  405bca:	2201      	movs	r2, #1
  405bcc:	4620      	mov	r0, r4
  405bce:	f001 fa5b 	bl	407088 <__lshift>
  405bd2:	4641      	mov	r1, r8
  405bd4:	4681      	mov	r9, r0
  405bd6:	f001 faa9 	bl	40712c <__mcmp>
  405bda:	2800      	cmp	r0, #0
  405bdc:	f340 823d 	ble.w	40605a <_dtoa_r+0xb5a>
  405be0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  405be4:	9904      	ldr	r1, [sp, #16]
  405be6:	1e6b      	subs	r3, r5, #1
  405be8:	e004      	b.n	405bf4 <_dtoa_r+0x6f4>
  405bea:	428b      	cmp	r3, r1
  405bec:	f000 81ae 	beq.w	405f4c <_dtoa_r+0xa4c>
  405bf0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  405bf4:	2a39      	cmp	r2, #57	; 0x39
  405bf6:	f103 0501 	add.w	r5, r3, #1
  405bfa:	d0f6      	beq.n	405bea <_dtoa_r+0x6ea>
  405bfc:	3201      	adds	r2, #1
  405bfe:	701a      	strb	r2, [r3, #0]
  405c00:	4641      	mov	r1, r8
  405c02:	4620      	mov	r0, r4
  405c04:	f001 f8ba 	bl	406d7c <_Bfree>
  405c08:	2e00      	cmp	r6, #0
  405c0a:	f43f ae3d 	beq.w	405888 <_dtoa_r+0x388>
  405c0e:	f1bb 0f00 	cmp.w	fp, #0
  405c12:	d005      	beq.n	405c20 <_dtoa_r+0x720>
  405c14:	45b3      	cmp	fp, r6
  405c16:	d003      	beq.n	405c20 <_dtoa_r+0x720>
  405c18:	4659      	mov	r1, fp
  405c1a:	4620      	mov	r0, r4
  405c1c:	f001 f8ae 	bl	406d7c <_Bfree>
  405c20:	4631      	mov	r1, r6
  405c22:	4620      	mov	r0, r4
  405c24:	f001 f8aa 	bl	406d7c <_Bfree>
  405c28:	e62e      	b.n	405888 <_dtoa_r+0x388>
  405c2a:	2300      	movs	r3, #0
  405c2c:	930b      	str	r3, [sp, #44]	; 0x2c
  405c2e:	9b02      	ldr	r3, [sp, #8]
  405c30:	9a25      	ldr	r2, [sp, #148]	; 0x94
  405c32:	4413      	add	r3, r2
  405c34:	930f      	str	r3, [sp, #60]	; 0x3c
  405c36:	3301      	adds	r3, #1
  405c38:	2b01      	cmp	r3, #1
  405c3a:	461f      	mov	r7, r3
  405c3c:	461e      	mov	r6, r3
  405c3e:	930a      	str	r3, [sp, #40]	; 0x28
  405c40:	bfb8      	it	lt
  405c42:	2701      	movlt	r7, #1
  405c44:	2100      	movs	r1, #0
  405c46:	2f17      	cmp	r7, #23
  405c48:	6461      	str	r1, [r4, #68]	; 0x44
  405c4a:	d90a      	bls.n	405c62 <_dtoa_r+0x762>
  405c4c:	2201      	movs	r2, #1
  405c4e:	2304      	movs	r3, #4
  405c50:	005b      	lsls	r3, r3, #1
  405c52:	f103 0014 	add.w	r0, r3, #20
  405c56:	4287      	cmp	r7, r0
  405c58:	4611      	mov	r1, r2
  405c5a:	f102 0201 	add.w	r2, r2, #1
  405c5e:	d2f7      	bcs.n	405c50 <_dtoa_r+0x750>
  405c60:	6461      	str	r1, [r4, #68]	; 0x44
  405c62:	4620      	mov	r0, r4
  405c64:	f001 f864 	bl	406d30 <_Balloc>
  405c68:	2e0e      	cmp	r6, #14
  405c6a:	9004      	str	r0, [sp, #16]
  405c6c:	6420      	str	r0, [r4, #64]	; 0x40
  405c6e:	f63f ad41 	bhi.w	4056f4 <_dtoa_r+0x1f4>
  405c72:	2d00      	cmp	r5, #0
  405c74:	f43f ad3e 	beq.w	4056f4 <_dtoa_r+0x1f4>
  405c78:	9902      	ldr	r1, [sp, #8]
  405c7a:	2900      	cmp	r1, #0
  405c7c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  405c80:	f340 8202 	ble.w	406088 <_dtoa_r+0xb88>
  405c84:	4bb8      	ldr	r3, [pc, #736]	; (405f68 <_dtoa_r+0xa68>)
  405c86:	f001 020f 	and.w	r2, r1, #15
  405c8a:	110d      	asrs	r5, r1, #4
  405c8c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405c90:	06e9      	lsls	r1, r5, #27
  405c92:	e9d3 6700 	ldrd	r6, r7, [r3]
  405c96:	f140 81ae 	bpl.w	405ff6 <_dtoa_r+0xaf6>
  405c9a:	4bb4      	ldr	r3, [pc, #720]	; (405f6c <_dtoa_r+0xa6c>)
  405c9c:	4650      	mov	r0, sl
  405c9e:	4659      	mov	r1, fp
  405ca0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  405ca4:	f7fd fdd6 	bl	403854 <__aeabi_ddiv>
  405ca8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  405cac:	f005 050f 	and.w	r5, r5, #15
  405cb0:	f04f 0a03 	mov.w	sl, #3
  405cb4:	b18d      	cbz	r5, 405cda <_dtoa_r+0x7da>
  405cb6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 405f6c <_dtoa_r+0xa6c>
  405cba:	07ea      	lsls	r2, r5, #31
  405cbc:	d509      	bpl.n	405cd2 <_dtoa_r+0x7d2>
  405cbe:	4630      	mov	r0, r6
  405cc0:	4639      	mov	r1, r7
  405cc2:	e9d8 2300 	ldrd	r2, r3, [r8]
  405cc6:	f7fd fc9b 	bl	403600 <__aeabi_dmul>
  405cca:	f10a 0a01 	add.w	sl, sl, #1
  405cce:	4606      	mov	r6, r0
  405cd0:	460f      	mov	r7, r1
  405cd2:	106d      	asrs	r5, r5, #1
  405cd4:	f108 0808 	add.w	r8, r8, #8
  405cd8:	d1ef      	bne.n	405cba <_dtoa_r+0x7ba>
  405cda:	463b      	mov	r3, r7
  405cdc:	4632      	mov	r2, r6
  405cde:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  405ce2:	f7fd fdb7 	bl	403854 <__aeabi_ddiv>
  405ce6:	4607      	mov	r7, r0
  405ce8:	4688      	mov	r8, r1
  405cea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  405cec:	b143      	cbz	r3, 405d00 <_dtoa_r+0x800>
  405cee:	2200      	movs	r2, #0
  405cf0:	4b9f      	ldr	r3, [pc, #636]	; (405f70 <_dtoa_r+0xa70>)
  405cf2:	4638      	mov	r0, r7
  405cf4:	4641      	mov	r1, r8
  405cf6:	f7fd fef5 	bl	403ae4 <__aeabi_dcmplt>
  405cfa:	2800      	cmp	r0, #0
  405cfc:	f040 8286 	bne.w	40620c <_dtoa_r+0xd0c>
  405d00:	4650      	mov	r0, sl
  405d02:	f7fd fc17 	bl	403534 <__aeabi_i2d>
  405d06:	463a      	mov	r2, r7
  405d08:	4643      	mov	r3, r8
  405d0a:	f7fd fc79 	bl	403600 <__aeabi_dmul>
  405d0e:	4b99      	ldr	r3, [pc, #612]	; (405f74 <_dtoa_r+0xa74>)
  405d10:	2200      	movs	r2, #0
  405d12:	f7fd fac3 	bl	40329c <__adddf3>
  405d16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405d18:	4605      	mov	r5, r0
  405d1a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405d1e:	2b00      	cmp	r3, #0
  405d20:	f000 813e 	beq.w	405fa0 <_dtoa_r+0xaa0>
  405d24:	9b02      	ldr	r3, [sp, #8]
  405d26:	9315      	str	r3, [sp, #84]	; 0x54
  405d28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405d2a:	9312      	str	r3, [sp, #72]	; 0x48
  405d2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405d2e:	2b00      	cmp	r3, #0
  405d30:	f000 81fa 	beq.w	406128 <_dtoa_r+0xc28>
  405d34:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405d36:	4b8c      	ldr	r3, [pc, #560]	; (405f68 <_dtoa_r+0xa68>)
  405d38:	498f      	ldr	r1, [pc, #572]	; (405f78 <_dtoa_r+0xa78>)
  405d3a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  405d3e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  405d42:	2000      	movs	r0, #0
  405d44:	f7fd fd86 	bl	403854 <__aeabi_ddiv>
  405d48:	462a      	mov	r2, r5
  405d4a:	4633      	mov	r3, r6
  405d4c:	f7fd faa4 	bl	403298 <__aeabi_dsub>
  405d50:	4682      	mov	sl, r0
  405d52:	468b      	mov	fp, r1
  405d54:	4638      	mov	r0, r7
  405d56:	4641      	mov	r1, r8
  405d58:	f001 fdba 	bl	4078d0 <__aeabi_d2iz>
  405d5c:	4605      	mov	r5, r0
  405d5e:	f7fd fbe9 	bl	403534 <__aeabi_i2d>
  405d62:	4602      	mov	r2, r0
  405d64:	460b      	mov	r3, r1
  405d66:	4638      	mov	r0, r7
  405d68:	4641      	mov	r1, r8
  405d6a:	f7fd fa95 	bl	403298 <__aeabi_dsub>
  405d6e:	3530      	adds	r5, #48	; 0x30
  405d70:	fa5f f885 	uxtb.w	r8, r5
  405d74:	9d04      	ldr	r5, [sp, #16]
  405d76:	4606      	mov	r6, r0
  405d78:	460f      	mov	r7, r1
  405d7a:	f885 8000 	strb.w	r8, [r5]
  405d7e:	4602      	mov	r2, r0
  405d80:	460b      	mov	r3, r1
  405d82:	4650      	mov	r0, sl
  405d84:	4659      	mov	r1, fp
  405d86:	3501      	adds	r5, #1
  405d88:	f7fd feca 	bl	403b20 <__aeabi_dcmpgt>
  405d8c:	2800      	cmp	r0, #0
  405d8e:	d154      	bne.n	405e3a <_dtoa_r+0x93a>
  405d90:	4632      	mov	r2, r6
  405d92:	463b      	mov	r3, r7
  405d94:	2000      	movs	r0, #0
  405d96:	4976      	ldr	r1, [pc, #472]	; (405f70 <_dtoa_r+0xa70>)
  405d98:	f7fd fa7e 	bl	403298 <__aeabi_dsub>
  405d9c:	4602      	mov	r2, r0
  405d9e:	460b      	mov	r3, r1
  405da0:	4650      	mov	r0, sl
  405da2:	4659      	mov	r1, fp
  405da4:	f7fd febc 	bl	403b20 <__aeabi_dcmpgt>
  405da8:	2800      	cmp	r0, #0
  405daa:	f040 8270 	bne.w	40628e <_dtoa_r+0xd8e>
  405dae:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405db0:	2a01      	cmp	r2, #1
  405db2:	f000 8111 	beq.w	405fd8 <_dtoa_r+0xad8>
  405db6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  405db8:	9a04      	ldr	r2, [sp, #16]
  405dba:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  405dbe:	4413      	add	r3, r2
  405dc0:	4699      	mov	r9, r3
  405dc2:	e00d      	b.n	405de0 <_dtoa_r+0x8e0>
  405dc4:	2000      	movs	r0, #0
  405dc6:	496a      	ldr	r1, [pc, #424]	; (405f70 <_dtoa_r+0xa70>)
  405dc8:	f7fd fa66 	bl	403298 <__aeabi_dsub>
  405dcc:	4652      	mov	r2, sl
  405dce:	465b      	mov	r3, fp
  405dd0:	f7fd fe88 	bl	403ae4 <__aeabi_dcmplt>
  405dd4:	2800      	cmp	r0, #0
  405dd6:	f040 8258 	bne.w	40628a <_dtoa_r+0xd8a>
  405dda:	454d      	cmp	r5, r9
  405ddc:	f000 80fa 	beq.w	405fd4 <_dtoa_r+0xad4>
  405de0:	4650      	mov	r0, sl
  405de2:	4659      	mov	r1, fp
  405de4:	2200      	movs	r2, #0
  405de6:	4b65      	ldr	r3, [pc, #404]	; (405f7c <_dtoa_r+0xa7c>)
  405de8:	f7fd fc0a 	bl	403600 <__aeabi_dmul>
  405dec:	2200      	movs	r2, #0
  405dee:	4b63      	ldr	r3, [pc, #396]	; (405f7c <_dtoa_r+0xa7c>)
  405df0:	4682      	mov	sl, r0
  405df2:	468b      	mov	fp, r1
  405df4:	4630      	mov	r0, r6
  405df6:	4639      	mov	r1, r7
  405df8:	f7fd fc02 	bl	403600 <__aeabi_dmul>
  405dfc:	460f      	mov	r7, r1
  405dfe:	4606      	mov	r6, r0
  405e00:	f001 fd66 	bl	4078d0 <__aeabi_d2iz>
  405e04:	4680      	mov	r8, r0
  405e06:	f7fd fb95 	bl	403534 <__aeabi_i2d>
  405e0a:	4602      	mov	r2, r0
  405e0c:	460b      	mov	r3, r1
  405e0e:	4630      	mov	r0, r6
  405e10:	4639      	mov	r1, r7
  405e12:	f7fd fa41 	bl	403298 <__aeabi_dsub>
  405e16:	f108 0830 	add.w	r8, r8, #48	; 0x30
  405e1a:	fa5f f888 	uxtb.w	r8, r8
  405e1e:	4652      	mov	r2, sl
  405e20:	465b      	mov	r3, fp
  405e22:	f805 8b01 	strb.w	r8, [r5], #1
  405e26:	4606      	mov	r6, r0
  405e28:	460f      	mov	r7, r1
  405e2a:	f7fd fe5b 	bl	403ae4 <__aeabi_dcmplt>
  405e2e:	4632      	mov	r2, r6
  405e30:	463b      	mov	r3, r7
  405e32:	2800      	cmp	r0, #0
  405e34:	d0c6      	beq.n	405dc4 <_dtoa_r+0x8c4>
  405e36:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405e3a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405e3c:	9302      	str	r3, [sp, #8]
  405e3e:	e523      	b.n	405888 <_dtoa_r+0x388>
  405e40:	2300      	movs	r3, #0
  405e42:	930b      	str	r3, [sp, #44]	; 0x2c
  405e44:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405e46:	2b00      	cmp	r3, #0
  405e48:	f340 80dc 	ble.w	406004 <_dtoa_r+0xb04>
  405e4c:	461f      	mov	r7, r3
  405e4e:	461e      	mov	r6, r3
  405e50:	930f      	str	r3, [sp, #60]	; 0x3c
  405e52:	930a      	str	r3, [sp, #40]	; 0x28
  405e54:	e6f6      	b.n	405c44 <_dtoa_r+0x744>
  405e56:	2301      	movs	r3, #1
  405e58:	930b      	str	r3, [sp, #44]	; 0x2c
  405e5a:	e7f3      	b.n	405e44 <_dtoa_r+0x944>
  405e5c:	f1ba 0f00 	cmp.w	sl, #0
  405e60:	f47f ada8 	bne.w	4059b4 <_dtoa_r+0x4b4>
  405e64:	f3cb 0313 	ubfx	r3, fp, #0, #20
  405e68:	2b00      	cmp	r3, #0
  405e6a:	f47f adba 	bne.w	4059e2 <_dtoa_r+0x4e2>
  405e6e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  405e72:	0d3f      	lsrs	r7, r7, #20
  405e74:	053f      	lsls	r7, r7, #20
  405e76:	2f00      	cmp	r7, #0
  405e78:	f000 820d 	beq.w	406296 <_dtoa_r+0xd96>
  405e7c:	9b08      	ldr	r3, [sp, #32]
  405e7e:	3301      	adds	r3, #1
  405e80:	9308      	str	r3, [sp, #32]
  405e82:	9b06      	ldr	r3, [sp, #24]
  405e84:	3301      	adds	r3, #1
  405e86:	9306      	str	r3, [sp, #24]
  405e88:	2301      	movs	r3, #1
  405e8a:	930c      	str	r3, [sp, #48]	; 0x30
  405e8c:	e5ab      	b.n	4059e6 <_dtoa_r+0x4e6>
  405e8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405e90:	2b00      	cmp	r3, #0
  405e92:	f73f ac42 	bgt.w	40571a <_dtoa_r+0x21a>
  405e96:	f040 8221 	bne.w	4062dc <_dtoa_r+0xddc>
  405e9a:	2200      	movs	r2, #0
  405e9c:	4b38      	ldr	r3, [pc, #224]	; (405f80 <_dtoa_r+0xa80>)
  405e9e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  405ea2:	f7fd fbad 	bl	403600 <__aeabi_dmul>
  405ea6:	4652      	mov	r2, sl
  405ea8:	465b      	mov	r3, fp
  405eaa:	f7fd fe2f 	bl	403b0c <__aeabi_dcmpge>
  405eae:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  405eb2:	4646      	mov	r6, r8
  405eb4:	2800      	cmp	r0, #0
  405eb6:	d041      	beq.n	405f3c <_dtoa_r+0xa3c>
  405eb8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  405eba:	9d04      	ldr	r5, [sp, #16]
  405ebc:	43db      	mvns	r3, r3
  405ebe:	9302      	str	r3, [sp, #8]
  405ec0:	4641      	mov	r1, r8
  405ec2:	4620      	mov	r0, r4
  405ec4:	f000 ff5a 	bl	406d7c <_Bfree>
  405ec8:	2e00      	cmp	r6, #0
  405eca:	f43f acdd 	beq.w	405888 <_dtoa_r+0x388>
  405ece:	e6a7      	b.n	405c20 <_dtoa_r+0x720>
  405ed0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  405ed2:	4649      	mov	r1, r9
  405ed4:	4620      	mov	r0, r4
  405ed6:	f001 f887 	bl	406fe8 <__pow5mult>
  405eda:	4681      	mov	r9, r0
  405edc:	e558      	b.n	405990 <_dtoa_r+0x490>
  405ede:	9a14      	ldr	r2, [sp, #80]	; 0x50
  405ee0:	2a00      	cmp	r2, #0
  405ee2:	f000 8187 	beq.w	4061f4 <_dtoa_r+0xcf4>
  405ee6:	f203 4333 	addw	r3, r3, #1075	; 0x433
  405eea:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  405eec:	9d08      	ldr	r5, [sp, #32]
  405eee:	e4f2      	b.n	4058d6 <_dtoa_r+0x3d6>
  405ef0:	f1ba 0f00 	cmp.w	sl, #0
  405ef4:	f47f ad75 	bne.w	4059e2 <_dtoa_r+0x4e2>
  405ef8:	e7b4      	b.n	405e64 <_dtoa_r+0x964>
  405efa:	f000 ff49 	bl	406d90 <__multadd>
  405efe:	4647      	mov	r7, r8
  405f00:	4606      	mov	r6, r0
  405f02:	4683      	mov	fp, r0
  405f04:	e5be      	b.n	405a84 <_dtoa_r+0x584>
  405f06:	4601      	mov	r1, r0
  405f08:	4620      	mov	r0, r4
  405f0a:	9306      	str	r3, [sp, #24]
  405f0c:	f000 ff36 	bl	406d7c <_Bfree>
  405f10:	2201      	movs	r2, #1
  405f12:	9b06      	ldr	r3, [sp, #24]
  405f14:	e5e0      	b.n	405ad8 <_dtoa_r+0x5d8>
  405f16:	9b24      	ldr	r3, [sp, #144]	; 0x90
  405f18:	2b02      	cmp	r3, #2
  405f1a:	f77f ad96 	ble.w	405a4a <_dtoa_r+0x54a>
  405f1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405f20:	2b00      	cmp	r3, #0
  405f22:	d1c9      	bne.n	405eb8 <_dtoa_r+0x9b8>
  405f24:	4641      	mov	r1, r8
  405f26:	2205      	movs	r2, #5
  405f28:	4620      	mov	r0, r4
  405f2a:	f000 ff31 	bl	406d90 <__multadd>
  405f2e:	4601      	mov	r1, r0
  405f30:	4680      	mov	r8, r0
  405f32:	4648      	mov	r0, r9
  405f34:	f001 f8fa 	bl	40712c <__mcmp>
  405f38:	2800      	cmp	r0, #0
  405f3a:	ddbd      	ble.n	405eb8 <_dtoa_r+0x9b8>
  405f3c:	9a02      	ldr	r2, [sp, #8]
  405f3e:	9904      	ldr	r1, [sp, #16]
  405f40:	2331      	movs	r3, #49	; 0x31
  405f42:	3201      	adds	r2, #1
  405f44:	9202      	str	r2, [sp, #8]
  405f46:	700b      	strb	r3, [r1, #0]
  405f48:	1c4d      	adds	r5, r1, #1
  405f4a:	e7b9      	b.n	405ec0 <_dtoa_r+0x9c0>
  405f4c:	9a02      	ldr	r2, [sp, #8]
  405f4e:	3201      	adds	r2, #1
  405f50:	9202      	str	r2, [sp, #8]
  405f52:	9a04      	ldr	r2, [sp, #16]
  405f54:	2331      	movs	r3, #49	; 0x31
  405f56:	7013      	strb	r3, [r2, #0]
  405f58:	e652      	b.n	405c00 <_dtoa_r+0x700>
  405f5a:	2301      	movs	r3, #1
  405f5c:	930b      	str	r3, [sp, #44]	; 0x2c
  405f5e:	e666      	b.n	405c2e <_dtoa_r+0x72e>
  405f60:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  405f64:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  405f66:	e48f      	b.n	405888 <_dtoa_r+0x388>
  405f68:	00407cf0 	.word	0x00407cf0
  405f6c:	00407cc8 	.word	0x00407cc8
  405f70:	3ff00000 	.word	0x3ff00000
  405f74:	401c0000 	.word	0x401c0000
  405f78:	3fe00000 	.word	0x3fe00000
  405f7c:	40240000 	.word	0x40240000
  405f80:	40140000 	.word	0x40140000
  405f84:	4650      	mov	r0, sl
  405f86:	f7fd fad5 	bl	403534 <__aeabi_i2d>
  405f8a:	463a      	mov	r2, r7
  405f8c:	4643      	mov	r3, r8
  405f8e:	f7fd fb37 	bl	403600 <__aeabi_dmul>
  405f92:	2200      	movs	r2, #0
  405f94:	4bc1      	ldr	r3, [pc, #772]	; (40629c <_dtoa_r+0xd9c>)
  405f96:	f7fd f981 	bl	40329c <__adddf3>
  405f9a:	4605      	mov	r5, r0
  405f9c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  405fa0:	4641      	mov	r1, r8
  405fa2:	2200      	movs	r2, #0
  405fa4:	4bbe      	ldr	r3, [pc, #760]	; (4062a0 <_dtoa_r+0xda0>)
  405fa6:	4638      	mov	r0, r7
  405fa8:	f7fd f976 	bl	403298 <__aeabi_dsub>
  405fac:	462a      	mov	r2, r5
  405fae:	4633      	mov	r3, r6
  405fb0:	4682      	mov	sl, r0
  405fb2:	468b      	mov	fp, r1
  405fb4:	f7fd fdb4 	bl	403b20 <__aeabi_dcmpgt>
  405fb8:	4680      	mov	r8, r0
  405fba:	2800      	cmp	r0, #0
  405fbc:	f040 8110 	bne.w	4061e0 <_dtoa_r+0xce0>
  405fc0:	462a      	mov	r2, r5
  405fc2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  405fc6:	4650      	mov	r0, sl
  405fc8:	4659      	mov	r1, fp
  405fca:	f7fd fd8b 	bl	403ae4 <__aeabi_dcmplt>
  405fce:	b118      	cbz	r0, 405fd8 <_dtoa_r+0xad8>
  405fd0:	4646      	mov	r6, r8
  405fd2:	e771      	b.n	405eb8 <_dtoa_r+0x9b8>
  405fd4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  405fd8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  405fdc:	f7ff bb8a 	b.w	4056f4 <_dtoa_r+0x1f4>
  405fe0:	9804      	ldr	r0, [sp, #16]
  405fe2:	f7ff babb 	b.w	40555c <_dtoa_r+0x5c>
  405fe6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  405fe8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  405fea:	970c      	str	r7, [sp, #48]	; 0x30
  405fec:	1afb      	subs	r3, r7, r3
  405fee:	441a      	add	r2, r3
  405ff0:	920d      	str	r2, [sp, #52]	; 0x34
  405ff2:	2700      	movs	r7, #0
  405ff4:	e469      	b.n	4058ca <_dtoa_r+0x3ca>
  405ff6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  405ffa:	f04f 0a02 	mov.w	sl, #2
  405ffe:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  406002:	e657      	b.n	405cb4 <_dtoa_r+0x7b4>
  406004:	2100      	movs	r1, #0
  406006:	2301      	movs	r3, #1
  406008:	6461      	str	r1, [r4, #68]	; 0x44
  40600a:	4620      	mov	r0, r4
  40600c:	9325      	str	r3, [sp, #148]	; 0x94
  40600e:	f000 fe8f 	bl	406d30 <_Balloc>
  406012:	9b25      	ldr	r3, [sp, #148]	; 0x94
  406014:	9004      	str	r0, [sp, #16]
  406016:	6420      	str	r0, [r4, #64]	; 0x40
  406018:	930a      	str	r3, [sp, #40]	; 0x28
  40601a:	930f      	str	r3, [sp, #60]	; 0x3c
  40601c:	e629      	b.n	405c72 <_dtoa_r+0x772>
  40601e:	2a00      	cmp	r2, #0
  406020:	46d0      	mov	r8, sl
  406022:	f8cd b018 	str.w	fp, [sp, #24]
  406026:	469a      	mov	sl, r3
  406028:	dd11      	ble.n	40604e <_dtoa_r+0xb4e>
  40602a:	4649      	mov	r1, r9
  40602c:	2201      	movs	r2, #1
  40602e:	4620      	mov	r0, r4
  406030:	f001 f82a 	bl	407088 <__lshift>
  406034:	4641      	mov	r1, r8
  406036:	4681      	mov	r9, r0
  406038:	f001 f878 	bl	40712c <__mcmp>
  40603c:	2800      	cmp	r0, #0
  40603e:	f340 8146 	ble.w	4062ce <_dtoa_r+0xdce>
  406042:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  406046:	f000 8106 	beq.w	406256 <_dtoa_r+0xd56>
  40604a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40604e:	46b3      	mov	fp, r6
  406050:	f887 a000 	strb.w	sl, [r7]
  406054:	1c7d      	adds	r5, r7, #1
  406056:	9e06      	ldr	r6, [sp, #24]
  406058:	e5d2      	b.n	405c00 <_dtoa_r+0x700>
  40605a:	d104      	bne.n	406066 <_dtoa_r+0xb66>
  40605c:	f01a 0f01 	tst.w	sl, #1
  406060:	d001      	beq.n	406066 <_dtoa_r+0xb66>
  406062:	e5bd      	b.n	405be0 <_dtoa_r+0x6e0>
  406064:	4615      	mov	r5, r2
  406066:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40606a:	2b30      	cmp	r3, #48	; 0x30
  40606c:	f105 32ff 	add.w	r2, r5, #4294967295
  406070:	d0f8      	beq.n	406064 <_dtoa_r+0xb64>
  406072:	e5c5      	b.n	405c00 <_dtoa_r+0x700>
  406074:	9904      	ldr	r1, [sp, #16]
  406076:	2230      	movs	r2, #48	; 0x30
  406078:	700a      	strb	r2, [r1, #0]
  40607a:	9a02      	ldr	r2, [sp, #8]
  40607c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  406080:	3201      	adds	r2, #1
  406082:	9202      	str	r2, [sp, #8]
  406084:	f7ff bbfc 	b.w	405880 <_dtoa_r+0x380>
  406088:	f000 80bb 	beq.w	406202 <_dtoa_r+0xd02>
  40608c:	9b02      	ldr	r3, [sp, #8]
  40608e:	425d      	negs	r5, r3
  406090:	4b84      	ldr	r3, [pc, #528]	; (4062a4 <_dtoa_r+0xda4>)
  406092:	f005 020f 	and.w	r2, r5, #15
  406096:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40609a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40609e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4060a2:	f7fd faad 	bl	403600 <__aeabi_dmul>
  4060a6:	112d      	asrs	r5, r5, #4
  4060a8:	4607      	mov	r7, r0
  4060aa:	4688      	mov	r8, r1
  4060ac:	f000 812c 	beq.w	406308 <_dtoa_r+0xe08>
  4060b0:	4e7d      	ldr	r6, [pc, #500]	; (4062a8 <_dtoa_r+0xda8>)
  4060b2:	f04f 0a02 	mov.w	sl, #2
  4060b6:	07eb      	lsls	r3, r5, #31
  4060b8:	d509      	bpl.n	4060ce <_dtoa_r+0xbce>
  4060ba:	4638      	mov	r0, r7
  4060bc:	4641      	mov	r1, r8
  4060be:	e9d6 2300 	ldrd	r2, r3, [r6]
  4060c2:	f7fd fa9d 	bl	403600 <__aeabi_dmul>
  4060c6:	f10a 0a01 	add.w	sl, sl, #1
  4060ca:	4607      	mov	r7, r0
  4060cc:	4688      	mov	r8, r1
  4060ce:	106d      	asrs	r5, r5, #1
  4060d0:	f106 0608 	add.w	r6, r6, #8
  4060d4:	d1ef      	bne.n	4060b6 <_dtoa_r+0xbb6>
  4060d6:	e608      	b.n	405cea <_dtoa_r+0x7ea>
  4060d8:	6871      	ldr	r1, [r6, #4]
  4060da:	4620      	mov	r0, r4
  4060dc:	f000 fe28 	bl	406d30 <_Balloc>
  4060e0:	6933      	ldr	r3, [r6, #16]
  4060e2:	3302      	adds	r3, #2
  4060e4:	009a      	lsls	r2, r3, #2
  4060e6:	4605      	mov	r5, r0
  4060e8:	f106 010c 	add.w	r1, r6, #12
  4060ec:	300c      	adds	r0, #12
  4060ee:	f7fd fdb5 	bl	403c5c <memcpy>
  4060f2:	4629      	mov	r1, r5
  4060f4:	2201      	movs	r2, #1
  4060f6:	4620      	mov	r0, r4
  4060f8:	f000 ffc6 	bl	407088 <__lshift>
  4060fc:	9006      	str	r0, [sp, #24]
  4060fe:	e4b5      	b.n	405a6c <_dtoa_r+0x56c>
  406100:	2b39      	cmp	r3, #57	; 0x39
  406102:	f8cd b018 	str.w	fp, [sp, #24]
  406106:	46d0      	mov	r8, sl
  406108:	f000 80a5 	beq.w	406256 <_dtoa_r+0xd56>
  40610c:	f103 0a01 	add.w	sl, r3, #1
  406110:	46b3      	mov	fp, r6
  406112:	f887 a000 	strb.w	sl, [r7]
  406116:	1c7d      	adds	r5, r7, #1
  406118:	9e06      	ldr	r6, [sp, #24]
  40611a:	e571      	b.n	405c00 <_dtoa_r+0x700>
  40611c:	465a      	mov	r2, fp
  40611e:	46d0      	mov	r8, sl
  406120:	46b3      	mov	fp, r6
  406122:	469a      	mov	sl, r3
  406124:	4616      	mov	r6, r2
  406126:	e54f      	b.n	405bc8 <_dtoa_r+0x6c8>
  406128:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40612a:	495e      	ldr	r1, [pc, #376]	; (4062a4 <_dtoa_r+0xda4>)
  40612c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  406130:	462a      	mov	r2, r5
  406132:	4633      	mov	r3, r6
  406134:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  406138:	f7fd fa62 	bl	403600 <__aeabi_dmul>
  40613c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  406140:	4638      	mov	r0, r7
  406142:	4641      	mov	r1, r8
  406144:	f001 fbc4 	bl	4078d0 <__aeabi_d2iz>
  406148:	4605      	mov	r5, r0
  40614a:	f7fd f9f3 	bl	403534 <__aeabi_i2d>
  40614e:	460b      	mov	r3, r1
  406150:	4602      	mov	r2, r0
  406152:	4641      	mov	r1, r8
  406154:	4638      	mov	r0, r7
  406156:	f7fd f89f 	bl	403298 <__aeabi_dsub>
  40615a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40615c:	460f      	mov	r7, r1
  40615e:	9904      	ldr	r1, [sp, #16]
  406160:	3530      	adds	r5, #48	; 0x30
  406162:	2b01      	cmp	r3, #1
  406164:	700d      	strb	r5, [r1, #0]
  406166:	4606      	mov	r6, r0
  406168:	f101 0501 	add.w	r5, r1, #1
  40616c:	d026      	beq.n	4061bc <_dtoa_r+0xcbc>
  40616e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  406170:	9a04      	ldr	r2, [sp, #16]
  406172:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4062b0 <_dtoa_r+0xdb0>
  406176:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40617a:	4413      	add	r3, r2
  40617c:	f04f 0a00 	mov.w	sl, #0
  406180:	4699      	mov	r9, r3
  406182:	4652      	mov	r2, sl
  406184:	465b      	mov	r3, fp
  406186:	4630      	mov	r0, r6
  406188:	4639      	mov	r1, r7
  40618a:	f7fd fa39 	bl	403600 <__aeabi_dmul>
  40618e:	460f      	mov	r7, r1
  406190:	4606      	mov	r6, r0
  406192:	f001 fb9d 	bl	4078d0 <__aeabi_d2iz>
  406196:	4680      	mov	r8, r0
  406198:	f7fd f9cc 	bl	403534 <__aeabi_i2d>
  40619c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4061a0:	4602      	mov	r2, r0
  4061a2:	460b      	mov	r3, r1
  4061a4:	4630      	mov	r0, r6
  4061a6:	4639      	mov	r1, r7
  4061a8:	f7fd f876 	bl	403298 <__aeabi_dsub>
  4061ac:	f805 8b01 	strb.w	r8, [r5], #1
  4061b0:	454d      	cmp	r5, r9
  4061b2:	4606      	mov	r6, r0
  4061b4:	460f      	mov	r7, r1
  4061b6:	d1e4      	bne.n	406182 <_dtoa_r+0xc82>
  4061b8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4061bc:	4b3b      	ldr	r3, [pc, #236]	; (4062ac <_dtoa_r+0xdac>)
  4061be:	2200      	movs	r2, #0
  4061c0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4061c4:	f7fd f86a 	bl	40329c <__adddf3>
  4061c8:	4632      	mov	r2, r6
  4061ca:	463b      	mov	r3, r7
  4061cc:	f7fd fc8a 	bl	403ae4 <__aeabi_dcmplt>
  4061d0:	2800      	cmp	r0, #0
  4061d2:	d046      	beq.n	406262 <_dtoa_r+0xd62>
  4061d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4061d6:	9302      	str	r3, [sp, #8]
  4061d8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4061dc:	f7ff bb43 	b.w	405866 <_dtoa_r+0x366>
  4061e0:	f04f 0800 	mov.w	r8, #0
  4061e4:	4646      	mov	r6, r8
  4061e6:	e6a9      	b.n	405f3c <_dtoa_r+0xa3c>
  4061e8:	9b08      	ldr	r3, [sp, #32]
  4061ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4061ec:	1a9d      	subs	r5, r3, r2
  4061ee:	2300      	movs	r3, #0
  4061f0:	f7ff bb71 	b.w	4058d6 <_dtoa_r+0x3d6>
  4061f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4061f6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4061f8:	9d08      	ldr	r5, [sp, #32]
  4061fa:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4061fe:	f7ff bb6a 	b.w	4058d6 <_dtoa_r+0x3d6>
  406202:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  406206:	f04f 0a02 	mov.w	sl, #2
  40620a:	e56e      	b.n	405cea <_dtoa_r+0x7ea>
  40620c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40620e:	2b00      	cmp	r3, #0
  406210:	f43f aeb8 	beq.w	405f84 <_dtoa_r+0xa84>
  406214:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406216:	2b00      	cmp	r3, #0
  406218:	f77f aede 	ble.w	405fd8 <_dtoa_r+0xad8>
  40621c:	2200      	movs	r2, #0
  40621e:	4b24      	ldr	r3, [pc, #144]	; (4062b0 <_dtoa_r+0xdb0>)
  406220:	4638      	mov	r0, r7
  406222:	4641      	mov	r1, r8
  406224:	f7fd f9ec 	bl	403600 <__aeabi_dmul>
  406228:	4607      	mov	r7, r0
  40622a:	4688      	mov	r8, r1
  40622c:	f10a 0001 	add.w	r0, sl, #1
  406230:	f7fd f980 	bl	403534 <__aeabi_i2d>
  406234:	463a      	mov	r2, r7
  406236:	4643      	mov	r3, r8
  406238:	f7fd f9e2 	bl	403600 <__aeabi_dmul>
  40623c:	2200      	movs	r2, #0
  40623e:	4b17      	ldr	r3, [pc, #92]	; (40629c <_dtoa_r+0xd9c>)
  406240:	f7fd f82c 	bl	40329c <__adddf3>
  406244:	9a02      	ldr	r2, [sp, #8]
  406246:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406248:	9312      	str	r3, [sp, #72]	; 0x48
  40624a:	3a01      	subs	r2, #1
  40624c:	4605      	mov	r5, r0
  40624e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  406252:	9215      	str	r2, [sp, #84]	; 0x54
  406254:	e56a      	b.n	405d2c <_dtoa_r+0x82c>
  406256:	2239      	movs	r2, #57	; 0x39
  406258:	46b3      	mov	fp, r6
  40625a:	703a      	strb	r2, [r7, #0]
  40625c:	9e06      	ldr	r6, [sp, #24]
  40625e:	1c7d      	adds	r5, r7, #1
  406260:	e4c0      	b.n	405be4 <_dtoa_r+0x6e4>
  406262:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  406266:	2000      	movs	r0, #0
  406268:	4910      	ldr	r1, [pc, #64]	; (4062ac <_dtoa_r+0xdac>)
  40626a:	f7fd f815 	bl	403298 <__aeabi_dsub>
  40626e:	4632      	mov	r2, r6
  406270:	463b      	mov	r3, r7
  406272:	f7fd fc55 	bl	403b20 <__aeabi_dcmpgt>
  406276:	b908      	cbnz	r0, 40627c <_dtoa_r+0xd7c>
  406278:	e6ae      	b.n	405fd8 <_dtoa_r+0xad8>
  40627a:	4615      	mov	r5, r2
  40627c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  406280:	2b30      	cmp	r3, #48	; 0x30
  406282:	f105 32ff 	add.w	r2, r5, #4294967295
  406286:	d0f8      	beq.n	40627a <_dtoa_r+0xd7a>
  406288:	e5d7      	b.n	405e3a <_dtoa_r+0x93a>
  40628a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40628e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  406290:	9302      	str	r3, [sp, #8]
  406292:	f7ff bae8 	b.w	405866 <_dtoa_r+0x366>
  406296:	970c      	str	r7, [sp, #48]	; 0x30
  406298:	f7ff bba5 	b.w	4059e6 <_dtoa_r+0x4e6>
  40629c:	401c0000 	.word	0x401c0000
  4062a0:	40140000 	.word	0x40140000
  4062a4:	00407cf0 	.word	0x00407cf0
  4062a8:	00407cc8 	.word	0x00407cc8
  4062ac:	3fe00000 	.word	0x3fe00000
  4062b0:	40240000 	.word	0x40240000
  4062b4:	2b39      	cmp	r3, #57	; 0x39
  4062b6:	f8cd b018 	str.w	fp, [sp, #24]
  4062ba:	46d0      	mov	r8, sl
  4062bc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4062c0:	469a      	mov	sl, r3
  4062c2:	d0c8      	beq.n	406256 <_dtoa_r+0xd56>
  4062c4:	f1bb 0f00 	cmp.w	fp, #0
  4062c8:	f73f aebf 	bgt.w	40604a <_dtoa_r+0xb4a>
  4062cc:	e6bf      	b.n	40604e <_dtoa_r+0xb4e>
  4062ce:	f47f aebe 	bne.w	40604e <_dtoa_r+0xb4e>
  4062d2:	f01a 0f01 	tst.w	sl, #1
  4062d6:	f43f aeba 	beq.w	40604e <_dtoa_r+0xb4e>
  4062da:	e6b2      	b.n	406042 <_dtoa_r+0xb42>
  4062dc:	f04f 0800 	mov.w	r8, #0
  4062e0:	4646      	mov	r6, r8
  4062e2:	e5e9      	b.n	405eb8 <_dtoa_r+0x9b8>
  4062e4:	4631      	mov	r1, r6
  4062e6:	2300      	movs	r3, #0
  4062e8:	220a      	movs	r2, #10
  4062ea:	4620      	mov	r0, r4
  4062ec:	f000 fd50 	bl	406d90 <__multadd>
  4062f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4062f2:	2b00      	cmp	r3, #0
  4062f4:	4606      	mov	r6, r0
  4062f6:	dd0a      	ble.n	40630e <_dtoa_r+0xe0e>
  4062f8:	930a      	str	r3, [sp, #40]	; 0x28
  4062fa:	f7ff bbaa 	b.w	405a52 <_dtoa_r+0x552>
  4062fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406300:	2b02      	cmp	r3, #2
  406302:	dc23      	bgt.n	40634c <_dtoa_r+0xe4c>
  406304:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406306:	e43b      	b.n	405b80 <_dtoa_r+0x680>
  406308:	f04f 0a02 	mov.w	sl, #2
  40630c:	e4ed      	b.n	405cea <_dtoa_r+0x7ea>
  40630e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  406310:	2b02      	cmp	r3, #2
  406312:	dc1b      	bgt.n	40634c <_dtoa_r+0xe4c>
  406314:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  406316:	e7ef      	b.n	4062f8 <_dtoa_r+0xdf8>
  406318:	2500      	movs	r5, #0
  40631a:	6465      	str	r5, [r4, #68]	; 0x44
  40631c:	4629      	mov	r1, r5
  40631e:	4620      	mov	r0, r4
  406320:	f000 fd06 	bl	406d30 <_Balloc>
  406324:	f04f 33ff 	mov.w	r3, #4294967295
  406328:	930a      	str	r3, [sp, #40]	; 0x28
  40632a:	930f      	str	r3, [sp, #60]	; 0x3c
  40632c:	2301      	movs	r3, #1
  40632e:	9004      	str	r0, [sp, #16]
  406330:	9525      	str	r5, [sp, #148]	; 0x94
  406332:	6420      	str	r0, [r4, #64]	; 0x40
  406334:	930b      	str	r3, [sp, #44]	; 0x2c
  406336:	f7ff b9dd 	b.w	4056f4 <_dtoa_r+0x1f4>
  40633a:	2501      	movs	r5, #1
  40633c:	f7ff b9a5 	b.w	40568a <_dtoa_r+0x18a>
  406340:	f43f ab69 	beq.w	405a16 <_dtoa_r+0x516>
  406344:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  406348:	f7ff bbf9 	b.w	405b3e <_dtoa_r+0x63e>
  40634c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40634e:	930a      	str	r3, [sp, #40]	; 0x28
  406350:	e5e5      	b.n	405f1e <_dtoa_r+0xa1e>
  406352:	bf00      	nop

00406354 <__libc_fini_array>:
  406354:	b538      	push	{r3, r4, r5, lr}
  406356:	4c0a      	ldr	r4, [pc, #40]	; (406380 <__libc_fini_array+0x2c>)
  406358:	4d0a      	ldr	r5, [pc, #40]	; (406384 <__libc_fini_array+0x30>)
  40635a:	1b64      	subs	r4, r4, r5
  40635c:	10a4      	asrs	r4, r4, #2
  40635e:	d00a      	beq.n	406376 <__libc_fini_array+0x22>
  406360:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  406364:	3b01      	subs	r3, #1
  406366:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40636a:	3c01      	subs	r4, #1
  40636c:	f855 3904 	ldr.w	r3, [r5], #-4
  406370:	4798      	blx	r3
  406372:	2c00      	cmp	r4, #0
  406374:	d1f9      	bne.n	40636a <__libc_fini_array+0x16>
  406376:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40637a:	f001 bdaf 	b.w	407edc <_fini>
  40637e:	bf00      	nop
  406380:	00407eec 	.word	0x00407eec
  406384:	00407ee8 	.word	0x00407ee8

00406388 <_malloc_trim_r>:
  406388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40638a:	4f24      	ldr	r7, [pc, #144]	; (40641c <_malloc_trim_r+0x94>)
  40638c:	460c      	mov	r4, r1
  40638e:	4606      	mov	r6, r0
  406390:	f000 fcc2 	bl	406d18 <__malloc_lock>
  406394:	68bb      	ldr	r3, [r7, #8]
  406396:	685d      	ldr	r5, [r3, #4]
  406398:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  40639c:	310f      	adds	r1, #15
  40639e:	f025 0503 	bic.w	r5, r5, #3
  4063a2:	4429      	add	r1, r5
  4063a4:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4063a8:	f021 010f 	bic.w	r1, r1, #15
  4063ac:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4063b0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4063b4:	db07      	blt.n	4063c6 <_malloc_trim_r+0x3e>
  4063b6:	2100      	movs	r1, #0
  4063b8:	4630      	mov	r0, r6
  4063ba:	f001 f959 	bl	407670 <_sbrk_r>
  4063be:	68bb      	ldr	r3, [r7, #8]
  4063c0:	442b      	add	r3, r5
  4063c2:	4298      	cmp	r0, r3
  4063c4:	d004      	beq.n	4063d0 <_malloc_trim_r+0x48>
  4063c6:	4630      	mov	r0, r6
  4063c8:	f000 fcac 	bl	406d24 <__malloc_unlock>
  4063cc:	2000      	movs	r0, #0
  4063ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4063d0:	4261      	negs	r1, r4
  4063d2:	4630      	mov	r0, r6
  4063d4:	f001 f94c 	bl	407670 <_sbrk_r>
  4063d8:	3001      	adds	r0, #1
  4063da:	d00d      	beq.n	4063f8 <_malloc_trim_r+0x70>
  4063dc:	4b10      	ldr	r3, [pc, #64]	; (406420 <_malloc_trim_r+0x98>)
  4063de:	68ba      	ldr	r2, [r7, #8]
  4063e0:	6819      	ldr	r1, [r3, #0]
  4063e2:	1b2d      	subs	r5, r5, r4
  4063e4:	f045 0501 	orr.w	r5, r5, #1
  4063e8:	4630      	mov	r0, r6
  4063ea:	1b09      	subs	r1, r1, r4
  4063ec:	6055      	str	r5, [r2, #4]
  4063ee:	6019      	str	r1, [r3, #0]
  4063f0:	f000 fc98 	bl	406d24 <__malloc_unlock>
  4063f4:	2001      	movs	r0, #1
  4063f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4063f8:	2100      	movs	r1, #0
  4063fa:	4630      	mov	r0, r6
  4063fc:	f001 f938 	bl	407670 <_sbrk_r>
  406400:	68ba      	ldr	r2, [r7, #8]
  406402:	1a83      	subs	r3, r0, r2
  406404:	2b0f      	cmp	r3, #15
  406406:	ddde      	ble.n	4063c6 <_malloc_trim_r+0x3e>
  406408:	4c06      	ldr	r4, [pc, #24]	; (406424 <_malloc_trim_r+0x9c>)
  40640a:	4905      	ldr	r1, [pc, #20]	; (406420 <_malloc_trim_r+0x98>)
  40640c:	6824      	ldr	r4, [r4, #0]
  40640e:	f043 0301 	orr.w	r3, r3, #1
  406412:	1b00      	subs	r0, r0, r4
  406414:	6053      	str	r3, [r2, #4]
  406416:	6008      	str	r0, [r1, #0]
  406418:	e7d5      	b.n	4063c6 <_malloc_trim_r+0x3e>
  40641a:	bf00      	nop
  40641c:	20000648 	.word	0x20000648
  406420:	20000c8c 	.word	0x20000c8c
  406424:	20000a50 	.word	0x20000a50

00406428 <_free_r>:
  406428:	2900      	cmp	r1, #0
  40642a:	d044      	beq.n	4064b6 <_free_r+0x8e>
  40642c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406430:	460d      	mov	r5, r1
  406432:	4680      	mov	r8, r0
  406434:	f000 fc70 	bl	406d18 <__malloc_lock>
  406438:	f855 7c04 	ldr.w	r7, [r5, #-4]
  40643c:	4969      	ldr	r1, [pc, #420]	; (4065e4 <_free_r+0x1bc>)
  40643e:	f027 0301 	bic.w	r3, r7, #1
  406442:	f1a5 0408 	sub.w	r4, r5, #8
  406446:	18e2      	adds	r2, r4, r3
  406448:	688e      	ldr	r6, [r1, #8]
  40644a:	6850      	ldr	r0, [r2, #4]
  40644c:	42b2      	cmp	r2, r6
  40644e:	f020 0003 	bic.w	r0, r0, #3
  406452:	d05e      	beq.n	406512 <_free_r+0xea>
  406454:	07fe      	lsls	r6, r7, #31
  406456:	6050      	str	r0, [r2, #4]
  406458:	d40b      	bmi.n	406472 <_free_r+0x4a>
  40645a:	f855 7c08 	ldr.w	r7, [r5, #-8]
  40645e:	1be4      	subs	r4, r4, r7
  406460:	f101 0e08 	add.w	lr, r1, #8
  406464:	68a5      	ldr	r5, [r4, #8]
  406466:	4575      	cmp	r5, lr
  406468:	443b      	add	r3, r7
  40646a:	d06d      	beq.n	406548 <_free_r+0x120>
  40646c:	68e7      	ldr	r7, [r4, #12]
  40646e:	60ef      	str	r7, [r5, #12]
  406470:	60bd      	str	r5, [r7, #8]
  406472:	1815      	adds	r5, r2, r0
  406474:	686d      	ldr	r5, [r5, #4]
  406476:	07ed      	lsls	r5, r5, #31
  406478:	d53e      	bpl.n	4064f8 <_free_r+0xd0>
  40647a:	f043 0201 	orr.w	r2, r3, #1
  40647e:	6062      	str	r2, [r4, #4]
  406480:	50e3      	str	r3, [r4, r3]
  406482:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  406486:	d217      	bcs.n	4064b8 <_free_r+0x90>
  406488:	08db      	lsrs	r3, r3, #3
  40648a:	1c58      	adds	r0, r3, #1
  40648c:	109a      	asrs	r2, r3, #2
  40648e:	684d      	ldr	r5, [r1, #4]
  406490:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  406494:	60a7      	str	r7, [r4, #8]
  406496:	2301      	movs	r3, #1
  406498:	4093      	lsls	r3, r2
  40649a:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  40649e:	432b      	orrs	r3, r5
  4064a0:	3a08      	subs	r2, #8
  4064a2:	60e2      	str	r2, [r4, #12]
  4064a4:	604b      	str	r3, [r1, #4]
  4064a6:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4064aa:	60fc      	str	r4, [r7, #12]
  4064ac:	4640      	mov	r0, r8
  4064ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4064b2:	f000 bc37 	b.w	406d24 <__malloc_unlock>
  4064b6:	4770      	bx	lr
  4064b8:	0a5a      	lsrs	r2, r3, #9
  4064ba:	2a04      	cmp	r2, #4
  4064bc:	d852      	bhi.n	406564 <_free_r+0x13c>
  4064be:	099a      	lsrs	r2, r3, #6
  4064c0:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4064c4:	00ff      	lsls	r7, r7, #3
  4064c6:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4064ca:	19c8      	adds	r0, r1, r7
  4064cc:	59ca      	ldr	r2, [r1, r7]
  4064ce:	3808      	subs	r0, #8
  4064d0:	4290      	cmp	r0, r2
  4064d2:	d04f      	beq.n	406574 <_free_r+0x14c>
  4064d4:	6851      	ldr	r1, [r2, #4]
  4064d6:	f021 0103 	bic.w	r1, r1, #3
  4064da:	428b      	cmp	r3, r1
  4064dc:	d232      	bcs.n	406544 <_free_r+0x11c>
  4064de:	6892      	ldr	r2, [r2, #8]
  4064e0:	4290      	cmp	r0, r2
  4064e2:	d1f7      	bne.n	4064d4 <_free_r+0xac>
  4064e4:	68c3      	ldr	r3, [r0, #12]
  4064e6:	60a0      	str	r0, [r4, #8]
  4064e8:	60e3      	str	r3, [r4, #12]
  4064ea:	609c      	str	r4, [r3, #8]
  4064ec:	60c4      	str	r4, [r0, #12]
  4064ee:	4640      	mov	r0, r8
  4064f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4064f4:	f000 bc16 	b.w	406d24 <__malloc_unlock>
  4064f8:	6895      	ldr	r5, [r2, #8]
  4064fa:	4f3b      	ldr	r7, [pc, #236]	; (4065e8 <_free_r+0x1c0>)
  4064fc:	42bd      	cmp	r5, r7
  4064fe:	4403      	add	r3, r0
  406500:	d040      	beq.n	406584 <_free_r+0x15c>
  406502:	68d0      	ldr	r0, [r2, #12]
  406504:	60e8      	str	r0, [r5, #12]
  406506:	f043 0201 	orr.w	r2, r3, #1
  40650a:	6085      	str	r5, [r0, #8]
  40650c:	6062      	str	r2, [r4, #4]
  40650e:	50e3      	str	r3, [r4, r3]
  406510:	e7b7      	b.n	406482 <_free_r+0x5a>
  406512:	07ff      	lsls	r7, r7, #31
  406514:	4403      	add	r3, r0
  406516:	d407      	bmi.n	406528 <_free_r+0x100>
  406518:	f855 2c08 	ldr.w	r2, [r5, #-8]
  40651c:	1aa4      	subs	r4, r4, r2
  40651e:	4413      	add	r3, r2
  406520:	68a0      	ldr	r0, [r4, #8]
  406522:	68e2      	ldr	r2, [r4, #12]
  406524:	60c2      	str	r2, [r0, #12]
  406526:	6090      	str	r0, [r2, #8]
  406528:	4a30      	ldr	r2, [pc, #192]	; (4065ec <_free_r+0x1c4>)
  40652a:	6812      	ldr	r2, [r2, #0]
  40652c:	f043 0001 	orr.w	r0, r3, #1
  406530:	4293      	cmp	r3, r2
  406532:	6060      	str	r0, [r4, #4]
  406534:	608c      	str	r4, [r1, #8]
  406536:	d3b9      	bcc.n	4064ac <_free_r+0x84>
  406538:	4b2d      	ldr	r3, [pc, #180]	; (4065f0 <_free_r+0x1c8>)
  40653a:	4640      	mov	r0, r8
  40653c:	6819      	ldr	r1, [r3, #0]
  40653e:	f7ff ff23 	bl	406388 <_malloc_trim_r>
  406542:	e7b3      	b.n	4064ac <_free_r+0x84>
  406544:	4610      	mov	r0, r2
  406546:	e7cd      	b.n	4064e4 <_free_r+0xbc>
  406548:	1811      	adds	r1, r2, r0
  40654a:	6849      	ldr	r1, [r1, #4]
  40654c:	07c9      	lsls	r1, r1, #31
  40654e:	d444      	bmi.n	4065da <_free_r+0x1b2>
  406550:	6891      	ldr	r1, [r2, #8]
  406552:	68d2      	ldr	r2, [r2, #12]
  406554:	60ca      	str	r2, [r1, #12]
  406556:	4403      	add	r3, r0
  406558:	f043 0001 	orr.w	r0, r3, #1
  40655c:	6091      	str	r1, [r2, #8]
  40655e:	6060      	str	r0, [r4, #4]
  406560:	50e3      	str	r3, [r4, r3]
  406562:	e7a3      	b.n	4064ac <_free_r+0x84>
  406564:	2a14      	cmp	r2, #20
  406566:	d816      	bhi.n	406596 <_free_r+0x16e>
  406568:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  40656c:	00ff      	lsls	r7, r7, #3
  40656e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  406572:	e7aa      	b.n	4064ca <_free_r+0xa2>
  406574:	10aa      	asrs	r2, r5, #2
  406576:	2301      	movs	r3, #1
  406578:	684d      	ldr	r5, [r1, #4]
  40657a:	4093      	lsls	r3, r2
  40657c:	432b      	orrs	r3, r5
  40657e:	604b      	str	r3, [r1, #4]
  406580:	4603      	mov	r3, r0
  406582:	e7b0      	b.n	4064e6 <_free_r+0xbe>
  406584:	f043 0201 	orr.w	r2, r3, #1
  406588:	614c      	str	r4, [r1, #20]
  40658a:	610c      	str	r4, [r1, #16]
  40658c:	60e5      	str	r5, [r4, #12]
  40658e:	60a5      	str	r5, [r4, #8]
  406590:	6062      	str	r2, [r4, #4]
  406592:	50e3      	str	r3, [r4, r3]
  406594:	e78a      	b.n	4064ac <_free_r+0x84>
  406596:	2a54      	cmp	r2, #84	; 0x54
  406598:	d806      	bhi.n	4065a8 <_free_r+0x180>
  40659a:	0b1a      	lsrs	r2, r3, #12
  40659c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4065a0:	00ff      	lsls	r7, r7, #3
  4065a2:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4065a6:	e790      	b.n	4064ca <_free_r+0xa2>
  4065a8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4065ac:	d806      	bhi.n	4065bc <_free_r+0x194>
  4065ae:	0bda      	lsrs	r2, r3, #15
  4065b0:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4065b4:	00ff      	lsls	r7, r7, #3
  4065b6:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4065ba:	e786      	b.n	4064ca <_free_r+0xa2>
  4065bc:	f240 5054 	movw	r0, #1364	; 0x554
  4065c0:	4282      	cmp	r2, r0
  4065c2:	d806      	bhi.n	4065d2 <_free_r+0x1aa>
  4065c4:	0c9a      	lsrs	r2, r3, #18
  4065c6:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4065ca:	00ff      	lsls	r7, r7, #3
  4065cc:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  4065d0:	e77b      	b.n	4064ca <_free_r+0xa2>
  4065d2:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  4065d6:	257e      	movs	r5, #126	; 0x7e
  4065d8:	e777      	b.n	4064ca <_free_r+0xa2>
  4065da:	f043 0101 	orr.w	r1, r3, #1
  4065de:	6061      	str	r1, [r4, #4]
  4065e0:	6013      	str	r3, [r2, #0]
  4065e2:	e763      	b.n	4064ac <_free_r+0x84>
  4065e4:	20000648 	.word	0x20000648
  4065e8:	20000650 	.word	0x20000650
  4065ec:	20000a54 	.word	0x20000a54
  4065f0:	20000cbc 	.word	0x20000cbc

004065f4 <_localeconv_r>:
  4065f4:	4a04      	ldr	r2, [pc, #16]	; (406608 <_localeconv_r+0x14>)
  4065f6:	4b05      	ldr	r3, [pc, #20]	; (40660c <_localeconv_r+0x18>)
  4065f8:	6812      	ldr	r2, [r2, #0]
  4065fa:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4065fc:	2800      	cmp	r0, #0
  4065fe:	bf08      	it	eq
  406600:	4618      	moveq	r0, r3
  406602:	30f0      	adds	r0, #240	; 0xf0
  406604:	4770      	bx	lr
  406606:	bf00      	nop
  406608:	200000ac 	.word	0x200000ac
  40660c:	200004dc 	.word	0x200004dc

00406610 <__retarget_lock_acquire_recursive>:
  406610:	4770      	bx	lr
  406612:	bf00      	nop

00406614 <__retarget_lock_release_recursive>:
  406614:	4770      	bx	lr
  406616:	bf00      	nop

00406618 <_malloc_r>:
  406618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40661c:	f101 060b 	add.w	r6, r1, #11
  406620:	2e16      	cmp	r6, #22
  406622:	b083      	sub	sp, #12
  406624:	4605      	mov	r5, r0
  406626:	f240 809e 	bls.w	406766 <_malloc_r+0x14e>
  40662a:	f036 0607 	bics.w	r6, r6, #7
  40662e:	f100 80bd 	bmi.w	4067ac <_malloc_r+0x194>
  406632:	42b1      	cmp	r1, r6
  406634:	f200 80ba 	bhi.w	4067ac <_malloc_r+0x194>
  406638:	f000 fb6e 	bl	406d18 <__malloc_lock>
  40663c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  406640:	f0c0 8293 	bcc.w	406b6a <_malloc_r+0x552>
  406644:	0a73      	lsrs	r3, r6, #9
  406646:	f000 80b8 	beq.w	4067ba <_malloc_r+0x1a2>
  40664a:	2b04      	cmp	r3, #4
  40664c:	f200 8179 	bhi.w	406942 <_malloc_r+0x32a>
  406650:	09b3      	lsrs	r3, r6, #6
  406652:	f103 0039 	add.w	r0, r3, #57	; 0x39
  406656:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40665a:	00c3      	lsls	r3, r0, #3
  40665c:	4fbf      	ldr	r7, [pc, #764]	; (40695c <_malloc_r+0x344>)
  40665e:	443b      	add	r3, r7
  406660:	f1a3 0108 	sub.w	r1, r3, #8
  406664:	685c      	ldr	r4, [r3, #4]
  406666:	42a1      	cmp	r1, r4
  406668:	d106      	bne.n	406678 <_malloc_r+0x60>
  40666a:	e00c      	b.n	406686 <_malloc_r+0x6e>
  40666c:	2a00      	cmp	r2, #0
  40666e:	f280 80aa 	bge.w	4067c6 <_malloc_r+0x1ae>
  406672:	68e4      	ldr	r4, [r4, #12]
  406674:	42a1      	cmp	r1, r4
  406676:	d006      	beq.n	406686 <_malloc_r+0x6e>
  406678:	6863      	ldr	r3, [r4, #4]
  40667a:	f023 0303 	bic.w	r3, r3, #3
  40667e:	1b9a      	subs	r2, r3, r6
  406680:	2a0f      	cmp	r2, #15
  406682:	ddf3      	ble.n	40666c <_malloc_r+0x54>
  406684:	4670      	mov	r0, lr
  406686:	693c      	ldr	r4, [r7, #16]
  406688:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 406970 <_malloc_r+0x358>
  40668c:	4574      	cmp	r4, lr
  40668e:	f000 81ab 	beq.w	4069e8 <_malloc_r+0x3d0>
  406692:	6863      	ldr	r3, [r4, #4]
  406694:	f023 0303 	bic.w	r3, r3, #3
  406698:	1b9a      	subs	r2, r3, r6
  40669a:	2a0f      	cmp	r2, #15
  40669c:	f300 8190 	bgt.w	4069c0 <_malloc_r+0x3a8>
  4066a0:	2a00      	cmp	r2, #0
  4066a2:	f8c7 e014 	str.w	lr, [r7, #20]
  4066a6:	f8c7 e010 	str.w	lr, [r7, #16]
  4066aa:	f280 809d 	bge.w	4067e8 <_malloc_r+0x1d0>
  4066ae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4066b2:	f080 8161 	bcs.w	406978 <_malloc_r+0x360>
  4066b6:	08db      	lsrs	r3, r3, #3
  4066b8:	f103 0c01 	add.w	ip, r3, #1
  4066bc:	1099      	asrs	r1, r3, #2
  4066be:	687a      	ldr	r2, [r7, #4]
  4066c0:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4066c4:	f8c4 8008 	str.w	r8, [r4, #8]
  4066c8:	2301      	movs	r3, #1
  4066ca:	408b      	lsls	r3, r1
  4066cc:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4066d0:	4313      	orrs	r3, r2
  4066d2:	3908      	subs	r1, #8
  4066d4:	60e1      	str	r1, [r4, #12]
  4066d6:	607b      	str	r3, [r7, #4]
  4066d8:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4066dc:	f8c8 400c 	str.w	r4, [r8, #12]
  4066e0:	1082      	asrs	r2, r0, #2
  4066e2:	2401      	movs	r4, #1
  4066e4:	4094      	lsls	r4, r2
  4066e6:	429c      	cmp	r4, r3
  4066e8:	f200 808b 	bhi.w	406802 <_malloc_r+0x1ea>
  4066ec:	421c      	tst	r4, r3
  4066ee:	d106      	bne.n	4066fe <_malloc_r+0xe6>
  4066f0:	f020 0003 	bic.w	r0, r0, #3
  4066f4:	0064      	lsls	r4, r4, #1
  4066f6:	421c      	tst	r4, r3
  4066f8:	f100 0004 	add.w	r0, r0, #4
  4066fc:	d0fa      	beq.n	4066f4 <_malloc_r+0xdc>
  4066fe:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  406702:	46cc      	mov	ip, r9
  406704:	4680      	mov	r8, r0
  406706:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40670a:	459c      	cmp	ip, r3
  40670c:	d107      	bne.n	40671e <_malloc_r+0x106>
  40670e:	e16d      	b.n	4069ec <_malloc_r+0x3d4>
  406710:	2a00      	cmp	r2, #0
  406712:	f280 817b 	bge.w	406a0c <_malloc_r+0x3f4>
  406716:	68db      	ldr	r3, [r3, #12]
  406718:	459c      	cmp	ip, r3
  40671a:	f000 8167 	beq.w	4069ec <_malloc_r+0x3d4>
  40671e:	6859      	ldr	r1, [r3, #4]
  406720:	f021 0103 	bic.w	r1, r1, #3
  406724:	1b8a      	subs	r2, r1, r6
  406726:	2a0f      	cmp	r2, #15
  406728:	ddf2      	ble.n	406710 <_malloc_r+0xf8>
  40672a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40672e:	f8d3 8008 	ldr.w	r8, [r3, #8]
  406732:	9300      	str	r3, [sp, #0]
  406734:	199c      	adds	r4, r3, r6
  406736:	4628      	mov	r0, r5
  406738:	f046 0601 	orr.w	r6, r6, #1
  40673c:	f042 0501 	orr.w	r5, r2, #1
  406740:	605e      	str	r6, [r3, #4]
  406742:	f8c8 c00c 	str.w	ip, [r8, #12]
  406746:	f8cc 8008 	str.w	r8, [ip, #8]
  40674a:	617c      	str	r4, [r7, #20]
  40674c:	613c      	str	r4, [r7, #16]
  40674e:	f8c4 e00c 	str.w	lr, [r4, #12]
  406752:	f8c4 e008 	str.w	lr, [r4, #8]
  406756:	6065      	str	r5, [r4, #4]
  406758:	505a      	str	r2, [r3, r1]
  40675a:	f000 fae3 	bl	406d24 <__malloc_unlock>
  40675e:	9b00      	ldr	r3, [sp, #0]
  406760:	f103 0408 	add.w	r4, r3, #8
  406764:	e01e      	b.n	4067a4 <_malloc_r+0x18c>
  406766:	2910      	cmp	r1, #16
  406768:	d820      	bhi.n	4067ac <_malloc_r+0x194>
  40676a:	f000 fad5 	bl	406d18 <__malloc_lock>
  40676e:	2610      	movs	r6, #16
  406770:	2318      	movs	r3, #24
  406772:	2002      	movs	r0, #2
  406774:	4f79      	ldr	r7, [pc, #484]	; (40695c <_malloc_r+0x344>)
  406776:	443b      	add	r3, r7
  406778:	f1a3 0208 	sub.w	r2, r3, #8
  40677c:	685c      	ldr	r4, [r3, #4]
  40677e:	4294      	cmp	r4, r2
  406780:	f000 813d 	beq.w	4069fe <_malloc_r+0x3e6>
  406784:	6863      	ldr	r3, [r4, #4]
  406786:	68e1      	ldr	r1, [r4, #12]
  406788:	68a6      	ldr	r6, [r4, #8]
  40678a:	f023 0303 	bic.w	r3, r3, #3
  40678e:	4423      	add	r3, r4
  406790:	4628      	mov	r0, r5
  406792:	685a      	ldr	r2, [r3, #4]
  406794:	60f1      	str	r1, [r6, #12]
  406796:	f042 0201 	orr.w	r2, r2, #1
  40679a:	608e      	str	r6, [r1, #8]
  40679c:	605a      	str	r2, [r3, #4]
  40679e:	f000 fac1 	bl	406d24 <__malloc_unlock>
  4067a2:	3408      	adds	r4, #8
  4067a4:	4620      	mov	r0, r4
  4067a6:	b003      	add	sp, #12
  4067a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4067ac:	2400      	movs	r4, #0
  4067ae:	230c      	movs	r3, #12
  4067b0:	4620      	mov	r0, r4
  4067b2:	602b      	str	r3, [r5, #0]
  4067b4:	b003      	add	sp, #12
  4067b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4067ba:	2040      	movs	r0, #64	; 0x40
  4067bc:	f44f 7300 	mov.w	r3, #512	; 0x200
  4067c0:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4067c4:	e74a      	b.n	40665c <_malloc_r+0x44>
  4067c6:	4423      	add	r3, r4
  4067c8:	68e1      	ldr	r1, [r4, #12]
  4067ca:	685a      	ldr	r2, [r3, #4]
  4067cc:	68a6      	ldr	r6, [r4, #8]
  4067ce:	f042 0201 	orr.w	r2, r2, #1
  4067d2:	60f1      	str	r1, [r6, #12]
  4067d4:	4628      	mov	r0, r5
  4067d6:	608e      	str	r6, [r1, #8]
  4067d8:	605a      	str	r2, [r3, #4]
  4067da:	f000 faa3 	bl	406d24 <__malloc_unlock>
  4067de:	3408      	adds	r4, #8
  4067e0:	4620      	mov	r0, r4
  4067e2:	b003      	add	sp, #12
  4067e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4067e8:	4423      	add	r3, r4
  4067ea:	4628      	mov	r0, r5
  4067ec:	685a      	ldr	r2, [r3, #4]
  4067ee:	f042 0201 	orr.w	r2, r2, #1
  4067f2:	605a      	str	r2, [r3, #4]
  4067f4:	f000 fa96 	bl	406d24 <__malloc_unlock>
  4067f8:	3408      	adds	r4, #8
  4067fa:	4620      	mov	r0, r4
  4067fc:	b003      	add	sp, #12
  4067fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406802:	68bc      	ldr	r4, [r7, #8]
  406804:	6863      	ldr	r3, [r4, #4]
  406806:	f023 0803 	bic.w	r8, r3, #3
  40680a:	45b0      	cmp	r8, r6
  40680c:	d304      	bcc.n	406818 <_malloc_r+0x200>
  40680e:	eba8 0306 	sub.w	r3, r8, r6
  406812:	2b0f      	cmp	r3, #15
  406814:	f300 8085 	bgt.w	406922 <_malloc_r+0x30a>
  406818:	f8df 9158 	ldr.w	r9, [pc, #344]	; 406974 <_malloc_r+0x35c>
  40681c:	4b50      	ldr	r3, [pc, #320]	; (406960 <_malloc_r+0x348>)
  40681e:	f8d9 2000 	ldr.w	r2, [r9]
  406822:	681b      	ldr	r3, [r3, #0]
  406824:	3201      	adds	r2, #1
  406826:	4433      	add	r3, r6
  406828:	eb04 0a08 	add.w	sl, r4, r8
  40682c:	f000 8155 	beq.w	406ada <_malloc_r+0x4c2>
  406830:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  406834:	330f      	adds	r3, #15
  406836:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40683a:	f02b 0b0f 	bic.w	fp, fp, #15
  40683e:	4659      	mov	r1, fp
  406840:	4628      	mov	r0, r5
  406842:	f000 ff15 	bl	407670 <_sbrk_r>
  406846:	1c41      	adds	r1, r0, #1
  406848:	4602      	mov	r2, r0
  40684a:	f000 80fc 	beq.w	406a46 <_malloc_r+0x42e>
  40684e:	4582      	cmp	sl, r0
  406850:	f200 80f7 	bhi.w	406a42 <_malloc_r+0x42a>
  406854:	4b43      	ldr	r3, [pc, #268]	; (406964 <_malloc_r+0x34c>)
  406856:	6819      	ldr	r1, [r3, #0]
  406858:	4459      	add	r1, fp
  40685a:	6019      	str	r1, [r3, #0]
  40685c:	f000 814d 	beq.w	406afa <_malloc_r+0x4e2>
  406860:	f8d9 0000 	ldr.w	r0, [r9]
  406864:	3001      	adds	r0, #1
  406866:	bf1b      	ittet	ne
  406868:	eba2 0a0a 	subne.w	sl, r2, sl
  40686c:	4451      	addne	r1, sl
  40686e:	f8c9 2000 	streq.w	r2, [r9]
  406872:	6019      	strne	r1, [r3, #0]
  406874:	f012 0107 	ands.w	r1, r2, #7
  406878:	f000 8115 	beq.w	406aa6 <_malloc_r+0x48e>
  40687c:	f1c1 0008 	rsb	r0, r1, #8
  406880:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  406884:	4402      	add	r2, r0
  406886:	3108      	adds	r1, #8
  406888:	eb02 090b 	add.w	r9, r2, fp
  40688c:	f3c9 090b 	ubfx	r9, r9, #0, #12
  406890:	eba1 0909 	sub.w	r9, r1, r9
  406894:	4649      	mov	r1, r9
  406896:	4628      	mov	r0, r5
  406898:	9301      	str	r3, [sp, #4]
  40689a:	9200      	str	r2, [sp, #0]
  40689c:	f000 fee8 	bl	407670 <_sbrk_r>
  4068a0:	1c43      	adds	r3, r0, #1
  4068a2:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4068a6:	f000 8143 	beq.w	406b30 <_malloc_r+0x518>
  4068aa:	1a80      	subs	r0, r0, r2
  4068ac:	4448      	add	r0, r9
  4068ae:	f040 0001 	orr.w	r0, r0, #1
  4068b2:	6819      	ldr	r1, [r3, #0]
  4068b4:	60ba      	str	r2, [r7, #8]
  4068b6:	4449      	add	r1, r9
  4068b8:	42bc      	cmp	r4, r7
  4068ba:	6050      	str	r0, [r2, #4]
  4068bc:	6019      	str	r1, [r3, #0]
  4068be:	d017      	beq.n	4068f0 <_malloc_r+0x2d8>
  4068c0:	f1b8 0f0f 	cmp.w	r8, #15
  4068c4:	f240 80fb 	bls.w	406abe <_malloc_r+0x4a6>
  4068c8:	6860      	ldr	r0, [r4, #4]
  4068ca:	f1a8 020c 	sub.w	r2, r8, #12
  4068ce:	f022 0207 	bic.w	r2, r2, #7
  4068d2:	eb04 0e02 	add.w	lr, r4, r2
  4068d6:	f000 0001 	and.w	r0, r0, #1
  4068da:	f04f 0c05 	mov.w	ip, #5
  4068de:	4310      	orrs	r0, r2
  4068e0:	2a0f      	cmp	r2, #15
  4068e2:	6060      	str	r0, [r4, #4]
  4068e4:	f8ce c004 	str.w	ip, [lr, #4]
  4068e8:	f8ce c008 	str.w	ip, [lr, #8]
  4068ec:	f200 8117 	bhi.w	406b1e <_malloc_r+0x506>
  4068f0:	4b1d      	ldr	r3, [pc, #116]	; (406968 <_malloc_r+0x350>)
  4068f2:	68bc      	ldr	r4, [r7, #8]
  4068f4:	681a      	ldr	r2, [r3, #0]
  4068f6:	4291      	cmp	r1, r2
  4068f8:	bf88      	it	hi
  4068fa:	6019      	strhi	r1, [r3, #0]
  4068fc:	4b1b      	ldr	r3, [pc, #108]	; (40696c <_malloc_r+0x354>)
  4068fe:	681a      	ldr	r2, [r3, #0]
  406900:	4291      	cmp	r1, r2
  406902:	6862      	ldr	r2, [r4, #4]
  406904:	bf88      	it	hi
  406906:	6019      	strhi	r1, [r3, #0]
  406908:	f022 0203 	bic.w	r2, r2, #3
  40690c:	4296      	cmp	r6, r2
  40690e:	eba2 0306 	sub.w	r3, r2, r6
  406912:	d801      	bhi.n	406918 <_malloc_r+0x300>
  406914:	2b0f      	cmp	r3, #15
  406916:	dc04      	bgt.n	406922 <_malloc_r+0x30a>
  406918:	4628      	mov	r0, r5
  40691a:	f000 fa03 	bl	406d24 <__malloc_unlock>
  40691e:	2400      	movs	r4, #0
  406920:	e740      	b.n	4067a4 <_malloc_r+0x18c>
  406922:	19a2      	adds	r2, r4, r6
  406924:	f043 0301 	orr.w	r3, r3, #1
  406928:	f046 0601 	orr.w	r6, r6, #1
  40692c:	6066      	str	r6, [r4, #4]
  40692e:	4628      	mov	r0, r5
  406930:	60ba      	str	r2, [r7, #8]
  406932:	6053      	str	r3, [r2, #4]
  406934:	f000 f9f6 	bl	406d24 <__malloc_unlock>
  406938:	3408      	adds	r4, #8
  40693a:	4620      	mov	r0, r4
  40693c:	b003      	add	sp, #12
  40693e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406942:	2b14      	cmp	r3, #20
  406944:	d971      	bls.n	406a2a <_malloc_r+0x412>
  406946:	2b54      	cmp	r3, #84	; 0x54
  406948:	f200 80a3 	bhi.w	406a92 <_malloc_r+0x47a>
  40694c:	0b33      	lsrs	r3, r6, #12
  40694e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  406952:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  406956:	00c3      	lsls	r3, r0, #3
  406958:	e680      	b.n	40665c <_malloc_r+0x44>
  40695a:	bf00      	nop
  40695c:	20000648 	.word	0x20000648
  406960:	20000cbc 	.word	0x20000cbc
  406964:	20000c8c 	.word	0x20000c8c
  406968:	20000cb4 	.word	0x20000cb4
  40696c:	20000cb8 	.word	0x20000cb8
  406970:	20000650 	.word	0x20000650
  406974:	20000a50 	.word	0x20000a50
  406978:	0a5a      	lsrs	r2, r3, #9
  40697a:	2a04      	cmp	r2, #4
  40697c:	d95b      	bls.n	406a36 <_malloc_r+0x41e>
  40697e:	2a14      	cmp	r2, #20
  406980:	f200 80ae 	bhi.w	406ae0 <_malloc_r+0x4c8>
  406984:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  406988:	00c9      	lsls	r1, r1, #3
  40698a:	325b      	adds	r2, #91	; 0x5b
  40698c:	eb07 0c01 	add.w	ip, r7, r1
  406990:	5879      	ldr	r1, [r7, r1]
  406992:	f1ac 0c08 	sub.w	ip, ip, #8
  406996:	458c      	cmp	ip, r1
  406998:	f000 8088 	beq.w	406aac <_malloc_r+0x494>
  40699c:	684a      	ldr	r2, [r1, #4]
  40699e:	f022 0203 	bic.w	r2, r2, #3
  4069a2:	4293      	cmp	r3, r2
  4069a4:	d273      	bcs.n	406a8e <_malloc_r+0x476>
  4069a6:	6889      	ldr	r1, [r1, #8]
  4069a8:	458c      	cmp	ip, r1
  4069aa:	d1f7      	bne.n	40699c <_malloc_r+0x384>
  4069ac:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4069b0:	687b      	ldr	r3, [r7, #4]
  4069b2:	60e2      	str	r2, [r4, #12]
  4069b4:	f8c4 c008 	str.w	ip, [r4, #8]
  4069b8:	6094      	str	r4, [r2, #8]
  4069ba:	f8cc 400c 	str.w	r4, [ip, #12]
  4069be:	e68f      	b.n	4066e0 <_malloc_r+0xc8>
  4069c0:	19a1      	adds	r1, r4, r6
  4069c2:	f046 0c01 	orr.w	ip, r6, #1
  4069c6:	f042 0601 	orr.w	r6, r2, #1
  4069ca:	f8c4 c004 	str.w	ip, [r4, #4]
  4069ce:	4628      	mov	r0, r5
  4069d0:	6179      	str	r1, [r7, #20]
  4069d2:	6139      	str	r1, [r7, #16]
  4069d4:	f8c1 e00c 	str.w	lr, [r1, #12]
  4069d8:	f8c1 e008 	str.w	lr, [r1, #8]
  4069dc:	604e      	str	r6, [r1, #4]
  4069de:	50e2      	str	r2, [r4, r3]
  4069e0:	f000 f9a0 	bl	406d24 <__malloc_unlock>
  4069e4:	3408      	adds	r4, #8
  4069e6:	e6dd      	b.n	4067a4 <_malloc_r+0x18c>
  4069e8:	687b      	ldr	r3, [r7, #4]
  4069ea:	e679      	b.n	4066e0 <_malloc_r+0xc8>
  4069ec:	f108 0801 	add.w	r8, r8, #1
  4069f0:	f018 0f03 	tst.w	r8, #3
  4069f4:	f10c 0c08 	add.w	ip, ip, #8
  4069f8:	f47f ae85 	bne.w	406706 <_malloc_r+0xee>
  4069fc:	e02d      	b.n	406a5a <_malloc_r+0x442>
  4069fe:	68dc      	ldr	r4, [r3, #12]
  406a00:	42a3      	cmp	r3, r4
  406a02:	bf08      	it	eq
  406a04:	3002      	addeq	r0, #2
  406a06:	f43f ae3e 	beq.w	406686 <_malloc_r+0x6e>
  406a0a:	e6bb      	b.n	406784 <_malloc_r+0x16c>
  406a0c:	4419      	add	r1, r3
  406a0e:	461c      	mov	r4, r3
  406a10:	684a      	ldr	r2, [r1, #4]
  406a12:	68db      	ldr	r3, [r3, #12]
  406a14:	f854 6f08 	ldr.w	r6, [r4, #8]!
  406a18:	f042 0201 	orr.w	r2, r2, #1
  406a1c:	604a      	str	r2, [r1, #4]
  406a1e:	4628      	mov	r0, r5
  406a20:	60f3      	str	r3, [r6, #12]
  406a22:	609e      	str	r6, [r3, #8]
  406a24:	f000 f97e 	bl	406d24 <__malloc_unlock>
  406a28:	e6bc      	b.n	4067a4 <_malloc_r+0x18c>
  406a2a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  406a2e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  406a32:	00c3      	lsls	r3, r0, #3
  406a34:	e612      	b.n	40665c <_malloc_r+0x44>
  406a36:	099a      	lsrs	r2, r3, #6
  406a38:	f102 0139 	add.w	r1, r2, #57	; 0x39
  406a3c:	00c9      	lsls	r1, r1, #3
  406a3e:	3238      	adds	r2, #56	; 0x38
  406a40:	e7a4      	b.n	40698c <_malloc_r+0x374>
  406a42:	42bc      	cmp	r4, r7
  406a44:	d054      	beq.n	406af0 <_malloc_r+0x4d8>
  406a46:	68bc      	ldr	r4, [r7, #8]
  406a48:	6862      	ldr	r2, [r4, #4]
  406a4a:	f022 0203 	bic.w	r2, r2, #3
  406a4e:	e75d      	b.n	40690c <_malloc_r+0x2f4>
  406a50:	f859 3908 	ldr.w	r3, [r9], #-8
  406a54:	4599      	cmp	r9, r3
  406a56:	f040 8086 	bne.w	406b66 <_malloc_r+0x54e>
  406a5a:	f010 0f03 	tst.w	r0, #3
  406a5e:	f100 30ff 	add.w	r0, r0, #4294967295
  406a62:	d1f5      	bne.n	406a50 <_malloc_r+0x438>
  406a64:	687b      	ldr	r3, [r7, #4]
  406a66:	ea23 0304 	bic.w	r3, r3, r4
  406a6a:	607b      	str	r3, [r7, #4]
  406a6c:	0064      	lsls	r4, r4, #1
  406a6e:	429c      	cmp	r4, r3
  406a70:	f63f aec7 	bhi.w	406802 <_malloc_r+0x1ea>
  406a74:	2c00      	cmp	r4, #0
  406a76:	f43f aec4 	beq.w	406802 <_malloc_r+0x1ea>
  406a7a:	421c      	tst	r4, r3
  406a7c:	4640      	mov	r0, r8
  406a7e:	f47f ae3e 	bne.w	4066fe <_malloc_r+0xe6>
  406a82:	0064      	lsls	r4, r4, #1
  406a84:	421c      	tst	r4, r3
  406a86:	f100 0004 	add.w	r0, r0, #4
  406a8a:	d0fa      	beq.n	406a82 <_malloc_r+0x46a>
  406a8c:	e637      	b.n	4066fe <_malloc_r+0xe6>
  406a8e:	468c      	mov	ip, r1
  406a90:	e78c      	b.n	4069ac <_malloc_r+0x394>
  406a92:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  406a96:	d815      	bhi.n	406ac4 <_malloc_r+0x4ac>
  406a98:	0bf3      	lsrs	r3, r6, #15
  406a9a:	f103 0078 	add.w	r0, r3, #120	; 0x78
  406a9e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  406aa2:	00c3      	lsls	r3, r0, #3
  406aa4:	e5da      	b.n	40665c <_malloc_r+0x44>
  406aa6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  406aaa:	e6ed      	b.n	406888 <_malloc_r+0x270>
  406aac:	687b      	ldr	r3, [r7, #4]
  406aae:	1092      	asrs	r2, r2, #2
  406ab0:	2101      	movs	r1, #1
  406ab2:	fa01 f202 	lsl.w	r2, r1, r2
  406ab6:	4313      	orrs	r3, r2
  406ab8:	607b      	str	r3, [r7, #4]
  406aba:	4662      	mov	r2, ip
  406abc:	e779      	b.n	4069b2 <_malloc_r+0x39a>
  406abe:	2301      	movs	r3, #1
  406ac0:	6053      	str	r3, [r2, #4]
  406ac2:	e729      	b.n	406918 <_malloc_r+0x300>
  406ac4:	f240 5254 	movw	r2, #1364	; 0x554
  406ac8:	4293      	cmp	r3, r2
  406aca:	d822      	bhi.n	406b12 <_malloc_r+0x4fa>
  406acc:	0cb3      	lsrs	r3, r6, #18
  406ace:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  406ad2:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  406ad6:	00c3      	lsls	r3, r0, #3
  406ad8:	e5c0      	b.n	40665c <_malloc_r+0x44>
  406ada:	f103 0b10 	add.w	fp, r3, #16
  406ade:	e6ae      	b.n	40683e <_malloc_r+0x226>
  406ae0:	2a54      	cmp	r2, #84	; 0x54
  406ae2:	d829      	bhi.n	406b38 <_malloc_r+0x520>
  406ae4:	0b1a      	lsrs	r2, r3, #12
  406ae6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  406aea:	00c9      	lsls	r1, r1, #3
  406aec:	326e      	adds	r2, #110	; 0x6e
  406aee:	e74d      	b.n	40698c <_malloc_r+0x374>
  406af0:	4b20      	ldr	r3, [pc, #128]	; (406b74 <_malloc_r+0x55c>)
  406af2:	6819      	ldr	r1, [r3, #0]
  406af4:	4459      	add	r1, fp
  406af6:	6019      	str	r1, [r3, #0]
  406af8:	e6b2      	b.n	406860 <_malloc_r+0x248>
  406afa:	f3ca 000b 	ubfx	r0, sl, #0, #12
  406afe:	2800      	cmp	r0, #0
  406b00:	f47f aeae 	bne.w	406860 <_malloc_r+0x248>
  406b04:	eb08 030b 	add.w	r3, r8, fp
  406b08:	68ba      	ldr	r2, [r7, #8]
  406b0a:	f043 0301 	orr.w	r3, r3, #1
  406b0e:	6053      	str	r3, [r2, #4]
  406b10:	e6ee      	b.n	4068f0 <_malloc_r+0x2d8>
  406b12:	207f      	movs	r0, #127	; 0x7f
  406b14:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  406b18:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  406b1c:	e59e      	b.n	40665c <_malloc_r+0x44>
  406b1e:	f104 0108 	add.w	r1, r4, #8
  406b22:	4628      	mov	r0, r5
  406b24:	9300      	str	r3, [sp, #0]
  406b26:	f7ff fc7f 	bl	406428 <_free_r>
  406b2a:	9b00      	ldr	r3, [sp, #0]
  406b2c:	6819      	ldr	r1, [r3, #0]
  406b2e:	e6df      	b.n	4068f0 <_malloc_r+0x2d8>
  406b30:	2001      	movs	r0, #1
  406b32:	f04f 0900 	mov.w	r9, #0
  406b36:	e6bc      	b.n	4068b2 <_malloc_r+0x29a>
  406b38:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  406b3c:	d805      	bhi.n	406b4a <_malloc_r+0x532>
  406b3e:	0bda      	lsrs	r2, r3, #15
  406b40:	f102 0178 	add.w	r1, r2, #120	; 0x78
  406b44:	00c9      	lsls	r1, r1, #3
  406b46:	3277      	adds	r2, #119	; 0x77
  406b48:	e720      	b.n	40698c <_malloc_r+0x374>
  406b4a:	f240 5154 	movw	r1, #1364	; 0x554
  406b4e:	428a      	cmp	r2, r1
  406b50:	d805      	bhi.n	406b5e <_malloc_r+0x546>
  406b52:	0c9a      	lsrs	r2, r3, #18
  406b54:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  406b58:	00c9      	lsls	r1, r1, #3
  406b5a:	327c      	adds	r2, #124	; 0x7c
  406b5c:	e716      	b.n	40698c <_malloc_r+0x374>
  406b5e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  406b62:	227e      	movs	r2, #126	; 0x7e
  406b64:	e712      	b.n	40698c <_malloc_r+0x374>
  406b66:	687b      	ldr	r3, [r7, #4]
  406b68:	e780      	b.n	406a6c <_malloc_r+0x454>
  406b6a:	08f0      	lsrs	r0, r6, #3
  406b6c:	f106 0308 	add.w	r3, r6, #8
  406b70:	e600      	b.n	406774 <_malloc_r+0x15c>
  406b72:	bf00      	nop
  406b74:	20000c8c 	.word	0x20000c8c

00406b78 <__ascii_mbtowc>:
  406b78:	b082      	sub	sp, #8
  406b7a:	b149      	cbz	r1, 406b90 <__ascii_mbtowc+0x18>
  406b7c:	b15a      	cbz	r2, 406b96 <__ascii_mbtowc+0x1e>
  406b7e:	b16b      	cbz	r3, 406b9c <__ascii_mbtowc+0x24>
  406b80:	7813      	ldrb	r3, [r2, #0]
  406b82:	600b      	str	r3, [r1, #0]
  406b84:	7812      	ldrb	r2, [r2, #0]
  406b86:	1c10      	adds	r0, r2, #0
  406b88:	bf18      	it	ne
  406b8a:	2001      	movne	r0, #1
  406b8c:	b002      	add	sp, #8
  406b8e:	4770      	bx	lr
  406b90:	a901      	add	r1, sp, #4
  406b92:	2a00      	cmp	r2, #0
  406b94:	d1f3      	bne.n	406b7e <__ascii_mbtowc+0x6>
  406b96:	4610      	mov	r0, r2
  406b98:	b002      	add	sp, #8
  406b9a:	4770      	bx	lr
  406b9c:	f06f 0001 	mvn.w	r0, #1
  406ba0:	e7f4      	b.n	406b8c <__ascii_mbtowc+0x14>
  406ba2:	bf00      	nop
	...

00406bb0 <memchr>:
  406bb0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406bb4:	2a10      	cmp	r2, #16
  406bb6:	db2b      	blt.n	406c10 <memchr+0x60>
  406bb8:	f010 0f07 	tst.w	r0, #7
  406bbc:	d008      	beq.n	406bd0 <memchr+0x20>
  406bbe:	f810 3b01 	ldrb.w	r3, [r0], #1
  406bc2:	3a01      	subs	r2, #1
  406bc4:	428b      	cmp	r3, r1
  406bc6:	d02d      	beq.n	406c24 <memchr+0x74>
  406bc8:	f010 0f07 	tst.w	r0, #7
  406bcc:	b342      	cbz	r2, 406c20 <memchr+0x70>
  406bce:	d1f6      	bne.n	406bbe <memchr+0xe>
  406bd0:	b4f0      	push	{r4, r5, r6, r7}
  406bd2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  406bd6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  406bda:	f022 0407 	bic.w	r4, r2, #7
  406bde:	f07f 0700 	mvns.w	r7, #0
  406be2:	2300      	movs	r3, #0
  406be4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  406be8:	3c08      	subs	r4, #8
  406bea:	ea85 0501 	eor.w	r5, r5, r1
  406bee:	ea86 0601 	eor.w	r6, r6, r1
  406bf2:	fa85 f547 	uadd8	r5, r5, r7
  406bf6:	faa3 f587 	sel	r5, r3, r7
  406bfa:	fa86 f647 	uadd8	r6, r6, r7
  406bfe:	faa5 f687 	sel	r6, r5, r7
  406c02:	b98e      	cbnz	r6, 406c28 <memchr+0x78>
  406c04:	d1ee      	bne.n	406be4 <memchr+0x34>
  406c06:	bcf0      	pop	{r4, r5, r6, r7}
  406c08:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406c0c:	f002 0207 	and.w	r2, r2, #7
  406c10:	b132      	cbz	r2, 406c20 <memchr+0x70>
  406c12:	f810 3b01 	ldrb.w	r3, [r0], #1
  406c16:	3a01      	subs	r2, #1
  406c18:	ea83 0301 	eor.w	r3, r3, r1
  406c1c:	b113      	cbz	r3, 406c24 <memchr+0x74>
  406c1e:	d1f8      	bne.n	406c12 <memchr+0x62>
  406c20:	2000      	movs	r0, #0
  406c22:	4770      	bx	lr
  406c24:	3801      	subs	r0, #1
  406c26:	4770      	bx	lr
  406c28:	2d00      	cmp	r5, #0
  406c2a:	bf06      	itte	eq
  406c2c:	4635      	moveq	r5, r6
  406c2e:	3803      	subeq	r0, #3
  406c30:	3807      	subne	r0, #7
  406c32:	f015 0f01 	tst.w	r5, #1
  406c36:	d107      	bne.n	406c48 <memchr+0x98>
  406c38:	3001      	adds	r0, #1
  406c3a:	f415 7f80 	tst.w	r5, #256	; 0x100
  406c3e:	bf02      	ittt	eq
  406c40:	3001      	addeq	r0, #1
  406c42:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  406c46:	3001      	addeq	r0, #1
  406c48:	bcf0      	pop	{r4, r5, r6, r7}
  406c4a:	3801      	subs	r0, #1
  406c4c:	4770      	bx	lr
  406c4e:	bf00      	nop

00406c50 <memmove>:
  406c50:	4288      	cmp	r0, r1
  406c52:	b5f0      	push	{r4, r5, r6, r7, lr}
  406c54:	d90d      	bls.n	406c72 <memmove+0x22>
  406c56:	188b      	adds	r3, r1, r2
  406c58:	4298      	cmp	r0, r3
  406c5a:	d20a      	bcs.n	406c72 <memmove+0x22>
  406c5c:	1884      	adds	r4, r0, r2
  406c5e:	2a00      	cmp	r2, #0
  406c60:	d051      	beq.n	406d06 <memmove+0xb6>
  406c62:	4622      	mov	r2, r4
  406c64:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  406c68:	f802 4d01 	strb.w	r4, [r2, #-1]!
  406c6c:	4299      	cmp	r1, r3
  406c6e:	d1f9      	bne.n	406c64 <memmove+0x14>
  406c70:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406c72:	2a0f      	cmp	r2, #15
  406c74:	d948      	bls.n	406d08 <memmove+0xb8>
  406c76:	ea41 0300 	orr.w	r3, r1, r0
  406c7a:	079b      	lsls	r3, r3, #30
  406c7c:	d146      	bne.n	406d0c <memmove+0xbc>
  406c7e:	f100 0410 	add.w	r4, r0, #16
  406c82:	f101 0310 	add.w	r3, r1, #16
  406c86:	4615      	mov	r5, r2
  406c88:	f853 6c10 	ldr.w	r6, [r3, #-16]
  406c8c:	f844 6c10 	str.w	r6, [r4, #-16]
  406c90:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  406c94:	f844 6c0c 	str.w	r6, [r4, #-12]
  406c98:	f853 6c08 	ldr.w	r6, [r3, #-8]
  406c9c:	f844 6c08 	str.w	r6, [r4, #-8]
  406ca0:	3d10      	subs	r5, #16
  406ca2:	f853 6c04 	ldr.w	r6, [r3, #-4]
  406ca6:	f844 6c04 	str.w	r6, [r4, #-4]
  406caa:	2d0f      	cmp	r5, #15
  406cac:	f103 0310 	add.w	r3, r3, #16
  406cb0:	f104 0410 	add.w	r4, r4, #16
  406cb4:	d8e8      	bhi.n	406c88 <memmove+0x38>
  406cb6:	f1a2 0310 	sub.w	r3, r2, #16
  406cba:	f023 030f 	bic.w	r3, r3, #15
  406cbe:	f002 0e0f 	and.w	lr, r2, #15
  406cc2:	3310      	adds	r3, #16
  406cc4:	f1be 0f03 	cmp.w	lr, #3
  406cc8:	4419      	add	r1, r3
  406cca:	4403      	add	r3, r0
  406ccc:	d921      	bls.n	406d12 <memmove+0xc2>
  406cce:	1f1e      	subs	r6, r3, #4
  406cd0:	460d      	mov	r5, r1
  406cd2:	4674      	mov	r4, lr
  406cd4:	3c04      	subs	r4, #4
  406cd6:	f855 7b04 	ldr.w	r7, [r5], #4
  406cda:	f846 7f04 	str.w	r7, [r6, #4]!
  406cde:	2c03      	cmp	r4, #3
  406ce0:	d8f8      	bhi.n	406cd4 <memmove+0x84>
  406ce2:	f1ae 0404 	sub.w	r4, lr, #4
  406ce6:	f024 0403 	bic.w	r4, r4, #3
  406cea:	3404      	adds	r4, #4
  406cec:	4421      	add	r1, r4
  406cee:	4423      	add	r3, r4
  406cf0:	f002 0203 	and.w	r2, r2, #3
  406cf4:	b162      	cbz	r2, 406d10 <memmove+0xc0>
  406cf6:	3b01      	subs	r3, #1
  406cf8:	440a      	add	r2, r1
  406cfa:	f811 4b01 	ldrb.w	r4, [r1], #1
  406cfe:	f803 4f01 	strb.w	r4, [r3, #1]!
  406d02:	428a      	cmp	r2, r1
  406d04:	d1f9      	bne.n	406cfa <memmove+0xaa>
  406d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406d08:	4603      	mov	r3, r0
  406d0a:	e7f3      	b.n	406cf4 <memmove+0xa4>
  406d0c:	4603      	mov	r3, r0
  406d0e:	e7f2      	b.n	406cf6 <memmove+0xa6>
  406d10:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406d12:	4672      	mov	r2, lr
  406d14:	e7ee      	b.n	406cf4 <memmove+0xa4>
  406d16:	bf00      	nop

00406d18 <__malloc_lock>:
  406d18:	4801      	ldr	r0, [pc, #4]	; (406d20 <__malloc_lock+0x8>)
  406d1a:	f7ff bc79 	b.w	406610 <__retarget_lock_acquire_recursive>
  406d1e:	bf00      	nop
  406d20:	20000d04 	.word	0x20000d04

00406d24 <__malloc_unlock>:
  406d24:	4801      	ldr	r0, [pc, #4]	; (406d2c <__malloc_unlock+0x8>)
  406d26:	f7ff bc75 	b.w	406614 <__retarget_lock_release_recursive>
  406d2a:	bf00      	nop
  406d2c:	20000d04 	.word	0x20000d04

00406d30 <_Balloc>:
  406d30:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406d32:	b570      	push	{r4, r5, r6, lr}
  406d34:	4605      	mov	r5, r0
  406d36:	460c      	mov	r4, r1
  406d38:	b14b      	cbz	r3, 406d4e <_Balloc+0x1e>
  406d3a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  406d3e:	b180      	cbz	r0, 406d62 <_Balloc+0x32>
  406d40:	6802      	ldr	r2, [r0, #0]
  406d42:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  406d46:	2300      	movs	r3, #0
  406d48:	6103      	str	r3, [r0, #16]
  406d4a:	60c3      	str	r3, [r0, #12]
  406d4c:	bd70      	pop	{r4, r5, r6, pc}
  406d4e:	2221      	movs	r2, #33	; 0x21
  406d50:	2104      	movs	r1, #4
  406d52:	f000 fd8d 	bl	407870 <_calloc_r>
  406d56:	64e8      	str	r0, [r5, #76]	; 0x4c
  406d58:	4603      	mov	r3, r0
  406d5a:	2800      	cmp	r0, #0
  406d5c:	d1ed      	bne.n	406d3a <_Balloc+0xa>
  406d5e:	2000      	movs	r0, #0
  406d60:	bd70      	pop	{r4, r5, r6, pc}
  406d62:	2101      	movs	r1, #1
  406d64:	fa01 f604 	lsl.w	r6, r1, r4
  406d68:	1d72      	adds	r2, r6, #5
  406d6a:	4628      	mov	r0, r5
  406d6c:	0092      	lsls	r2, r2, #2
  406d6e:	f000 fd7f 	bl	407870 <_calloc_r>
  406d72:	2800      	cmp	r0, #0
  406d74:	d0f3      	beq.n	406d5e <_Balloc+0x2e>
  406d76:	6044      	str	r4, [r0, #4]
  406d78:	6086      	str	r6, [r0, #8]
  406d7a:	e7e4      	b.n	406d46 <_Balloc+0x16>

00406d7c <_Bfree>:
  406d7c:	b131      	cbz	r1, 406d8c <_Bfree+0x10>
  406d7e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  406d80:	684a      	ldr	r2, [r1, #4]
  406d82:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  406d86:	6008      	str	r0, [r1, #0]
  406d88:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  406d8c:	4770      	bx	lr
  406d8e:	bf00      	nop

00406d90 <__multadd>:
  406d90:	b5f0      	push	{r4, r5, r6, r7, lr}
  406d92:	690c      	ldr	r4, [r1, #16]
  406d94:	b083      	sub	sp, #12
  406d96:	460d      	mov	r5, r1
  406d98:	4606      	mov	r6, r0
  406d9a:	f101 0e14 	add.w	lr, r1, #20
  406d9e:	2700      	movs	r7, #0
  406da0:	f8de 0000 	ldr.w	r0, [lr]
  406da4:	b281      	uxth	r1, r0
  406da6:	fb02 3301 	mla	r3, r2, r1, r3
  406daa:	0c01      	lsrs	r1, r0, #16
  406dac:	0c18      	lsrs	r0, r3, #16
  406dae:	fb02 0101 	mla	r1, r2, r1, r0
  406db2:	b29b      	uxth	r3, r3
  406db4:	3701      	adds	r7, #1
  406db6:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  406dba:	42bc      	cmp	r4, r7
  406dbc:	f84e 3b04 	str.w	r3, [lr], #4
  406dc0:	ea4f 4311 	mov.w	r3, r1, lsr #16
  406dc4:	dcec      	bgt.n	406da0 <__multadd+0x10>
  406dc6:	b13b      	cbz	r3, 406dd8 <__multadd+0x48>
  406dc8:	68aa      	ldr	r2, [r5, #8]
  406dca:	4294      	cmp	r4, r2
  406dcc:	da07      	bge.n	406dde <__multadd+0x4e>
  406dce:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  406dd2:	3401      	adds	r4, #1
  406dd4:	6153      	str	r3, [r2, #20]
  406dd6:	612c      	str	r4, [r5, #16]
  406dd8:	4628      	mov	r0, r5
  406dda:	b003      	add	sp, #12
  406ddc:	bdf0      	pop	{r4, r5, r6, r7, pc}
  406dde:	6869      	ldr	r1, [r5, #4]
  406de0:	9301      	str	r3, [sp, #4]
  406de2:	3101      	adds	r1, #1
  406de4:	4630      	mov	r0, r6
  406de6:	f7ff ffa3 	bl	406d30 <_Balloc>
  406dea:	692a      	ldr	r2, [r5, #16]
  406dec:	3202      	adds	r2, #2
  406dee:	f105 010c 	add.w	r1, r5, #12
  406df2:	4607      	mov	r7, r0
  406df4:	0092      	lsls	r2, r2, #2
  406df6:	300c      	adds	r0, #12
  406df8:	f7fc ff30 	bl	403c5c <memcpy>
  406dfc:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  406dfe:	6869      	ldr	r1, [r5, #4]
  406e00:	9b01      	ldr	r3, [sp, #4]
  406e02:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  406e06:	6028      	str	r0, [r5, #0]
  406e08:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  406e0c:	463d      	mov	r5, r7
  406e0e:	e7de      	b.n	406dce <__multadd+0x3e>

00406e10 <__hi0bits>:
  406e10:	0c02      	lsrs	r2, r0, #16
  406e12:	0412      	lsls	r2, r2, #16
  406e14:	4603      	mov	r3, r0
  406e16:	b9b2      	cbnz	r2, 406e46 <__hi0bits+0x36>
  406e18:	0403      	lsls	r3, r0, #16
  406e1a:	2010      	movs	r0, #16
  406e1c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  406e20:	bf04      	itt	eq
  406e22:	021b      	lsleq	r3, r3, #8
  406e24:	3008      	addeq	r0, #8
  406e26:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  406e2a:	bf04      	itt	eq
  406e2c:	011b      	lsleq	r3, r3, #4
  406e2e:	3004      	addeq	r0, #4
  406e30:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  406e34:	bf04      	itt	eq
  406e36:	009b      	lsleq	r3, r3, #2
  406e38:	3002      	addeq	r0, #2
  406e3a:	2b00      	cmp	r3, #0
  406e3c:	db02      	blt.n	406e44 <__hi0bits+0x34>
  406e3e:	005b      	lsls	r3, r3, #1
  406e40:	d403      	bmi.n	406e4a <__hi0bits+0x3a>
  406e42:	2020      	movs	r0, #32
  406e44:	4770      	bx	lr
  406e46:	2000      	movs	r0, #0
  406e48:	e7e8      	b.n	406e1c <__hi0bits+0xc>
  406e4a:	3001      	adds	r0, #1
  406e4c:	4770      	bx	lr
  406e4e:	bf00      	nop

00406e50 <__lo0bits>:
  406e50:	6803      	ldr	r3, [r0, #0]
  406e52:	f013 0207 	ands.w	r2, r3, #7
  406e56:	4601      	mov	r1, r0
  406e58:	d007      	beq.n	406e6a <__lo0bits+0x1a>
  406e5a:	07da      	lsls	r2, r3, #31
  406e5c:	d421      	bmi.n	406ea2 <__lo0bits+0x52>
  406e5e:	0798      	lsls	r0, r3, #30
  406e60:	d421      	bmi.n	406ea6 <__lo0bits+0x56>
  406e62:	089b      	lsrs	r3, r3, #2
  406e64:	600b      	str	r3, [r1, #0]
  406e66:	2002      	movs	r0, #2
  406e68:	4770      	bx	lr
  406e6a:	b298      	uxth	r0, r3
  406e6c:	b198      	cbz	r0, 406e96 <__lo0bits+0x46>
  406e6e:	4610      	mov	r0, r2
  406e70:	f013 0fff 	tst.w	r3, #255	; 0xff
  406e74:	bf04      	itt	eq
  406e76:	0a1b      	lsreq	r3, r3, #8
  406e78:	3008      	addeq	r0, #8
  406e7a:	071a      	lsls	r2, r3, #28
  406e7c:	bf04      	itt	eq
  406e7e:	091b      	lsreq	r3, r3, #4
  406e80:	3004      	addeq	r0, #4
  406e82:	079a      	lsls	r2, r3, #30
  406e84:	bf04      	itt	eq
  406e86:	089b      	lsreq	r3, r3, #2
  406e88:	3002      	addeq	r0, #2
  406e8a:	07da      	lsls	r2, r3, #31
  406e8c:	d407      	bmi.n	406e9e <__lo0bits+0x4e>
  406e8e:	085b      	lsrs	r3, r3, #1
  406e90:	d104      	bne.n	406e9c <__lo0bits+0x4c>
  406e92:	2020      	movs	r0, #32
  406e94:	4770      	bx	lr
  406e96:	0c1b      	lsrs	r3, r3, #16
  406e98:	2010      	movs	r0, #16
  406e9a:	e7e9      	b.n	406e70 <__lo0bits+0x20>
  406e9c:	3001      	adds	r0, #1
  406e9e:	600b      	str	r3, [r1, #0]
  406ea0:	4770      	bx	lr
  406ea2:	2000      	movs	r0, #0
  406ea4:	4770      	bx	lr
  406ea6:	085b      	lsrs	r3, r3, #1
  406ea8:	600b      	str	r3, [r1, #0]
  406eaa:	2001      	movs	r0, #1
  406eac:	4770      	bx	lr
  406eae:	bf00      	nop

00406eb0 <__i2b>:
  406eb0:	b510      	push	{r4, lr}
  406eb2:	460c      	mov	r4, r1
  406eb4:	2101      	movs	r1, #1
  406eb6:	f7ff ff3b 	bl	406d30 <_Balloc>
  406eba:	2201      	movs	r2, #1
  406ebc:	6144      	str	r4, [r0, #20]
  406ebe:	6102      	str	r2, [r0, #16]
  406ec0:	bd10      	pop	{r4, pc}
  406ec2:	bf00      	nop

00406ec4 <__multiply>:
  406ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406ec8:	690c      	ldr	r4, [r1, #16]
  406eca:	6915      	ldr	r5, [r2, #16]
  406ecc:	42ac      	cmp	r4, r5
  406ece:	b083      	sub	sp, #12
  406ed0:	468b      	mov	fp, r1
  406ed2:	4616      	mov	r6, r2
  406ed4:	da04      	bge.n	406ee0 <__multiply+0x1c>
  406ed6:	4622      	mov	r2, r4
  406ed8:	46b3      	mov	fp, r6
  406eda:	462c      	mov	r4, r5
  406edc:	460e      	mov	r6, r1
  406ede:	4615      	mov	r5, r2
  406ee0:	f8db 3008 	ldr.w	r3, [fp, #8]
  406ee4:	f8db 1004 	ldr.w	r1, [fp, #4]
  406ee8:	eb04 0805 	add.w	r8, r4, r5
  406eec:	4598      	cmp	r8, r3
  406eee:	bfc8      	it	gt
  406ef0:	3101      	addgt	r1, #1
  406ef2:	f7ff ff1d 	bl	406d30 <_Balloc>
  406ef6:	f100 0914 	add.w	r9, r0, #20
  406efa:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  406efe:	45d1      	cmp	r9, sl
  406f00:	9000      	str	r0, [sp, #0]
  406f02:	d205      	bcs.n	406f10 <__multiply+0x4c>
  406f04:	464b      	mov	r3, r9
  406f06:	2100      	movs	r1, #0
  406f08:	f843 1b04 	str.w	r1, [r3], #4
  406f0c:	459a      	cmp	sl, r3
  406f0e:	d8fb      	bhi.n	406f08 <__multiply+0x44>
  406f10:	f106 0c14 	add.w	ip, r6, #20
  406f14:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  406f18:	f10b 0b14 	add.w	fp, fp, #20
  406f1c:	459c      	cmp	ip, r3
  406f1e:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  406f22:	d24c      	bcs.n	406fbe <__multiply+0xfa>
  406f24:	f8cd a004 	str.w	sl, [sp, #4]
  406f28:	469a      	mov	sl, r3
  406f2a:	f8dc 5000 	ldr.w	r5, [ip]
  406f2e:	b2af      	uxth	r7, r5
  406f30:	b1ef      	cbz	r7, 406f6e <__multiply+0xaa>
  406f32:	2100      	movs	r1, #0
  406f34:	464d      	mov	r5, r9
  406f36:	465e      	mov	r6, fp
  406f38:	460c      	mov	r4, r1
  406f3a:	f856 2b04 	ldr.w	r2, [r6], #4
  406f3e:	6828      	ldr	r0, [r5, #0]
  406f40:	b293      	uxth	r3, r2
  406f42:	b281      	uxth	r1, r0
  406f44:	fb07 1303 	mla	r3, r7, r3, r1
  406f48:	0c12      	lsrs	r2, r2, #16
  406f4a:	0c01      	lsrs	r1, r0, #16
  406f4c:	4423      	add	r3, r4
  406f4e:	fb07 1102 	mla	r1, r7, r2, r1
  406f52:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  406f56:	b29b      	uxth	r3, r3
  406f58:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  406f5c:	45b6      	cmp	lr, r6
  406f5e:	f845 3b04 	str.w	r3, [r5], #4
  406f62:	ea4f 4411 	mov.w	r4, r1, lsr #16
  406f66:	d8e8      	bhi.n	406f3a <__multiply+0x76>
  406f68:	602c      	str	r4, [r5, #0]
  406f6a:	f8dc 5000 	ldr.w	r5, [ip]
  406f6e:	0c2d      	lsrs	r5, r5, #16
  406f70:	d01d      	beq.n	406fae <__multiply+0xea>
  406f72:	f8d9 3000 	ldr.w	r3, [r9]
  406f76:	4648      	mov	r0, r9
  406f78:	461c      	mov	r4, r3
  406f7a:	4659      	mov	r1, fp
  406f7c:	2200      	movs	r2, #0
  406f7e:	880e      	ldrh	r6, [r1, #0]
  406f80:	0c24      	lsrs	r4, r4, #16
  406f82:	fb05 4406 	mla	r4, r5, r6, r4
  406f86:	4422      	add	r2, r4
  406f88:	b29b      	uxth	r3, r3
  406f8a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  406f8e:	f840 3b04 	str.w	r3, [r0], #4
  406f92:	f851 3b04 	ldr.w	r3, [r1], #4
  406f96:	6804      	ldr	r4, [r0, #0]
  406f98:	0c1b      	lsrs	r3, r3, #16
  406f9a:	b2a6      	uxth	r6, r4
  406f9c:	fb05 6303 	mla	r3, r5, r3, r6
  406fa0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  406fa4:	458e      	cmp	lr, r1
  406fa6:	ea4f 4213 	mov.w	r2, r3, lsr #16
  406faa:	d8e8      	bhi.n	406f7e <__multiply+0xba>
  406fac:	6003      	str	r3, [r0, #0]
  406fae:	f10c 0c04 	add.w	ip, ip, #4
  406fb2:	45e2      	cmp	sl, ip
  406fb4:	f109 0904 	add.w	r9, r9, #4
  406fb8:	d8b7      	bhi.n	406f2a <__multiply+0x66>
  406fba:	f8dd a004 	ldr.w	sl, [sp, #4]
  406fbe:	f1b8 0f00 	cmp.w	r8, #0
  406fc2:	dd0b      	ble.n	406fdc <__multiply+0x118>
  406fc4:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  406fc8:	f1aa 0a04 	sub.w	sl, sl, #4
  406fcc:	b11b      	cbz	r3, 406fd6 <__multiply+0x112>
  406fce:	e005      	b.n	406fdc <__multiply+0x118>
  406fd0:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  406fd4:	b913      	cbnz	r3, 406fdc <__multiply+0x118>
  406fd6:	f1b8 0801 	subs.w	r8, r8, #1
  406fda:	d1f9      	bne.n	406fd0 <__multiply+0x10c>
  406fdc:	9800      	ldr	r0, [sp, #0]
  406fde:	f8c0 8010 	str.w	r8, [r0, #16]
  406fe2:	b003      	add	sp, #12
  406fe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406fe8 <__pow5mult>:
  406fe8:	f012 0303 	ands.w	r3, r2, #3
  406fec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406ff0:	4614      	mov	r4, r2
  406ff2:	4607      	mov	r7, r0
  406ff4:	d12e      	bne.n	407054 <__pow5mult+0x6c>
  406ff6:	460d      	mov	r5, r1
  406ff8:	10a4      	asrs	r4, r4, #2
  406ffa:	d01c      	beq.n	407036 <__pow5mult+0x4e>
  406ffc:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  406ffe:	b396      	cbz	r6, 407066 <__pow5mult+0x7e>
  407000:	07e3      	lsls	r3, r4, #31
  407002:	f04f 0800 	mov.w	r8, #0
  407006:	d406      	bmi.n	407016 <__pow5mult+0x2e>
  407008:	1064      	asrs	r4, r4, #1
  40700a:	d014      	beq.n	407036 <__pow5mult+0x4e>
  40700c:	6830      	ldr	r0, [r6, #0]
  40700e:	b1a8      	cbz	r0, 40703c <__pow5mult+0x54>
  407010:	4606      	mov	r6, r0
  407012:	07e3      	lsls	r3, r4, #31
  407014:	d5f8      	bpl.n	407008 <__pow5mult+0x20>
  407016:	4632      	mov	r2, r6
  407018:	4629      	mov	r1, r5
  40701a:	4638      	mov	r0, r7
  40701c:	f7ff ff52 	bl	406ec4 <__multiply>
  407020:	b1b5      	cbz	r5, 407050 <__pow5mult+0x68>
  407022:	686a      	ldr	r2, [r5, #4]
  407024:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407026:	1064      	asrs	r4, r4, #1
  407028:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40702c:	6029      	str	r1, [r5, #0]
  40702e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  407032:	4605      	mov	r5, r0
  407034:	d1ea      	bne.n	40700c <__pow5mult+0x24>
  407036:	4628      	mov	r0, r5
  407038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40703c:	4632      	mov	r2, r6
  40703e:	4631      	mov	r1, r6
  407040:	4638      	mov	r0, r7
  407042:	f7ff ff3f 	bl	406ec4 <__multiply>
  407046:	6030      	str	r0, [r6, #0]
  407048:	f8c0 8000 	str.w	r8, [r0]
  40704c:	4606      	mov	r6, r0
  40704e:	e7e0      	b.n	407012 <__pow5mult+0x2a>
  407050:	4605      	mov	r5, r0
  407052:	e7d9      	b.n	407008 <__pow5mult+0x20>
  407054:	1e5a      	subs	r2, r3, #1
  407056:	4d0b      	ldr	r5, [pc, #44]	; (407084 <__pow5mult+0x9c>)
  407058:	2300      	movs	r3, #0
  40705a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40705e:	f7ff fe97 	bl	406d90 <__multadd>
  407062:	4605      	mov	r5, r0
  407064:	e7c8      	b.n	406ff8 <__pow5mult+0x10>
  407066:	2101      	movs	r1, #1
  407068:	4638      	mov	r0, r7
  40706a:	f7ff fe61 	bl	406d30 <_Balloc>
  40706e:	f240 2171 	movw	r1, #625	; 0x271
  407072:	2201      	movs	r2, #1
  407074:	2300      	movs	r3, #0
  407076:	6141      	str	r1, [r0, #20]
  407078:	6102      	str	r2, [r0, #16]
  40707a:	4606      	mov	r6, r0
  40707c:	64b8      	str	r0, [r7, #72]	; 0x48
  40707e:	6003      	str	r3, [r0, #0]
  407080:	e7be      	b.n	407000 <__pow5mult+0x18>
  407082:	bf00      	nop
  407084:	00407db8 	.word	0x00407db8

00407088 <__lshift>:
  407088:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40708c:	4691      	mov	r9, r2
  40708e:	690a      	ldr	r2, [r1, #16]
  407090:	688b      	ldr	r3, [r1, #8]
  407092:	ea4f 1469 	mov.w	r4, r9, asr #5
  407096:	eb04 0802 	add.w	r8, r4, r2
  40709a:	f108 0501 	add.w	r5, r8, #1
  40709e:	429d      	cmp	r5, r3
  4070a0:	460e      	mov	r6, r1
  4070a2:	4607      	mov	r7, r0
  4070a4:	6849      	ldr	r1, [r1, #4]
  4070a6:	dd04      	ble.n	4070b2 <__lshift+0x2a>
  4070a8:	005b      	lsls	r3, r3, #1
  4070aa:	429d      	cmp	r5, r3
  4070ac:	f101 0101 	add.w	r1, r1, #1
  4070b0:	dcfa      	bgt.n	4070a8 <__lshift+0x20>
  4070b2:	4638      	mov	r0, r7
  4070b4:	f7ff fe3c 	bl	406d30 <_Balloc>
  4070b8:	2c00      	cmp	r4, #0
  4070ba:	f100 0314 	add.w	r3, r0, #20
  4070be:	dd06      	ble.n	4070ce <__lshift+0x46>
  4070c0:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4070c4:	2100      	movs	r1, #0
  4070c6:	f843 1b04 	str.w	r1, [r3], #4
  4070ca:	429a      	cmp	r2, r3
  4070cc:	d1fb      	bne.n	4070c6 <__lshift+0x3e>
  4070ce:	6934      	ldr	r4, [r6, #16]
  4070d0:	f106 0114 	add.w	r1, r6, #20
  4070d4:	f019 091f 	ands.w	r9, r9, #31
  4070d8:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4070dc:	d01d      	beq.n	40711a <__lshift+0x92>
  4070de:	f1c9 0c20 	rsb	ip, r9, #32
  4070e2:	2200      	movs	r2, #0
  4070e4:	680c      	ldr	r4, [r1, #0]
  4070e6:	fa04 f409 	lsl.w	r4, r4, r9
  4070ea:	4314      	orrs	r4, r2
  4070ec:	f843 4b04 	str.w	r4, [r3], #4
  4070f0:	f851 2b04 	ldr.w	r2, [r1], #4
  4070f4:	458e      	cmp	lr, r1
  4070f6:	fa22 f20c 	lsr.w	r2, r2, ip
  4070fa:	d8f3      	bhi.n	4070e4 <__lshift+0x5c>
  4070fc:	601a      	str	r2, [r3, #0]
  4070fe:	b10a      	cbz	r2, 407104 <__lshift+0x7c>
  407100:	f108 0502 	add.w	r5, r8, #2
  407104:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  407106:	6872      	ldr	r2, [r6, #4]
  407108:	3d01      	subs	r5, #1
  40710a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40710e:	6105      	str	r5, [r0, #16]
  407110:	6031      	str	r1, [r6, #0]
  407112:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  407116:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40711a:	3b04      	subs	r3, #4
  40711c:	f851 2b04 	ldr.w	r2, [r1], #4
  407120:	f843 2f04 	str.w	r2, [r3, #4]!
  407124:	458e      	cmp	lr, r1
  407126:	d8f9      	bhi.n	40711c <__lshift+0x94>
  407128:	e7ec      	b.n	407104 <__lshift+0x7c>
  40712a:	bf00      	nop

0040712c <__mcmp>:
  40712c:	b430      	push	{r4, r5}
  40712e:	690b      	ldr	r3, [r1, #16]
  407130:	4605      	mov	r5, r0
  407132:	6900      	ldr	r0, [r0, #16]
  407134:	1ac0      	subs	r0, r0, r3
  407136:	d10f      	bne.n	407158 <__mcmp+0x2c>
  407138:	009b      	lsls	r3, r3, #2
  40713a:	3514      	adds	r5, #20
  40713c:	3114      	adds	r1, #20
  40713e:	4419      	add	r1, r3
  407140:	442b      	add	r3, r5
  407142:	e001      	b.n	407148 <__mcmp+0x1c>
  407144:	429d      	cmp	r5, r3
  407146:	d207      	bcs.n	407158 <__mcmp+0x2c>
  407148:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  40714c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  407150:	4294      	cmp	r4, r2
  407152:	d0f7      	beq.n	407144 <__mcmp+0x18>
  407154:	d302      	bcc.n	40715c <__mcmp+0x30>
  407156:	2001      	movs	r0, #1
  407158:	bc30      	pop	{r4, r5}
  40715a:	4770      	bx	lr
  40715c:	f04f 30ff 	mov.w	r0, #4294967295
  407160:	e7fa      	b.n	407158 <__mcmp+0x2c>
  407162:	bf00      	nop

00407164 <__mdiff>:
  407164:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407168:	690f      	ldr	r7, [r1, #16]
  40716a:	460e      	mov	r6, r1
  40716c:	6911      	ldr	r1, [r2, #16]
  40716e:	1a7f      	subs	r7, r7, r1
  407170:	2f00      	cmp	r7, #0
  407172:	4690      	mov	r8, r2
  407174:	d117      	bne.n	4071a6 <__mdiff+0x42>
  407176:	0089      	lsls	r1, r1, #2
  407178:	f106 0514 	add.w	r5, r6, #20
  40717c:	f102 0e14 	add.w	lr, r2, #20
  407180:	186b      	adds	r3, r5, r1
  407182:	4471      	add	r1, lr
  407184:	e001      	b.n	40718a <__mdiff+0x26>
  407186:	429d      	cmp	r5, r3
  407188:	d25c      	bcs.n	407244 <__mdiff+0xe0>
  40718a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40718e:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  407192:	42a2      	cmp	r2, r4
  407194:	d0f7      	beq.n	407186 <__mdiff+0x22>
  407196:	d25e      	bcs.n	407256 <__mdiff+0xf2>
  407198:	4633      	mov	r3, r6
  40719a:	462c      	mov	r4, r5
  40719c:	4646      	mov	r6, r8
  40719e:	4675      	mov	r5, lr
  4071a0:	4698      	mov	r8, r3
  4071a2:	2701      	movs	r7, #1
  4071a4:	e005      	b.n	4071b2 <__mdiff+0x4e>
  4071a6:	db58      	blt.n	40725a <__mdiff+0xf6>
  4071a8:	f106 0514 	add.w	r5, r6, #20
  4071ac:	f108 0414 	add.w	r4, r8, #20
  4071b0:	2700      	movs	r7, #0
  4071b2:	6871      	ldr	r1, [r6, #4]
  4071b4:	f7ff fdbc 	bl	406d30 <_Balloc>
  4071b8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4071bc:	6936      	ldr	r6, [r6, #16]
  4071be:	60c7      	str	r7, [r0, #12]
  4071c0:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4071c4:	46a6      	mov	lr, r4
  4071c6:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4071ca:	f100 0414 	add.w	r4, r0, #20
  4071ce:	2300      	movs	r3, #0
  4071d0:	f85e 1b04 	ldr.w	r1, [lr], #4
  4071d4:	f855 8b04 	ldr.w	r8, [r5], #4
  4071d8:	b28a      	uxth	r2, r1
  4071da:	fa13 f388 	uxtah	r3, r3, r8
  4071de:	0c09      	lsrs	r1, r1, #16
  4071e0:	1a9a      	subs	r2, r3, r2
  4071e2:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4071e6:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4071ea:	b292      	uxth	r2, r2
  4071ec:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4071f0:	45f4      	cmp	ip, lr
  4071f2:	f844 2b04 	str.w	r2, [r4], #4
  4071f6:	ea4f 4323 	mov.w	r3, r3, asr #16
  4071fa:	d8e9      	bhi.n	4071d0 <__mdiff+0x6c>
  4071fc:	42af      	cmp	r7, r5
  4071fe:	d917      	bls.n	407230 <__mdiff+0xcc>
  407200:	46a4      	mov	ip, r4
  407202:	46ae      	mov	lr, r5
  407204:	f85e 2b04 	ldr.w	r2, [lr], #4
  407208:	fa13 f382 	uxtah	r3, r3, r2
  40720c:	1419      	asrs	r1, r3, #16
  40720e:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  407212:	b29b      	uxth	r3, r3
  407214:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  407218:	4577      	cmp	r7, lr
  40721a:	f84c 2b04 	str.w	r2, [ip], #4
  40721e:	ea4f 4321 	mov.w	r3, r1, asr #16
  407222:	d8ef      	bhi.n	407204 <__mdiff+0xa0>
  407224:	43ed      	mvns	r5, r5
  407226:	442f      	add	r7, r5
  407228:	f027 0703 	bic.w	r7, r7, #3
  40722c:	3704      	adds	r7, #4
  40722e:	443c      	add	r4, r7
  407230:	3c04      	subs	r4, #4
  407232:	b922      	cbnz	r2, 40723e <__mdiff+0xda>
  407234:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  407238:	3e01      	subs	r6, #1
  40723a:	2b00      	cmp	r3, #0
  40723c:	d0fa      	beq.n	407234 <__mdiff+0xd0>
  40723e:	6106      	str	r6, [r0, #16]
  407240:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407244:	2100      	movs	r1, #0
  407246:	f7ff fd73 	bl	406d30 <_Balloc>
  40724a:	2201      	movs	r2, #1
  40724c:	2300      	movs	r3, #0
  40724e:	6102      	str	r2, [r0, #16]
  407250:	6143      	str	r3, [r0, #20]
  407252:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  407256:	4674      	mov	r4, lr
  407258:	e7ab      	b.n	4071b2 <__mdiff+0x4e>
  40725a:	4633      	mov	r3, r6
  40725c:	f106 0414 	add.w	r4, r6, #20
  407260:	f102 0514 	add.w	r5, r2, #20
  407264:	4616      	mov	r6, r2
  407266:	2701      	movs	r7, #1
  407268:	4698      	mov	r8, r3
  40726a:	e7a2      	b.n	4071b2 <__mdiff+0x4e>

0040726c <__d2b>:
  40726c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  407270:	b082      	sub	sp, #8
  407272:	2101      	movs	r1, #1
  407274:	461c      	mov	r4, r3
  407276:	f3c3 570a 	ubfx	r7, r3, #20, #11
  40727a:	4615      	mov	r5, r2
  40727c:	9e08      	ldr	r6, [sp, #32]
  40727e:	f7ff fd57 	bl	406d30 <_Balloc>
  407282:	f3c4 0413 	ubfx	r4, r4, #0, #20
  407286:	4680      	mov	r8, r0
  407288:	b10f      	cbz	r7, 40728e <__d2b+0x22>
  40728a:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40728e:	9401      	str	r4, [sp, #4]
  407290:	b31d      	cbz	r5, 4072da <__d2b+0x6e>
  407292:	a802      	add	r0, sp, #8
  407294:	f840 5d08 	str.w	r5, [r0, #-8]!
  407298:	f7ff fdda 	bl	406e50 <__lo0bits>
  40729c:	2800      	cmp	r0, #0
  40729e:	d134      	bne.n	40730a <__d2b+0x9e>
  4072a0:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4072a4:	f8c8 2014 	str.w	r2, [r8, #20]
  4072a8:	2b00      	cmp	r3, #0
  4072aa:	bf0c      	ite	eq
  4072ac:	2101      	moveq	r1, #1
  4072ae:	2102      	movne	r1, #2
  4072b0:	f8c8 3018 	str.w	r3, [r8, #24]
  4072b4:	f8c8 1010 	str.w	r1, [r8, #16]
  4072b8:	b9df      	cbnz	r7, 4072f2 <__d2b+0x86>
  4072ba:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4072be:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4072c2:	6030      	str	r0, [r6, #0]
  4072c4:	6918      	ldr	r0, [r3, #16]
  4072c6:	f7ff fda3 	bl	406e10 <__hi0bits>
  4072ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4072cc:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4072d0:	6018      	str	r0, [r3, #0]
  4072d2:	4640      	mov	r0, r8
  4072d4:	b002      	add	sp, #8
  4072d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4072da:	a801      	add	r0, sp, #4
  4072dc:	f7ff fdb8 	bl	406e50 <__lo0bits>
  4072e0:	9b01      	ldr	r3, [sp, #4]
  4072e2:	f8c8 3014 	str.w	r3, [r8, #20]
  4072e6:	2101      	movs	r1, #1
  4072e8:	3020      	adds	r0, #32
  4072ea:	f8c8 1010 	str.w	r1, [r8, #16]
  4072ee:	2f00      	cmp	r7, #0
  4072f0:	d0e3      	beq.n	4072ba <__d2b+0x4e>
  4072f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4072f4:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4072f8:	4407      	add	r7, r0
  4072fa:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4072fe:	6037      	str	r7, [r6, #0]
  407300:	6018      	str	r0, [r3, #0]
  407302:	4640      	mov	r0, r8
  407304:	b002      	add	sp, #8
  407306:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40730a:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40730e:	f1c0 0220 	rsb	r2, r0, #32
  407312:	fa03 f202 	lsl.w	r2, r3, r2
  407316:	430a      	orrs	r2, r1
  407318:	40c3      	lsrs	r3, r0
  40731a:	9301      	str	r3, [sp, #4]
  40731c:	f8c8 2014 	str.w	r2, [r8, #20]
  407320:	e7c2      	b.n	4072a8 <__d2b+0x3c>
  407322:	bf00      	nop

00407324 <_realloc_r>:
  407324:	2900      	cmp	r1, #0
  407326:	f000 8095 	beq.w	407454 <_realloc_r+0x130>
  40732a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40732e:	460d      	mov	r5, r1
  407330:	4616      	mov	r6, r2
  407332:	b083      	sub	sp, #12
  407334:	4680      	mov	r8, r0
  407336:	f106 070b 	add.w	r7, r6, #11
  40733a:	f7ff fced 	bl	406d18 <__malloc_lock>
  40733e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  407342:	2f16      	cmp	r7, #22
  407344:	f02e 0403 	bic.w	r4, lr, #3
  407348:	f1a5 0908 	sub.w	r9, r5, #8
  40734c:	d83c      	bhi.n	4073c8 <_realloc_r+0xa4>
  40734e:	2210      	movs	r2, #16
  407350:	4617      	mov	r7, r2
  407352:	42be      	cmp	r6, r7
  407354:	d83d      	bhi.n	4073d2 <_realloc_r+0xae>
  407356:	4294      	cmp	r4, r2
  407358:	da43      	bge.n	4073e2 <_realloc_r+0xbe>
  40735a:	4bc4      	ldr	r3, [pc, #784]	; (40766c <_realloc_r+0x348>)
  40735c:	6899      	ldr	r1, [r3, #8]
  40735e:	eb09 0004 	add.w	r0, r9, r4
  407362:	4288      	cmp	r0, r1
  407364:	f000 80b4 	beq.w	4074d0 <_realloc_r+0x1ac>
  407368:	6843      	ldr	r3, [r0, #4]
  40736a:	f023 0101 	bic.w	r1, r3, #1
  40736e:	4401      	add	r1, r0
  407370:	6849      	ldr	r1, [r1, #4]
  407372:	07c9      	lsls	r1, r1, #31
  407374:	d54c      	bpl.n	407410 <_realloc_r+0xec>
  407376:	f01e 0f01 	tst.w	lr, #1
  40737a:	f000 809b 	beq.w	4074b4 <_realloc_r+0x190>
  40737e:	4631      	mov	r1, r6
  407380:	4640      	mov	r0, r8
  407382:	f7ff f949 	bl	406618 <_malloc_r>
  407386:	4606      	mov	r6, r0
  407388:	2800      	cmp	r0, #0
  40738a:	d03a      	beq.n	407402 <_realloc_r+0xde>
  40738c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  407390:	f023 0301 	bic.w	r3, r3, #1
  407394:	444b      	add	r3, r9
  407396:	f1a0 0208 	sub.w	r2, r0, #8
  40739a:	429a      	cmp	r2, r3
  40739c:	f000 8121 	beq.w	4075e2 <_realloc_r+0x2be>
  4073a0:	1f22      	subs	r2, r4, #4
  4073a2:	2a24      	cmp	r2, #36	; 0x24
  4073a4:	f200 8107 	bhi.w	4075b6 <_realloc_r+0x292>
  4073a8:	2a13      	cmp	r2, #19
  4073aa:	f200 80db 	bhi.w	407564 <_realloc_r+0x240>
  4073ae:	4603      	mov	r3, r0
  4073b0:	462a      	mov	r2, r5
  4073b2:	6811      	ldr	r1, [r2, #0]
  4073b4:	6019      	str	r1, [r3, #0]
  4073b6:	6851      	ldr	r1, [r2, #4]
  4073b8:	6059      	str	r1, [r3, #4]
  4073ba:	6892      	ldr	r2, [r2, #8]
  4073bc:	609a      	str	r2, [r3, #8]
  4073be:	4629      	mov	r1, r5
  4073c0:	4640      	mov	r0, r8
  4073c2:	f7ff f831 	bl	406428 <_free_r>
  4073c6:	e01c      	b.n	407402 <_realloc_r+0xde>
  4073c8:	f027 0707 	bic.w	r7, r7, #7
  4073cc:	2f00      	cmp	r7, #0
  4073ce:	463a      	mov	r2, r7
  4073d0:	dabf      	bge.n	407352 <_realloc_r+0x2e>
  4073d2:	2600      	movs	r6, #0
  4073d4:	230c      	movs	r3, #12
  4073d6:	4630      	mov	r0, r6
  4073d8:	f8c8 3000 	str.w	r3, [r8]
  4073dc:	b003      	add	sp, #12
  4073de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4073e2:	462e      	mov	r6, r5
  4073e4:	1be3      	subs	r3, r4, r7
  4073e6:	2b0f      	cmp	r3, #15
  4073e8:	d81e      	bhi.n	407428 <_realloc_r+0x104>
  4073ea:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4073ee:	f003 0301 	and.w	r3, r3, #1
  4073f2:	4323      	orrs	r3, r4
  4073f4:	444c      	add	r4, r9
  4073f6:	f8c9 3004 	str.w	r3, [r9, #4]
  4073fa:	6863      	ldr	r3, [r4, #4]
  4073fc:	f043 0301 	orr.w	r3, r3, #1
  407400:	6063      	str	r3, [r4, #4]
  407402:	4640      	mov	r0, r8
  407404:	f7ff fc8e 	bl	406d24 <__malloc_unlock>
  407408:	4630      	mov	r0, r6
  40740a:	b003      	add	sp, #12
  40740c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407410:	f023 0303 	bic.w	r3, r3, #3
  407414:	18e1      	adds	r1, r4, r3
  407416:	4291      	cmp	r1, r2
  407418:	db1f      	blt.n	40745a <_realloc_r+0x136>
  40741a:	68c3      	ldr	r3, [r0, #12]
  40741c:	6882      	ldr	r2, [r0, #8]
  40741e:	462e      	mov	r6, r5
  407420:	60d3      	str	r3, [r2, #12]
  407422:	460c      	mov	r4, r1
  407424:	609a      	str	r2, [r3, #8]
  407426:	e7dd      	b.n	4073e4 <_realloc_r+0xc0>
  407428:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40742c:	eb09 0107 	add.w	r1, r9, r7
  407430:	f002 0201 	and.w	r2, r2, #1
  407434:	444c      	add	r4, r9
  407436:	f043 0301 	orr.w	r3, r3, #1
  40743a:	4317      	orrs	r7, r2
  40743c:	f8c9 7004 	str.w	r7, [r9, #4]
  407440:	604b      	str	r3, [r1, #4]
  407442:	6863      	ldr	r3, [r4, #4]
  407444:	f043 0301 	orr.w	r3, r3, #1
  407448:	3108      	adds	r1, #8
  40744a:	6063      	str	r3, [r4, #4]
  40744c:	4640      	mov	r0, r8
  40744e:	f7fe ffeb 	bl	406428 <_free_r>
  407452:	e7d6      	b.n	407402 <_realloc_r+0xde>
  407454:	4611      	mov	r1, r2
  407456:	f7ff b8df 	b.w	406618 <_malloc_r>
  40745a:	f01e 0f01 	tst.w	lr, #1
  40745e:	d18e      	bne.n	40737e <_realloc_r+0x5a>
  407460:	f855 1c08 	ldr.w	r1, [r5, #-8]
  407464:	eba9 0a01 	sub.w	sl, r9, r1
  407468:	f8da 1004 	ldr.w	r1, [sl, #4]
  40746c:	f021 0103 	bic.w	r1, r1, #3
  407470:	440b      	add	r3, r1
  407472:	4423      	add	r3, r4
  407474:	4293      	cmp	r3, r2
  407476:	db25      	blt.n	4074c4 <_realloc_r+0x1a0>
  407478:	68c2      	ldr	r2, [r0, #12]
  40747a:	6881      	ldr	r1, [r0, #8]
  40747c:	4656      	mov	r6, sl
  40747e:	60ca      	str	r2, [r1, #12]
  407480:	6091      	str	r1, [r2, #8]
  407482:	f8da 100c 	ldr.w	r1, [sl, #12]
  407486:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40748a:	1f22      	subs	r2, r4, #4
  40748c:	2a24      	cmp	r2, #36	; 0x24
  40748e:	60c1      	str	r1, [r0, #12]
  407490:	6088      	str	r0, [r1, #8]
  407492:	f200 8094 	bhi.w	4075be <_realloc_r+0x29a>
  407496:	2a13      	cmp	r2, #19
  407498:	d96f      	bls.n	40757a <_realloc_r+0x256>
  40749a:	6829      	ldr	r1, [r5, #0]
  40749c:	f8ca 1008 	str.w	r1, [sl, #8]
  4074a0:	6869      	ldr	r1, [r5, #4]
  4074a2:	f8ca 100c 	str.w	r1, [sl, #12]
  4074a6:	2a1b      	cmp	r2, #27
  4074a8:	f200 80a2 	bhi.w	4075f0 <_realloc_r+0x2cc>
  4074ac:	3508      	adds	r5, #8
  4074ae:	f10a 0210 	add.w	r2, sl, #16
  4074b2:	e063      	b.n	40757c <_realloc_r+0x258>
  4074b4:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4074b8:	eba9 0a03 	sub.w	sl, r9, r3
  4074bc:	f8da 1004 	ldr.w	r1, [sl, #4]
  4074c0:	f021 0103 	bic.w	r1, r1, #3
  4074c4:	1863      	adds	r3, r4, r1
  4074c6:	4293      	cmp	r3, r2
  4074c8:	f6ff af59 	blt.w	40737e <_realloc_r+0x5a>
  4074cc:	4656      	mov	r6, sl
  4074ce:	e7d8      	b.n	407482 <_realloc_r+0x15e>
  4074d0:	6841      	ldr	r1, [r0, #4]
  4074d2:	f021 0b03 	bic.w	fp, r1, #3
  4074d6:	44a3      	add	fp, r4
  4074d8:	f107 0010 	add.w	r0, r7, #16
  4074dc:	4583      	cmp	fp, r0
  4074de:	da56      	bge.n	40758e <_realloc_r+0x26a>
  4074e0:	f01e 0f01 	tst.w	lr, #1
  4074e4:	f47f af4b 	bne.w	40737e <_realloc_r+0x5a>
  4074e8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4074ec:	eba9 0a01 	sub.w	sl, r9, r1
  4074f0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4074f4:	f021 0103 	bic.w	r1, r1, #3
  4074f8:	448b      	add	fp, r1
  4074fa:	4558      	cmp	r0, fp
  4074fc:	dce2      	bgt.n	4074c4 <_realloc_r+0x1a0>
  4074fe:	4656      	mov	r6, sl
  407500:	f8da 100c 	ldr.w	r1, [sl, #12]
  407504:	f856 0f08 	ldr.w	r0, [r6, #8]!
  407508:	1f22      	subs	r2, r4, #4
  40750a:	2a24      	cmp	r2, #36	; 0x24
  40750c:	60c1      	str	r1, [r0, #12]
  40750e:	6088      	str	r0, [r1, #8]
  407510:	f200 808f 	bhi.w	407632 <_realloc_r+0x30e>
  407514:	2a13      	cmp	r2, #19
  407516:	f240 808a 	bls.w	40762e <_realloc_r+0x30a>
  40751a:	6829      	ldr	r1, [r5, #0]
  40751c:	f8ca 1008 	str.w	r1, [sl, #8]
  407520:	6869      	ldr	r1, [r5, #4]
  407522:	f8ca 100c 	str.w	r1, [sl, #12]
  407526:	2a1b      	cmp	r2, #27
  407528:	f200 808a 	bhi.w	407640 <_realloc_r+0x31c>
  40752c:	3508      	adds	r5, #8
  40752e:	f10a 0210 	add.w	r2, sl, #16
  407532:	6829      	ldr	r1, [r5, #0]
  407534:	6011      	str	r1, [r2, #0]
  407536:	6869      	ldr	r1, [r5, #4]
  407538:	6051      	str	r1, [r2, #4]
  40753a:	68a9      	ldr	r1, [r5, #8]
  40753c:	6091      	str	r1, [r2, #8]
  40753e:	eb0a 0107 	add.w	r1, sl, r7
  407542:	ebab 0207 	sub.w	r2, fp, r7
  407546:	f042 0201 	orr.w	r2, r2, #1
  40754a:	6099      	str	r1, [r3, #8]
  40754c:	604a      	str	r2, [r1, #4]
  40754e:	f8da 3004 	ldr.w	r3, [sl, #4]
  407552:	f003 0301 	and.w	r3, r3, #1
  407556:	431f      	orrs	r7, r3
  407558:	4640      	mov	r0, r8
  40755a:	f8ca 7004 	str.w	r7, [sl, #4]
  40755e:	f7ff fbe1 	bl	406d24 <__malloc_unlock>
  407562:	e751      	b.n	407408 <_realloc_r+0xe4>
  407564:	682b      	ldr	r3, [r5, #0]
  407566:	6003      	str	r3, [r0, #0]
  407568:	686b      	ldr	r3, [r5, #4]
  40756a:	6043      	str	r3, [r0, #4]
  40756c:	2a1b      	cmp	r2, #27
  40756e:	d82d      	bhi.n	4075cc <_realloc_r+0x2a8>
  407570:	f100 0308 	add.w	r3, r0, #8
  407574:	f105 0208 	add.w	r2, r5, #8
  407578:	e71b      	b.n	4073b2 <_realloc_r+0x8e>
  40757a:	4632      	mov	r2, r6
  40757c:	6829      	ldr	r1, [r5, #0]
  40757e:	6011      	str	r1, [r2, #0]
  407580:	6869      	ldr	r1, [r5, #4]
  407582:	6051      	str	r1, [r2, #4]
  407584:	68a9      	ldr	r1, [r5, #8]
  407586:	6091      	str	r1, [r2, #8]
  407588:	461c      	mov	r4, r3
  40758a:	46d1      	mov	r9, sl
  40758c:	e72a      	b.n	4073e4 <_realloc_r+0xc0>
  40758e:	eb09 0107 	add.w	r1, r9, r7
  407592:	ebab 0b07 	sub.w	fp, fp, r7
  407596:	f04b 0201 	orr.w	r2, fp, #1
  40759a:	6099      	str	r1, [r3, #8]
  40759c:	604a      	str	r2, [r1, #4]
  40759e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4075a2:	f003 0301 	and.w	r3, r3, #1
  4075a6:	431f      	orrs	r7, r3
  4075a8:	4640      	mov	r0, r8
  4075aa:	f845 7c04 	str.w	r7, [r5, #-4]
  4075ae:	f7ff fbb9 	bl	406d24 <__malloc_unlock>
  4075b2:	462e      	mov	r6, r5
  4075b4:	e728      	b.n	407408 <_realloc_r+0xe4>
  4075b6:	4629      	mov	r1, r5
  4075b8:	f7ff fb4a 	bl	406c50 <memmove>
  4075bc:	e6ff      	b.n	4073be <_realloc_r+0x9a>
  4075be:	4629      	mov	r1, r5
  4075c0:	4630      	mov	r0, r6
  4075c2:	461c      	mov	r4, r3
  4075c4:	46d1      	mov	r9, sl
  4075c6:	f7ff fb43 	bl	406c50 <memmove>
  4075ca:	e70b      	b.n	4073e4 <_realloc_r+0xc0>
  4075cc:	68ab      	ldr	r3, [r5, #8]
  4075ce:	6083      	str	r3, [r0, #8]
  4075d0:	68eb      	ldr	r3, [r5, #12]
  4075d2:	60c3      	str	r3, [r0, #12]
  4075d4:	2a24      	cmp	r2, #36	; 0x24
  4075d6:	d017      	beq.n	407608 <_realloc_r+0x2e4>
  4075d8:	f100 0310 	add.w	r3, r0, #16
  4075dc:	f105 0210 	add.w	r2, r5, #16
  4075e0:	e6e7      	b.n	4073b2 <_realloc_r+0x8e>
  4075e2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4075e6:	f023 0303 	bic.w	r3, r3, #3
  4075ea:	441c      	add	r4, r3
  4075ec:	462e      	mov	r6, r5
  4075ee:	e6f9      	b.n	4073e4 <_realloc_r+0xc0>
  4075f0:	68a9      	ldr	r1, [r5, #8]
  4075f2:	f8ca 1010 	str.w	r1, [sl, #16]
  4075f6:	68e9      	ldr	r1, [r5, #12]
  4075f8:	f8ca 1014 	str.w	r1, [sl, #20]
  4075fc:	2a24      	cmp	r2, #36	; 0x24
  4075fe:	d00c      	beq.n	40761a <_realloc_r+0x2f6>
  407600:	3510      	adds	r5, #16
  407602:	f10a 0218 	add.w	r2, sl, #24
  407606:	e7b9      	b.n	40757c <_realloc_r+0x258>
  407608:	692b      	ldr	r3, [r5, #16]
  40760a:	6103      	str	r3, [r0, #16]
  40760c:	696b      	ldr	r3, [r5, #20]
  40760e:	6143      	str	r3, [r0, #20]
  407610:	f105 0218 	add.w	r2, r5, #24
  407614:	f100 0318 	add.w	r3, r0, #24
  407618:	e6cb      	b.n	4073b2 <_realloc_r+0x8e>
  40761a:	692a      	ldr	r2, [r5, #16]
  40761c:	f8ca 2018 	str.w	r2, [sl, #24]
  407620:	696a      	ldr	r2, [r5, #20]
  407622:	f8ca 201c 	str.w	r2, [sl, #28]
  407626:	3518      	adds	r5, #24
  407628:	f10a 0220 	add.w	r2, sl, #32
  40762c:	e7a6      	b.n	40757c <_realloc_r+0x258>
  40762e:	4632      	mov	r2, r6
  407630:	e77f      	b.n	407532 <_realloc_r+0x20e>
  407632:	4629      	mov	r1, r5
  407634:	4630      	mov	r0, r6
  407636:	9301      	str	r3, [sp, #4]
  407638:	f7ff fb0a 	bl	406c50 <memmove>
  40763c:	9b01      	ldr	r3, [sp, #4]
  40763e:	e77e      	b.n	40753e <_realloc_r+0x21a>
  407640:	68a9      	ldr	r1, [r5, #8]
  407642:	f8ca 1010 	str.w	r1, [sl, #16]
  407646:	68e9      	ldr	r1, [r5, #12]
  407648:	f8ca 1014 	str.w	r1, [sl, #20]
  40764c:	2a24      	cmp	r2, #36	; 0x24
  40764e:	d003      	beq.n	407658 <_realloc_r+0x334>
  407650:	3510      	adds	r5, #16
  407652:	f10a 0218 	add.w	r2, sl, #24
  407656:	e76c      	b.n	407532 <_realloc_r+0x20e>
  407658:	692a      	ldr	r2, [r5, #16]
  40765a:	f8ca 2018 	str.w	r2, [sl, #24]
  40765e:	696a      	ldr	r2, [r5, #20]
  407660:	f8ca 201c 	str.w	r2, [sl, #28]
  407664:	3518      	adds	r5, #24
  407666:	f10a 0220 	add.w	r2, sl, #32
  40766a:	e762      	b.n	407532 <_realloc_r+0x20e>
  40766c:	20000648 	.word	0x20000648

00407670 <_sbrk_r>:
  407670:	b538      	push	{r3, r4, r5, lr}
  407672:	4c07      	ldr	r4, [pc, #28]	; (407690 <_sbrk_r+0x20>)
  407674:	2300      	movs	r3, #0
  407676:	4605      	mov	r5, r0
  407678:	4608      	mov	r0, r1
  40767a:	6023      	str	r3, [r4, #0]
  40767c:	f7fb fa7c 	bl	402b78 <_sbrk>
  407680:	1c43      	adds	r3, r0, #1
  407682:	d000      	beq.n	407686 <_sbrk_r+0x16>
  407684:	bd38      	pop	{r3, r4, r5, pc}
  407686:	6823      	ldr	r3, [r4, #0]
  407688:	2b00      	cmp	r3, #0
  40768a:	d0fb      	beq.n	407684 <_sbrk_r+0x14>
  40768c:	602b      	str	r3, [r5, #0]
  40768e:	bd38      	pop	{r3, r4, r5, pc}
  407690:	20000d18 	.word	0x20000d18

00407694 <__ssprint_r>:
  407694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  407698:	6893      	ldr	r3, [r2, #8]
  40769a:	b083      	sub	sp, #12
  40769c:	4690      	mov	r8, r2
  40769e:	2b00      	cmp	r3, #0
  4076a0:	d070      	beq.n	407784 <__ssprint_r+0xf0>
  4076a2:	4682      	mov	sl, r0
  4076a4:	460c      	mov	r4, r1
  4076a6:	6817      	ldr	r7, [r2, #0]
  4076a8:	688d      	ldr	r5, [r1, #8]
  4076aa:	6808      	ldr	r0, [r1, #0]
  4076ac:	e042      	b.n	407734 <__ssprint_r+0xa0>
  4076ae:	89a3      	ldrh	r3, [r4, #12]
  4076b0:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4076b4:	d02e      	beq.n	407714 <__ssprint_r+0x80>
  4076b6:	6965      	ldr	r5, [r4, #20]
  4076b8:	6921      	ldr	r1, [r4, #16]
  4076ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  4076be:	eba0 0b01 	sub.w	fp, r0, r1
  4076c2:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  4076c6:	f10b 0001 	add.w	r0, fp, #1
  4076ca:	106d      	asrs	r5, r5, #1
  4076cc:	4430      	add	r0, r6
  4076ce:	42a8      	cmp	r0, r5
  4076d0:	462a      	mov	r2, r5
  4076d2:	bf84      	itt	hi
  4076d4:	4605      	movhi	r5, r0
  4076d6:	462a      	movhi	r2, r5
  4076d8:	055b      	lsls	r3, r3, #21
  4076da:	d538      	bpl.n	40774e <__ssprint_r+0xba>
  4076dc:	4611      	mov	r1, r2
  4076de:	4650      	mov	r0, sl
  4076e0:	f7fe ff9a 	bl	406618 <_malloc_r>
  4076e4:	2800      	cmp	r0, #0
  4076e6:	d03c      	beq.n	407762 <__ssprint_r+0xce>
  4076e8:	465a      	mov	r2, fp
  4076ea:	6921      	ldr	r1, [r4, #16]
  4076ec:	9001      	str	r0, [sp, #4]
  4076ee:	f7fc fab5 	bl	403c5c <memcpy>
  4076f2:	89a2      	ldrh	r2, [r4, #12]
  4076f4:	9b01      	ldr	r3, [sp, #4]
  4076f6:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4076fa:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4076fe:	81a2      	strh	r2, [r4, #12]
  407700:	eba5 020b 	sub.w	r2, r5, fp
  407704:	eb03 000b 	add.w	r0, r3, fp
  407708:	6165      	str	r5, [r4, #20]
  40770a:	6123      	str	r3, [r4, #16]
  40770c:	6020      	str	r0, [r4, #0]
  40770e:	60a2      	str	r2, [r4, #8]
  407710:	4635      	mov	r5, r6
  407712:	46b3      	mov	fp, r6
  407714:	465a      	mov	r2, fp
  407716:	4649      	mov	r1, r9
  407718:	f7ff fa9a 	bl	406c50 <memmove>
  40771c:	f8d8 3008 	ldr.w	r3, [r8, #8]
  407720:	68a2      	ldr	r2, [r4, #8]
  407722:	6820      	ldr	r0, [r4, #0]
  407724:	1b55      	subs	r5, r2, r5
  407726:	4458      	add	r0, fp
  407728:	1b9e      	subs	r6, r3, r6
  40772a:	60a5      	str	r5, [r4, #8]
  40772c:	6020      	str	r0, [r4, #0]
  40772e:	f8c8 6008 	str.w	r6, [r8, #8]
  407732:	b33e      	cbz	r6, 407784 <__ssprint_r+0xf0>
  407734:	687e      	ldr	r6, [r7, #4]
  407736:	463b      	mov	r3, r7
  407738:	3708      	adds	r7, #8
  40773a:	2e00      	cmp	r6, #0
  40773c:	d0fa      	beq.n	407734 <__ssprint_r+0xa0>
  40773e:	42ae      	cmp	r6, r5
  407740:	f8d3 9000 	ldr.w	r9, [r3]
  407744:	46ab      	mov	fp, r5
  407746:	d2b2      	bcs.n	4076ae <__ssprint_r+0x1a>
  407748:	4635      	mov	r5, r6
  40774a:	46b3      	mov	fp, r6
  40774c:	e7e2      	b.n	407714 <__ssprint_r+0x80>
  40774e:	4650      	mov	r0, sl
  407750:	f7ff fde8 	bl	407324 <_realloc_r>
  407754:	4603      	mov	r3, r0
  407756:	2800      	cmp	r0, #0
  407758:	d1d2      	bne.n	407700 <__ssprint_r+0x6c>
  40775a:	6921      	ldr	r1, [r4, #16]
  40775c:	4650      	mov	r0, sl
  40775e:	f7fe fe63 	bl	406428 <_free_r>
  407762:	230c      	movs	r3, #12
  407764:	f8ca 3000 	str.w	r3, [sl]
  407768:	89a3      	ldrh	r3, [r4, #12]
  40776a:	2200      	movs	r2, #0
  40776c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  407770:	f04f 30ff 	mov.w	r0, #4294967295
  407774:	81a3      	strh	r3, [r4, #12]
  407776:	f8c8 2008 	str.w	r2, [r8, #8]
  40777a:	f8c8 2004 	str.w	r2, [r8, #4]
  40777e:	b003      	add	sp, #12
  407780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  407784:	2000      	movs	r0, #0
  407786:	f8c8 0004 	str.w	r0, [r8, #4]
  40778a:	b003      	add	sp, #12
  40778c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00407790 <__ascii_wctomb>:
  407790:	b121      	cbz	r1, 40779c <__ascii_wctomb+0xc>
  407792:	2aff      	cmp	r2, #255	; 0xff
  407794:	d804      	bhi.n	4077a0 <__ascii_wctomb+0x10>
  407796:	700a      	strb	r2, [r1, #0]
  407798:	2001      	movs	r0, #1
  40779a:	4770      	bx	lr
  40779c:	4608      	mov	r0, r1
  40779e:	4770      	bx	lr
  4077a0:	238a      	movs	r3, #138	; 0x8a
  4077a2:	6003      	str	r3, [r0, #0]
  4077a4:	f04f 30ff 	mov.w	r0, #4294967295
  4077a8:	4770      	bx	lr
  4077aa:	bf00      	nop

004077ac <__register_exitproc>:
  4077ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4077b0:	4d2c      	ldr	r5, [pc, #176]	; (407864 <__register_exitproc+0xb8>)
  4077b2:	4606      	mov	r6, r0
  4077b4:	6828      	ldr	r0, [r5, #0]
  4077b6:	4698      	mov	r8, r3
  4077b8:	460f      	mov	r7, r1
  4077ba:	4691      	mov	r9, r2
  4077bc:	f7fe ff28 	bl	406610 <__retarget_lock_acquire_recursive>
  4077c0:	4b29      	ldr	r3, [pc, #164]	; (407868 <__register_exitproc+0xbc>)
  4077c2:	681c      	ldr	r4, [r3, #0]
  4077c4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4077c8:	2b00      	cmp	r3, #0
  4077ca:	d03e      	beq.n	40784a <__register_exitproc+0x9e>
  4077cc:	685a      	ldr	r2, [r3, #4]
  4077ce:	2a1f      	cmp	r2, #31
  4077d0:	dc1c      	bgt.n	40780c <__register_exitproc+0x60>
  4077d2:	f102 0e01 	add.w	lr, r2, #1
  4077d6:	b176      	cbz	r6, 4077f6 <__register_exitproc+0x4a>
  4077d8:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4077dc:	2401      	movs	r4, #1
  4077de:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4077e2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4077e6:	4094      	lsls	r4, r2
  4077e8:	4320      	orrs	r0, r4
  4077ea:	2e02      	cmp	r6, #2
  4077ec:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4077f0:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4077f4:	d023      	beq.n	40783e <__register_exitproc+0x92>
  4077f6:	3202      	adds	r2, #2
  4077f8:	f8c3 e004 	str.w	lr, [r3, #4]
  4077fc:	6828      	ldr	r0, [r5, #0]
  4077fe:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  407802:	f7fe ff07 	bl	406614 <__retarget_lock_release_recursive>
  407806:	2000      	movs	r0, #0
  407808:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40780c:	4b17      	ldr	r3, [pc, #92]	; (40786c <__register_exitproc+0xc0>)
  40780e:	b30b      	cbz	r3, 407854 <__register_exitproc+0xa8>
  407810:	f44f 70c8 	mov.w	r0, #400	; 0x190
  407814:	f3af 8000 	nop.w
  407818:	4603      	mov	r3, r0
  40781a:	b1d8      	cbz	r0, 407854 <__register_exitproc+0xa8>
  40781c:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  407820:	6002      	str	r2, [r0, #0]
  407822:	2100      	movs	r1, #0
  407824:	6041      	str	r1, [r0, #4]
  407826:	460a      	mov	r2, r1
  407828:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  40782c:	f04f 0e01 	mov.w	lr, #1
  407830:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  407834:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  407838:	2e00      	cmp	r6, #0
  40783a:	d0dc      	beq.n	4077f6 <__register_exitproc+0x4a>
  40783c:	e7cc      	b.n	4077d8 <__register_exitproc+0x2c>
  40783e:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  407842:	430c      	orrs	r4, r1
  407844:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  407848:	e7d5      	b.n	4077f6 <__register_exitproc+0x4a>
  40784a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40784e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  407852:	e7bb      	b.n	4077cc <__register_exitproc+0x20>
  407854:	6828      	ldr	r0, [r5, #0]
  407856:	f7fe fedd 	bl	406614 <__retarget_lock_release_recursive>
  40785a:	f04f 30ff 	mov.w	r0, #4294967295
  40785e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  407862:	bf00      	nop
  407864:	200004d8 	.word	0x200004d8
  407868:	00407c40 	.word	0x00407c40
  40786c:	00000000 	.word	0x00000000

00407870 <_calloc_r>:
  407870:	b510      	push	{r4, lr}
  407872:	fb02 f101 	mul.w	r1, r2, r1
  407876:	f7fe fecf 	bl	406618 <_malloc_r>
  40787a:	4604      	mov	r4, r0
  40787c:	b1d8      	cbz	r0, 4078b6 <_calloc_r+0x46>
  40787e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  407882:	f022 0203 	bic.w	r2, r2, #3
  407886:	3a04      	subs	r2, #4
  407888:	2a24      	cmp	r2, #36	; 0x24
  40788a:	d818      	bhi.n	4078be <_calloc_r+0x4e>
  40788c:	2a13      	cmp	r2, #19
  40788e:	d914      	bls.n	4078ba <_calloc_r+0x4a>
  407890:	2300      	movs	r3, #0
  407892:	2a1b      	cmp	r2, #27
  407894:	6003      	str	r3, [r0, #0]
  407896:	6043      	str	r3, [r0, #4]
  407898:	d916      	bls.n	4078c8 <_calloc_r+0x58>
  40789a:	2a24      	cmp	r2, #36	; 0x24
  40789c:	6083      	str	r3, [r0, #8]
  40789e:	60c3      	str	r3, [r0, #12]
  4078a0:	bf11      	iteee	ne
  4078a2:	f100 0210 	addne.w	r2, r0, #16
  4078a6:	6103      	streq	r3, [r0, #16]
  4078a8:	6143      	streq	r3, [r0, #20]
  4078aa:	f100 0218 	addeq.w	r2, r0, #24
  4078ae:	2300      	movs	r3, #0
  4078b0:	6013      	str	r3, [r2, #0]
  4078b2:	6053      	str	r3, [r2, #4]
  4078b4:	6093      	str	r3, [r2, #8]
  4078b6:	4620      	mov	r0, r4
  4078b8:	bd10      	pop	{r4, pc}
  4078ba:	4602      	mov	r2, r0
  4078bc:	e7f7      	b.n	4078ae <_calloc_r+0x3e>
  4078be:	2100      	movs	r1, #0
  4078c0:	f7fc fa66 	bl	403d90 <memset>
  4078c4:	4620      	mov	r0, r4
  4078c6:	bd10      	pop	{r4, pc}
  4078c8:	f100 0208 	add.w	r2, r0, #8
  4078cc:	e7ef      	b.n	4078ae <_calloc_r+0x3e>
  4078ce:	bf00      	nop

004078d0 <__aeabi_d2iz>:
  4078d0:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4078d4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4078d8:	d215      	bcs.n	407906 <__aeabi_d2iz+0x36>
  4078da:	d511      	bpl.n	407900 <__aeabi_d2iz+0x30>
  4078dc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4078e0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4078e4:	d912      	bls.n	40790c <__aeabi_d2iz+0x3c>
  4078e6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4078ea:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4078ee:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4078f2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4078f6:	fa23 f002 	lsr.w	r0, r3, r2
  4078fa:	bf18      	it	ne
  4078fc:	4240      	negne	r0, r0
  4078fe:	4770      	bx	lr
  407900:	f04f 0000 	mov.w	r0, #0
  407904:	4770      	bx	lr
  407906:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40790a:	d105      	bne.n	407918 <__aeabi_d2iz+0x48>
  40790c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  407910:	bf08      	it	eq
  407912:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  407916:	4770      	bx	lr
  407918:	f04f 0000 	mov.w	r0, #0
  40791c:	4770      	bx	lr
  40791e:	bf00      	nop

00407920 <__aeabi_uldivmod>:
  407920:	b953      	cbnz	r3, 407938 <__aeabi_uldivmod+0x18>
  407922:	b94a      	cbnz	r2, 407938 <__aeabi_uldivmod+0x18>
  407924:	2900      	cmp	r1, #0
  407926:	bf08      	it	eq
  407928:	2800      	cmpeq	r0, #0
  40792a:	bf1c      	itt	ne
  40792c:	f04f 31ff 	movne.w	r1, #4294967295
  407930:	f04f 30ff 	movne.w	r0, #4294967295
  407934:	f000 b97a 	b.w	407c2c <__aeabi_idiv0>
  407938:	f1ad 0c08 	sub.w	ip, sp, #8
  40793c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  407940:	f000 f806 	bl	407950 <__udivmoddi4>
  407944:	f8dd e004 	ldr.w	lr, [sp, #4]
  407948:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40794c:	b004      	add	sp, #16
  40794e:	4770      	bx	lr

00407950 <__udivmoddi4>:
  407950:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  407954:	468c      	mov	ip, r1
  407956:	460d      	mov	r5, r1
  407958:	4604      	mov	r4, r0
  40795a:	9e08      	ldr	r6, [sp, #32]
  40795c:	2b00      	cmp	r3, #0
  40795e:	d151      	bne.n	407a04 <__udivmoddi4+0xb4>
  407960:	428a      	cmp	r2, r1
  407962:	4617      	mov	r7, r2
  407964:	d96d      	bls.n	407a42 <__udivmoddi4+0xf2>
  407966:	fab2 fe82 	clz	lr, r2
  40796a:	f1be 0f00 	cmp.w	lr, #0
  40796e:	d00b      	beq.n	407988 <__udivmoddi4+0x38>
  407970:	f1ce 0c20 	rsb	ip, lr, #32
  407974:	fa01 f50e 	lsl.w	r5, r1, lr
  407978:	fa20 fc0c 	lsr.w	ip, r0, ip
  40797c:	fa02 f70e 	lsl.w	r7, r2, lr
  407980:	ea4c 0c05 	orr.w	ip, ip, r5
  407984:	fa00 f40e 	lsl.w	r4, r0, lr
  407988:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40798c:	0c25      	lsrs	r5, r4, #16
  40798e:	fbbc f8fa 	udiv	r8, ip, sl
  407992:	fa1f f987 	uxth.w	r9, r7
  407996:	fb0a cc18 	mls	ip, sl, r8, ip
  40799a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40799e:	fb08 f309 	mul.w	r3, r8, r9
  4079a2:	42ab      	cmp	r3, r5
  4079a4:	d90a      	bls.n	4079bc <__udivmoddi4+0x6c>
  4079a6:	19ed      	adds	r5, r5, r7
  4079a8:	f108 32ff 	add.w	r2, r8, #4294967295
  4079ac:	f080 8123 	bcs.w	407bf6 <__udivmoddi4+0x2a6>
  4079b0:	42ab      	cmp	r3, r5
  4079b2:	f240 8120 	bls.w	407bf6 <__udivmoddi4+0x2a6>
  4079b6:	f1a8 0802 	sub.w	r8, r8, #2
  4079ba:	443d      	add	r5, r7
  4079bc:	1aed      	subs	r5, r5, r3
  4079be:	b2a4      	uxth	r4, r4
  4079c0:	fbb5 f0fa 	udiv	r0, r5, sl
  4079c4:	fb0a 5510 	mls	r5, sl, r0, r5
  4079c8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4079cc:	fb00 f909 	mul.w	r9, r0, r9
  4079d0:	45a1      	cmp	r9, r4
  4079d2:	d909      	bls.n	4079e8 <__udivmoddi4+0x98>
  4079d4:	19e4      	adds	r4, r4, r7
  4079d6:	f100 33ff 	add.w	r3, r0, #4294967295
  4079da:	f080 810a 	bcs.w	407bf2 <__udivmoddi4+0x2a2>
  4079de:	45a1      	cmp	r9, r4
  4079e0:	f240 8107 	bls.w	407bf2 <__udivmoddi4+0x2a2>
  4079e4:	3802      	subs	r0, #2
  4079e6:	443c      	add	r4, r7
  4079e8:	eba4 0409 	sub.w	r4, r4, r9
  4079ec:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4079f0:	2100      	movs	r1, #0
  4079f2:	2e00      	cmp	r6, #0
  4079f4:	d061      	beq.n	407aba <__udivmoddi4+0x16a>
  4079f6:	fa24 f40e 	lsr.w	r4, r4, lr
  4079fa:	2300      	movs	r3, #0
  4079fc:	6034      	str	r4, [r6, #0]
  4079fe:	6073      	str	r3, [r6, #4]
  407a00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407a04:	428b      	cmp	r3, r1
  407a06:	d907      	bls.n	407a18 <__udivmoddi4+0xc8>
  407a08:	2e00      	cmp	r6, #0
  407a0a:	d054      	beq.n	407ab6 <__udivmoddi4+0x166>
  407a0c:	2100      	movs	r1, #0
  407a0e:	e886 0021 	stmia.w	r6, {r0, r5}
  407a12:	4608      	mov	r0, r1
  407a14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407a18:	fab3 f183 	clz	r1, r3
  407a1c:	2900      	cmp	r1, #0
  407a1e:	f040 808e 	bne.w	407b3e <__udivmoddi4+0x1ee>
  407a22:	42ab      	cmp	r3, r5
  407a24:	d302      	bcc.n	407a2c <__udivmoddi4+0xdc>
  407a26:	4282      	cmp	r2, r0
  407a28:	f200 80fa 	bhi.w	407c20 <__udivmoddi4+0x2d0>
  407a2c:	1a84      	subs	r4, r0, r2
  407a2e:	eb65 0503 	sbc.w	r5, r5, r3
  407a32:	2001      	movs	r0, #1
  407a34:	46ac      	mov	ip, r5
  407a36:	2e00      	cmp	r6, #0
  407a38:	d03f      	beq.n	407aba <__udivmoddi4+0x16a>
  407a3a:	e886 1010 	stmia.w	r6, {r4, ip}
  407a3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407a42:	b912      	cbnz	r2, 407a4a <__udivmoddi4+0xfa>
  407a44:	2701      	movs	r7, #1
  407a46:	fbb7 f7f2 	udiv	r7, r7, r2
  407a4a:	fab7 fe87 	clz	lr, r7
  407a4e:	f1be 0f00 	cmp.w	lr, #0
  407a52:	d134      	bne.n	407abe <__udivmoddi4+0x16e>
  407a54:	1beb      	subs	r3, r5, r7
  407a56:	0c3a      	lsrs	r2, r7, #16
  407a58:	fa1f fc87 	uxth.w	ip, r7
  407a5c:	2101      	movs	r1, #1
  407a5e:	fbb3 f8f2 	udiv	r8, r3, r2
  407a62:	0c25      	lsrs	r5, r4, #16
  407a64:	fb02 3318 	mls	r3, r2, r8, r3
  407a68:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  407a6c:	fb0c f308 	mul.w	r3, ip, r8
  407a70:	42ab      	cmp	r3, r5
  407a72:	d907      	bls.n	407a84 <__udivmoddi4+0x134>
  407a74:	19ed      	adds	r5, r5, r7
  407a76:	f108 30ff 	add.w	r0, r8, #4294967295
  407a7a:	d202      	bcs.n	407a82 <__udivmoddi4+0x132>
  407a7c:	42ab      	cmp	r3, r5
  407a7e:	f200 80d1 	bhi.w	407c24 <__udivmoddi4+0x2d4>
  407a82:	4680      	mov	r8, r0
  407a84:	1aed      	subs	r5, r5, r3
  407a86:	b2a3      	uxth	r3, r4
  407a88:	fbb5 f0f2 	udiv	r0, r5, r2
  407a8c:	fb02 5510 	mls	r5, r2, r0, r5
  407a90:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  407a94:	fb0c fc00 	mul.w	ip, ip, r0
  407a98:	45a4      	cmp	ip, r4
  407a9a:	d907      	bls.n	407aac <__udivmoddi4+0x15c>
  407a9c:	19e4      	adds	r4, r4, r7
  407a9e:	f100 33ff 	add.w	r3, r0, #4294967295
  407aa2:	d202      	bcs.n	407aaa <__udivmoddi4+0x15a>
  407aa4:	45a4      	cmp	ip, r4
  407aa6:	f200 80b8 	bhi.w	407c1a <__udivmoddi4+0x2ca>
  407aaa:	4618      	mov	r0, r3
  407aac:	eba4 040c 	sub.w	r4, r4, ip
  407ab0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  407ab4:	e79d      	b.n	4079f2 <__udivmoddi4+0xa2>
  407ab6:	4631      	mov	r1, r6
  407ab8:	4630      	mov	r0, r6
  407aba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407abe:	f1ce 0420 	rsb	r4, lr, #32
  407ac2:	fa05 f30e 	lsl.w	r3, r5, lr
  407ac6:	fa07 f70e 	lsl.w	r7, r7, lr
  407aca:	fa20 f804 	lsr.w	r8, r0, r4
  407ace:	0c3a      	lsrs	r2, r7, #16
  407ad0:	fa25 f404 	lsr.w	r4, r5, r4
  407ad4:	ea48 0803 	orr.w	r8, r8, r3
  407ad8:	fbb4 f1f2 	udiv	r1, r4, r2
  407adc:	ea4f 4518 	mov.w	r5, r8, lsr #16
  407ae0:	fb02 4411 	mls	r4, r2, r1, r4
  407ae4:	fa1f fc87 	uxth.w	ip, r7
  407ae8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  407aec:	fb01 f30c 	mul.w	r3, r1, ip
  407af0:	42ab      	cmp	r3, r5
  407af2:	fa00 f40e 	lsl.w	r4, r0, lr
  407af6:	d909      	bls.n	407b0c <__udivmoddi4+0x1bc>
  407af8:	19ed      	adds	r5, r5, r7
  407afa:	f101 30ff 	add.w	r0, r1, #4294967295
  407afe:	f080 808a 	bcs.w	407c16 <__udivmoddi4+0x2c6>
  407b02:	42ab      	cmp	r3, r5
  407b04:	f240 8087 	bls.w	407c16 <__udivmoddi4+0x2c6>
  407b08:	3902      	subs	r1, #2
  407b0a:	443d      	add	r5, r7
  407b0c:	1aeb      	subs	r3, r5, r3
  407b0e:	fa1f f588 	uxth.w	r5, r8
  407b12:	fbb3 f0f2 	udiv	r0, r3, r2
  407b16:	fb02 3310 	mls	r3, r2, r0, r3
  407b1a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  407b1e:	fb00 f30c 	mul.w	r3, r0, ip
  407b22:	42ab      	cmp	r3, r5
  407b24:	d907      	bls.n	407b36 <__udivmoddi4+0x1e6>
  407b26:	19ed      	adds	r5, r5, r7
  407b28:	f100 38ff 	add.w	r8, r0, #4294967295
  407b2c:	d26f      	bcs.n	407c0e <__udivmoddi4+0x2be>
  407b2e:	42ab      	cmp	r3, r5
  407b30:	d96d      	bls.n	407c0e <__udivmoddi4+0x2be>
  407b32:	3802      	subs	r0, #2
  407b34:	443d      	add	r5, r7
  407b36:	1aeb      	subs	r3, r5, r3
  407b38:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  407b3c:	e78f      	b.n	407a5e <__udivmoddi4+0x10e>
  407b3e:	f1c1 0720 	rsb	r7, r1, #32
  407b42:	fa22 f807 	lsr.w	r8, r2, r7
  407b46:	408b      	lsls	r3, r1
  407b48:	fa05 f401 	lsl.w	r4, r5, r1
  407b4c:	ea48 0303 	orr.w	r3, r8, r3
  407b50:	fa20 fe07 	lsr.w	lr, r0, r7
  407b54:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  407b58:	40fd      	lsrs	r5, r7
  407b5a:	ea4e 0e04 	orr.w	lr, lr, r4
  407b5e:	fbb5 f9fc 	udiv	r9, r5, ip
  407b62:	ea4f 441e 	mov.w	r4, lr, lsr #16
  407b66:	fb0c 5519 	mls	r5, ip, r9, r5
  407b6a:	fa1f f883 	uxth.w	r8, r3
  407b6e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  407b72:	fb09 f408 	mul.w	r4, r9, r8
  407b76:	42ac      	cmp	r4, r5
  407b78:	fa02 f201 	lsl.w	r2, r2, r1
  407b7c:	fa00 fa01 	lsl.w	sl, r0, r1
  407b80:	d908      	bls.n	407b94 <__udivmoddi4+0x244>
  407b82:	18ed      	adds	r5, r5, r3
  407b84:	f109 30ff 	add.w	r0, r9, #4294967295
  407b88:	d243      	bcs.n	407c12 <__udivmoddi4+0x2c2>
  407b8a:	42ac      	cmp	r4, r5
  407b8c:	d941      	bls.n	407c12 <__udivmoddi4+0x2c2>
  407b8e:	f1a9 0902 	sub.w	r9, r9, #2
  407b92:	441d      	add	r5, r3
  407b94:	1b2d      	subs	r5, r5, r4
  407b96:	fa1f fe8e 	uxth.w	lr, lr
  407b9a:	fbb5 f0fc 	udiv	r0, r5, ip
  407b9e:	fb0c 5510 	mls	r5, ip, r0, r5
  407ba2:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  407ba6:	fb00 f808 	mul.w	r8, r0, r8
  407baa:	45a0      	cmp	r8, r4
  407bac:	d907      	bls.n	407bbe <__udivmoddi4+0x26e>
  407bae:	18e4      	adds	r4, r4, r3
  407bb0:	f100 35ff 	add.w	r5, r0, #4294967295
  407bb4:	d229      	bcs.n	407c0a <__udivmoddi4+0x2ba>
  407bb6:	45a0      	cmp	r8, r4
  407bb8:	d927      	bls.n	407c0a <__udivmoddi4+0x2ba>
  407bba:	3802      	subs	r0, #2
  407bbc:	441c      	add	r4, r3
  407bbe:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  407bc2:	eba4 0408 	sub.w	r4, r4, r8
  407bc6:	fba0 8902 	umull	r8, r9, r0, r2
  407bca:	454c      	cmp	r4, r9
  407bcc:	46c6      	mov	lr, r8
  407bce:	464d      	mov	r5, r9
  407bd0:	d315      	bcc.n	407bfe <__udivmoddi4+0x2ae>
  407bd2:	d012      	beq.n	407bfa <__udivmoddi4+0x2aa>
  407bd4:	b156      	cbz	r6, 407bec <__udivmoddi4+0x29c>
  407bd6:	ebba 030e 	subs.w	r3, sl, lr
  407bda:	eb64 0405 	sbc.w	r4, r4, r5
  407bde:	fa04 f707 	lsl.w	r7, r4, r7
  407be2:	40cb      	lsrs	r3, r1
  407be4:	431f      	orrs	r7, r3
  407be6:	40cc      	lsrs	r4, r1
  407be8:	6037      	str	r7, [r6, #0]
  407bea:	6074      	str	r4, [r6, #4]
  407bec:	2100      	movs	r1, #0
  407bee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  407bf2:	4618      	mov	r0, r3
  407bf4:	e6f8      	b.n	4079e8 <__udivmoddi4+0x98>
  407bf6:	4690      	mov	r8, r2
  407bf8:	e6e0      	b.n	4079bc <__udivmoddi4+0x6c>
  407bfa:	45c2      	cmp	sl, r8
  407bfc:	d2ea      	bcs.n	407bd4 <__udivmoddi4+0x284>
  407bfe:	ebb8 0e02 	subs.w	lr, r8, r2
  407c02:	eb69 0503 	sbc.w	r5, r9, r3
  407c06:	3801      	subs	r0, #1
  407c08:	e7e4      	b.n	407bd4 <__udivmoddi4+0x284>
  407c0a:	4628      	mov	r0, r5
  407c0c:	e7d7      	b.n	407bbe <__udivmoddi4+0x26e>
  407c0e:	4640      	mov	r0, r8
  407c10:	e791      	b.n	407b36 <__udivmoddi4+0x1e6>
  407c12:	4681      	mov	r9, r0
  407c14:	e7be      	b.n	407b94 <__udivmoddi4+0x244>
  407c16:	4601      	mov	r1, r0
  407c18:	e778      	b.n	407b0c <__udivmoddi4+0x1bc>
  407c1a:	3802      	subs	r0, #2
  407c1c:	443c      	add	r4, r7
  407c1e:	e745      	b.n	407aac <__udivmoddi4+0x15c>
  407c20:	4608      	mov	r0, r1
  407c22:	e708      	b.n	407a36 <__udivmoddi4+0xe6>
  407c24:	f1a8 0802 	sub.w	r8, r8, #2
  407c28:	443d      	add	r5, r7
  407c2a:	e72b      	b.n	407a84 <__udivmoddi4+0x134>

00407c2c <__aeabi_idiv0>:
  407c2c:	4770      	bx	lr
  407c2e:	bf00      	nop
  407c30:	74746142 	.word	0x74746142
  407c34:	25203a56 	.word	0x25203a56
  407c38:	00000a66 	.word	0x00000a66
  407c3c:	00676f6c 	.word	0x00676f6c

00407c40 <_global_impure_ptr>:
  407c40:	200000b0 00464e49 00666e69 004e414e     ... INF.inf.NAN.
  407c50:	006e616e 33323130 37363534 42413938     nan.0123456789AB
  407c60:	46454443 00000000 33323130 37363534     CDEF....01234567
  407c70:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
  407c80:	0000296c 00000030                       l)..0...

00407c88 <blanks.7223>:
  407c88:	20202020 20202020 20202020 20202020                     

00407c98 <zeroes.7224>:
  407c98:	30303030 30303030 30303030 30303030     0000000000000000
  407ca8:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
  407cb8:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00407cc8 <__mprec_bigtens>:
  407cc8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  407cd8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  407ce8:	7f73bf3c 75154fdd                       <.s..O.u

00407cf0 <__mprec_tens>:
  407cf0:	00000000 3ff00000 00000000 40240000     .......?......$@
  407d00:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  407d10:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  407d20:	00000000 412e8480 00000000 416312d0     .......A......cA
  407d30:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  407d40:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  407d50:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  407d60:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  407d70:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  407d80:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  407d90:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  407da0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  407db0:	79d99db4 44ea7843                       ...yCx.D

00407db8 <p05.6055>:
  407db8:	00000005 00000019 0000007d              ........}...

00407dc4 <_ctype_>:
  407dc4:	20202000 20202020 28282020 20282828     .         ((((( 
  407dd4:	20202020 20202020 20202020 20202020                     
  407de4:	10108820 10101010 10101010 10101010      ...............
  407df4:	04040410 04040404 10040404 10101010     ................
  407e04:	41411010 41414141 01010101 01010101     ..AAAAAA........
  407e14:	01010101 01010101 01010101 10101010     ................
  407e24:	42421010 42424242 02020202 02020202     ..BBBBBB........
  407e34:	02020202 02020202 02020202 10101010     ................
  407e44:	00000020 00000000 00000000 00000000      ...............
	...

00407ec8 <_init>:
  407ec8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407eca:	bf00      	nop
  407ecc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407ece:	bc08      	pop	{r3}
  407ed0:	469e      	mov	lr, r3
  407ed2:	4770      	bx	lr

00407ed4 <__init_array_start>:
  407ed4:	004053b9 	.word	0x004053b9

00407ed8 <__frame_dummy_init_array_entry>:
  407ed8:	004000f1                                ..@.

00407edc <_fini>:
  407edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407ede:	bf00      	nop
  407ee0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407ee2:	bc08      	pop	{r3}
  407ee4:	469e      	mov	lr, r3
  407ee6:	4770      	bx	lr

00407ee8 <__fini_array_start>:
  407ee8:	004000cd 	.word	0x004000cd
